<?xml version="1.0" encoding="utf-8" ?>
<SqlConfig>
  <Contents>
	  <Content Key="ReportTotalStorageQueryForProvide" Desc="查询库存统计" DataBaseType="SqlServer">
      SELECT
      '总库存' as CARGOTYPETEXT,
      SUM(QUANTITY) AS  QTY -- 数量
      FROM View_StorageList AS StorageList with (nolock)
      LEFT JOIN CargoType AS CargoType with (nolock)
      ON StorageList.CargoTypeID = CargoType.CargoTypeID
      WHERE Quantity>0
      AND (CargoType.CargoTopType = 16 AND STATUS in (50,60))
      {0}
    </Content>
	  <Content Key="ReportTotalStorageQueryForProvide" Desc="查询库存统计" DataBaseType="Oracle">
      SELECT
      '总库存' as CARGOTYPETEXT,
      SUM(QUANTITY) AS  QTY -- 数量
      FROM View_StorageList   StorageList
      LEFT JOIN CargoType  CargoType
      ON StorageList.CargoTypeID = CargoType.CargoTypeID
      WHERE Quantity>0
      AND (CargoType.CargoTopType = 16 AND STATUS in (50,60))
      {0}
    </Content>
	  <Content Key="ReportCurStorageQueryForProvide" Desc="查询库存统计" DataBaseType="SqlServer">
      SELECT
      '当前库存' as CARGOTYPETEXT,
      SUM(QUANTITY) AS  QTY -- 数量
      FROM View_StorageList AS StorageList with (nolock)
      LEFT JOIN CargoType AS CargoType with (nolock)
      ON StorageList.CargoTypeID = CargoType.CargoTypeID
      WHERE Quantity>0
      AND (CargoType.CargoTopType = 16 AND STATUS in (50,60))
      {0}
    </Content>
	  <Content Key="ReportCurStorageQueryForProvide" Desc="查询库存统计" DataBaseType="Oracle">
      SELECT
      '当前库存' as CARGOTYPETEXT,
      SUM(QUANTITY) AS  QTY -- 数量
      FROM View_StorageList   StorageList
      LEFT JOIN CargoType  CargoType
      ON StorageList.CargoTypeID = CargoType.CargoTypeID
      WHERE Quantity>0
      AND (CargoType.CargoTopType = 16 AND STATUS in (50,60))
      {0}
    </Content>
    <Content Key="ReportRecycleSummary" Desc="回收统计" DataBaseType="SqlServer">
      --回收统计
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      Warehouse.OrgID AS RECYCLEORG,
      RecycleOrg.Name AS RECYCLEORGTEXT,
      FlowPackageList.CargoTypeID AS CARGOTYPEID,
      CST.TypeName AS CARGOTOPTYPETEXT,
      CK.KindName AS CARGOTYPEKINDTEXT,
      CargoType.CargoTypeName AS CARGOTYPETEXT,
      ISNULL(CargoType.InstrumentsNumber,0) AS INSTRUMENTSNUMBER,
      1   AS RECYCLEQTY
      FROM FlowRecycleList
      INNER JOIN FlowRecycle ON FlowRecycle.FRecycleID = FlowRecycleList.FRecycleID
      INNER JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      INNER JOIN CargoType ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN CargoTypeKind CK ON CargoType.CargoTypeKind = CK.ID
      INNER JOIN SystemTypeParameter CST ON CargoType.CargoTopType = CST.TypeValue AND CST.TypeKey = 'CargoTopType'
      INNER JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org AS RecycleOrg ON Warehouse.OrgID = RecycleOrg.ID
      LEFT JOIN AC_WorkGroup AS RecycleUser ON FlowRecycle.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup AS SenderUser  ON FlowRecycle.SENDERID = SenderUser.FID
      WHERE 1 = 1 {0}
    </Content>
    <Content Key="ReportRecycleSummary" Desc="回收统计" DataBaseType="Oracle">
      SELECT
      Warehouse.OrgID AS RECYCLEORG,
      RecycleOrg.Name AS RECYCLEORGTEXT,
      FlowPackageList.CargoTypeID AS CARGOTYPEID,
      CST.TypeName AS CARGOTOPTYPETEXT,
      CK.KindName AS CARGOTYPEKINDTEXT,
      CargoType.CargoTypeName AS CARGOTYPETEXT,
      nvl(CargoType.InstrumentsNumber,0) AS INSTRUMENTSNUMBER,
      1   AS RECYCLEQTY
      FROM FlowRecycleList
      INNER JOIN FlowRecycle ON FlowRecycle.FRecycleID = FlowRecycleList.FRecycleID
      INNER JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      INNER JOIN CargoType ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN CargoTypeKind CK ON CargoType.CargoTypeKind = CK.ID
      INNER JOIN SystemTypeParameter CST ON CargoType.CargoTopType = CST.TypeValue AND CST.TypeKey = 'CargoTopType'
      INNER JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org   RecycleOrg ON Warehouse.OrgID = RecycleOrg.ID
      LEFT JOIN AC_WorkGroup   RecycleUser ON FlowRecycle.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup  SenderUser  ON FlowRecycle.SENDERID = SenderUser.FID
      WHERE 1 = 1 {0}
    </Content>
	  <Content Key="ReportRecycleLostInstrumentSummary" Desc="回收统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      Warehouse.OrgID AS RECYCLEORG,
      RecycleOrg.Name AS RECYCLEORGTEXT,
      RecycleUser.FNAMES as RECYCLEUSERNAME,
      SenderUser.FNAMES as SENDERUSERNAME,
      FlowPackageList.CargoTypeID AS CARGOTYPEID,
      CK.KindName AS CARGOTYPEKINDTEXT,
      CargoType.CargoTypeName AS CARGOTYPETEXT,
      ct.CargoTypeName as QXCARGOTYPETEXT,
      SUM(FlowRecycleLostList.Quantity) as QTY
      FROM FlowRecycleLostList inner join FlowRecycle
      on FlowRecycleLostList.FRecycleID=FlowRecycle.FRecycleID
      inner join  FlowRecycleList
      on FlowRecycleLostList.FRecycleID=FlowRecycleList.FRecycleID   and FlowRecycleLostList.PackageID=FlowRecycleList.PackageID
      INNER JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      INNER JOIN CargoType ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN CargoTypeKind CK ON CargoType.CargoTypeKind = CK.ID
      INNER JOIN SystemTypeParameter CST ON CargoType.CargoTopType = CST.TypeValue AND CST.TypeKey = 'CargoTopType'
      INNER JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org   RecycleOrg ON Warehouse.OrgID = RecycleOrg.ID
      LEFT JOIN AC_WorkGroup   RecycleUser ON FlowRecycle.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup  SenderUser  ON FlowRecycle.SENDERID = SenderUser.FID
      left join CargoType ct on ct.CargoTypeID=FlowRecycleLostList.CargoTypeID
      WHERE 1 = 1 {0}
      group by Warehouse.OrgID,RecycleOrg.Name,RecycleUser.FNAMES,
      SenderUser.FNAMES,
      FlowPackageList.CargoTypeID,
      CK.KindName,
      CargoType.CargoTypeName,
      ct.CargoTypeName
    </Content>
	  <Content Key="ReportRecycleLostInstrumentSummary" Desc="回收统计" DataBaseType="Oracle">
      SELECT
      Warehouse.OrgID AS RECYCLEORG,
      RecycleOrg.Name AS RECYCLEORGTEXT,
      RecycleUser.FNAMES as RECYCLEUSERNAME,
      SenderUser.FNAMES as SENDERUSERNAME,
      FlowPackageList.CargoTypeID AS CARGOTYPEID,
      CK.KindName AS CARGOTYPEKINDTEXT,
      CargoType.CargoTypeName AS CARGOTYPETEXT,
      ct.CargoTypeName as QXCARGOTYPETEXT,
      SUM(FlowRecycleLostList.Quantity) as QTY
      FROM FlowRecycleLostList inner join FlowRecycle
      on FlowRecycleLostList.FRecycleID=FlowRecycle.FRecycleID
      inner join  FlowRecycleList
      on FlowRecycleLostList.FRecycleID=FlowRecycleList.FRecycleID   and FlowRecycleLostList.PackageID=FlowRecycleList.PackageID
      INNER JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      INNER JOIN CargoType ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN CargoTypeKind CK ON CargoType.CargoTypeKind = CK.ID
      INNER JOIN SystemTypeParameter CST ON CargoType.CargoTopType = CST.TypeValue AND CST.TypeKey = 'CargoTopType'
      INNER JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org   RecycleOrg ON Warehouse.OrgID = RecycleOrg.ID
      LEFT JOIN AC_WorkGroup   RecycleUser ON FlowRecycle.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup  SenderUser  ON FlowRecycle.SENDERID = SenderUser.FID
      left join CargoType ct on ct.CargoTypeID=FlowRecycleLostList.CargoTypeID
      WHERE 1 = 1 {0}
      group by Warehouse.OrgID,RecycleOrg.Name,RecycleUser.FNAMES,
      SenderUser.FNAMES,
      FlowPackageList.CargoTypeID,
      CK.KindName,
      CargoType.CargoTypeName,
      ct.CargoTypeName
    </Content>
    <Content Key="ReportDisinfectSummary" Desc="清洗统计" DataBaseType="SqlServer">
      --清洗统计
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      case DEVICENAME when '人工清洗' then '人工清洗'  else '自动清洗' end as DISINFECTTYPE,
      Warehouse.OrgID AS RECYCLEORG,
      RecycleOrg.Name AS RECYCLEORGTEXT,
      FlowPackageList.CargoTypeID AS CARGOTYPEID,
      CST.TypeName AS CARGOTOPTYPETEXT, --种类
      CK.KindName AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品、器械包
      SUM(1) AS RECYCLEQTY,
      isnull(CargoType.InstrumentsNumber,0) * sum(1) AS INSTRUMENTSNUMBER
      ,Devices.DeviceName DEVICENAME
      FROM
      FlowDisinfect fd
      LEFT JOIN FlowDisinfectContainerList fdc on fd.FDisinfectID=fdc.FDisinfectID
      LEFT JOIN FlowRecycleList ON fdc.FRecycleID=FlowRecycleList.FRecycleID
      LEFT JOIN FlowRecycle ON FlowRecycle.FRecycleID = FlowRecycleList.FRecycleID
      LEFT JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      LEFT JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN DEVICESUSELOG  ON DevicesUseLog.LOGID=fd.LogID
      LEFT JOIN Devices ON DevicesUseLog.DeviceID=Devices.DeviceID
      LEFT JOIN CargoType ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind CK ON CargoType.CargoTypeKind = CK.ID
      LEFT JOIN SystemTypeParameter CST ON CargoType.CargoTopType = CST.TypeValue AND CST.TypeKey = 'CargoTopType'
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org  RecycleOrg ON Warehouse.OrgID = RecycleOrg.ID
      LEFT JOIN AC_WorkGroup  RecycleUser ON FlowRecycle.OPID = RecycleUser.FID
      WHERE 1 = 1 {0}
      GROUP BY
      Devices.DeviceName,
      RecycleOrg.Name,Warehouse.OrgID,CST.TypeName
      ,CK.KindName,CargoType.CargoTypeName,FlowPackageList.CargoTypeID,CargoType.InstrumentsNumber
    </Content>

    <Content Key="ReportDisinfectSummary" Desc="清洗统计" DataBaseType="Oracle">
      SELECT
      case DEVICENAME when '人工清洗' then '人工清洗'  else '自动清洗' end as DISINFECTTYPE,
      Warehouse.OrgID  RECYCLEORG,
      RecycleOrg.Name  RECYCLEORGTEXT,
      FlowPackageList.CargoTypeID CARGOTYPEID,
      CST.TypeName AS CARGOTOPTYPETEXT, --种类
      CK.KindName AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品、器械包
      SUM(1)  RECYCLEQTY,
      nvl(CargoType.InstrumentsNumber,0) * sum(1) AS INSTRUMENTSNUMBER
      ,Devices.DeviceName DEVICENAME
      FROM
      FlowDisinfect fd
      left join FlowDisinfectContainerList fdc on fd.FDisinfectID=fdc.FDisinfectID
      LEFT JOIN FlowRecycleList ON fdc.FRecycleID=FlowRecycleList.FRecycleID
      LEFT JOIN FlowRecycle ON FlowRecycle.FRecycleID = FlowRecycleList.FRecycleID
      LEFT JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      LEFT JOIN DEVICESUSELOG  ON DevicesUseLog.LOGID=fd.LogID
      LEFT JOIN Devices ON DevicesUseLog.DeviceID=Devices.DeviceID
      LEFT JOIN CargoType ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind CK ON CargoType.CargoTypeKind = CK.ID
      LEFT JOIN SystemTypeParameter CST ON CargoType.CargoTopType = CST.TypeValue AND CST.TypeKey = 'CargoTopType'
      LEFT JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org  RecycleOrg ON Warehouse.OrgID = RecycleOrg.ID
      LEFT JOIN AC_WorkGroup  RecycleUser  ON FlowRecycle.OPID = RecycleUser.FID
      WHERE 1 = 1 {0}
      GROUP BY
      Devices.DeviceName,
      RecycleOrg.Name,Warehouse.OrgID,CST.TypeName
      ,CK.KindName,CargoType.CargoTypeName,FlowPackageList.CargoTypeID,CargoType.InstrumentsNumber
    </Content>

    <Content Key="ReportPackageSummary" Desc="配包统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      FlowPackage.CargoTypeID AS CARGOTYPEID,
      CST.TypeName AS CARGOTOPTYPETEXT, --种类
      CK.KindName AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品、器械包
      PackageType.PName AS OUTPACKING,--外包装
      COUNT(FlowPackageList.StorageID) AS PACKAGEQTY
      FROM FlowPackageList WITH (NOLOCK)
      INNER JOIN
      (
      select FPackageID,CargoTypeID,PackageDate,opid,FlowOrgID from FLOWPACKAGE
      union all
      select FPackageID,CargoTypeID,PackageInDate,opid,FlowOrgID from FLOWPACKAGEin
      ) as FlowPackage
      on FlowPackageList.FPackageID = FlowPackage.FPackageID
      left JOIN PackageType on FlowPackageList.packagetypeid = PackageType.PTypeID
      LEFT JOIN CargoType ON FlowPackage.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind CK ON CargoType.CargoTypeKind = CK.ID
      INNER JOIN SystemTypeParameter CST ON CargoType.CargoTopType = CST.TypeValue AND CST.TypeKey = 'CargoTopType'
      LEFT JOIN AC_WorkGroup  PackageUser ON FlowPackage.OPID = PackageUser.FID
      LEFT JOIN AC_WorkGroup  CheckUser ON FlowPackageList.CheckID = CheckUser.FID
      WHERE 1 = 1
      {0}
      GROUP BY
      CST.TypeName
      ,CK.KindName,CargoType.CargoTypeName
      ,FlowPackage.CargoTypeID,PackageType.PName
    </Content>
    <Content Key="ReportPackageSummary" Desc="配包统计" DataBaseType="Oracle">
      SELECT
      FlowPackage.CargoTypeID CARGOTYPEID,
      CST.TypeName AS CARGOTOPTYPETEXT, --种类
      CK.KindName AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品、器械包
      PackageType.PName  OUTPACKING,
      COUNT(FlowPackageList.StorageID)  PACKAGEQTY
      FROM FlowPackageList
      INNER JOIN
      (
      select FPackageID,CargoTypeID,PackageDate,opid,FlowOrgID from FLOWPACKAGE
      union all
      select FPackageID,CargoTypeID,PackageInDate,opid,FlowOrgID from FLOWPACKAGEin
      )   FlowPackage
      on FlowPackageList.FPackageID = FlowPackage.FPackageID
      left JOIN PackageType on FlowPackageList.packagetypeid = PackageType.PTypeID
      LEFT JOIN CargoType ON FlowPackage.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind CK ON CargoType.CargoTypeKind = CK.ID
      INNER JOIN SystemTypeParameter CST ON CargoType.CargoTopType = CST.TypeValue AND CST.TypeKey = 'CargoTopType'
      LEFT JOIN AC_WorkGroup  PackageUser ON FlowPackage.OPID = PackageUser.FID
      LEFT JOIN AC_WorkGroup  CheckUser ON FlowPackageList.CheckID = CheckUser.FID
      WHERE 1 = 1
      {0}
      GROUP BY
      CST.TypeName
      ,CK.KindName,CargoType.CargoTypeName
      ,FlowPackage.CargoTypeID,PackageType.PName
    </Content>

    <Content Key="ReportPackageTotal" Desc="配包统计报表" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      FlowPackage.CargoTypeID AS CARGOTYPEID,
      CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT, --种类
      CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeText AS CARGOTYPETEXT,--无菌物品、器械包
      isnull(CargoType.InstrumentsNumber,0) AS INSTRUMENTSNUMBER,
      PackageType.PName AS OUTPACKING,--外包装
      COUNT(1) AS PACKAGEQTY,
      0 AS CHECKQTY,
      isnull(CargoType.InstrumentsNumber,0) * COUNT(1) AS PACKAGEINSTRUMENTSNUMBER,
      0 AS CHECKINSTRUMENTSNUMBER,
      PackageUser.FNames AS NAME
      FROM FlowPackageList WITH (NOLOCK)
      INNER JOIN
      (
      select FPackageID,CargoTypeID,PackageDate,opid,FlowOrgID from FLOWPACKAGE
      union all
      select FPackageID,CargoTypeID,PackageInDate,opid,FlowOrgID from FLOWPACKAGEin
      ) as FlowPackage on FlowPackageList.FPackageID = FlowPackage.FPackageID
      left JOIN PackageType WITH (NOLOCK)  on FlowPackageList.packagetypeid = PackageType.PTypeID
      left JOIN view_CargoType AS CargoType WITH (NOLOCK) ON FlowPackage.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN AC_WorkGroup AS PackageUser WITH (NOLOCK) ON FlowPackage.OPID = PackageUser.FID
      WHERE 1 = 1
      {0}
      GROUP BY
      CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText,CargoType.CargoTypeText
      ,FlowPackage.CargoTypeID,PackageType.PName,CargoType.InstrumentsNumber,PackageUser.FNames
      Union ALL
      SELECT
      FlowPackage.CargoTypeID AS CARGOTYPEID,
      CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT, --种类
      CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeText AS CARGOTYPETEXT,--无菌物品、器械包
      isnull(CargoType.InstrumentsNumber,0) AS INSTRUMENTSNUMBER,
      PackageType.PName AS OUTPACKING,--外包装
      0 AS PACKAGEQTY,
      COUNT(1) AS CHECKQTY,
      0 AS PACKAGEINSTRUMENTSNUMBER,
      isnull(CargoType.InstrumentsNumber,0) * COUNT(1) AS CHECKINSTRUMENTSNUMBER,
      CheckUser.FNames AS NAME
      FROM FlowPackageList WITH (NOLOCK)
      INNER JOIN
      (
      select FPackageID,CargoTypeID,PackageDate,opid,FlowOrgID from FLOWPACKAGE
      union all
      select FPackageID,CargoTypeID,PackageInDate,opid,FlowOrgID from FLOWPACKAGEin
      ) as FlowPackage  on FlowPackageList.FPackageID = FlowPackage.FPackageID
      left JOIN PackageType WITH (NOLOCK)  on FlowPackageList.packagetypeid = PackageType.PTypeID
      left JOIN view_CargoType AS CargoType WITH (NOLOCK) ON FlowPackage.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN AC_WorkGroup AS CheckUser WITH (NOLOCK) ON FlowPackageList.CheckID = CheckUser.FID
      WHERE 1 = 1
      {1}
      GROUP BY
      CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText,CargoType.CargoTypeText
      ,FlowPackage.CargoTypeID,PackageType.PName,CargoType.InstrumentsNumber,CheckUser.FNames
    </Content>
    <Content Key="ReportPackageTotal" Desc="配包统计报表" DataBaseType="Oracle">
      SELECT
      FlowPackage.CargoTypeID AS CARGOTYPEID,
      CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT, --种类
      CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeText AS CARGOTYPETEXT,--无菌物品、器械包
      nvl(CargoType.InstrumentsNumber,0) AS INSTRUMENTSNUMBER,
      PackageType.PName AS OUTPACKING,--外包装
      COUNT(1) AS PACKAGEQTY,
      0 AS CHECKQTY,
      nvl(CargoType.InstrumentsNumber,0) * COUNT(1) AS PACKAGEINSTRUMENTSNUMBER,
      0 AS CHECKINSTRUMENTSNUMBER,
      PackageUser.FNames AS NAME
      FROM FlowPackageList
      INNER JOIN
      (
      select FPackageID,CargoTypeID,PackageDate,opid,FlowOrgID from FLOWPACKAGE
      union all
      select FPackageID,CargoTypeID,PackageInDate,opid,FlowOrgID from FLOWPACKAGEin
      )  FlowPackage
      on FlowPackageList.FPackageID = FlowPackage.FPackageID
      left JOIN PackageType   on FlowPackageList.packagetypeid = PackageType.PTypeID
      left JOIN view_CargoType  CargoType  ON FlowPackage.CargoTypeID = CargoType.CargoTypeID
      --INNER JOIN AC_User  PackageUser  ON FlowPackage.OPID = PackageUser.ID
      INNER JOIN AC_WorkGroup PackageUser ON FlowPackage.OPID = PackageUser.FID
      WHERE 1 = 1
      {0}
      GROUP BY
      CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText,CargoType.CargoTypeText
      ,FlowPackage.CargoTypeID,PackageType.PName,CargoType.InstrumentsNumber,PackageUser.FNames
      Union ALL
      SELECT
      FlowPackage.CargoTypeID AS CARGOTYPEID,
      CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT, --种类
      CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeText AS CARGOTYPETEXT,--无菌物品、器械包
      nvl(CargoType.InstrumentsNumber,0) AS INSTRUMENTSNUMBER,
      PackageType.PName AS OUTPACKING,--外包装
      0 AS PACKAGEQTY,
      COUNT(1) AS CHECKQTY,
      0 AS PACKAGEINSTRUMENTSNUMBER,
      nvl(CargoType.InstrumentsNumber,0) * COUNT(1) AS CHECKINSTRUMENTSNUMBER,
      CheckUser.FNames AS NAME
      FROM FlowPackageList
      INNER JOIN
      (
      select FPackageID,CargoTypeID,PackageDate,opid,FlowOrgID from FLOWPACKAGE
      union all
      select FPackageID,CargoTypeID,PackageInDate,opid,FlowOrgID from FLOWPACKAGEin
      )  FlowPackage
      on FlowPackageList.FPackageID = FlowPackage.FPackageID
      left JOIN PackageType on FlowPackageList.packagetypeid = PackageType.PTypeID
      left JOIN view_CargoType  CargoType  ON FlowPackage.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN AC_WorkGroup  CheckUser  ON FlowPackageList.CheckID = CheckUser.FID
      WHERE 1 = 1
      {1}
      GROUP BY
      CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText,CargoType.CargoTypeText
      ,FlowPackage.CargoTypeID,PackageType.PName,CargoType.InstrumentsNumber,CheckUser.FNames
    </Content>
    <Content Key="ReportSterilizeSummary" Desc="灭菌统计" DataBaseType="SqlServer">
		--灭菌统计
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT
		SterilizaUser.Fnames as FNAMES,
		FlowPackageList.CargoTypeID AS CARGOTYPEID,
		CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT, --种类
		CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT,--类别
		CargoType.CargoTypeText AS CARGOTYPETEXT,--无菌物品、器械包
		PackageType.PName AS OUTPACKING,--外包装
		COUNT(FlowPackageList.PackageID) AS STERILIZATIONQTY
		,Devices.DeviceName DEVICENAME
		FROM FlowSterilizationList WITH (NOLOCK)
		LEFT JOIN DevicesUseLog WITH (NOLOCK) on FlowSterilizationList.SterilizationLogID=DevicesUseLog.LogID
		LEFT JOIN Devices ON DevicesUseLog.DeviceID=Devices.DeviceID
		LEFT JOIN FlowPackageList WITH (NOLOCK) ON FlowSterilizationList.PackageID = FlowPackageList.PackageID
		LEFT JOIN PackageType WITH (NOLOCK)  on FlowPackageList.packagetypeid = PackageType.PTypeID
		LEFT JOIN view_CargoType AS CargoType WITH (NOLOCK) ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
		LEFT JOIN AC_WorkGroup  SterilizaUser  ON DevicesUseLog.UserID = SterilizaUser.FID
		LEFT JOIN AC_WorkGroup  SterilizaChecker  ON DevicesUseLog.CheckID = SterilizaChecker.FID
		WHERE  Devices.DeviceType IN(4,5,6) {0}
		GROUP BY
		SterilizaUser.Fnames,
		CargoType.CargoTopTypeText
		,CargoType.CargoTypeKindText,CargoType.CargoTypeText
		,FlowPackageList.CargoTypeID,PackageType.PName,Devices.DeviceName

	</Content>
    <Content Key="ReportSterilizeSummary" Desc="灭菌统计" DataBaseType="Oracle">
		SELECT
		SterilizaUser.Fnames   FNAMES,
		FlowPackageList.CargoTypeID CARGOTYPEID,
		CargoType.CargoTopTypeText CARGOTOPTYPETEXT,
		CargoType.CargoTypeKindText CARGOTYPEKINDTEXT,
		CargoType.CargoTypeText CARGOTYPETEXT,
		PackageType.PName  OUTPACKING,
		COUNT(FlowPackageList.PackageID)  STERILIZATIONQTY
		,Devices.DeviceName DEVICENAME
		FROM FlowSterilizationList
		LEFT JOIN DevicesUseLog   on FlowSterilizationList.SterilizationLogID=DevicesUseLog.LogID
		LEFT JOIN Devices ON DevicesUseLog.DeviceID=Devices.DeviceID
		LEFT JOIN FlowPackageList ON FlowSterilizationList.PackageID = FlowPackageList.PackageID
		LEFT JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
		LEFT JOIN view_CargoType  CargoType ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
		LEFT JOIN AC_WorkGroup  SterilizaUser  ON DevicesUseLog.UserID = SterilizaUser.FID
		LEFT JOIN AC_WorkGroup  SterilizaChecker  ON DevicesUseLog.CheckID = SterilizaChecker.FID
		WHERE  Devices.DeviceType IN(4,5,6) {0}
		GROUP BY
		SterilizaUser.Fnames,
		CargoType.CargoTopTypeText
		,CargoType.CargoTypeKindText,CargoType.CargoTypeText
		,FlowPackageList.CargoTypeID,PackageType.PName,Devices.DeviceName
	</Content>
    <Content Key="ReportSterilizeSummary_CZ" Desc="灭菌统计报表" DataBaseType="SqlServer">
		--灭菌统计
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT
		Devices.DeviceName AS DEVICENAME,
		DevicesUseLog.UseTimes AS USETIMES,
		DevicesUseLog.TodayUseTimes AS TODAYUSETIMES,
		CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT, --种类
		CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT,--类别
		CargoType.CargoTypeText AS CARGOTYPETEXT,--无菌物品、器械包
		PackageType.PName AS OUTPACKING,--外包装
		StorageList.Barcode AS BARCODE
		FROM FlowSterilizationList
		inner JOIN DevicesUseLog on FlowSterilizationList.SterilizationLogID=DevicesUseLog.LogID
		inner JOIN Devices ON DevicesUseLog.DeviceID = Devices.DeviceID
		inner JOIN FlowPackageList ON FlowSterilizationList.PackageID = FlowPackageList.PackageID
		inner JOIN StorageList ON  FlowPackageList.StorageID = StorageList .StorageID
		LEFT JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
		LEFT JOIN view_CargoType AS CargoType ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
		LEFT JOIN AC_WorkGroup  SterilizaUser  ON DevicesUseLog.UserID = SterilizaUser.FID
		LEFT JOIN AC_WorkGroup  SterilizaChecker  ON DevicesUseLog.CheckID = SterilizaChecker.FID
		WHERE  Devices.DeviceType IN(4,5,6) {0}
		ORDER BY DeviceName,UseTimes,TodayUseTimes,CargoTopTypeText,CargoTypeKindText,CargoTypeText,OUTPACKING
	</Content>
    <Content Key="ReportSterilizeSummary_CZ" Desc="灭菌统计报表" DataBaseType="Oracle">
		SELECT
		Devices.DeviceName AS DeviceName,
		DevicesUseLog.UseTimes AS UseTimes,
		DevicesUseLog.TodayUseTimes AS TodayUseTimes,
		CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT, --种类
		CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT,--类别
		CargoType.CargoTypeText AS CARGOTYPETEXT,--无菌物品、器械包
		PackageType.PName AS OUTPACKING,--外包装
		StorageList.Barcode AS BarCode
		FROM FlowSterilizationList
		inner JOIN DevicesUseLog   on FlowSterilizationList.SterilizationLogID=DevicesUseLog.LogID
		inner JOIN Devices   ON DevicesUseLog.DeviceID = Devices.DeviceID
		inner JOIN FlowPackageList  ON FlowSterilizationList.PackageID = FlowPackageList.PackageID
		inner JOIN StorageList  ON  FlowPackageList.StorageID = StorageList .StorageID
		LEFT JOIN PackageType    on FlowPackageList.packagetypeid = PackageType.PTypeID
		LEFT JOIN view_CargoType    CargoType   ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
		LEFT JOIN AC_WorkGroup  SterilizaUser  ON DevicesUseLog.UserID = SterilizaUser.FID
		LEFT JOIN AC_WorkGroup  SterilizaChecker  ON DevicesUseLog.CheckID = SterilizaChecker.FID
		WHERE  Devices.DeviceType IN(4,5,6) {0}
		ORDER BY DeviceName,UseTimes,TodayUseTimes,CargoTopTypeText,CargoTypeKindText,CargoTypeText,OUTPACKING
	</Content>
    <Content Key="ReportProvideMaterialSummaryPriceUseInLocation" Desc="发放一次性物品统计（一次性物品价格取入库的单价）" DataBaseType="SqlServer">
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT
		StorageOut.OutDate OUTDATE,
		Area.Name AS AREATEXT, --区域
		Location.LOCATIONNAME,
		CargoTopType.TypeName AS CARGOTOPTYPETEXT,--种类
		CargoTypeKind.KindName AS CARGOTYPEKINDTEXT,--类别
		CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品
		CargoType.MinUnit MINUNIT,
		CargoType.Unit UNIT,
		CargoType.incode INCODE,
		SUM(SOLSL.Quantity) AS QTY,--数量
		ISNULL(StorageList.Price,0.00) AS UNITPRICE,--单价
		ISNULL(StorageList.Price,0.00) * SUM(SOLSL.Quantity) AS TOTALPRICE --总价
		,StorageList.Quantity  SHENGQTY
		,StorageList.LotNumber LOTNUMBER
		FROM StorageOutList WITH (NOLOCK)
		INNER JOIN StorageOut WITH (NOLOCK)  on StorageOut.OutID = StorageOutList.OutID
		INNER JOIN StorageOutListStorageList SOLSL  WITH (NOLOCK)  on StorageOutList.Outlistid= SOLSL.Outlistid
		LEFT JOIN StorageList  WITH (NOLOCK)   on StorageList.StorageID = SOLSL.StorageID
		LEFT JOIN AC_ORG AS Area WITH (NOLOCK)  on StorageOut.OrgID = Area.ID
		LEFT JOIN CargoType WITH (NOLOCK)  on StorageList.CargoTypeID = CargoType.CargoTypeID
		LEFT JOIN CargoTypeKind WITH (NOLOCK) ON CargoType.CargoTypeKind = CargoTypeKind.ID
		LEFT JOIN SystemTypeParameter AS CargoTopType WITH (NOLOCK) ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
		LEFT JOIN AC_WorkGroup AS ProvideUser WITH (NOLOCK) on StorageOut.OPID = ProvideUser.FID
		LEFT JOIN AC_WorkGroup AS RecipientUser WITH (NOLOCK) on StorageOut.RECIPIENTID = RecipientUser.FID
		LEFT JOIN Location WITH (NOLOCK) on StorageOutList.LocationID = Location.LocationID
		Where OutType = 6  {0} -- 可能需要震泽及其下属所有科室
		Group By
		Area.Name,
		Location.LOCATIONNAME,
		CargoTopType.TypeName,
		CargoTypeKind.KindName,
		CargoType.CargoTypeName,
		CargoType.MinUnit,
		CargoType.Unit,CargoType.incode,
		StorageOut.OutDate,StorageList.Price,StorageList.Quantity,StorageList.LotNumber
		Order By StorageOut.OutDate DESC
	</Content>
    <Content Key="ReportProvideMaterialSummaryPriceUseInLocation" Desc="发放一次性物品统计（一次性物品价格取入库的单价）" DataBaseType="Oracle">
		SELECT
		StorageOut.OutDate OUTDATE,
		Area.Name AS AREATEXT, --区域
		Location.LOCATIONNAME,
		CargoTopType.TypeName AS CARGOTOPTYPETEXT,--种类
		CargoTypeKind.KindName AS CARGOTYPEKINDTEXT,--类别
		CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品
		CargoType.MinUnit MINUNIT,
		CargoType.Unit UNIT,
		CargoType.incode INCODE,
		SUM(SOLSL.Quantity) AS QTY,--数量
		nvl(StorageList.Price,0.00) AS UNITPRICE,--单价
		nvl(StorageList.Price,0.00) * SUM(SOLSL.Quantity) AS TOTALPRICE --总价
		,StorageList.Quantity  SHENGQTY
		,StorageList.LotNumber LOTNUMBER
		FROM StorageOutList
		INNER JOIN StorageOut  on StorageOut.OutID = StorageOutList.OutID
		INNER JOIN StorageOutListStorageList SOLSL on StorageOutList.Outlistid= SOLSL.Outlistid
		LEFT JOIN StorageList on StorageList.StorageID = SOLSL.StorageID
		LEFT JOIN AC_ORG  Area   on StorageOut.OrgID = Area.ID
		LEFT JOIN CargoType   on StorageList.CargoTypeID = CargoType.CargoTypeID
		LEFT JOIN CargoTypeKind  ON CargoType.CargoTypeKind = CargoTypeKind.ID
		LEFT JOIN SystemTypeParameter  CargoTopType  ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
		LEFT JOIN AC_WorkGroup  ProvideUser  on StorageOut.OPID = ProvideUser.FID
		LEFT JOIN AC_WorkGroup  RecipientUser  on StorageOut.RECIPIENTID = RecipientUser.FID
		LEFT JOIN Location  on StorageOutList.LocationID = Location.LocationID
		Where OutType = 6  {0} -- 可能需要震泽及其下属所有科室
		Group By
		Area.Name,
		Location.LOCATIONNAME,
		CargoTopType.TypeName,
		CargoTypeKind.KindName,
		CargoType.CargoTypeName,
		CargoType.MinUnit,
		CargoType.Unit,CargoType.incode,StorageOut.OutDate,StorageList.Price,StorageList.Quantity,StorageList.LotNumber
		Order By StorageOut.OutDate DESC
	</Content>

	  <Content Key="ReportProvideMaterialSummary" Desc="发放一次性物品统计" DataBaseType="SqlServer">
		  SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		  SELECT
		  StorageOut.OutDate OUTDATE,
		  Area.Name AS AREATEXT, --区域
		  Location.LOCATIONNAME,
		  CargoTopType.TypeName AS CARGOTOPTYPETEXT,--种类
		  CargoTypeKind.KindName AS CARGOTYPEKINDTEXT,--类别
		  CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品
		  CargoType.MinUnit MINUNIT,
		  CargoType.Unit UNIT,
		  CargoType.incode INCODE,
		  SUM(StorageOutList.Quantity) AS QTY,--数量
		  ISNULL(CargoType.Amount,0.00) AS UNITPRICE,--单价
		  ISNULL(CargoType.Amount,0.00) * SUM(StorageOutList.Quantity) AS TOTALPRICE --总价
		  ,StorageList.Quantity  SHENGQTY
		  ,StorageList.LotNumber LOTNUMBER
		  FROM StorageOutList WITH (NOLOCK)
		  INNER JOIN StorageOut WITH (NOLOCK)  on StorageOut.OutID = StorageOutList.OutID
		  LEFT JOIN StorageList WITH (NOLOCK)  on StorageList.StorageID = StorageOutList.StorageID
		  LEFT JOIN AC_ORG AS Area WITH (NOLOCK)  on StorageOut.OrgID = Area.ID
		  LEFT JOIN CargoType WITH (NOLOCK)  on StorageList.CargoTypeID = CargoType.CargoTypeID
		  LEFT JOIN CargoTypeKind WITH (NOLOCK) ON CargoType.CargoTypeKind = CargoTypeKind.ID
		  LEFT JOIN SystemTypeParameter AS CargoTopType WITH (NOLOCK) ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
		  LEFT JOIN AC_WorkGroup AS ProvideUser WITH (NOLOCK) on StorageOut.OPID = ProvideUser.FID
		  LEFT JOIN AC_WorkGroup AS RecipientUser WITH (NOLOCK) on StorageOut.RECIPIENTID = RecipientUser.FID
		  LEFT JOIN Location WITH (NOLOCK) on StorageOutList.LocationID = Location.LocationID
		  Where OutType = 6  {0} -- 可能需要震泽及其下属所有科室
		  Group By
		  Area.Name,
		  Location.LOCATIONNAME,
		  CargoTopType.TypeName,
		  CargoTypeKind.KindName,
		  CargoType.CargoTypeName,
		  CargoType.Amount
		  ,CargoType.MinUnit,
		  CargoType.Unit,CargoType.incode,
		  StorageOut.OutDate,StorageList.Quantity,StorageList.LotNumber
		  Order By StorageOut.OutDate DESC
	  </Content>
	  <Content Key="ReportProvideMaterialSummary" Desc="发放一次性物品统计" DataBaseType="Oracle">
		  SELECT
		  StorageOut.OutDate OUTDATE,
		  Area.Name AS AREATEXT, --区域
		  Location.LOCATIONNAME,
		  CargoTopType.TypeName AS CARGOTOPTYPETEXT,--种类
		  CargoTypeKind.KindName AS CARGOTYPEKINDTEXT,--类别
		  CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品
		  CargoType.MinUnit MINUNIT,
		  CargoType.Unit UNIT,
		  CargoType.incode INCODE,
		  SUM(StorageOutList.Quantity) AS QTY,--数量
		  nvl(CargoType.Amount,0.00) AS UNITPRICE,--单价
		  nvl(CargoType.Amount,0.00) * SUM(StorageOutList.Quantity) AS TOTALPRICE --总价
		  ,StorageList.Quantity  SHENGQTY
		  ,StorageList.LotNumber LOTNUMBER
		  FROM StorageOutList
		  INNER JOIN StorageOut  on StorageOut.OutID = StorageOutList.OutID
		  LEFT JOIN StorageList   on StorageList.StorageID = StorageOutList.StorageID
		  LEFT JOIN AC_ORG  Area   on StorageOut.OrgID = Area.ID
		  LEFT JOIN CargoType   on StorageList.CargoTypeID = CargoType.CargoTypeID
		  LEFT JOIN CargoTypeKind  ON CargoType.CargoTypeKind = CargoTypeKind.ID
		  LEFT JOIN SystemTypeParameter  CargoTopType  ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
		  LEFT JOIN AC_WorkGroup  ProvideUser  on StorageOut.OPID = ProvideUser.FID
		  LEFT JOIN AC_WorkGroup  RecipientUser  on StorageOut.RECIPIENTID = RecipientUser.FID
		  LEFT JOIN Location  on StorageOutList.LocationID = Location.LocationID
		  Where OutType = 6  {0} -- 可能需要震泽及其下属所有科室
		  Group By
		  Area.Name,
		  Location.LOCATIONNAME,
		  CargoTopType.TypeName,
		  CargoTypeKind.KindName,
		  CargoType.CargoTypeName,
		  CargoType.Amount,
		  CargoType.MinUnit,
		  CargoType.Unit,CargoType.incode,StorageOut.OutDate,StorageList.Quantity,StorageList.LotNumber
		  Order By StorageOut.OutDate DESC
	  </Content>	 
    <Content Key="ReportProvideSummary" Desc="发放统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      Area.Name AS AREATEXT, --区域
      l.LOCATIONNAME,
      CargoTopType.TypeName AS CARGOTOPTYPETEXT,--种类
      CargoTypeKind.KindName AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品
      PackageType.PName AS OUTPACKING,--外包装
      case FlowPackageList.LendFlag
      when 0 then '否'
      when 1 then '是'
      End as LENDFLAG,
      COUNT(1) AS QTY,--数量
      ISNULL(CargoType.Amount,0.00) AS UNITPRICE,--单价
      ISNULL(CargoType.Amount,0.00) * COUNT(FlowProvideList.PackageID) AS TOTALPRICE, --总价
      ISNULL(CargoType.InstrumentsNumber,0) AS INUMBER,
      ISNULL(CargoType.InstrumentsNumber,0) * COUNT(FlowProvideList.PackageID) AS TOTALINUMBER
      FROM FlowProvideList
      INNER JOIN FlowProvide on FlowProvide.ProvideID = FlowProvideList.ProvideID
      inner JOIN FlowPackageList  on FlowProvideList.PackageID = FlowPackageList.PackageID
      inner JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      LEFT JOIN AC_ORG AS Area  on FlowProvide.OrgID = Area.ID
      LEFT JOIN CargoType on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind  ON CargoType.CargoTypeKind = CargoTypeKind.ID
      inner JOIN SystemTypeParameter AS CargoTopType ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
      inner JOIN StorageList on FlowPackageList.StorageID = StorageList.StorageID
      inner JOIN AC_WorkGroup on FlowProvide.OPID = AC_WorkGroup.FID
      LEFT JOIN AC_WorkGroup us on FlowProvide.RECIPIENTID = us.FID
      Left join Location l on FlowProvide.LocationID = l.LocationID
      Where 1 = 1  {0} -- 可能需要震泽及其下属所有科室
      Group By
      Area.Name,
      l.LOCATIONNAME,
      CargoTopType.TypeName,
      CargoTypeKind.KindName,
      CargoType.CargoTypeName,
      PackageType.PName,
      FlowPackageList.LendFlag,
      CargoType.Amount,
      CargoType.InstrumentsNumber
      Order By AreaText,CARGOTYPETEXT
    </Content>
    <Content Key="ReportProvideSummary" Desc="发放统计" DataBaseType="Oracle">
      SELECT
      Area.Name  AREATEXT,
      l.LOCATIONNAME,
      CargoTopType.TypeName  CARGOTOPTYPETEXT,
      CargoTypeKind.KindName  CARGOTYPEKINDTEXT,
      CargoType.CargoTypeName  CARGOTYPETEXT,
      PackageType.PName  OUTPACKING,
      case FlowPackageList.LendFlag
      when 0 then '否'
      when 1 then '是'
      End  LENDFLAG,
      COUNT(1)  QTY,
      nvl(CargoType.Amount,0.00)  UNITPRICE,
      nvl(CargoType.Amount,0.00) * COUNT(FlowProvideList.PackageID)  TOTALPRICE, --总价
      nvl(CargoType.InstrumentsNumber,0) AS INUMBER,
      nvl(CargoType.InstrumentsNumber,0) * COUNT(FlowProvideList.PackageID) AS TOTALINUMBER
      FROM FlowProvideList
      INNER JOIN FlowProvide  on FlowProvide.ProvideID = FlowProvideList.ProvideID
      inner JOIN FlowPackageList  on FlowProvideList.PackageID = FlowPackageList.PackageID
      inner JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      LEFT JOIN AC_ORG  Area  on FlowProvide.OrgID = Area.ID
      LEFT JOIN CargoType  on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind ON CargoType.CargoTypeKind = CargoTypeKind.ID
      inner JOIN SystemTypeParameter  CargoTopType ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
      inner JOIN StorageList  on FlowPackageList.StorageID = StorageList.StorageID
      inner JOIN AC_WorkGroup  on FlowProvide.OPID = AC_WorkGroup.FID
      LEFT JOIN AC_WorkGroup us  on FlowProvide.RECIPIENTID = us.FID
      Left join Location l  on FlowProvide.LocationID = l.LocationID
      Where 1 = 1  {0}
      Group By
      Area.Name,
      l.LOCATIONNAME,
      CargoTopType.TypeName,
      CargoTypeKind.KindName,
      CargoType.CargoTypeName,
      PackageType.PName,
      FlowPackageList.LendFlag,
      CargoType.Amount,
      CargoType.InstrumentsNumber
      Order By AreaText,CargoTypeText
    </Content>

    <Content Key="ReportDeviceDisinfectSummary" Desc="清洗设备统计" DataBaseType="SqlServer">
      --清洗设备统计
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      CONVERT(varchar(10),DevicesUseLog.BeginDate,120) AS BEGINDATE
      ,Devices.DeviceName as DEVICENAME
      ,DevicesUseLog.TODAYUSETIMES                    --每天的清洗批次
      ,DevicesUseLog.USETIMES
      --每批次运行的时间+所用的清洗程序
      ,isnull(DATEDIFF(n,DevicesUseLog.BeginDate,DevicesUseLog.EndDate),0) USEDATE
      ,isnull(prule.RULENAME,'') RULENAME
      --每批次清晰地科室+包名+数量
      ,RecycleOrg.Name ORGNAME
      ,view_CargoType.CargoTypeText    CARGOTYPENAME
      ,COUNT(FlowRecycleList.PackageID) QUANTITY
      ,(select count(*) from FLOWDISINFECTCONTAINERLIST a where a.frecycleid=FlowRecycle.frecycleid) as CONTAINERQUANTITY
      FROM   DevicesUseLog  with (nolock)
      INNER JOIN Devices with (nolock)  ON Devices.DeviceID =DevicesUseLog.DeviceID
      INNER JOIN AC_WorkGroup PackageUser with (nolock) ON DevicesUseLog.UserID = PackageUser.FID
      INNER JOIN AC_UserWorkGroup WG  ON PackageUser.FID = WG.FGroupID
      INNER JOIN AC_User AU  ON WG.FUserID = AU.ID
      LEFT JOIN DeviceProcessRule prule  on DevicesUseLog.DeviceProcessRuleID = prule.RuleID
      LEFT JOIN FlowDisinfect fd on  DevicesUseLog.Logid=fd.LogID
      LEFT JOIN (select distinct FRecycleID,FDisinfectID   from FLOWDISINFECTCONTAINERLIST)  d on fd.FDisinfectID=d.FDisinfectID
      LEFT JOIN FlowRecycle ON d.FRecycleID = FlowRecycle.FRecycleID
      LEFT JOIN FlowRecycleList ON d.FRecycleID = FlowRecycleList.FRecycleID
      LEFT JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      LEFT JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN view_CargoType ON StorageList.CargoTypeID = view_CargoType.CargoTypeID
      LEFT JOIN Warehouse WITH (NOLOCK) ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org AS RecycleOrg WITH (NOLOCK) ON Warehouse.OrgID = RecycleOrg.ID
      WHERE Devices.DeviceType = 0 {0}
      GROUP by
      DevicesUseLog.TodayUseTimes,
      DevicesUseLog.UseTimes,
      DevicesUseLog.BeginDate,
      DevicesUseLog.EndDate,
      FlowRecycle.FRecycleID,
      prule.RuleName,
      RecycleOrg.Name,
      view_CargoType.CargoTypeText,
      CONVERT(varchar(10),DevicesUseLog.BeginDate,120),
      DeviceName
      ORDER BY CONVERT(varchar(10),DevicesUseLog.BeginDate,120) ,DeviceName,DevicesUseLog.TODAYUSETIMES
    </Content>
    <Content Key="ReportDeviceDisinfectSummary" Desc="清洗设备统计" DataBaseType="Oracle">
		SELECT
		fun_get_Date(DevicesUseLog.BeginDate,'Daily')  BEGINDATE
		,Devices.DeviceName  DEVICENAME
		,DevicesUseLog.TODAYUSETIMES
		,DevicesUseLog.USETIMES
		--每批次运行的时间+所用的清洗程序
		,nvl((to_date(EndDate,'yyyy-mm-dd hh24:mi:ss')-to_date(BeginDate,'yyyy-mm-dd hh24:mi:ss'))*24*60,0) USEDATE
		,nvl(prule.RULENAME,'') RULENAME
		--每批次清晰地科室+包名+数量
		,RecycleOrg.Name ORGNAME
		, view_CargoType.CargoTypeText CARGOTYPENAME
		,COUNT(FlowRecycleList.PackageID) QUANTITY
		,(select count(*) from FLOWDISINFECTCONTAINERLIST a where a.frecycleid=FlowRecycle.frecycleid) as CONTAINERQUANTITY
		FROM   DevicesUseLog
		INNER JOIN Devices  ON Devices.DeviceID =DevicesUseLog.DeviceID
		INNER JOIN AC_WorkGroup PackageUser  ON DevicesUseLog.UserID = PackageUser.FID
		INNER JOIN AC_UserWorkGroup WG  ON PackageUser.FID = WG.FGroupID
		INNER JOIN AC_User AU  ON WG.FUserID = AU.ID
		LEFT JOIN DeviceProcessRule prule  on DevicesUseLog.DeviceProcessRuleID = prule.RuleID
		LEFT JOIN FlowDisinfect fd on  DevicesUseLog.Logid=fd.LogID
		LEFT JOIN (select distinct FRecycleID,FDisinfectID   from FLOWDISINFECTCONTAINERLIST)  d on fd.FDisinfectID=d.FDisinfectID
		LEFT JOIN FlowRecycle ON d.FRecycleID = FlowRecycle.FRecycleID
		LEFT JOIN FlowRecycleList ON d.FRecycleID = FlowRecycleList.FRecycleID
		LEFT JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
		LEFT JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
		LEFT JOIN view_CargoType ON StorageList.CargoTypeID = view_CargoType.CargoTypeID
		LEFT JOIN Warehouse  ON  StorageList.WarehouseID = Warehouse.WarehouseID
		LEFT JOIN AC_Org  RecycleOrg  ON Warehouse.OrgID = RecycleOrg.ID
		WHERE Devices.DeviceType = 0 {0}
		GROUP by
		DevicesUseLog.TodayUseTimes,
		DevicesUseLog.UseTimes,
		DevicesUseLog.BeginDate,
		DevicesUseLog.EndDate,
		FlowRecycle.FRecycleID,
		prule.RuleName,
		RecycleOrg.Name,
		view_CargoType.CargoTypeText,
		fun_get_Date(DevicesUseLog.BeginDate,'Daily'),
		DeviceName
		ORDER BY fun_get_Date(DevicesUseLog.BeginDate,'Daily') DESC,DeviceName
	</Content>

    <Content Key="ReportDeviceSterilizeSummary" Desc="灭菌设备统计" DataBaseType="SqlServer">
      --灭菌设备统计
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
      SELECT T1.BEGINDATE,T1.DEVICENAME,T1.TODAYUSETIMES,T1.USETIMES,T1.RULENAME,T1.CARGOTYPENAME,T1.PNAME
      ,sum(T1.QUANTITY) as QUANTITY,T1.ORGNAME
      from
      (
      SELECT T.BEGINDATE,T.DEVICENAME,T.TODAYUSETIMES,T.USETIMES,T.RULENAME,T.CARGOTYPENAME,T.PNAME
      ,T.QUANTITY
      ,(select top 1 name from	FlowRecycleList
      inner join FlowPackageList on FlowRecycleList.PackageID = FlowPackageList.PackageID
      inner join StorageList on FlowPackageList.StorageID = StorageList.StorageID
      left join Warehouse on StorageList.WarehouseID = Warehouse.WarehouseID
      left join AC_Org on Warehouse.OrgID = AC_Org.ID
      where StorageList.CargoTypeID = T.CARGOTYPEID and FlowRecycleList.FRecycleID = T.FRecycleID) as  ORGNAME
      FROM
      (SELECT
      CONVERT(varchar(10),DevicesUseLog.BeginDate,120) AS [BEGINDATE],
      Devices.DeviceName AS DEVICENAME,
      DevicesUseLog.TODAYUSETIMES,
      DevicesUseLog.USETIMES,
      isnull(prule.RULENAME,'') as RULENAME
      ,c.CargoTypeName CARGOTYPENAME
      ,pt.PNAME
      ,COUNT(fl.PackageID) as QUANTITY
      ,c.CARGOTYPEID
      ,fld.FRECYCLEID
      From DevicesUseLog  with (nolock)
      left JOIN Devices with (nolock)  ON Devices.DeviceID =DevicesUseLog.DeviceID
      LEFT JOIN DeviceProcessRule  prule  ON DevicesUseLog.DeviceProcessRuleID = prule.RuleID
      inner join FlowSterilizationList fsl  ON DevicesUseLog.LogID=fsl.SterilizationLogID
      inner join FlowPackageList fl  on fsl.PackageID = fl.PackageID
      inner join FlowPackageListDisinfect fld on fld.PackageID = fl.PackageID
      left join PackageType pt ON fl.PackageTypeID = pt.PTypeID
      inner join StorageList sl  on fl.StorageID = sl.StorageID
      left join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      WHERE Devices.DeviceType in (4,5,6) {0}
      GROUP by  CONVERT(varchar(10),DevicesUseLog.BeginDate,120),DevicesUseLog.TODAYUSETIMES,DevicesUseLog.UseTimes,
      DeviceName,prule.RULENAME,c.CargoTypeName,pt.PNAME,c.CARGOTYPEID,fld.FRecycleID) as T) AS T1
      GROUP BY T1.BEGINDATE,T1.DEVICENAME,T1.TODAYUSETIMES,T1.USETIMES,T1.RULENAME,T1.CARGOTYPENAME,T1.PNAME,T1.ORGNAME
      ORDER BY BeginDate DESC,DeviceName,ORGNAME,CARGOTYPENAME
    </Content>
    <Content Key="ReportDeviceSterilizeSummary" Desc="灭菌设备统计" DataBaseType="Oracle">
      SELECT T1.BEGINDATE,T1.DEVICENAME,T1.TODAYUSETIMES,T1.USETIMES,T1.RULENAME,T1.CARGOTYPENAME,T1.PNAME
      ,sum(T1.QUANTITY) as QUANTITY,T1.ORGNAME
      from
      (
      SELECT T.BEGINDATE,T.DEVICENAME,T.TODAYUSETIMES,T.USETIMES,T.RULENAME,T.CARGOTYPENAME,T.PNAME
      ,T.QUANTITY
      ,(select  name from	FlowRecycleList
      inner join FlowPackageList on FlowRecycleList.PackageID = FlowPackageList.PackageID
      inner join StorageList on FlowPackageList.StorageID = StorageList.StorageID
      left join Warehouse on StorageList.WarehouseID = Warehouse.WarehouseID
      left join AC_Org on Warehouse.OrgID = AC_Org.ID
      where  rownum=1 and StorageList.CargoTypeID = T.CARGOTYPEID and FlowRecycleList.FRecycleID = T.FRecycleID) as  ORGNAME
      FROM
      (SELECT
      fun_get_Date(DevicesUseLog.BeginDate,'Daily')  AS BEGINDATE,
      Devices.DeviceName AS DEVICENAME,
      DevicesUseLog.TODAYUSETIMES,
      DevicesUseLog.USETIMES,
      nvl(prule.RULENAME,'')  as RULENAME
      ,c.CargoTypeName CARGOTYPENAME
      ,pt.PNAME
      ,COUNT(fl.PackageID) as QUANTITY
      ,c.CARGOTYPEID
      ,fld.FRECYCLEID
      From DevicesUseLog
      left JOIN Devices  ON Devices.DeviceID =DevicesUseLog.DeviceID
      LEFT JOIN DeviceProcessRule  prule  ON DevicesUseLog.DeviceProcessRuleID = prule.RuleID
      inner join FlowSterilizationList fsl  ON DevicesUseLog.LogID=fsl.SterilizationLogID
      inner join FlowPackageList fl  on fsl.PackageID = fl.PackageID
      inner join FlowPackageListDisinfect fld on fld.PackageID = fl.PackageID
      left join PackageType pt ON fl.PackageTypeID = pt.PTypeID
      inner join StorageList sl  on fl.StorageID = sl.StorageID
      left join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      WHERE Devices.DeviceType in (4,5,6) {0}
      GROUP by  fun_get_Date(DevicesUseLog.BeginDate,'Daily'),DevicesUseLog.TODAYUSETIMES,DevicesUseLog.UseTimes,
      DeviceName,prule.RULENAME,c.CargoTypeName,pt.PNAME,c.CARGOTYPEID,fld.FRecycleID)   T)  T1
      GROUP BY T1.BEGINDATE,T1.DEVICENAME,T1.TODAYUSETIMES,T1.USETIMES,T1.RULENAME,T1.CARGOTYPENAME,T1.PNAME,T1.ORGNAME
      ORDER BY BeginDate DESC,DeviceName,ORGNAME,CARGOTYPENAME

    </Content>

    <Content Key="QueryDevicesMaintainList" Desc="设备维保记录" DataBaseType="SqlServer">
      SELECT DEVICENAME,Convert(char(10), M.MAINTAINDATE ,120) MAINTAINDATE,M.REMARK
      FROM DevicesMaintainLog M  WITH (NOLOCK)
      LEFT JOIN Devices D WITH (NOLOCK) ON M.DeviceID = D.DeviceID
      INNER JOIN AC_WorkGroup U ON M.UserID=U.FID
      INNER JOIN AC_UserWorkGroup WG  ON U.FID = WG.FGroupID
      INNER JOIN AC_User AU  ON WG.FUserID = AU.ID
      WHERE  M.MaintainDate is not null {0} ORDER BY M.MaintainDate DESC
    </Content>
    <Content Key="QueryDevicesMaintainList" Desc="设备维保记录" DataBaseType="Oracle">
      SELECT DeviceName,to_char( M.MaintainDate,'yyyy-mm-dd') MaintainDate,M.Remark
      FROM DevicesMaintainLog M
      LEFT JOIN Devices D  ON M.DeviceID = D.DeviceID
      INNER JOIN AC_WorkGroup U ON M.UserID=U.FID
      INNER JOIN AC_UserWorkGroup WG  ON U.FID = WG.FGroupID
      INNER JOIN AC_User AU  ON WG.FUserID = AU.ID
      WHERE  M.MaintainDate is not null {0} ORDER BY M.MaintainDate DESC
    </Content>

    <Content Key="ReportGetFlowPackageIn" Desc="外来包统计" DataBaseType="SqlServer">
      select distinct u.FNames as USERNAME,o.Name as ORGNAME,FlowPackageIn.QUANTITY,c.CARGOTYPENAME,FlowPackageIn.PACKAGEINDATE,fp.PROVIDEDATE,pu.FNames as OPNAME,FlowPackageIn.FDOCTOR,FlowPackageIn.FPATIENT,FlowPackageIn.FPACKAGENAME
      from  FlowPackageIn
      inner join AC_WorkGroup u on FlowPackageIn.OPID = u.FID
      inner join CargoType c on FlowPackageIn.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList pl ON FlowPackageIn.FPackageID = pl.FPackageID
      left join FlowProvideList fpl on pl.packageid = fpl.packageid
      left join FlowProvide fp on fpl.provideid = fp.provideid
      left join AC_WorkGroup pu on fp.opid = pu.fid
      inner join AC_Org o on FlowPackageIn.Sender = o.ID
      where 1=1 {0}
    </Content>
    <Content Key="ReportGetFlowPackageIn" Desc="外来包统计" DataBaseType="Oracle">
      select distinct u.FNames as USERNAME,o.Name as ORGNAME,FlowPackageIn.QUANTITY,c.CARGOTYPENAME,FlowPackageIn.PACKAGEINDATE,fp.PROVIDEDATE,pu.FNames as OPNAME,FlowPackageIn.FDOCTOR,FlowPackageIn.FPATIENT,FlowPackageIn.FPACKAGENAME
      from  FlowPackageIn
      inner join AC_WorkGroup u  on FlowPackageIn.OPID = u.FID
      inner join CargoType  c  on FlowPackageIn.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList pl ON FlowPackageIn.FPackageID = pl.FPackageID
      left join FlowProvideList fpl on pl.packageid = fpl.packageid
      left join FlowProvide fp on fpl.provideid = fp.provideid
      left join AC_WorkGroup pu on fp.opid = pu.fid
      inner join AC_Org o on FlowPackageIn.Sender = o.ID
      where 1=1 {0}
    </Content>
    
    //临床科室下 回收发放情况
    <Content Key="ClinicalGetRecycleProvide" Desc="临床科室下回收发放情况" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
      SELECT SHOWDATA.WORKDATE,SHOWDATA.ORGID,SHOWDATA.ORGNAME,SHOWDATA.CARGOTYPEID,C.CargoTypeName AS CARGOTYPENAME,
      CK.KindName AS KINDNAME,SHOWDATA.SENDERNAME,SHOWDATA.RECIPIENTUSERNAME,SHOWDATA.RECYCLEQTY,SHOWDATA.PROVIDEQTY
      FROM
      (
      SELECT
      RESULTDATA.ORGID,RESULTDATA.ORGNAME,RESULTDATA.CARGOTYPEID,
      RESULTDATA.WORKDATE AS WORKDATE,
      MAX(RESULTDATA.SENDERNAME)AS SENDERNAME,
      MAX(RESULTDATA.RECIPIENTUSERNAME) AS RECIPIENTUSERNAME,
      SUM(RESULTDATA.RECYCLEQTY) AS RECYCLEQTY,
      SUM(RESULTDATA.PROVIDEQTY) AS PROVIDEQTY
      FROM
      (
      SELECT
      AO.ID AS ORGID,
      AO.Name AS ORGNAME,
      FPL.CargoTypeID AS CARGOTYPEID,
      SU.FNames AS SENDERNAME,
      '' AS RECIPIENTUSERNAME,
      CAST(Convert(varchar(10),FR.RecycleDate,120) as datetime) AS WORKDATE,
      COUNT(1) AS  RECYCLEQTY,
      0 AS PROVIDEQTY
      FROM FlowRecycleList RL
      INNER JOIN FlowRecycle FR ON FR.FRecycleID = RL.FRecycleID
      left join AC_WorkGroup SU on SU.FID = FR.SenderID
      INNER JOIN FlowPackageList FPL ON RL.PackageID = FPL.PackageID
      INNER JOIN StorageList SL ON FPL.StorageID = SL.StorageID
      LEFT JOIN Warehouse W ON SL.WarehouseID = W.WarehouseID
      LEFT JOIN AC_Org  AO  ON W.OrgID = AO.ID
      where 1=1 {0}
      GROUP BY AO.ID,AO.Name,SU.FNames ,FPL.CargoTypeID,CAST(Convert(varchar(10),FR.RecycleDate,120) as datetime)
      UNION ALL
      SELECT
      AO.ID AS ORGID,
      AO.Name AS ORGNAME,
      FPL.CargoTypeID CARGOTYPEID,
      '' AS SENDERNAME,
      ISNULL(FP.Recipient,'') AS RECIPIENTUSERNAME,
      CAST(Convert(varchar(10),FP.PROVIDEDATE,120) as datetime) AS WORKDATE,
      0 AS  RECYCLEQTY,
      COUNT(1)  PROVIDEQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      LEFT JOIN AC_ORG AO ON FP.OrgID = AO.ID
      where 1=1 {1}
      GROUP BY AO.ID,FP.OrgID,AO.Name,FP.Recipient,
      FPL.CargoTypeID,CAST(Convert(varchar(10),FP.PROVIDEDATE,120) as datetime)
      ) RESULTDATA
      GROUP BY RESULTDATA.ORGID,RESULTDATA.ORGNAME,RESULTDATA.CARGOTYPEID,RESULTDATA.WORKDATE

      ) SHOWDATA
      LEFT JOIN CargoType C ON SHOWDATA.CARGOTYPEID = C.CargoTypeID
      LEFT JOIN CargoTypeKind CK ON C.CargoTypeKind = CK.ID
      ORDER BY SHOWDATA.WORKDATE,SHOWDATA.ORGNAME,CK.KINDNAME,C.CargoTypeName  DESC
    </Content>

    //临床科室下 回收发放情况
    <Content Key="ClinicalGetRecycleProvide" Desc="临床科室下回收发放情况" DataBaseType="Oracle">
      SELECT SHOWDATA.WORKDATE,SHOWDATA.ORGID,SHOWDATA.ORGNAME,SHOWDATA.CARGOTYPEID,C.CargoTypeName AS CARGOTYPENAME,
      CK.KindName AS KINDNAME,SHOWDATA.SENDERNAME,SHOWDATA.RECIPIENTUSERNAME,SHOWDATA.RECYCLEQTY,SHOWDATA.PROVIDEQTY
      FROM
      (
      SELECT
      RESULTDATA.ORGID,RESULTDATA.ORGNAME,RESULTDATA.CARGOTYPEID,
      RESULTDATA.WORKDATE AS WORKDATE,
      MAX(RESULTDATA.SENDERNAME)AS SENDERNAME,
      MAX(RESULTDATA.RECIPIENTUSERNAME) AS RECIPIENTUSERNAME,
      SUM(RESULTDATA.RECYCLEQTY) AS RECYCLEQTY,
      SUM(RESULTDATA.PROVIDEQTY) AS PROVIDEQTY
      FROM
      (
      SELECT
      AO.ID AS ORGID,
      AO.Name AS ORGNAME,
      FPL.CargoTypeID AS CARGOTYPEID,
      SU.FNames AS SENDERNAME,
      '' AS RECIPIENTUSERNAME,
      to_date(to_char(FR.RECYCLEDATE,'YYYY-MM-DD'),'YYYY-MM-DD') AS WORKDATE,
      COUNT(1) AS  RECYCLEQTY,
      0 AS PROVIDEQTY
      FROM FlowRecycleList RL
      INNER JOIN FlowRecycle FR ON FR.FRecycleID = RL.FRecycleID
      left join AC_WorkGroup SU on SU.FID = FR.SenderID
      INNER JOIN FlowPackageList FPL ON RL.PackageID = FPL.PackageID
      INNER JOIN StorageList SL ON FPL.StorageID = SL.StorageID
      LEFT JOIN Warehouse W ON SL.WarehouseID = W.WarehouseID
      LEFT JOIN AC_Org  AO  ON W.OrgID = AO.ID
      where 1=1 {0} 
      GROUP BY AO.ID,AO.Name,SU.FNames ,FPL.CargoTypeID,to_date(to_char(FR.RECYCLEDATE,'YYYY-MM-DD'),'YYYY-MM-DD') 
      UNION ALL
      SELECT
      AO.ID AS ORGID,
      AO.Name AS ORGNAME,
      FPL.CargoTypeID CARGOTYPEID,
      '' AS SENDERNAME,
      nvl(FP.Recipient,'') AS RECIPIENTUSERNAME,
       to_date(to_char(FP.PROVIDEDATE,'YYYY-MM-DD'),'YYYY-MM-DD') AS WORKDATE,
      0 AS  RECYCLEQTY,
      COUNT(1)  PROVIDEQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      LEFT JOIN AC_ORG AO ON FP.OrgID = AO.ID
     where 1=1  {1}
      GROUP BY AO.ID,FP.OrgID,AO.Name,FP.Recipient,
      FPL.CargoTypeID,to_date(to_char(FP.PROVIDEDATE,'YYYY-MM-DD'),'YYYY-MM-DD')
      ) RESULTDATA
      GROUP BY RESULTDATA.ORGID,RESULTDATA.ORGNAME,RESULTDATA.CARGOTYPEID,RESULTDATA.WORKDATE

      ) SHOWDATA
      LEFT JOIN CargoType C ON SHOWDATA.CARGOTYPEID = C.CargoTypeID
      LEFT JOIN CargoTypeKind CK ON C.CargoTypeKind = CK.ID
      ORDER BY SHOWDATA.WORKDATE,SHOWDATA.ORGNAME,CK.KINDNAME,C.CargoTypeName  DESC
    </Content>
    
    <Content Key="GetRecycleProvide" Desc="回收发放情况" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
      WITH RecycleProvide(ORGID,ORGNAME,USERORGNAME,CARGOTYPEID,CARGOTOPTYPETEXT,CARGOTYPEKINDTEXT,CARGOTYPETEXT,RECYCLEDATE,RECYCLEQTY,PROVIDEQTY)
      AS
      (
      SELECT
      Recycle.ORGID,Recycle.ORGNAME,Recycle.USERORGNAME,Recycle.CARGOTYPEID,CARGOTOPTYPETEXT,CARGOTYPEKINDTEXT,CARGOTYPETEXT,Recycle.RECYCLEDATE,ISNULL(RECYCLEQTY,0) RECYCLEQTY,ISNULL(PROVIDEQTY,0) PROVIDEQTY
      FROM
      (
      SELECT
      AO.ID ORGID,
      AO.Name  ORGNAME,
      uorg.Name USERORGNAME,
      FPL.CargoTypeID  CARGOTYPEID,
      CT.CargoTopTypeText  CARGOTOPTYPETEXT,
      CT.CargoTypeKindText  CARGOTYPEKINDTEXT,
      CT.CargoTypeText  CARGOTYPETEXT,
      CAST(Convert(varchar(10),FR.RecycleDate,120) as datetime) RECYCLEDATE,
      SUM(1)  RECYCLEQTY
      FROM FlowRecycleList RL
      INNER JOIN FlowRecycle FR ON FR.FRecycleID = RL.FRecycleID
      LEFT join AC_OrgUser on AC_OrgUser .UserID =FR.OPID
      LEFT join AC_Org uorg on uorg.ID =AC_OrgUser.OrgID
      INNER JOIN FlowPackageList FPL ON RL.PackageID = FPL.PackageID
      LEFT JOIN view_CargoType  CT  ON FPL.CargoTypeID = CT.CargoTypeID
      INNER JOIN StorageList SL ON FPL.StorageID = SL.StorageID
      LEFT JOIN Warehouse W ON SL.WarehouseID = W.WarehouseID
      LEFT JOIN AC_Org  AO  ON W.OrgID = AO.ID
      where 1=1 {0}
      GROUP BY AO.ID,W.OrgID,AO.Name,uorg.Name,FPL.CargoTypeID,CT.CargoTopTypeText,
      CT.CargoTypeKindText,CT.CargoTypeText,CAST(Convert(varchar(10),FR.RecycleDate,120) as datetime)
      ) Recycle

      LEFT JOIN
      (
      SELECT
      AO.ID ORGID,
      AO.Name ORGNAME,
      uorg1.Name USERORGNAME,
      FPL.CargoTypeID CARGOTYPEID,
      CAST(Convert(varchar(10),FP.PROVIDEDATE,120) as datetime) RECYCLEDATE,
      COUNT(1)  PROVIDEQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      LEFT join AC_OrgUser on AC_OrgUser.UserID=FP .OPID
      LEFT join AC_Org uorg1 on uorg1 .ID =AC_OrgUser.OrgID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      LEFT JOIN PackageType PT ON FPL.PackageTypeID = PT.PTypeID
      LEFT JOIN AC_ORG AO ON FP.OrgID = AO.ID
      LEFT JOIN view_CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      where 1=1 {1}
      GROUP BY AO.ID,FP.OrgID,AO.Name,uorg1.Name,FPL.CargoTypeID,CT.CargoTopTypeText,
      CT.CargoTypeKindText,CT.CargoTypeText,CAST(Convert(varchar(10),FP.PROVIDEDATE,120) as datetime)

      ) Provide ON Recycle.CARGOTYPEID=Provide.CARGOTYPEID AND Recycle.ORGID = Provide.ORGID AND Recycle.RECYCLEDATE = Provide.RECYCLEDATE
      )

      SELECT * FROM RecycleProvide
      ORDER BY RecycleDate DESC
    </Content>
    
    <Content Key="GetRecycleProvide" Desc="回收发放情况" DataBaseType="Oracle">
      WITH RecycleProvide
      AS
      (
      SELECT
      Recycle.ORGID,Recycle.ORGNAME,Recycle.USERORGNAME,Recycle.CARGOTYPEID,CARGOTOPTYPETEXT,CARGOTYPEKINDTEXT,CARGOTYPETEXT,Recycle.RECYCLEDATE,nvl(RECYCLEQTY,0) RECYCLEQTY,nvl(PROVIDEQTY,0) PROVIDEQTY
      FROM
      (
      SELECT
      AO.ID ORGID,
      AO.Name  ORGNAME,
      uorg.Name USERORGNAME,
      FPL.CargoTypeID  CARGOTYPEID,
      CT.CargoTopTypeText  CARGOTOPTYPETEXT,
      CT.CargoTypeKindText  CARGOTYPEKINDTEXT,
      CT.CargoTypeText  CARGOTYPETEXT,
      to_date(to_char(FR.RECYCLEDATE,'YYYY-MM-DD'),'YYYY-MM-DD') RECYCLEDATE,
      SUM(1)  RECYCLEQTY
      FROM FlowRecycleList RL
      INNER JOIN FlowRecycle FR ON FR.FRecycleID = RL.FRecycleID
      LEFT JOIN AC_OrgUser on AC_OrgUser .UserID =FR.OPID
      LEFT JOIN AC_Org uorg on uorg.ID =AC_OrgUser.OrgID
      INNER JOIN FlowPackageList FPL ON RL.PackageID = FPL.PackageID
      LEFT JOIN view_CargoType  CT  ON FPL.CargoTypeID = CT.CargoTypeID
      INNER JOIN StorageList SL ON FPL.StorageID = SL.StorageID
      LEFT JOIN Warehouse W ON SL.WarehouseID = W.WarehouseID
      LEFT JOIN AC_Org  AO  ON W.OrgID = AO.ID
      where 1=1 {0}
      GROUP BY AO.ID,W.OrgID,AO.Name,uorg.Name,FPL.CargoTypeID,CT.CargoTopTypeText,
      CT.CargoTypeKindText,CT.CargoTypeText,to_date(to_char(FR.RECYCLEDATE,'YYYY-MM-DD'),'YYYY-MM-DD')
      ) Recycle

      LEFT JOIN
      (
      SELECT
      AO.ID ORGID,
      AO.Name ORGNAME,
      uorg1.Name USERORGNAME,
      FPL.CargoTypeID CARGOTYPEID,
      to_date(to_char(FP.PROVIDEDATE,'YYYY-MM-DD'),'YYYY-MM-DD') RECYCLEDATE,
      COUNT(1)  PROVIDEQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      LEFT JOIN AC_OrgUser on AC_OrgUser.UserID=FP .OPID
      LEFT JOIN AC_Org uorg1 on uorg1 .ID =AC_OrgUser.OrgID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      LEFT JOIN PackageType PT ON FPL.PackageTypeID = PT.PTypeID
      LEFT JOIN AC_ORG AO ON FP.OrgID = AO.ID
      LEFT JOIN view_CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      where 1=1 {1}
      GROUP BY AO.ID,FP.OrgID,AO.Name,uorg1.Name,FPL.CargoTypeID,CT.CargoTopTypeText,
      CT.CargoTypeKindText,CT.CargoTypeText,to_date(to_char(FP.PROVIDEDATE,'YYYY-MM-DD'),'YYYY-MM-DD')

      ) Provide ON Recycle.CARGOTYPEID=Provide.CARGOTYPEID AND Recycle.ORGID = Provide.ORGID AND Recycle.RECYCLEDATE = Provide.RECYCLEDATE
      )

      SELECT * FROM RecycleProvide
      ORDER BY RecycleDate DESC
    </Content>
    
    <Content Key="GetProvideTotal" Desc="发放统计报表" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
      WITH ProvideTotal(ORGID,ORGNAME,CARGOTYPEID,CARGOTOPTYPETEXT,CARGOTYPEKINDTEXT,CARGOTYPETEXT,PROVIDEDATE,PROVIDEQTY)
      AS
      (
      SELECT
      Provide.ORGID,
      Provide.ORGNAME,
      Provide.CARGOTYPEID,
      Provide.CARGOTOPTYPETEXT,
      Provide.CARGOTYPEKINDTEXT,
      Provide.CARGOTYPETEXT,
      Provide.PROVIDEDATE,
      Provide.PROVIDEQTY
      FROM  (
      (SELECT
      AO.ID ORGID,
      AO.Name ORGNAME,
      FPL.CargoTypeID CARGOTYPEID,
      CT.CargoTopTypeText  CARGOTOPTYPETEXT,
      CT.CargoTypeKindText  CARGOTYPEKINDTEXT,
      CT.CargoTypeText  CARGOTYPETEXT,
      FP.ProvideDate PROVIDEDATE,
      COUNT(1)  PROVIDEQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      LEFT JOIN PackageType PT ON FPL.PackageTypeID = PT.PTypeID
      LEFT JOIN AC_ORG AO ON FP.OrgID = AO.ID
      LEFT JOIN view_CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      GROUP BY AO.ID,AO.Name,FPL.CargoTypeID,CT.CargoTopTypeText,
      CT.CargoTypeKindText,CT.CargoTypeText,FP.ProvideDate
      )
      UNION ALL
      (
      SELECT
      AO.ID ORGID,
      AO.Name ORGNAME, --区域
      OL.CargoTypeID CARGOTYPEID,
      CT.CargoTopTypeText  CARGOTOPTYPETEXT,
      CT.CargoTypeKindText  CARGOTYPEKINDTEXT,
      CT.CargoTypeText  CARGOTYPETEXT,
      SO.OutDate PROVIDEDATE,
      OL.Quantity PROVIDEQTY
      FROM StorageOutList OL
      INNER JOIN StorageOut SO ON SO.OutID=OL.OutID
      LEFT JOIN view_CargoType CT ON CT.CargoTypeID=OL.CargoTypeID
      LEFT JOIN AC_Org AO ON AO.ID=SO.OrgID
      GROUP BY AO.ID,AO.Name,OL.CargoTypeID,CT.CargoTopTypeText,CT.CargoTypeKindText,
      CT.CargoTypeText,OL.Quantity,SO.OutDate
      )
      ) Provide
      )

      SELECT * FROM ProvideTotal WHERE 1=1 {0} ORDER BY PROVIDEDATE DESC
    </Content>
    <Content Key="GetProvideTotal" Desc="发放统计报表" DataBaseType="Oracle">
      WITH ProvideTotal
      AS
      (
      SELECT
      Provide.ORGID,
      Provide.ORGNAME,
      Provide.CARGOTYPEID,
      Provide.CARGOTOPTYPETEXT,
      Provide.CARGOTYPEKINDTEXT,
      Provide.CARGOTYPETEXT,
      Provide.PROVIDEDATE,
      Provide.PROVIDEQTY
      FROM  (
      (SELECT
      AO.ID ORGID,
      AO.Name ORGNAME,
      FPL.CargoTypeID CARGOTYPEID,
      CT.CargoTopTypeText  CARGOTOPTYPETEXT,
      CT.CargoTypeKindText  CARGOTYPEKINDTEXT,
      CT.CargoTypeText  CARGOTYPETEXT,
      FP.ProvideDate PROVIDEDATE,
      COUNT(1)  PROVIDEQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      LEFT JOIN PackageType PT ON FPL.PackageTypeID = PT.PTypeID
      LEFT JOIN AC_ORG AO ON FP.OrgID = AO.ID
      LEFT JOIN view_CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      GROUP BY AO.ID,AO.Name,FPL.CargoTypeID,CT.CargoTopTypeText,
      CT.CargoTypeKindText,CT.CargoTypeText,FP.ProvideDate
      )
      UNION ALL
      (
      SELECT
      AO.ID ORGID,
      AO.Name ORGNAME, --区域
      OL.CargoTypeID CARGOTYPEID,
      CT.CargoTopTypeText  CARGOTOPTYPETEXT,
      CT.CargoTypeKindText  CARGOTYPEKINDTEXT,
      CT.CargoTypeText  CARGOTYPETEXT,
      SO.OutDate PROVIDEDATE,
      OL.Quantity PROVIDEQTY
      FROM StorageOutList OL
      INNER JOIN StorageOut SO ON SO.OutID=OL.OutID
      LEFT JOIN view_CargoType CT ON CT.CargoTypeID=OL.CargoTypeID
      LEFT JOIN AC_Org AO ON AO.ID=SO.OrgID
      GROUP BY AO.ID,AO.Name,OL.CargoTypeID,CT.CargoTopTypeText,CT.CargoTypeKindText,
      CT.CargoTypeText,OL.Quantity,SO.OutDate
      )
      ) Provide
      )

      SELECT * FROM ProvideTotal WHERE 1=1 {0} ORDER BY PROVIDEDATE DESC
    </Content>
    
    
    <Content Key="ReportBadPackageSummary" Desc="不合格包统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      select * from
      (
      select
      o.Name as AREA
      ,ck.KINDNAME--类别
      ,c.CARGOTYPENAME--包类型
      ,pt.PNAME--外包装
      ,fl.BADFLAGDATE --不合格时间
      ,dbo.fun_get_BadFlagReason(fl.BadFlagReason) as BADREASON  -- 坏包原因
      ,SUM(1) as QTY --数量
      ,ISNULL(c.Amount,0.00) AS UNITPRICE--单价
      ,ISNULL(c.Amount,0.00) * COUNT(fp.PackageID) AS TOTALPRICE --总价
      ,fl.FLOWORGID
      from FlowPackageList fl
      inner join FlowPackage f on fl.FPackageID = f.FPackageID
      inner join FlowProvideList fp on fp.PackageID = fl.PackageID
      inner join StorageList sl on fl.StorageID = sl.StorageID
      left join CargoType c on sl.CargoTypeID = c.CargoTypeID
      left join CargoTypeKind ck on c.CargoTypeKind = ck.ID
      left join PackageType pt on fl.PackageTypeID = pt.PTypeID
      left join Warehouse w on w.WarehouseID   = sl.WarehouseID
      left join AC_Org o on o.ID=w.OrgID
      where fl.BadFlag = 1
      group by o.Name,ck.KindName,
      c.CargoTypeName,
      pt.PName,
      fl.BadFlagDate,
      dbo.fun_get_BadFlagReason(fl.BadFlagReason),c.Amount,fl.FLOWORGID
      ) BAD where 1=1 {0}
    </Content>
    <Content Key="ReportBadPackageSummary" Desc="不合格包统计" DataBaseType="Oracle">
      select * from
      (
      select
      o.Name as AREA
      ,ck.KINDNAME--类别
      ,c.CARGOTYPENAME--包类型
      ,pt.PNAME--外包装
      ,fl.BADFLAGDATE --不合格时间
      ,fun_get_BadFlagReason(fl.BadFlagReason) as BADREASON  -- 坏包原因
      ,SUM(1) as QTY --数量
      ,nvl(c.Amount,0.00) AS UNITPRICE--单价
      ,nvl(c.Amount,0.00) * COUNT(fp.PackageID) AS TOTALPRICE --总价
      ,fl.FLOWORGID
      from FlowPackageList fl
      inner join FlowPackage f  on fl.FPackageID = f.FPackageID
      inner join FlowProvideList fp on fp.PackageID = fl.PackageID
      inner join StorageList sl  on fl.StorageID = sl.StorageID
      left join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      left join CargoTypeKind ck  on c.CargoTypeKind = ck.ID
      left join PackageType pt  on fl.PackageTypeID = pt.PTypeID
      left join Warehouse  w  on w.WarehouseID   = sl.WarehouseID
      left join AC_Org o   on o.ID=w.OrgID
      where fl.BadFlag = 1
      group by o.Name,ck.KindName,
      c.CargoTypeName,
      pt.PName,
      fl.BadFlagDate,
      fun_get_BadFlagReason(fl.BadFlagReason),c.Amount,fl.FLOWORGID
      ) BAD where 1=1  {0}
    </Content>

    <Content Key="ReportBadFlagReasonA" Desc="不合格包原因统计" DataBaseType="SqlServer">
      <![CDATA[
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
     select o.Name as ORG_NAME ,CargoTypeKind.KindName C_KINDNAME,sl.BARCODE,c.CargoTypeName C_TYPENAME, sl.QUANTITY, fl.BADFLAGDATE, dbo.fun_get_BadFlagReason(fl.BadFlagReason) BADFLAGREASON
      from FlowPackageList fl WITH (NOLOCK)
      inner join StorageList sl WITH (NOLOCK) on fl.StorageID=sl.StorageID
      left join CargoType c WITH (NOLOCK) on fl.CargoTypeID=c.CargoTypeID
      left join CargoTypeKind WITH (NOLOCK) on c.CargoTypeKind=CargoTypeKind.ID
      left join AC_Org o WITH (NOLOCK) on CargoTypeKind.OrgID=o.ID
      where fl.BadFlag > 0 and BadFlagDate between @begindate and @enddate
       ]]>
    </Content>

    <Content Key="ReportBadFlagReasonB" Desc="不合格包原因统计" DataBaseType="SqlServer">
      <![CDATA[
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
     select o.Name as ORG_NAME ,CargoTypeKind.KindName C_KINDNAME,sl.BARCODE,c.CargoTypeName C_TYPENAME, sl.QUANTITY, fl.BADFLAGDATE, dbo.fun_get_BadFlagReason(fl.BadFlagReason) BADFLAGREASON
      from FlowPackageList fl WITH (NOLOCK)
      inner join StorageList sl WITH (NOLOCK) on fl.StorageID=sl.StorageID
      left join CargoType c WITH (NOLOCK) on fl.CargoTypeID=c.CargoTypeID
      left join CargoTypeKind WITH (NOLOCK) on c.CargoTypeKind=CargoTypeKind.ID
      left join AC_Org o WITH (NOLOCK) on CargoTypeKind.OrgID=o.ID
      where fl.BadFlag > 0 and BadFlagDate between @begindate and @enddate and o.ID=@userid
       ]]>

    </Content>
    <Content Key="ReportBadFlagReasonB" Desc="不合格包原因统计" DataBaseType="Oracle">
      <![CDATA[
     select o.Name as ORG_NAME ,CargoTypeKind.KindName C_KINDNAME,sl.BARCODE,c.CargoTypeName C_TYPENAME, sl.QUANTITY, fl.BADFLAGDATE, dbo.fun_get_BadFlagReason(fl.BadFlagReason) BADFLAGREASON
      from FlowPackageList fl WITH (NOLOCK)
      inner join StorageList sl WITH (NOLOCK) on fl.StorageID=sl.StorageID
      left join CargoType c WITH (NOLOCK) on fl.CargoTypeID=c.CargoTypeID
      left join CargoTypeKind WITH (NOLOCK) on c.CargoTypeKind=CargoTypeKind.ID
      left join AC_Org o WITH (NOLOCK) on CargoTypeKind.OrgID=o.ID
      where fl.BadFlag > 0 and BadFlagDate between  :begindate  and  :enddate  and o.ID=:userid
       ]]>

    </Content>

    <Content Key="ReportBadFlagReasonA" Desc="不合格包原因统计" DataBaseType="Oracle">
      <![CDATA[
       select o.Name as ORG_NAME ,CargoTypeKind.KindName C_KINDNAME,sl.BARCODE,c.CargoTypeName C_TYPENAME, sl.QUANTITY, fl.BADFLAGDATE, dbo.fun_get_BadFlagReason(fl.BadFlagReason) BADFLAGREASON
      from FlowPackageList fl WITH (NOLOCK)
      inner join StorageList sl WITH (NOLOCK) on fl.StorageID=sl.StorageID
      left join CargoType c WITH (NOLOCK) on fl.CargoTypeID=c.CargoTypeID
      left join CargoTypeKind WITH (NOLOCK) on c.CargoTypeKind=CargoTypeKind.ID
      left join AC_Org o WITH (NOLOCK) on CargoTypeKind.OrgID=o.ID
      where fl.BadFlag > 0 and BadFlagDate between  :begindate  and  :enddate
       ]]>
    </Content>

    <Content Key="ReportBadCleanContainerReasonA" Desc="网篮清洗不合格原因统计" DataBaseType="SqlServer">
      <![CDATA[
      select c.CONTAINERNAME,ct.CARGOTYPENAME,fl.CHECKDATE,fd.FQTY,fd.FBADREASON 
      from FlowDisinfectContainerList fl
       left join FlowDisinfectCheckDetail fd on fd.FParentID =fl.ContainerDisinfectLogID 
       left join CargoType ct on ct.CargoTypeID =fd.FCargotypeID 
       left join Container c on c.ContainerID =fl.ContainerID
       where  fl.CheckDate between @begindate and @enddate order by CheckDate desc
 ]]>
    </Content>


    <Content Key="ReportBadCleanContainerReasonB" Desc="网篮清洗不合格原因统计" DataBaseType="SqlServer">
      <![CDATA[
      select c.CONTAINERNAME,ct.CARGOTYPENAME,fl.CHECKDATE,fd.FQTY,fd.FBADREASON 
      from FlowDisinfectContainerList fl
       left join FlowDisinfectCheckDetail fd on fd.FParentID =fl.ContainerDisinfectLogID 
       left join CargoType ct on ct.CargoTypeID =fd.FCargotypeID 
       left join Container c on c.ContainerID =fl.ContainerID
       where  fl.CheckDate between @begindate and @enddate and c.ContainerID =@containerid  order by CheckDate desc
 ]]>
    </Content>

    <Content Key="ReportBadCleanContainerReasonA" Desc="网篮清洗不合格原因统计" DataBaseType="Oracle">
      <![CDATA[
      select c.CONTAINERNAME,ct.CARGOTYPENAME,fl.CHECKDATE,fd.FQTY,fd.FBADREASON 
      from FlowDisinfectContainerList fl
       left join FlowDisinfectCheckDetail fd on fd.FParentID =fl.ContainerDisinfectLogID 
       left join CargoType ct on ct.CargoTypeID =fd.FCargotypeID 
       left join Container c on c.ContainerID =fl.ContainerID
       where fl.CheckDate between  :begindate  and  :enddate order by CheckDate desc
 ]]>
    </Content>


    <Content Key="ReportBadCleanContainerReasonB" Desc="网篮清洗不合格原因统计" DataBaseType="Oracle">
      <![CDATA[
      select c.CONTAINERNAME,ct.CARGOTYPENAME,fl.CHECKDATE,fd.FQTY,fd.FBADREASON 
      from FlowDisinfectContainerList fl
       left join FlowDisinfectCheckDetail fd on fd.FParentID =fl.ContainerDisinfectLogID 
       left join CargoType ct on ct.CargoTypeID =fd.FCargotypeID 
       left join Container c on c.ContainerID =fl.ContainerID
       where  fl.CheckDate between  :begindate  and  :enddate and  c.ContainerID = :containerid  order by CheckDate desc
 ]]>
    </Content>

    <Content Key="ReportPackageConsumeSummary" Desc="辅料消耗统计" DataBaseType="SqlServer">
      <![CDATA[
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      SystemTypeParameter.TypeName AS CARGOTOPTYPETEXT, --种类
      CargoTypeKind.KindName AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品、器械包
      SUM(FlowPackageCargoList.Quantity)  AS PACKAGEQTY
      FROM  FlowPackageCargoList
      INNER JOIN FlowPackage ON FlowPackageCargoList.FPackageID=FlowPackage.FPackageID
      left JOIN CargoType  ON FlowPackageCargoList.CargoTypeID = CargoType.CargoTypeID
      left JOIN SystemTypeParameter ON CargoType.CargoTopType = SystemTypeParameter.TypeValue AND SystemTypeParameter.TypeKey = 'CargoTopType'
      left JOIN CargoTypeKind ON CargoType.CargoTypeKind = CargoTypeKind.ID
      WHERE CargoType.CargoTopType <> 16 AND CargoType.CargoTopType <> 1
      {0}
      GROUP BY
      SystemTypeParameter.TypeName,CargoTypeKind.KindName,CargoType.CargoTypeName
      ]]>
    </Content>
    <Content Key="ReportPackageConsumeSummary" Desc="辅料消耗统计" DataBaseType="Oracle">
    <![CDATA[
     SELECT
      SystemTypeParameter.TypeName AS CARGOTOPTYPETEXT, --种类
      CargoTypeKind.KindName AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品、器械包
      SUM(FlowPackageCargoList.Quantity)  AS PACKAGEQTY
      FROM  FlowPackageCargoList
      INNER JOIN FlowPackage ON FlowPackageCargoList.FPackageID=FlowPackage.FPackageID
      left JOIN CargoType  ON FlowPackageCargoList.CargoTypeID = CargoType.CargoTypeID
      left JOIN SystemTypeParameter ON CargoType.CargoTopType = SystemTypeParameter.TypeValue AND SystemTypeParameter.TypeKey = 'CargoTopType'
      left JOIN CargoTypeKind ON CargoType.CargoTypeKind = CargoTypeKind.ID
      WHERE CargoType.CargoTopType <> 16 AND CargoType.CargoTopType <> 1
      {0}
      GROUP BY
      SystemTypeParameter.TypeName,CargoTypeKind.KindName,CargoType.CargoTypeName
      ]]>
    </Content>


    <Content Key="ReportOrgProvideSummary" Desc="科室发放统计" DataBaseType="SqlServer">
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT * FROM
		(SELECT AO.Name ORGNAME,CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,CT.INCODE,ISNULL(CT.Amount,0) AMOUNT,
		SUM(SL.QUANTITY) QUANTITY,ISNULL(CT.Amount,0)*SUM(SL.QUANTITY) SUMAMOUNT,SO.OutDate PRODATE,AU.FlowOrgID
		FROM StorageOut SO
		INNER JOIN StorageOutList SL ON SO.OutID=SL.OutID
		left JOIN AC_Org AO ON SO.OrgID=AO.ID
		left JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
		left JOIN AC_WorkGroup ProvideUser  on SO.OPID = ProvideUser.FID
		left JOIN AC_UserWorkGroup WG ON ProvideUser.FID=WG.FGroupID
		left JOIN AC_User AU ON WG.FUserID=AU.ID
		WHERE SO.OutType=6
		GROUP BY  AO.Name,CARGOTYPEKINDTEXT,CARGOTYPETEXT,CT.INCODE,AMOUNT,
		QUANTITY,ISNULL(CT.Amount,0)*QUANTITY,SO.OutDate,AU.FlowOrgID
		UNION ALL
		SELECT AO.Name ORGNAME,CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,CT.INCODE,ISNULL(CT.Amount,0) AMOUNT,
		SUM(SL.QUANTITY) QUANTITY,ISNULL(CT.Amount,0)*SUM(SL.QUANTITY) SUMAMOUNT,FP.ProvideDate PRODATE,FP.FlowOrgID
		FROM FlowProvide FP
		INNER JOIN FlowProvideList FL ON FP.ProvideID=FL.ProvideID
		INNER JOIN FlowPackageList PL ON FL.PackageID=PL.PackageID
		INNER JOIN StorageList SL ON PL.StorageID=SL.StorageID
		left JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
		left JOIN AC_Org AO ON FP.OrgID=AO.ID
		GROUP BY  AO.Name,CARGOTYPEKINDTEXT,CARGOTYPETEXT,CT.INCODE,AMOUNT,
		QUANTITY,ISNULL(CT.Amount,0)*QUANTITY,FP.ProvideDate,FP.FlowOrgID ) TEMP
		WHERE 1=1  {0}
	</Content>
    <Content Key="ReportOrgProvideSummary" Desc="科室发放统计" DataBaseType="Oracle">
		SELECT * FROM
		(SELECT AO.Name ORGNAME,CT.CargoTypeKindText CARGOTYPEKINDTEXT,CT.CargoTypeText CARGOTYPETEXT,CT.INCODE,nvl(CT.Amount,0) AMOUNT,
		SUM(SL.QUANTITY) QUANTITY,nvl(CT.Amount,0)*SUM(SL.QUANTITY) SUMAMOUNT,SO.OutDate PRODATE,AU.FlowOrgID
		FROM StorageOut SO
		INNER JOIN StorageOutList SL ON SO.OutID=SL.OutID
		left JOIN AC_Org AO ON SO.OrgID=AO.ID
		left JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
		left JOIN AC_WorkGroup ProvideUser  on SO.OPID = ProvideUser.FID
		left JOIN AC_UserWorkGroup WG ON ProvideUser.FID=WG.FGroupID
		left JOIN AC_User AU ON WG.FUserID=AU.ID
		WHERE SO.OutType=6
		GROUP BY AO.Name,CARGOTYPEKINDTEXT,CARGOTYPETEXT,CT.INCODE,AMOUNT,
		QUANTITY,nvl(CT.Amount,0)*QUANTITY ,SO.OutDate,AU.FlowOrgID
		UNION ALL
		SELECT AO.Name ORGNAME,CT.CargoTypeKindText CARGOTYPEKINDTEXT,CT.CargoTypeText CARGOTYPETEXT,CT.INCODE,nvl(CT.Amount,0) AMOUNT,
		SUM(SL.QUANTITY) QUANTITY,nvl(CT.Amount,0)*SUM(SL.QUANTITY) SUMAMOUNT,FP.ProvideDate PRODATE,FP.FlowOrgID
		FROM FlowProvide FP
		INNER JOIN FlowProvideList FL ON FP.ProvideID=FL.ProvideID
		INNER JOIN FlowPackageList PL ON FL.PackageID=PL.PackageID
		INNER JOIN StorageList SL ON PL.StorageID=SL.StorageID
		left JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
		left JOIN AC_Org AO ON FP.OrgID=AO.ID
		GROUP BY  AO.Name ,CARGOTYPEKINDTEXT,CARGOTYPETEXT,CT.INCODE,AMOUNT,
		QUANTITY,nvl(CT.Amount,0)*QUANTITY ,FP.ProvideDate,FP.FlowOrgID ) TEMP
		WHERE 1=1 {0}
	</Content>
	  <Content Key="ReportOrgProvideSummaryPriceUseInLocation" Desc="科室发放统计（一次性物品价格取入库的单价）" DataBaseType="SqlServer">
		  SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		  SELECT * FROM
		  (SELECT AO.Name ORGNAME,CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,CT.INCODE,ISNULL(StorageList.Price,0) AMOUNT,
		  SUM(SOLSL.Quantity) QUANTITY,ISNULL(StorageList.Price,0)*SUM(SOLSL.Quantity) SUMAMOUNT,SO.OutDate PRODATE,AU.FlowOrgID
		  FROM StorageOut SO
		  INNER JOIN StorageOutList SL ON SO.OutID=SL.OutID
		  INNER JOIN StorageOutListStorageList SOLSL  WITH (NOLOCK)  on SL.Outlistid= SOLSL.Outlistid
		  LEFT JOIN StorageList  WITH (NOLOCK)   on StorageList.StorageID = SOLSL.StorageID
		  left JOIN AC_Org AO ON SO.OrgID=AO.ID
		  left JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
		  left JOIN AC_WorkGroup ProvideUser  on SO.OPID = ProvideUser.FID
		  left JOIN AC_UserWorkGroup WG ON ProvideUser.FID=WG.FGroupID
		  left JOIN AC_User AU ON WG.FUserID=AU.ID
		  WHERE SO.OutType=6
		  GROUP BY  AO.Name,CARGOTYPEKINDTEXT,CARGOTYPETEXT,CT.INCODE,StorageList.Price,
		  SOLSL.Quantity,ISNULL(StorageList.Price,0)*SOLSL.Quantity,SO.OutDate,AU.FlowOrgID
		  UNION ALL
		  SELECT AO.Name ORGNAME,CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,CT.INCODE,ISNULL(CT.Amount,0) AMOUNT,
		  SUM(SL.QUANTITY) QUANTITY,ISNULL(CT.Amount,0)*SUM(SL.QUANTITY) SUMAMOUNT,FP.ProvideDate PRODATE,FP.FlowOrgID
		  FROM FlowProvide FP
		  INNER JOIN FlowProvideList FL ON FP.ProvideID=FL.ProvideID
		  INNER JOIN FlowPackageList PL ON FL.PackageID=PL.PackageID
		  INNER JOIN StorageList SL ON PL.StorageID=SL.StorageID
		  left JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
		  left JOIN AC_Org AO ON FP.OrgID=AO.ID
		  GROUP BY  AO.Name,CARGOTYPEKINDTEXT,CARGOTYPETEXT,CT.INCODE,AMOUNT,
		  QUANTITY,ISNULL(CT.Amount,0)*QUANTITY,FP.ProvideDate,FP.FlowOrgID ) TEMP
		  WHERE 1=1  {0}
	  </Content>
	  <Content Key="ReportOrgProvideSummaryPriceUseInLocation" Desc="科室发放统计（一次性物品价格取入库的单价）" DataBaseType="Oracle">
		  SELECT * FROM
		  (SELECT AO.Name ORGNAME,CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,CT.INCODE,nvl(StorageList.Price,0) AMOUNT,
		  SUM(SOLSL.Quantity) QUANTITY,nvl(StorageList.Price,0)*SUM(SOLSL.Quantity) SUMAMOUNT,SO.OutDate PRODATE,AU.FlowOrgID
		  FROM StorageOut SO
		  INNER JOIN StorageOutList SL ON SO.OutID=SL.OutID
		  INNER JOIN StorageOutListStorageList SOLSL  WITH (NOLOCK)  on SL.Outlistid= SOLSL.Outlistid
		  LEFT JOIN StorageList  WITH (NOLOCK)   on StorageList.StorageID = SOLSL.StorageID
		  left JOIN AC_Org AO ON SO.OrgID=AO.ID
		  left JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
		  left JOIN AC_WorkGroup ProvideUser  on SO.OPID = ProvideUser.FID
		  left JOIN AC_UserWorkGroup WG ON ProvideUser.FID=WG.FGroupID
		  left JOIN AC_User AU ON WG.FUserID=AU.ID
		  WHERE SO.OutType=6
		  GROUP BY  AO.Name,CARGOTYPEKINDTEXT,CARGOTYPETEXT,CT.INCODE,StorageList.Price,
		  SOLSL.Quantity,nvl(StorageList.Price,0)*SOLSL.Quantity,SO.OutDate,AU.FlowOrgID
		  UNION ALL
		  SELECT AO.Name ORGNAME,CT.CargoTypeKindText CARGOTYPEKINDTEXT,CT.CargoTypeText CARGOTYPETEXT,CT.INCODE,nvl(CT.Amount,0) AMOUNT,
		  SUM(SL.QUANTITY) QUANTITY,nvl(CT.Amount,0)*SUM(SL.QUANTITY) SUMAMOUNT,FP.ProvideDate PRODATE,FP.FlowOrgID
		  FROM FlowProvide FP
		  INNER JOIN FlowProvideList FL ON FP.ProvideID=FL.ProvideID
		  INNER JOIN FlowPackageList PL ON FL.PackageID=PL.PackageID
		  INNER JOIN StorageList SL ON PL.StorageID=SL.StorageID
		  left JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
		  left JOIN AC_Org AO ON FP.OrgID=AO.ID
		  GROUP BY  AO.Name ,CARGOTYPEKINDTEXT,CT.INCODE,CARGOTYPETEXT,AMOUNT,
		  QUANTITY,nvl(CT.Amount,0)*QUANTITY ,FP.ProvideDate,FP.FlowOrgID ) TEMP
		  WHERE 1=1 {0}
	  </Content>

    <Content Key="ReportMaterialProvideSummary" Desc="物品发放统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT * FROM
      (SELECT CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,
      SL.QUANTITY,SO.OutDate PRODATE,AU.FlowOrgID
      FROM StorageOut SO
      INNER JOIN StorageOutList SL ON SO.OutID=SL.OutID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
      LEFT JOIN AC_WorkGroup ProvideUser  on SO.OPID = ProvideUser.FID
      LEFT JOIN AC_UserWorkGroup WG ON ProvideUser.FID=WG.FGroupID
      LEFT JOIN AC_User AU ON WG.FUserID=AU.ID
      WHERE SO.OutType=6
      UNION ALL
      SELECT CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,
      SL.QUANTITY,FP.ProvideDate PRODATE,FP.FlowOrgID
      FROM FlowProvide FP
      INNER JOIN FlowProvideList FL ON FP.ProvideID=FL.ProvideID
      INNER JOIN FlowPackageList PL ON FL.PackageID=PL.PackageID
      INNER JOIN StorageList SL ON PL.StorageID=SL.StorageID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID ) TEMP
      WHERE 1=1 {0}
    </Content>
    <Content Key="ReportMaterialProvideSummary" Desc="物品发放统计" DataBaseType="Oracle">
      SELECT * FROM
      (SELECT CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,
      SL.QUANTITY,SO.OutDate PRODATE,AU.FlowOrgID
      FROM StorageOut SO
      INNER JOIN StorageOutList SL ON SO.OutID=SL.OutID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
      LEFT JOIN AC_WorkGroup ProvideUser  on SO.OPID = ProvideUser.FID
      LEFT JOIN AC_UserWorkGroup WG ON ProvideUser.FID=WG.FGroupID
      LEFT JOIN AC_User AU ON WG.FUserID=AU.ID
      WHERE SO.OutType=6
      UNION ALL
      SELECT CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,
      SL.QUANTITY,FP.ProvideDate PRODATE,FP.FlowOrgID
      FROM FlowProvide FP
      INNER JOIN FlowProvideList FL ON FP.ProvideID=FL.ProvideID
      INNER JOIN FlowPackageList PL ON FL.PackageID=PL.PackageID
      INNER JOIN StorageList SL ON PL.StorageID=SL.StorageID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID ) TEMP
      WHERE 1=1 {0}
    </Content>

    <Content Key="ReportMaterialStorageSummary" Desc="物品入库统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,SL.QUANTITY
      ,CONVERT(CHAR(10),SI.INDATE,120) AS INDATE,SL.LOTNUMBER,S.NAME SUPPLIERNAME
      FROM StorageIn SI
      INNER JOIN StorageInList SL ON SI.InID=SL.InID
      LEFT JOIN Supplier S ON SI.SupplierID=S.SupplierID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
      LEFT JOIN AC_WorkGroup ProvideUser  on SI.OPID = ProvideUser.FID
      LEFT JOIN AC_UserWorkGroup WG  ON ProvideUser.FID = WG.FGroupID
      LEFT JOIN AC_User AU  ON WG.FUserID = AU.ID
      WHERE  1=1 {0}
    </Content>
    <Content Key="ReportMaterialStorageSummary" Desc="物品入库统计" DataBaseType="Oracle">
      SELECT CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,SL.QUANTITY
      ,to_char(SI.INDATE,'yyyy-mm-dd') INDATE,SL.LOTNUMBER,S.NAME SUPPLIERNAME
      FROM StorageIn SI
      INNER JOIN StorageInList SL ON SI.InID=SL.InID
      LEFT JOIN Supplier S ON SI.SupplierID=S.SupplierID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
      LEFT JOIN AC_WorkGroup ProvideUser  on SI.OPID = ProvideUser.FID
      LEFT JOIN AC_UserWorkGroup WG  ON ProvideUser.FID = WG.FGroupID
      LEFT JOIN AC_User AU  ON WG.FUserID = AU.ID
      WHERE  1=1 {0}
    </Content>


    <Content Key="ReportUseSummary" Desc="使用统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      UseArea.Name AS AREATEXT, --区域
      CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT, --种类
      CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeText AS CARGOTYPETEXT,--无菌物品
      COUNT(FlowUseList.Quantity) AS QTY, --数量
      FlowUse.UseDate as USEDATE,--使用时间
      ISNULL(CargoType.Amount,0.00) AS UNITPRICE,--单价
      ISNULL(CargoType.Amount,0.00) * COUNT(FlowUse.UseID) AS TOTALPRICE --总价
      ,StorageList.Barcode BARCODE         --包条码
      ,AC_WorkGroup.FNames USERNAME               --使用人
      ,PatientList.PatientName PATIENTNAME --病人
      FROM FlowUse with (nolock)
      INNER JOIN FlowUseList with (nolock)  on FlowUse.UseID = FlowUseList.UseID
      INNER JOIN StorageList with (nolock)  on FlowUseList.StorageID = StorageList.StorageID
      INNER JOIN FlowPackageList with (nolock)  on FlowPackageList.StorageID = StorageList.StorageID
      left JOIN PackageType with (nolock)  on FlowPackageList.packagetypeid = PackageType.PTypeID
      left JOIN AC_ORG AS UseArea with (nolock)  on FlowUse.OrgID = UseArea.ID
      left JOIN view_CargoType AS CargoType with (nolock) ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      left JOIN AC_WorkGroup with (nolock)  on FlowUse.OPID = AC_WorkGroup.FID
      LEFT JOIN PatientList on PatientList.PatientID = FlowUse.PatientID
      WHERE 1 = 1 {0}
      GROUP BY
      UseArea.Name,
      CargoType.CargoTypeText,
      CargoType.CargoTypeKindText,
      CargoType.CargoTopTypeText,CargoType.Amount,FlowUse.UseDate
      ,StorageList.Barcode
      ,AC_WorkGroup.FNames
      ,PatientList.PatientName
      Order By AreaText,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="ReportUseSummary" Desc="使用统计" DataBaseType="Oracle">
      SELECT
      UseArea.Name  AREATEXT,
      CargoType.CargoTopTypeText  CARGOTOPTYPETEXT,
      CargoType.CargoTypeKindText  CARGOTYPEKINDTEXT,
      CargoType.CargoTypeText  CARGOTYPETEXT,
      COUNT(FlowUseList.Quantity)  QTY,
      FlowUse.UseDate as USEDATE,--使用时间
      nvl(CargoType.Amount,0.00) AS UNITPRICE,--单价
      nvl(CargoType.Amount,0.00) * COUNT(FlowUse.UseID) AS TOTALPRICE --总价
      ,StorageList.Barcode BARCODE         --包条码
      ,AC_WorkGroup.FNames USERNAME               --使用人
      ,PatientList.PatientName PATIENTNAME --病人
      FROM FlowUse
      INNER JOIN FlowUseList  on FlowUse.UseID = FlowUseList.UseID
      INNER JOIN StorageList  on FlowUseList.StorageID = StorageList.StorageID
      INNER JOIN FlowPackageList  on FlowPackageList.StorageID = StorageList.StorageID
      left JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      left JOIN AC_ORG  UseArea  on FlowUse.OrgID = UseArea.ID
      left JOIN view_CargoType  CargoType ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      left JOIN AC_WorkGroup  on FlowUse.OPID = AC_WorkGroup.FID
      LEFT JOIN PatientList on PatientList.PatientID = FlowUse.PatientID
      WHERE 1 = 1  {0}
      GROUP BY
      UseArea.Name,
      CargoType.CargoTypeText,
      CargoType.CargoTypeKindText,
      CargoType.CargoTopTypeText,CargoType.Amount,FlowUse.UseDate
      ,StorageList.Barcode
      ,AC_WorkGroup.FNames
      ,PatientList.PatientName
      Order By AreaText,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="ReportFetchSummary" Desc="领取统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT FF.FETCHDATE,L.LOCATIONNAME,WG.FNames OPNAME,AW.FNames RECNAME,CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,COUNT(1) FQTY
      ,CONVERT(char(10),FF.PlanUseDate,120) PLANUSERDATE,ST.TypeName STATUSNAME
      FROM FlowFetch FF
      INNER JOIN FlowFetchList FL ON FF.FetchID=FL.FetchID
      INNER JOIN FlowPackageList FPL ON FL.PackageID=FPL.PackageID
      INNER JOIN StorageList SL ON FPL.StorageID=SL.StorageID
      LEFT JOIN SystemTypeParameter ST ON SL.Status=ST.TypeValue AND ST.TypeKey='StorageStatus'
      LEFT JOIN view_CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      LEFT JOIN AC_WorkGroup WG ON FF.OPID=WG.FID
      LEFT JOIN AC_WorkGroup AW ON FF.RecipientID=AW.FID
      LEFT JOIN AC_OrgUser on AC_OrgUser.UserID =AW .FID
      LEFT JOIN AC_Org on AC_Org .ID =AC_OrgUser .OrgID
      LEFT JOIN Location L ON FF.LocationID=L.LocationID
      WHERE 1=1 {0}
      GROUP BY FF.FetchDate,L.LocationName,WG.FNames,AW.FNames,CT.CargoTypeKindText,CT.CargoTypeText,FF.PlanUseDate,ST.TypeName
      ORDER BY FF.FetchDate DESC
    </Content>
    <Content Key="ReportFetchSummary" Desc="领取统计" DataBaseType="Oracle">
      SELECT FF.FETCHDATE,L.LOCATIONNAME,WG.FNames OPNAME,AW.FNames RECNAME,CT.CARGOTYPEKINDTEXT,CT.CARGOTYPETEXT,COUNT(1) FQTY
      ,to_char(FF.PlanUseDate,'yyyy-mm-dd') PLANUSERDATE,ST.TypeName STATUSNAME
      FROM FlowFetch FF
      INNER JOIN FlowFetchList FL ON FF.FetchID=FL.FetchID
      INNER JOIN FlowPackageList FPL ON FL.PackageID=FPL.PackageID
      INNER JOIN StorageList SL ON FPL.StorageID=SL.StorageID
      LEFT JOIN SystemTypeParameter ST ON SL.Status=ST.TypeValue AND ST.TypeKey='StorageStatus'
      LEFT JOIN view_CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      LEFT JOIN AC_WorkGroup WG ON FF.OPID=WG.FID
      LEFT JOIN AC_WorkGroup AW ON FF.RecipientID=AW.FID
      LEFT JOIN AC_OrgUser on AC_OrgUser.UserID =AW .FID
      LEFT JOIN AC_Org on AC_Org .ID =AC_OrgUser .OrgID
      LEFT JOIN Location L ON FF.LocationID=L.LocationID
      WHERE 1=1 {0}
      GROUP BY FF.FetchDate,L.LocationName,WG.FNames,AW.FNames,CT.CargoTypeKindText,CT.CargoTypeText,FF.PlanUseDate,ST.TypeName
      ORDER BY FF.FetchDate DESC
    </Content>

    //临床预定的无菌包费用统计

    <Content Key="ReportPreOrderSummaryPrice" Desc="预订费用统计" DataBaseType="SqlServer">

      <![CDATA[
     select  a.Name ORGNAME
        ,fp.ORDERDATE
        , ct.CARGOTOPTYPETEXT
        , fp.PreOrderType
        , ct.CARGOTYPEKINDTEXT
        , c.CARGOTYPENAME
        , fpd.PreOrderQty QTY  --数量
        , Isnull(c.amount,0.00) AMOUNT --单价
        , ISNULL(c.amount,0.00) * fpd.PreOrderQty as TOTALPRICE--总价
    from FlowPreOrderDetail fpd
        inner join FlowPreOrder fp on fp.PreOrderID=fpd.PreOrderID
        inner join CargoType c on c.CargoTypeID=fpd.CargoTypeID
        inner join AC_Org a on a.ID=fp.OrgID 
        inner join view_CargoType ct on ct.CargoTypeID=fpd.CargoTypeID
   where fp.CheckStatus=1 and fp.PreOrderType <>0 and fp.OrderDate between @OrderDateBegin and @OrderDateEnd {0}
   order by fp.OrderDate desc
      ]]>
    </Content>

    //临床预定的无菌包费用统计

    <Content Key="ReportPreOrderSummaryPrice" Desc="预订费用统计" DataBaseType="Oracle">

      <![CDATA[
     select  a.Name ORGNAME
        ,fp.ORDERDATE
        , ct.CARGOTOPTYPETEXT
        , fp.PreOrderType
        , ct.CARGOTYPEKINDTEXT
        , c.CARGOTYPENAME
        , fpd.PreOrderQty QTY  --数量
        , nvl(c.amount,0.00) AMOUNT --单价
        , nvl(c.amount,0.00) * fpd.PreOrderQty as TOTALPRICE--总价
    from FlowPreOrderDetail fpd
        inner join FlowPreOrder fp on fp.PreOrderID=fpd.PreOrderID
        inner join CargoType c on c.CargoTypeID=fpd.CargoTypeID
        inner join AC_Org a on a.ID=fp.OrgID 
        inner join view_CargoType ct on ct.CargoTypeID=fpd.CargoTypeID
   where fp.CheckStatus=1 and fp.PreOrderType <>0 and fp.OrderDate between  :OrderDateBegin and  :OrderDateEnd {0}
   order by fp.OrderDate desc
      ]]>
    </Content>
    
    <Content Key="ReportPreOrderSummary" Desc="预订统计" DataBaseType="SqlServer">
      <![CDATA[
	    WITH PreOrder(
      PROVIDEAREATEXT
      ,CARGOTOPTYPETEXT    --种类
      ,CARGOTYPEKINDTEXT   --类别
      ,CARGOTYPETEXT       --无菌物品、器械包
      ,CARGOTYPEID
      ,APPLYQTY            --申请数量
      ,APPROVEDQTY         --批准数量
      ,PROVIDEQTY          --发放数量
      ,CHECKSTATUS)
      AS
      ( --1

      SELECT
      ApplyQ.Name AS PROVIDEAREATEXT
      ,ApplyQ.CargoTopTypeText AS CARGOTOPTYPETEXT   --种类
      ,ApplyQ.CargoTypeKindText AS CARGOTYPEKINDTEXT --类别
      ,ApplyQ.CargoTypeText AS CARGOTYPETEXT         --无菌物品、器械包
      ,ApplyQ.CargoTypeID AS CARGOTYPEID
      ,ApplyQ.ApplyQty AS APPLYQTY                   --申请数量
      ,Approved.ApprovedQty AS APPROVEDQTY           --批准数量
      ,Provide.ProvideQty AS PROVIDEQTY              --发放数量
      ,ApplyQ.CheckStatus AS CHECKSTATUS
      FROM
      (
      SELECT
      AO.Name
      ,CT.CargoTopTypeText  --种类
      ,CT.CargoTypeKindText --类别
      ,CT.CargoTypeText     --无菌物品、器械包
      ,FD.CargoTypeID
      ,isnull(SUM(PreOrderQty),0) ApplyQty  -- 申请数量
      ,FO.CheckStatus
      FROM FlowPreOrder FO 
      INNER JOIN FlowPreOrderDetail FD ON FO.PreOrderID = FD.PreOrderID
      LEFT JOIN view_CargoType CT  ON FD.CargoTypeID = CT.CargoTypeID
      LEFT JOIN AC_Org  AO  ON AO.ID = FO.OrgID
      WHERE FO.OrderDate>=@OrderDateBegin AND FO.OrderDate<=@OrderDateEnd
      GROUP BY AO.Name,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,FD.CargoTypeID,FO.CheckStatus
      ) ApplyQ

      LEFT JOIN
      (
      SELECT
      AO.Name
      ,CT.CargoTopTypeText  --种类
      ,CT.CargoTypeKindText --类别
      ,CT.CargoTypeText     --无菌物品、器械包
      ,FD.CargoTypeID
      ,isnull(SUM(PreOrderQty),0) ApprovedQty  -- 批准数量
      FROM FlowPreOrder FO 
      INNER JOIN FlowPreOrderDetail FD ON FO.PreOrderID = FD.PreOrderID
      LEFT JOIN view_CargoType CT ON FD.CargoTypeID = CT.CargoTypeID
      LEFT JOIN AC_Org AO ON AO.ID = FO.OrgID
      WHERE  FO.CheckStatus=1 AND FO.OrderDate>=@OrderDateBegin AND FO.OrderDate<=@OrderDateEnd
      GROUP BY AO.Name,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,FD.CargoTypeID
      ) Approved
      ON ApplyQ.CargoTypeID = Approved.CargoTypeID and  ApplyQ.name = Approved.name 

      LEFT JOIN
      (

      (SELECT
      AO.Name
      ,CT.CargoTopTypeText  --种类
      ,CT.CargoTypeKindText --类别
      ,CT.CargoTypeText     --无菌物品、器械包
      ,SL.CargoTypeID
      ,isnull(SUM(Quantity),0) ProvideQty  -- 发放数量
      FROM StorageOut SO 
      INNER JOIN StorageOutList SL ON SO.OutID = SL.OutID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID = CT.CargoTypeID
      LEFT JOIN AC_Org AO ON AO.ID = SO.OrgID
      WHERE SO.OutDate>=@OrderDateBegin AND SO.OutDate<=@OrderDateEnd
      GROUP BY AO.Name,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,SL.CargoTypeID
      )
      UNION
      (
      SELECT
      AO.Name
      ,CT.CargoTopTypeText  --种类
      ,CT.CargoTypeKindText --类别
      ,CT.CargoTypeText     --无菌物品、器械包
      ,CT.CargoTypeID
      ,isnull(SUM(SL.Quantity),0) ProvideQty  -- 发放数量
      FROM FlowProvide FP
      INNER JOIN FlowProvideList FL ON FP.ProvideID=FL.ProvideID
      INNER JOIN FlowPackageList PA ON FL.PackageID=PA.PackageID
      INNER JOIN StorageList SL ON PA.StorageID=SL.StorageID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
      LEFT JOIN AC_Org AO ON FP.OrgID=AO.ID
      WHERE FP.ProvideDate>=@OrderDateBegin AND FP.ProvideDate<=@OrderDateEnd 
      GROUP BY AO.Name,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,CT.CargoTypeID)
      ) Provide
      ON ApplyQ.CargoTypeID = Provide.CargoTypeID and ApplyQ.NAME = Provide.NAME
      ) --1 END

      SELECT
      PROVIDEAREATEXT
      ,CT.CARGOTOPTYPETEXT
      ,CT.CARGOTYPEKINDTEXT
      ,CT.CARGOTYPETEXT
      ,CT.CARGOTYPEID
      ,isnull(APPLYQTY,0) APPLYQTY
      ,isnull(APPROVEDQTY,0) APPROVEDQTY
      ,isnull(PROVIDEQTY,0) PROVIDEQTY
      ,CHECKSTATUS
      ,CT.UNIT ,CT.MINUNIT
      FROM PreOrder
      left JOIN view_CargoType CT ON CT.CargoTypeID=PreOrder.CARGOTYPEID
      WHERE 1=1 {0}
      GROUP BY PROVIDEAREATEXT,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,CT.CargoTypeID,
      APPLYQTY,APPROVEDQTY,PROVIDEQTY,CHECKSTATUS,CT.UNIT ,CT.MINUNIT
      ORDER BY PROVIDEAREATEXT,CT.CargoTypeText
   
      ]]>

    </Content>

    <Content Key="ReportPreOrderSummary" Desc="预订统计" DataBaseType="Oracle">

      <![CDATA[
	    WITH PreOrder
      AS
      ( --1

      SELECT
      ApplyQ.Name AS PROVIDEAREATEXT
      ,ApplyQ.CargoTopTypeText AS CARGOTOPTYPETEXT   --种类
      ,ApplyQ.CargoTypeKindText AS CARGOTYPEKINDTEXT --类别
      ,ApplyQ.CargoTypeText AS CARGOTYPETEXT         --无菌物品、器械包
      ,ApplyQ.CargoTypeID AS CARGOTYPEID
      ,ApplyQ.ApplyQty AS APPLYQTY                   --申请数量
      ,Approved.ApprovedQty AS APPROVEDQTY           --批准数量
      ,Provide.ProvideQty AS PROVIDEQTY              --发放数量
      ,ApplyQ.CheckStatus AS CHECKSTATUS
      FROM
      (
      SELECT
      AO.Name
      ,CT.CargoTopTypeText  --种类
      ,CT.CargoTypeKindText --类别
      ,CT.CargoTypeText     --无菌物品、器械包
      ,FD.CargoTypeID
      ,nvl(SUM(PreOrderQty),0) ApplyQty  -- 申请数量
      ,FO.CheckStatus
      FROM FlowPreOrder FO 
      INNER JOIN FlowPreOrderDetail FD ON FO.PreOrderID = FD.PreOrderID
      LEFT JOIN view_CargoType CT  ON FD.CargoTypeID = CT.CargoTypeID
      LEFT JOIN AC_Org  AO  ON AO.ID = FO.OrgID
      WHERE FO.OrderDate>=:OrderDateBegin AND FO.OrderDate<=:OrderDateEnd
      GROUP BY AO.Name,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,FD.CargoTypeID,FO.CheckStatus
      ) ApplyQ

      LEFT JOIN
      (
      SELECT
      AO.Name
      ,CT.CargoTopTypeText  --种类
      ,CT.CargoTypeKindText --类别
      ,CT.CargoTypeText     --无菌物品、器械包
      ,FD.CargoTypeID
      ,nvl(SUM(PreOrderQty),0) ApprovedQty  -- 批准数量
      FROM FlowPreOrder FO 
      INNER JOIN FlowPreOrderDetail FD ON FO.PreOrderID = FD.PreOrderID
      LEFT JOIN view_CargoType CT ON FD.CargoTypeID = CT.CargoTypeID
      LEFT JOIN AC_Org AO ON AO.ID = FO.OrgID
      WHERE  FO.CheckStatus=1 AND FO.OrderDate>=:OrderDateBegin AND FO.OrderDate<=:OrderDateEnd
      GROUP BY AO.Name,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,FD.CargoTypeID
      ) Approved
      ON ApplyQ.CargoTypeID = Approved.CargoTypeID and  ApplyQ.name = Approved.name 

      LEFT JOIN
      (

      (SELECT
      AO.Name
      ,CT.CargoTopTypeText  --种类
      ,CT.CargoTypeKindText --类别
      ,CT.CargoTypeText     --无菌物品、器械包
      ,SL.CargoTypeID
      ,nvl(SUM(Quantity),0) ProvideQty  -- 发放数量
      FROM StorageOut SO 
      INNER JOIN StorageOutList SL ON SO.OutID = SL.OutID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID = CT.CargoTypeID
      LEFT JOIN AC_Org AO ON AO.ID = SO.OrgID
      WHERE SO.OutDate>=:OrderDateBegin AND SO.OutDate<=:OrderDateEnd
      GROUP BY AO.Name,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,SL.CargoTypeID
      )
      UNION
      (
      SELECT
      AO.Name
      ,CT.CargoTopTypeText  --种类
      ,CT.CargoTypeKindText --类别
      ,CT.CargoTypeText     --无菌物品、器械包
      ,CT.CargoTypeID
      ,nvl(SUM(SL.Quantity),0) ProvideQty  -- 发放数量
      FROM FlowProvide FP
      INNER JOIN FlowProvideList FL ON FP.ProvideID=FL.ProvideID
      INNER JOIN FlowPackageList PA ON FL.PackageID=PA.PackageID
      INNER JOIN StorageList SL ON PA.StorageID=SL.StorageID
      LEFT JOIN view_CargoType CT ON SL.CargoTypeID=CT.CargoTypeID
      LEFT JOIN AC_Org AO ON FP.OrgID=AO.ID
      WHERE FP.ProvideDate>=:OrderDateBegin AND FP.ProvideDate<=:OrderDateEnd 
      GROUP BY AO.Name,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,CT.CargoTypeID)
      ) Provide
      ON ApplyQ.CargoTypeID = Provide.CargoTypeID and ApplyQ.NAME = Provide.NAME
      ) --1 END

      SELECT
      PROVIDEAREATEXT
      ,CT.CARGOTOPTYPETEXT
      ,CT.CARGOTYPEKINDTEXT
      ,CT.CARGOTYPETEXT
      ,CT.CARGOTYPEID
      ,nvl(APPLYQTY,0) APPLYQTY
      ,nvl(APPROVEDQTY,0) APPROVEDQTY
      ,nvl(PROVIDEQTY,0) PROVIDEQTY
      ,CHECKSTATUS
      ,CT.UNIT ,CT.MINUNIT
      FROM PreOrder
      LEFT JOIN view_CargoType CT ON CT.CargoTypeID=PreOrder.CARGOTYPEID
      WHERE 1=1 {0}
      GROUP BY PROVIDEAREATEXT,CT.CargoTopTypeText,CT.CargoTypeKindText,CT.CargoTypeText,CT.CargoTypeID,
      APPLYQTY,APPROVEDQTY,PROVIDEQTY,CHECKSTATUS,CT.UNIT ,CT.MINUNIT
      ORDER BY PROVIDEAREATEXT,CT.CargoTypeText
   
      ]]>

    </Content>


    <Content Key="BorrowPackageSummary" Desc="借包统计" DataBaseType="SqlServer">
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		Select CONVERT(CHAR(10),t2.PROVIDEDATE,120) AS PROVIDEDATE,t4.Name As ORGNAME,t3.CARGOTYPEKINDTEXT,t3.CARGOTYPETEXT,
		t1.QUANTITY,t1.RETURNQUANTITY,t2.RECIPIENT
		From FlowProvideLend t1
		Inner Join FlowProvide t2 On t1.ProvideID = t2.ProvideID 
		left Join view_CargoType t3 On t1.CargoTypeID = t3.CargoTypeID
		Inner Join AC_Org t4 On t4.ID=t2.OrgID
		Where 1=1 {0}
	</Content>

    <Content Key="BorrowPackageSummary" Desc="借包统计" DataBaseType="Oracle">
		Select to_char(t2.PROVIDEDATE,'yyyy-mm-dd') PROVIDEDATE,t4.Name As ORGNAME,t3.CARGOTYPEKINDTEXT,t3.CARGOTYPETEXT,
		t1.QUANTITY,t1.RETURNQUANTITY,t2.RECIPIENT
		From FlowProvideLend t1
		Inner Join FlowProvide t2 On t1.ProvideID = t2.ProvideID
		left Join view_CargoType t3 On t1.CargoTypeID = t3.CargoTypeID
		Inner Join AC_Org t4 On t4.ID=t2.OrgID
		Where 1=1 {0}
	</Content>

    <Content Key="ReportStockSummary" Desc="库存统计" DataBaseType="SqlServer">
      <![CDATA[
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
        WarehouseName AS WAREHOUSETEXT
      , CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT --种类
      , CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT--类别
      , CargoType.CargoTypeText AS CARGOTYPETEXT--无菌物品
      , CargoType.CargoTopType CARGOTOPTYPE
      , CargoType.CargoTypeKind AS CARGOTYPEKIND
      , CargoType.CargoTypeID AS CARGOTYPEID
      , SUM(QUANTITY) AS  QTY -- 数量
      FROM View_StorageList AS StorageList with (nolock)
      LEFT JOIN view_CargoType AS CargoType with (nolock)
      ON StorageList.CargoTypeID = CargoType.CargoTypeID
      WHERE Quantity>0 
      AND ((CargoType.CargoTopType = 16 AND STATUS IN (40,50,60))-- 灭菌包 & 已发放
      OR CargoType.CargoTopType <> 16)
      {0}
      GROUP BY WarehouseName,CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText,CargoType.CargoTypeText
      ,CargoType.CargoTypeID, CargoType.CargoTypeKind
      ,CargoType.CargoTopType
      Order BY WarehouseName,CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText,CargoType.CargoTypeText
      ]]>
    </Content>
    <Content Key="ReportStockSummary" Desc="库存统计" DataBaseType="Oracle">
      <![CDATA[
     SELECT
        WarehouseName  WAREHOUSETEXT
      , CargoType.CargoTopTypeText CARGOTOPTYPETEXT
      , CargoType.CargoTypeKindText CARGOTYPEKINDTEXT
      , CargoType.CargoTypeText CARGOTYPETEXT
      , CargoType.CargoTopType CARGOTOPTYPE
      , CargoType.CargoTypeKind CARGOTYPEKIND
      , CargoType.CargoTypeID CARGOTYPEID
      , SUM(QUANTITY)  QTY 
      FROM View_StorageList  StorageList
      LEFT JOIN view_CargoType  CargoType
      ON StorageList.CargoTypeID = CargoType.CargoTypeID
      WHERE Quantity>0 
      AND ((CargoType.CargoTopType = 16 AND STATUS IN (40,50,60))
      OR CargoType.CargoTopType <> 16)
      {0}
      GROUP BY WarehouseName,CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText,CargoType.CargoTypeText
      ,CargoType.CargoTypeID, CargoType.CargoTypeKind
      ,CargoType.CargoTopType
      Order BY WarehouseName,CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText,CargoType.CargoTypeText
      ]]>
    </Content>

    <Content Key="StockInSummary" Desc="入库统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      SITYPE.TYPENAME AS INTYPETEXT
      ,SIL.CARGOTYPEID
      ,CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT
      ,CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT
      ,CargoType.CargoTypeText AS CARGOTYPETEXT
      ,W.WAREHOUSEID
      ,W.WAREHOUSENAME AS WAREHOUSETEXT
      ,SUM(SIL.QUANTITY) AS QTY
      FROM STORAGEIN SI
      INNER JOIN STORAGEINLIST SIL ON SI.INID = SIL.INID
      INNER JOIN AC_WorkGroup U ON SI.OPID = U.FID
      LEFT JOIN view_CargoType AS CargoType  ON SIL.CARGOTYPEID = CargoType.CARGOTYPEID
      LEFT JOIN WAREHOUSE W ON SIL.WAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L ON SIL.LOCATIONID = L.LOCATIONID
      LEFT JOIN MANUFACTURER  M ON SIL.MANUFACTURERID=M.MANUFACTURERID
      INNER JOIN SYSTEMTYPEPARAMETER SITYPE
      ON SI.InType = SITYPE.TYPEVALUE AND SITYPE.TYPEKEY = 'StorageInType'
      WHERE 1=1 {0}
      GROUP BY SITYPE.TYPENAME,SIL.CARGOTOPTYPE,SIL.CARGOTYPEID
      ,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText
      ,CargoType.CargoTypeText,W.WAREHOUSEID,W.WAREHOUSENAME
      ORDER BY WareHouseText
      ,CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText
      ,CargoType.CargoTypeText
      ,InTypeText
    </Content>
    <Content Key="StockInSummary" Desc="入库统计" DataBaseType="Oracle">
      SELECT
      SITYPE.TYPENAME  INTYPETEXT
      ,SIL.CARGOTYPEID
      ,CargoType.CargoTopTypeText CARGOTOPTYPETEXT
      ,CargoType.CargoTypeKindText CARGOTYPEKINDTEXT
      ,CargoType.CargoTypeText CARGOTYPETEXT
      ,W.WAREHOUSEID
      ,W.WAREHOUSENAME  WAREHOUSETEXT
      ,SUM(SIL.QUANTITY)  QTY
      FROM STORAGEIN SI
      INNER JOIN STORAGEINLIST SIL   ON SI.INID = SIL.INID
      INNER JOIN AC_WorkGroup U  ON SI.OPID = U.FID
      LEFT JOIN view_CargoType  CargoType  ON SIL.CARGOTYPEID = CargoType.CARGOTYPEID
      INNER JOIN WAREHOUSE W  ON SIL.WAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L  ON SIL.LOCATIONID = L.LOCATIONID
      LEFT JOIN MANUFACTURER  M   ON SIL.MANUFACTURERID=M.MANUFACTURERID
      INNER JOIN SYSTEMTYPEPARAMETER SITYPE
      ON SI.InType = SITYPE.TYPEVALUE AND SITYPE.TYPEKEY = 'StorageInType'
      WHERE 1=1 {0}
      GROUP BY SITYPE.TYPENAME,SIL.CARGOTOPTYPE,SIL.CARGOTYPEID
      ,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText
      ,CargoType.CargoTypeText,W.WAREHOUSEID,W.WAREHOUSENAME
      ORDER BY WareHouseText
      ,CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText
      ,CargoType.CargoTypeText
      ,InTypeText
    </Content>

    <Content Key="StockOutSummary" Desc="出库统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      SITYPE.TYPENAME AS  OUTTYPETEXT
      ,CargoType.CargoTopTypeText AS CARGOTOPTYPETEXT
      ,CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT
      ,CargoType.CargoTypeText AS CARGOTYPETEXT
      ,W.WAREHOUSEID
      ,W.WAREHOUSENAME AS  WAREHOUSETEXT
      ,SUM(SOL.QUANTITY) AS  QTY
      FROM STORAGEOUT SO
      INNER JOIN STORAGEOUTLIST SOL  ON SO.OUTID = SOL.OUTID
      INNER JOIN STORAGELIST SL  ON SOL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_WorkGroup U ON SO.OPID = U.FID
      LEFT JOIN view_CargoType AS CargoType ON SL.CARGOTYPEID = CargoType.CARGOTYPEID
      LEFT JOIN WAREHOUSE W ON SO.WAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L ON SL.LOCATIONID = L.LOCATIONID
      LEFT JOIN MANUFACTURER  M ON SL.MANUFACTURERID=M.MANUFACTURERID
      LEFT JOIN SYSTEMTYPEPARAMETER SITYPE ON SO.OutType = SITYPE.TYPEVALUE AND SITYPE.TYPEKEY = 'StorageOutType'
      LEFT JOIN WAREHOUSE ORG ON SO.ORGID = ORG.WAREHOUSEID
      LEFT JOIN SUPPLIER ON SO.ORGID = SUPPLIER.SupplierID
      WHERE 1 = 1
      {0}
      GROUP BY SITYPE.TYPENAME,SOL.CARGOTOPTYPE,SOL.CARGOTYPEID
      ,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText
      ,CargoType.CargoTypeText,W.WAREHOUSEID,W.WAREHOUSENAME
      ORDER BY WareHouseText
      ,CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText
      ,CargoType.CargoTypeText
      ,OutTypeText
    </Content>
    <Content Key="StockOutSummary" Desc="出库统计" DataBaseType="Oracle">
      SELECT
      SITYPE.TYPENAME  OUTTYPETEXT
      ,CargoType.CargoTopTypeText CARGOTOPTYPETEXT
      ,CargoType.CargoTypeKindText CARGOTYPEKINDTEXT
      ,CargoType.CargoTypeText CARGOTYPETEXT
      ,W.WAREHOUSEID
      ,W.WAREHOUSENAME  WAREHOUSETEXT
      ,SUM(SOL.QUANTITY)  QTY
      FROM STORAGEOUT SO
      INNER JOIN STORAGEOUTLIST SOL   ON SO.OUTID = SOL.OUTID
      INNER JOIN STORAGELIST SL  ON SOL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_WorkGroup U  ON SO.OPID = U.FID
      LEFT JOIN view_CargoType  CargoType  ON SL.CARGOTYPEID = CargoType.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON SO.WAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L  ON SL.LOCATIONID = L.LOCATIONID
      LEFT JOIN MANUFACTURER  M   ON SL.MANUFACTURERID=M.MANUFACTURERID
      LEFT JOIN SYSTEMTYPEPARAMETER SITYPE  ON SO.OutType = SITYPE.TYPEVALUE AND SITYPE.TYPEKEY = 'StorageOutType'
      LEFT JOIN WAREHOUSE ORG  ON SO.ORGID = ORG.WAREHOUSEID
      LEFT JOIN SUPPLIER  ON SO.ORGID = SUPPLIER.SupplierID
      WHERE 1 = 1
      {0}
      GROUP BY SITYPE.TYPENAME,SOL.CARGOTOPTYPE,SOL.CARGOTYPEID
      ,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText
      ,CargoType.CargoTypeText,W.WAREHOUSEID,W.WAREHOUSENAME
      ORDER BY WareHouseText
      ,CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKindText
      ,CargoType.CargoTypeText
      ,OutTypeText
    </Content>

    <Content Key="StockExpireSummary" Desc=" 有效期统计 " DataBaseType="SqlServer">
      <![CDATA[
      select * from

      (

      SELECT

      C.WAREHOUSENAME,D.LOCATIONNAME,CARGOTYPE.CargoTypeKindText AS CARGOTYPEKINDTEXT

      , CARGOTYPE.CargoTypeText AS CARGOTYPETEXT

      , Convert(char(10), A.EXPDATE ,120) AS EXPDATE

      , Datediff(DAY,GETDATE(),A.EXPDate) AS VALIDDATEDAYS

      , B.WarningDays AS WARNINGDAYS

      , SUM(A.QUANTITY) AS QUANTITY

      , P.FLOWORGID

      FROM STORAGELIST A with (nolock)

      LEFT JOIN CARGOTYPE B with (nolock) ON A.CARGOTYPEID = B.CARGOTYPEID

      LEFT JOIN view_CargoType CARGOTYPE  with (nolock) ON CARGOTYPE.CargoTypeID = B.CARGOTYPEID

      LEFT JOIN Warehouse  C with (nolock) on A.WarehouseID = C.WarehouseID

      LEFT JOIN Location D with (nolock) on D.LocationID = C.WarehouseID

      INNER JOIN FLOWPACKAGELIST P with (nolock) on a.Storageid = p.Storageid

      WHERE  A.CargoTopType = 16 AND A.STATUS IN (50,60) AND A.EXPDATE IS NOT NULL {0}

      GROUP BY C.WAREHOUSENAME,D.LOCATIONNAME,CARGOTYPE.CargoTypeKindText

      , CARGOTYPE.CargoTypeText

      , Convert(char(10), A.EXPDATE ,120)

      , Datediff(DAY,GETDATE(),A.EXPDate)

      , B.WarningDays

      , P.FLOWORGID

      ) TOTALDATE 
      
      ]]>

    </Content>

    <Content Key="StockExpireSummary" Desc=" 有效期统计 " DataBaseType="Oracle">
      <![CDATA[
      select * from

      (

      SELECT

      C.WAREHOUSENAME,D.LOCATIONNAME,CARGOTYPE.CargoTypeKindText CARGOTYPEKINDTEXT

      , CARGOTYPE.CargoTypeText AS CARGOTYPETEXT

      , to_char(A.EXPDATE,'yyyy-mm-dd') AS EXPDATE

      , datediff('D',sysdate,A.EXPDate) as VALIDDATEDAYS

      , B.WarningDays AS WARNINGDAYS

      , SUM(A.QUANTITY) AS  QUANTITY

      , P.FLOWORGID

      FROM STORAGELIST A

      LEFT JOIN CARGOTYPE B  ON A.CARGOTYPEID = B.CARGOTYPEID

      LEFT JOIN view_CargoType CARGOTYPE ON CARGOTYPE.CargoTypeID = B.CARGOTYPEID

      LEFT JOIN Warehouse  C on A.WarehouseID = C.WarehouseID

      LEFT JOIN Location D on D.LocationID = C.WarehouseID

      INNER JOIN FLOWPACKAGELIST P on a.Storageid = p.Storageid

      WHERE A.CargoTopType = 16 AND A.STATUS IN (50,60) AND A.EXPDATE IS NOT NULL {0}

      GROUP BY C.WAREHOUSENAME,D.LOCATIONNAME,CARGOTYPE.CargoTypeKindText

      , CARGOTYPE.CargoTypeText

      , to_char(A.EXPDATE,'yyyy-mm-dd')

      , datediff('D',sysdate,A.EXPDate)

      , B.WarningDays

      , P.FLOWORGID

      ) TOTALDATE
      ]]>
    </Content>


    <Content Key="ReportProvideChartGrid" Desc="发放分析统计" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      Area.Name AS AREATEXT, --区域
      --dbo.fun_get_Date(ProvideDate,@SummaryType) AS [Date],--月份
      CargoTopType.TypeName AS CARGOTOPTYPETEXT,--种类
      CargoTypeKind.KindName AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品
      PackageType.PName AS OUTPACKING,--外包装
      FlowProvide.ProvideDate AS PROVIDEDATE,--日期
      1 AS QTY--数量
      FROM FlowProvideList with (nolock)
      INNER JOIN FlowProvide with (nolock)  on FlowProvide.ProvideID = FlowProvideList.ProvideID
      INNER JOIN FlowPackageList with (nolock)  on FlowProvideList.PackageID = FlowPackageList.PackageID
      LEFT JOIN PackageType with (nolock)  on FlowPackageList.packagetypeid = PackageType.PTypeID
      LEFT JOIN AC_ORG AS Area with (nolock)  on FlowProvide.OrgID = Area.ID
      LEFT JOIN CargoType with (nolock)  on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind with (nolock) ON CargoType.CargoTypeKind = CargoTypeKind.ID
      LEFT JOIN SystemTypeParameter AS CargoTopType with (nolock) ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
      LEFT JOIN FlowSterilizationList with (nolock)  on FlowSterilizationList.PackageID = FlowPackageList.PackageID
      LEFT JOIN DevicesUseLog with (nolock)  on FlowSterilizationList.SterilizationLogID = DevicesUseLog.LogID
      LEFT JOIN Devices with (nolock)  on DevicesUseLog.DeviceID = Devices.DeviceID
      INNER JOIN StorageList  with (nolock) on FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN AC_WorkGroup with (nolock)  on FlowProvide.OPID = AC_WorkGroup.FID
      Where 1 = 1  {0} -- 可能需要震泽及其下属所有科室
      Order By AreaText,CargoTypeText
    </Content>

    <Content Key="ReportProvideChartGrid" Desc="发放分析统计" DataBaseType="Oracle">
      SELECT
      Area.Name AS AREATEXT, --区域
      --dbo.fun_get_Date(ProvideDate,@SummaryType) AS [Date],--月份
      CargoTopType.TypeName AS CARGOTOPTYPETEXT,--种类
      CargoTypeKind.KindName AS CARGOTYPEKINDTEXT,--类别
      CargoType.CargoTypeName AS CARGOTYPETEXT,--无菌物品
      PackageType.PName AS OUTPACKING,--外包装
      FlowProvide.ProvideDate AS PROVIDEDATE,--日期
      1 AS QTY--数量
      FROM FlowProvideList
      INNER JOIN FlowProvide  on FlowProvide.ProvideID = FlowProvideList.ProvideID
      INNER JOIN FlowPackageList  on FlowProvideList.PackageID = FlowPackageList.PackageID
      LEFT JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      LEFT JOIN AC_ORG  Area  on FlowProvide.OrgID = Area.ID
      LEFT JOIN CargoType  on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind ON CargoType.CargoTypeKind = CargoTypeKind.ID
      LEFT JOIN SystemTypeParameter  CargoTopType ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
      LEFT JOIN FlowSterilizationList  on FlowSterilizationList.PackageID = FlowPackageList.PackageID
      LEFT JOIN DevicesUseLog  on FlowSterilizationList.SterilizationLogID = DevicesUseLog.LogID
      LEFT JOIN Devices  on DevicesUseLog.DeviceID = Devices.DeviceID
      INNER JOIN StorageList  on FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN AC_WorkGroup  on FlowProvide.OPID = AC_WorkGroup.FID
      Where 1 = 1 {0}
      Order By AreaText,CargoTypeText
    </Content>

    <Content Key="ReportRecycleGrid" Desc="回收报表" DataBaseType="SqlServer">
      --回收统计
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      RecycleUser.FNames as RECYCLEUSERNAME, --回收人员
      CargoType.CargoTypeText AS CARGOTYPETEXT, --器械包类型
      FlowRecycle.RecycleDate as RECYCLEDATE, --回收日期
      Case when FlowRecycle.FISPDADATA = 0 then '供应室' when FlowRecycle.FISPDADATA = 1 then 'PDA' end as FISPDA,--回收方式
      SenderUser.FNames as SENDERUSERNAME, --科室人员（交接人）
      RecycleOrg.Name AS RECYCLEORGTEXT,--科室名称
      1   AS RECYCLEQTY, --数量
      CargoType.InstrumentsNumber AS INSTRUMENTSNUMBER
      FROM FlowRecycleList
      INNER JOIN FlowRecycle ON FlowRecycle.FRecycleID = FlowRecycleList.FRecycleID
      INNER JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      LEFT JOIN view_CargoType as CargoType ON FlowPackageList.CargoTypeID  = CargoType.CargoTypeID
      INNER JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org AS RecycleOrg WITH (NOLOCK) ON Warehouse.OrgID = RecycleOrg.ID
      LEFT JOIN AC_WorkGroup AS RecycleUser WITH (NOLOCK) ON FlowRecycle.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup AS SenderUser WITH (NOLOCK) ON FlowRecycle.SENDERID = SenderUser.FID
      WHERE 1 = 1 {0}
    </Content>
    <Content Key="ReportRecycleGrid" Desc="回收报表" DataBaseType="Oracle">
      SELECT
      RecycleUser.FNames as RECYCLEUSERNAME, --回收人员
      CargoType.CargoTypeText AS CARGOTYPETEXT, --器械包类型
      FlowRecycle.RecycleDate as RECYCLEDATE, --回收日期
      Case when FlowRecycle.FISPDADATA = 0 then '供应室' when FlowRecycle.FISPDADATA = 1 then 'PDA' end as FISPDA,--回收方式
      SenderUser.FNames as SENDERUSERNAME, --科室人员（交接人）
      RecycleOrg.Name AS RECYCLEORGTEXT,--科室名称
      1   AS RECYCLEQTY, --数量
      CargoType.InstrumentsNumber AS INSTRUMENTSNUMBER
      FROM FlowRecycleList
      INNER JOIN FlowRecycle ON FlowRecycle.FRecycleID = FlowRecycleList.FRecycleID
      INNER JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      LEFT JOIN view_CargoType   CargoType ON FlowPackageList.CargoTypeID  = CargoType.CargoTypeID
      INNER JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org   RecycleOrg   ON Warehouse.OrgID = RecycleOrg.ID
      LEFT JOIN AC_WorkGroup  RecycleUser  ON FlowRecycle.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup   SenderUser  ON FlowRecycle.SENDERID = SenderUser.FID
      WHERE 1 = 1 {0}
    </Content>
	  <Content Key="ReportRecycleFetchGrid" Desc="回收交接报表" DataBaseType="SqlServer">
      --回收交接统计
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      RecycleUser.FNames as RECYCLEUSERNAME, --回收人员
      CargoType.CargoTypeText AS CARGOTYPETEXT, --器械包类型
      FlowRecycleFetch.RecycleDate as RECYCLEDATE, --回收日期
      Case when FlowRecycleFetch.FISPDADATA = 0 then '供应室' when FlowRecycleFetch.FISPDADATA = 1 then 'PDA' end as FISPDA,--回收方式
      SenderUser.FNames as SENDERUSERNAME, --科室人员（交接人）
      RecycleOrg.Name AS RECYCLEORGTEXT,--科室名称
      SUM(1)   AS RECYCLEQTY, --数量
      CargoType.InstrumentsNumber AS INSTRUMENTSNUMBER
      FROM FlowRecycleFetchList WITH (NOLOCK)
      INNER JOIN FlowRecycleFetch WITH (NOLOCK) ON FlowRecycleFetch.FRecycleFetchID = FlowRecycleFetchList.FRecycleFetchID
      INNER JOIN FlowPackageList WITH (NOLOCK) ON FlowRecycleFetchList.PackageID = FlowPackageList.PackageID
      LEFT JOIN view_CargoType AS CargoType WITH (NOLOCK) ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN StorageList WITH (NOLOCK) ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse WITH (NOLOCK) ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org AS RecycleOrg WITH (NOLOCK) ON Warehouse.OrgID = RecycleOrg.ID
      --LEFT JOIN AC_User AS RecycleUser WITH (NOLOCK) ON FlowRecycleFetch.OPID = RecycleUser.ID
      LEFT JOIN AC_WorkGroup AS RecycleUser WITH (NOLOCK) ON FlowRecycleFetch.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup AS SenderUser WITH (NOLOCK) ON FlowRecycleFetch.SENDERID = SenderUser.FID
      WHERE 1 = 1 {0}
      GROUP BY
      RecycleUser.FNames,CargoType.CargoTypeText,FlowRecycleFetch.RecycleDate,FlowRecycleFetch.FIsPdaData,SenderUser.FNames,RecycleOrg.Name,CargoType.InstrumentsNumber
    </Content>
	  <Content Key="ReportRecycleFetchGrid" Desc="回收交接报表" DataBaseType="Oracle">
      SELECT
      RecycleUser.FNames as RECYCLEUSERNAME, --回收人员
      CargoType.CargoTypeText AS CARGOTYPETEXT, --器械包类型
      FlowRecycleFetch.RecycleDate as RECYCLEDATE, --回收日期
      Case when FlowRecycleFetch.FISPDADATA = 0 then '供应室' when FlowRecycleFetch.FISPDADATA = 1 then 'PDA' end as FISPDA,--回收方式
      SenderUser.FNames as SENDERUSERNAME, --科室人员（交接人）
      RecycleOrg.Name AS RECYCLEORGTEXT,--科室名称
      SUM(1)   AS RECYCLEQTY, --数量
      CargoType.InstrumentsNumber AS INSTRUMENTSNUMBER
      FROM FlowRecycleFetchList
      INNER JOIN FlowRecycleFetch  ON FlowRecycleFetch.FRecycleFetchID = FlowRecycleFetchList.FRecycleFetchID
      INNER JOIN FlowPackageList  ON FlowRecycleFetchList.PackageID = FlowPackageList.PackageID
      LEFT JOIN view_CargoType   CargoType  ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN StorageList  ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse  ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org   RecycleOrg  ON Warehouse.OrgID = RecycleOrg.ID
      --LEFT JOIN AC_User   RecycleUser  ON FlowRecycleFetch.OPID = RecycleUser.ID
      LEFT JOIN AC_WorkGroup  RecycleUser  ON FlowRecycleFetch.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup   SenderUser  ON FlowRecycleFetch.SENDERID = SenderUser.FID
      WHERE 1 = 1 {0}
      GROUP BY
      RecycleUser.FNames,CargoType.CargoTypeText,FlowRecycleFetch.RecycleDate,FlowRecycleFetch.FIsPdaData,SenderUser.FNames,RecycleOrg.Name,CargoType.InstrumentsNumber
    </Content>
	  <Content Key="ReportRecycleFetchLostGrid" Desc="回收交接报表" DataBaseType="SqlServer">
      SELECT
      RecycleUser.FNames as RECYCLEUSERNAME, --回收人员
      CargoType.CargoTypeText AS CARGOTYPETEXT, --器械包类型
      CargoTypeLost.CargoTypeText AS CARGOTYPELOSTTEXT, --器械包类型
      FlowRecycleFetch.RecycleDate as RECYCLEDATE, --回收日期
      SenderUser.FNames as SENDERUSERNAME, --科室人员（交接人）
      RecycleOrg.Name AS RECYCLEORGTEXT,--科室名称
      SUM(fl.Quantity)   AS RECYCLEQTY  --数量
      FROM FlowRecycleFetchList WITH (NOLOCK)
      INNER JOIN FlowRecycleFetch WITH (NOLOCK) ON FlowRecycleFetch.FRecycleFetchID = FlowRecycleFetchList.FRecycleFetchID
      INNER JOIN FlowPackageList WITH (NOLOCK) ON FlowRecycleFetchList.PackageID = FlowPackageList.PackageID
      LEFT JOIN view_CargoType AS CargoType WITH (NOLOCK) ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN StorageList WITH (NOLOCK) ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse WITH (NOLOCK) ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org AS RecycleOrg WITH (NOLOCK) ON Warehouse.OrgID = RecycleOrg.ID
      LEFT join FlowRecycleFetchLostList fl on fl.FRecycleFetchID=FlowRecycleFetchList.FRecycleFetchID and fl.PackageID=FlowRecycleFetchList.PackageID
      LEFT JOIN view_CargoType AS CargoTypeLost WITH (NOLOCK) ON fl.CargoTypeID = CargoTypeLost.CargoTypeID
      LEFT JOIN AC_WorkGroup AS RecycleUser WITH (NOLOCK) ON FlowRecycleFetch.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup AS SenderUser WITH (NOLOCK) ON FlowRecycleFetch.SENDERID = SenderUser.FID
      WHERE 1 = 1 {0}
      GROUP BY
      RecycleUser.FNames,CargoType.CargoTypeText,CargoTypelost.CargoTypeText,FlowRecycleFetch.RecycleDate,SenderUser.FNames,RecycleOrg.Name
      order by FlowRecycleFetch.RecycleDate desc
    </Content>
	  <Content Key="ReportRecycleFetchLostGrid" Desc="回收交接报表" DataBaseType="Oracle">
      SELECT
      RecycleUser.FNames as RECYCLEUSERNAME, --回收人员
      CargoType.CargoTypeText AS CARGOTYPETEXT, --器械包类型
      CargoTypeLost.CargoTypeText AS CARGOTYPELOSTTEXT, --器械包类型
      FlowRecycleFetch.RecycleDate as RECYCLEDATE, --回收日期
      SenderUser.FNames as SENDERUSERNAME, --科室人员（交接人）
      RecycleOrg.Name AS RECYCLEORGTEXT,--科室名称
      SUM(fl.Quantity)   AS RECYCLEQTY  --数量
      FROM FlowRecycleFetchList
      INNER JOIN FlowRecycleFetch  ON FlowRecycleFetch.FRecycleFetchID = FlowRecycleFetchList.FRecycleFetchID
      INNER JOIN FlowPackageList  ON FlowRecycleFetchList.PackageID = FlowPackageList.PackageID
      LEFT JOIN view_CargoType   CargoType  ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      INNER JOIN StorageList  ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse  ON StorageList.WarehouseID = Warehouse.WarehouseID
      LEFT JOIN AC_Org   RecycleOrg  ON Warehouse.OrgID = RecycleOrg.ID
      Left join FlowRecycleFetchLostList fl on fl.FRecycleFetchID=FlowRecycleFetchList.FRecycleFetchID and fl.PackageID=FlowRecycleFetchList.PackageID
      LEFT JOIN view_CargoType  CargoTypeLost  ON fl.CargoTypeID = CargoTypeLost.CargoTypeID
      LEFT JOIN AC_WorkGroup   RecycleUser  ON FlowRecycleFetch.OPID = RecycleUser.FID
      LEFT JOIN AC_WorkGroup  SenderUser  ON FlowRecycleFetch.SENDERID = SenderUser.FID
      WHERE 1 = 1 {0}
      GROUP BY
      RecycleUser.FNames,CargoType.CargoTypeText,CargoTypelost.CargoTypeText,FlowRecycleFetch.RecycleDate,SenderUser.FNames,RecycleOrg.Name
      order by FlowRecycleFetch.RecycleDate desc
    </Content>
    <Content Key="ReportProvideGrid" Desc="发放报表" DataBaseType="SqlServer">
      <![CDATA[
        select awp.FNames PROVIDENAME,ct.CargoTypeName CARGOTYPETEXT,summary.PROVIDEDATE,summary.FISPDA,awo.FNames RECIPIENTNAME,ao.Name AREATEXT,lt.LocationName,summary.LENDFLAG,summary.QTY from (
              SELECT AC_WorkGroup.FID ProviderID ,-- 发放人员
		        CargoType.CargoTypeID , --器械包类型
		        CONVERT(CHAR(20),FlowProvide.ProvideDate,120) AS PROVIDEDATE, --发放日期
		        Case when FlowProvide.FISPDADATA = 0 then '供应室' when FlowProvide.FISPDADATA = 1 then 'PDA' end as FISPDA,--发放方式
		        us.FID as OrgUserID, -- 科室人员（交接人）
		        Area.ID AS OrgID, --科室名称
		        case FlowPackageList.LendFlag when 0 then '否' when 1 then '是' End as LENDFLAG,--是否借用
		        FlowProvide.LocationID,
		        COUNT(1) AS QTY--数量
              FROM FlowProvideList WITH (NOLOCK)
              INNER JOIN FlowProvide WITH (NOLOCK)  on FlowProvide.ProvideID = FlowProvideList.ProvideID
              INNER JOIN FlowPackageList WITH (NOLOCK)  on FlowProvideList.PackageID = FlowPackageList.PackageID
              LEFT JOIN PackageType WITH (NOLOCK)  on FlowPackageList.packagetypeid = PackageType.PTypeID
              LEFT JOIN AC_ORG AS Area WITH (NOLOCK)  on FlowProvide.OrgID = Area.ID
              LEFT JOIN CargoType WITH (NOLOCK)  on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
              LEFT JOIN CargoTypeKind WITH (NOLOCK) ON CargoType.CargoTypeKind = CargoTypeKind.ID
              LEFT JOIN SystemTypeParameter AS CargoTopType WITH (NOLOCK) ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
              LEFT JOIN FlowSterilizationList WITH (NOLOCK)  on FlowSterilizationList.PackageID = FlowPackageList.PackageID
              LEFT JOIN DevicesUseLog  WITH (NOLOCK) on FlowSterilizationList.SterilizationLogID = DevicesUseLog.LogID
              LEFT JOIN Devices WITH (NOLOCK)  on DevicesUseLog.DeviceID = Devices.DeviceID
              INNER JOIN StorageList WITH (NOLOCK)  on FlowPackageList.StorageID = StorageList.StorageID
              --LEFT JOIN AC_User  WITH (NOLOCK) on FlowProvide.OPID = AC_User.ID
              LEFT JOIN AC_WorkGroup  WITH (NOLOCK) on FlowProvide.OPID = AC_WorkGroup.FID
              LEFT JOIN AC_WorkGroup us  WITH (NOLOCK) on FlowProvide.RECIPIENTID = us.FID
              Where 1 = 1 {0}  -- 可能需要震泽及其下属所有科室
              Group By
              AC_WorkGroup.FID,-- 发放人员
              CargoType.CargoTypeID, --器械包类型
              FlowProvide.ProvideDate, --发放日期
              FlowProvide.FISPDADATA,--发放方式
              us.FID, -- 科室人员（交接人）
              Area.ID, --科室名称
              FlowPackageList.LendFlag--是否借用
              ,FlowProvide.LocationID
        ) summary
        Left Join AC_WorkGroup awp on awp.FID=summary.ProviderID
        Left Join CargoType ct on ct.CargoTypeID=summary.CargoTypeID
        Left Join AC_WorkGroup awo on awo.FID=summary.OrgUserID
        Left Join AC_Org ao on ao.ID=summary.OrgID
        Left Join Location lt on lt.LocationID=summary.LocationID
      ]]>
    </Content>
    <Content Key="ReportProvideGrid" Desc="发放报表" DataBaseType="Oracle">
      <![CDATA[
        select awp.FNames PROVIDENAME,ct.CargoTypeName CARGOTYPETEXT,summary.PROVIDEDATE,summary.FISPDA,awo.FNames RECIPIENTNAME,ao.Name AREATEXT,lt.LocationName,summary.LENDFLAG,summary.QTY from (
              SELECT AC_WorkGroup.FID ProviderID ,-- 发放人员
		        CargoType.CargoTypeID , --器械包类型
		        to_char(FlowProvide.ProvideDate,'yyyy-MM-DD') AS PROVIDEDATE, --发放日期
		        Case when FlowProvide.FISPDADATA = 0 then '供应室' when FlowProvide.FISPDADATA = 1 then 'PDA' end as FISPDA,--发放方式
		        us.FID as OrgUserID, -- 科室人员（交接人）
		        Area.ID AS OrgID, --科室名称
		        case FlowPackageList.LendFlag when 0 then '否' when 1 then '是' End as LENDFLAG,--是否借用
		        FlowProvide.LocationID,
		        COUNT(1) AS QTY--数量
              FROM FlowProvideList 
              INNER JOIN FlowProvide   on FlowProvide.ProvideID = FlowProvideList.ProvideID
              INNER JOIN FlowPackageList   on FlowProvideList.PackageID = FlowPackageList.PackageID
              LEFT JOIN PackageType   on FlowPackageList.packagetypeid = PackageType.PTypeID
              LEFT JOIN AC_ORG Area   on FlowProvide.OrgID = Area.ID
              LEFT JOIN CargoType   on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
              LEFT JOIN CargoTypeKind  ON CargoType.CargoTypeKind = CargoTypeKind.ID
              LEFT JOIN SystemTypeParameter  CargoTopType  ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
              LEFT JOIN FlowSterilizationList   on FlowSterilizationList.PackageID = FlowPackageList.PackageID
              LEFT JOIN DevicesUseLog   on FlowSterilizationList.SterilizationLogID = DevicesUseLog.LogID
              LEFT JOIN Devices   on DevicesUseLog.DeviceID = Devices.DeviceID
              INNER JOIN StorageList   on FlowPackageList.StorageID = StorageList.StorageID
              --LEFT JOIN AC_User   on FlowProvide.OPID = AC_User.ID
              LEFT JOIN AC_WorkGroup   on FlowProvide.OPID = AC_WorkGroup.FID
              LEFT JOIN AC_WorkGroup us   on FlowProvide.RECIPIENTID = us.FID
              Where 1 = 1 {0}  -- 可能需要震泽及其下属所有科室
              Group By
              AC_WorkGroup.FID,-- 发放人员
              CargoType.CargoTypeID, --器械包类型
              FlowProvide.ProvideDate, --发放日期
              FlowProvide.FISPDADATA,--发放方式
              us.FID, -- 科室人员（交接人）
              Area.ID, --科室名称
              FlowPackageList.LendFlag--是否借用
              ,FlowProvide.LocationID
        ) summary
        Left Join AC_WorkGroup awp on awp.FID=summary.ProviderID
        Left Join CargoType ct on ct.CargoTypeID=summary.CargoTypeID
        Left Join AC_WorkGroup awo on awo.FID=summary.OrgUserID
        Left Join AC_Org ao on ao.ID=summary.OrgID
        Left Join Location lt on lt.LocationID=summary.LocationID
      ]]>
    </Content>
	  <Content Key="ReportProvideNotConfirmGrid" Desc="发放未确认报表" DataBaseType="SqlServer">
		  <![CDATA[
      SELECT
      Area.Name  AREATEXT,
    AC_WorkGroup.Fnames as PROVIDENAME,
    CONVERT(CHAR(20),FlowProvide.ProvideDate,120) AS PROVIDEDATE, --发放日期
    Case when FlowProvide.FISPDADATA = 0 then '供应室' when FlowProvide.FISPDADATA = 1 then 'PDA' end as FISPDA,--发放方式
      l.LOCATIONNAME,
      StorageList.barcode BARCODE,       
      ct.CargoTypeText  CARGOTYPETEXT,
	  1 QTY
      FROM FlowProvideList
      INNER JOIN FlowProvide  on FlowProvide.ProvideID = FlowProvideList.ProvideID
      INNER JOIN FlowPackageList  on FlowProvideList.PackageID = FlowPackageList.PackageID 
      left join view_cargotype ct on ct.cargotypeid=FlowPackageList.Cargotypeid
      LEFT JOIN AC_ORG  Area  on FlowProvide.OrgID = Area.ID 
      INNER JOIN StorageList  on FlowPackageList.StorageID = StorageList.StorageID  
      Left join Location l  on FlowProvide.LocationID = l.LocationID
      LEFT JOIN AC_WorkGroup    on FlowProvide.OPID = AC_WorkGroup.FID
      Where   FlowProvideList.status=0  {0}
      Order By AreaText,CargoTypeText,providedate desc
      ]]>
	  </Content>
	  <Content Key="ReportProvideNotConfirmGrid" Desc="发放未确认报表" DataBaseType="Oracle">
		  <![CDATA[
      SELECT
      Area.Name  AREATEXT,
    AC_WorkGroup.Fnames as PROVIDENAME,
    to_char(FlowProvide.ProvideDate,'yyyy-MM-DD') AS PROVIDEDATE, --发放日期
    Case when FlowProvide.FISPDADATA = 0 then '供应室' when FlowProvide.FISPDADATA = 1 then 'PDA' end as FISPDA,--发放方式
      l.LOCATIONNAME,
      StorageList.barcode BARCODE,       
      ct.CargoTypeText  CARGOTYPETEXT,
	  1 QTY
      FROM FlowProvideList
      INNER JOIN FlowProvide  on FlowProvide.ProvideID = FlowProvideList.ProvideID
      INNER JOIN FlowPackageList  on FlowProvideList.PackageID = FlowPackageList.PackageID 
      left join view_cargotype ct on ct.cargotypeid=FlowPackageList.Cargotypeid
      LEFT JOIN AC_ORG  Area  on FlowProvide.OrgID = Area.ID 
      INNER JOIN StorageList  on FlowPackageList.StorageID = StorageList.StorageID  
      Left join Location l  on FlowProvide.LocationID = l.LocationID
      LEFT JOIN AC_WorkGroup    on FlowProvide.OPID = AC_WorkGroup.FID
      Where   FlowProvideList.status=0  {0}
      Order By AreaText,CargoTypeText,providedate desc
      ]]>
	  </Content>
    <Content Key="QueryDeviceTrack" Desc="设备的追溯" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      select distinct
      fl.PACKAGEID,
      fl.STORAGEID,
      sl.MAEDate as PACKAGEDATE,
      uu.FNames as FLOWPACKAGELISTUSERNAME,
      fl.USEDATE ,
      SBADFLAG.TypeName AS BADFLAGSHOW,
      fl.VALIDDATE,
      sl.EXPDATE,
      l.LOCATIONNAME,
      sl.STATUS,
      SSTATUS.TypeName AS STORAGESTATUS,
      sl.Barcode as STORAGEBARCODE,
      c.CargoTypeName as CARGOTYPENAME,
      ddul.begindate as WASHDATE,
      sdul.BEGINDATE
      from StorageList sl inner join FlowPackageList fl on sl.StorageID = fl.StorageID
      inner join CargoType c on fl.CargoTypeID = c.CargoTypeID
      left join AC_WorkGroup uu ON FL.UserID = uu.FID
      inner join SystemTypeParameter SBADFLAG ON FL.BadFlag = SBADFLAG.TypeValue AND SBADFLAG.TypeKey = 'QualifiedNO'
      left join Location l on sl.LocationID = l.LocationID
      inner join SystemTypeParameter SSTATUS ON SL.Status = SSTATUS.TypeValue AND SSTATUS.TypeKey = 'StorageStatus'
      left join FlowPackageListDisinfect fld on fl.PackageID= fld.PackageID
      left join FlowDisinfectContainerList fdc on fdc.FRecycleID = fld.FRecycleID
      left join FlowDisinfect fd on fd.FDisinfectID = fdc.FDisinfectID
      left join DevicesUseLog ddul on fd.LogID = ddul.LogID
      left join Devices dd on ddul.DeviceID = dd.DeviceID
      left join AC_WorkGroup du on ddul.UserID = du.FID
      left join FlowSterilizationList fsl on fl.PackageID = fsl.PackageID
      left join DevicesUseLog sdul on fsl.SterilizationLogID = sdul.LogID
      left join Devices sd on sdul.DeviceID = sd.DeviceID
      left join AC_WorkGroup su on sdul.UserID = su.FID Where 1=1 {0}
    </Content>
    <Content Key="QueryDeviceTrack" Desc="设备的追溯" DataBaseType="Oracle">
      select distinct
      fl.PACKAGEID,
      fl.STORAGEID,
      sl.MAEDate as PACKAGEDATE,
      uu.FNames as FLOWPACKAGELISTUSERNAME,
      fl.USEDATE ,
      SBADFLAG.TypeName AS BADFLAGSHOW,
      fl.VALIDDATE,
      sl.EXPDATE,
      l.LOCATIONNAME,
      sl.STATUS,
      SSTATUS.TypeName AS STORAGESTATUS,
      sl.Barcode as STORAGEBARCODE,
      c.CargoTypeName as CARGOTYPENAME,
      ddul.begindate as WASHDATE,
      sdul.BEGINDATE
      from StorageList sl inner join FlowPackageList fl on sl.StorageID = fl.StorageID
      inner join CargoType c on fl.CargoTypeID = c.CargoTypeID
      left join AC_WorkGroup uu ON FL.UserID = uu.FID
      inner join SystemTypeParameter SBADFLAG ON FL.BadFlag = SBADFLAG.TypeValue AND SBADFLAG.TypeKey = 'QualifiedNO'
      left join Location l on sl.LocationID = l.LocationID
      inner join SystemTypeParameter SSTATUS ON SL.Status = SSTATUS.TypeValue AND SSTATUS.TypeKey = 'StorageStatus'
      left join FlowPackageListDisinfect fld on fl.PackageID= fld.PackageID
      left join FlowDisinfectContainerList fdc on fdc.FRecycleID = fld.FRecycleID
      left join FlowDisinfect fd on fd.FDisinfectID = fdc.FDisinfectID
      left join DevicesUseLog ddul on fd.LogID = ddul.LogID
      left join Devices dd on ddul.DeviceID = dd.DeviceID
      left join AC_WorkGroup du on ddul.UserID = du.FID
      left join FlowSterilizationList fsl on fl.PackageID = fsl.PackageID
      left join DevicesUseLog sdul on fsl.SterilizationLogID = sdul.LogID
      left join Devices sd on sdul.DeviceID = sd.DeviceID
      left join AC_WorkGroup su on sdul.UserID = su.FID Where 1=1 {0}
    </Content>

    <Content Key="SummaryStockPackageApproximate" Desc="备包数" DataBaseType="SqlServer">
      <![CDATA[
        select A.ORGID,O.NAME AS ORGNAME,A.CARGOTYPEID,C.CARGOTYPENAME
		        ,(A.RECYCLEQTY - A.PROVIDEQTY) as SUPPLYQTY
		        ,(A.RECYCLEQTY - A.PROVIDEQTY + A.QTY - A.LOSTQTY) as SUMQTY
		        ,A.LOSTQTY
		        ,A.QTY
		        ,ISNULL(S.BASEQTY,0) as BASEQTY
            ,A.USEQTY
        FROM
        (	
          select ORGID,CARGOTYPEID
					  ,SUM(PROVIDEQTY) AS PROVIDEQTY
					  ,SUM(RECYCLEQTY) AS RECYCLEQTY
					  ,SUM(LOSTQTY) AS LOSTQTY
					  ,SUM(QTY) AS QTY
            ,SUM(USEQTY) AS USEQTY
			    FROM 
			    (
	          select fpv.OrgID as ORGID,pl.CARGOTYPEID,COUNT(1) as PROVIDEQTY,0 as RECYCLEQTY,0 as LOSTQTY,0 as QTY,0 as USEQTY
	          from FlowProvide fpv with (nolock) 
			          inner join FlowProvideList fpvl with (nolock) on fpv.ProvideID = fpvl.ProvideID
			          inner join FlowPackageList pl with (nolock) on fpvl.PackageID = pl.PackageID
	          WHERE pl.IsTemp = 0
	          group by fpv.OrgID,pl.CARGOTYPEID
	          union all
	          select w.OrgID as ORGID,pl.CARGOTYPEID,0 AS PROVIDEQTY,count(1) as RECYCLEQTY,sum(case pl.IsTemp when 1 THEN 1 ELSE 0 END) as LOSTQTY,0 AS QTY,0 as USEQTY
	          from FlowRecycleList frl with (nolock)
			          inner join FlowPackageList pl with (nolock) on frl.PackageID = pl.PackageID
			          inner join StorageList sl with (nolock) on pl.StorageID = sl.StorageID
			          inner join Warehouse w with (nolock) on sl.WarehouseID = w.WarehouseID	          where IsTemp = 1 or IsTemp = 0
	          group by w.OrgID,pl.CARGOTYPEID		
          union all
	          select w.OrgID as ORGID,pl.CARGOTYPEID,0 AS PROVIDEQTY,0 as RECYCLEQTY,0 as LOSTQTY,COUNT(1) AS QTY,sum(case sl.status when 70 then 1 else 0 end ) as USEQTY
	          from FlowPackageList pl with (nolock) 
			          inner join StorageList sl with (nolock) on pl.StorageID = sl.StorageID
			          inner join Warehouse w with (nolock) on sl.WarehouseID = w.WarehouseID
	          where sl.Status in (60,70)
	          group by w.OrgID,pl.CARGOTYPEID
          ) B
	        GROUP BY ORGID,CARGOTYPEID
        ) 
        A LEFT JOIN SAFESTOCK S with (nolock) on (A.ORGID = S.OrgID AND A.CargoTypeID = S.CargoTypeID)
          INNER JOIN CARGOTYPE C with (nolock) on (A.CARGOTYPEID = C.CARGOTYPEID)
          INNER JOIN AC_ORG O with (nolock) on (A.ORGID = O.ID)
          LEFT JOIN CargoTypeKind K with (nolock) on (C.CargoTypeKind = K.ID)
        where 1 = 1 {0}
      ]]>
    </Content>
    <Content Key="SummaryStockPackageApproximate" Desc="备包数" DataBaseType="Oracle">
      <![CDATA[
       select A.ORGID,O.NAME AS ORGNAME,A.CARGOTYPEID,C.CARGOTYPENAME
		        ,(A.RECYCLEQTY - A.PROVIDEQTY) as SUPPLYQTY
		        ,(A.RECYCLEQTY - A.PROVIDEQTY + A.QTY - A.LOSTQTY) as SUMQTY
		        ,A.LOSTQTY
		        ,A.QTY
		        ,nvl(S.BASEQTY,0) as BASEQTY
            ,A.USEQTY
        FROM
        (	
          select ORGID,CARGOTYPEID
					  ,SUM(PROVIDEQTY) AS PROVIDEQTY
					  ,SUM(RECYCLEQTY) AS RECYCLEQTY
					  ,SUM(LOSTQTY) AS LOSTQTY
					  ,SUM(QTY) AS QTY
            ,SUM(USEQTY) AS USEQTY
			    FROM 
			    (
	          select fpv.OrgID as ORGID,pl.CARGOTYPEID,COUNT(1) as PROVIDEQTY,0 as RECYCLEQTY,0 as LOSTQTY,0 as QTY,0 as USEQTY
	          from FlowProvide fpv 
			          inner join FlowProvideList fpvl on fpv.ProvideID = fpvl.ProvideID
			          inner join FlowPackageList pl on fpvl.PackageID = pl.PackageID
	          WHERE pl.IsTemp = 0
	          group by fpv.OrgID,pl.CARGOTYPEID
	          union all
	          select w.OrgID as ORGID,pl.CARGOTYPEID,0 AS PROVIDEQTY,count(1) as RECYCLEQTY,sum(case pl.IsTemp when 1 THEN 1 ELSE 0 END) as LOSTQTY,0 AS QTY,0 as USEQTY
	          from FlowRecycleList frl
			          inner join FlowPackageList pl on frl.PackageID = pl.PackageID
			          inner join StorageList sl on pl.StorageID = sl.StorageID
			          inner join Warehouse w on sl.WarehouseID = w.WarehouseID
	          where IsTemp = 1 or IsTemp = 0
	          group by w.OrgID,pl.CARGOTYPEID		
	          union all
	          select w.OrgID as ORGID,pl.CARGOTYPEID,0 AS PROVIDEQTY,0 as RECYCLEQTY,0 as LOSTQTY,COUNT(1) AS QTY,sum(case sl.status when 70 then 1 else 0 end ) as USEQTY
	          from FlowPackageList pl 
			          inner join StorageList sl on pl.StorageID = sl.StorageID
			          inner join Warehouse w on sl.WarehouseID = w.WarehouseID
	          where sl.Status in (60,70)
	          group by w.OrgID,pl.CARGOTYPEID
          ) B
	        GROUP BY ORGID,CARGOTYPEID
        ) 
        A LEFT JOIN SAFESTOCK S on (A.ORGID = S.OrgID AND A.CargoTypeID = S.CargoTypeID)
          INNER JOIN CARGOTYPE C on (A.CARGOTYPEID = C.CARGOTYPEID)
          INNER JOIN AC_ORG O on (A.ORGID = O.ID)
          LEFT JOIN CargoTypeKind K on (C.CargoTypeKind = K.ID)
        where 1 = 1 {0}
      ]]>
    </Content>

    <Content Key="SummaryStockPackage" Desc="器械包" DataBaseType="SqlServer">
      <![CDATA[
      select * from 
      (SELECT SL.STORAGEID,C.CARGOTYPENAME,C.CARGOTOPTYPE,C.CARGOTYPEKIND,SL.BARCODE,SL.QUANTITY,L.LOCATIONNAME,W.WAREHOUSENAME,ST.TypeName AS STATUSNAME,Datediff(DAY,GETDATE(),SL.EXPDate) AS EXPIREDAYS,SL.EXPDATE
      FROM STORAGELIST SL WITH (NOLOCK) INNER JOIN CARGOTYPE C WITH (NOLOCK) ON SL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGELIST FPL WITH (NOLOCK) ON SL.STORAGEID = FPL.STORAGEID
      INNER JOIN LOCATION L WITH (NOLOCK) ON SL.LOCATIONID = L.LOCATIONID
      INNER JOIN WAREHOUSE W WITH (NOLOCK) ON SL.WAREHOUSEID = W.WAREHOUSEID
      INNER JOIN SystemTypeParameter ST WITH (NOLOCK) ON SL.Status = ST.TypeValue AND ST.TypeKey = 'StorageStatus'
      WHERE SL.Status <> 20 and SL.Status <1000 and FPL.ISTEMP <> 99 AND FPL.ISTEMP <> 1) Stock where 1=1 {0}
      ]]>
    </Content>
    <Content Key="SummaryStockPackage" Desc="器械包" DataBaseType="Oracle">
      <![CDATA[
      select * from 
      (SELECT SL.STORAGEID,C.CARGOTYPENAME,C.CARGOTOPTYPE,C.CARGOTYPEKIND,SL.BARCODE,SL.QUANTITY,L.LOCATIONNAME,W.WAREHOUSENAME,ST.TypeName AS STATUSNAME,datediff('D',SL.EXPDate,sysdate) AS EXPIREDAYS,SL.EXPDATE
      FROM STORAGELIST SL  INNER JOIN CARGOTYPE C  ON SL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGELIST FPL  ON SL.STORAGEID = FPL.STORAGEID
      INNER JOIN LOCATION L  ON SL.LOCATIONID = L.LOCATIONID
      INNER JOIN WAREHOUSE W  ON SL.WAREHOUSEID = W.WAREHOUSEID
      INNER JOIN SystemTypeParameter ST  ON SL.Status = ST.TypeValue AND ST.TypeKey = 'StorageStatus'
      WHERE SL.Status <> 20 and SL.Status <1000 and FPL.ISTEMP <> 99 AND FPL.ISTEMP <> 1 ) where 1=1 {0}
      ]]>
    </Content>

    <Content Key="GetFlowDisinfectDevices" Desc="清洗消毒追溯" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT pl.PACKAGEID
      ,fdcl.CHECKID
      ,uchecker.FNames as FLOWRECYCLECONTAINERCHECKNAME
      ,fdcl.CHECKDATE
      ,c.CONTAINERNAME
      ,fdcl.WASHTYPE
      ,stpwashtype.TypeName as  WASHTYPENAME
      ,dl.LOGID
      ,udluser.FNames as CLEANUSERNAME
      ,d.DeviceName as FLOWRECYCLECONTAINERLOGNAME
      ,fdcl.STATUS
      ,stpcontainerstatus.TYPENAME AS CONTAINERSTATUS
      ,sl.Barcode as STORAGEBARCODE
      ,ct.CARGOTYPENAME
      ,fdcl.WASHDATE
      ,isnull(prule.RuleName,'') as RULENAME
      ,w.WAREHOUSENAME
      ,pluser.FNames as FLOWPACKAGELISTUSERNAME
      ,pstatus.TypeName as STATUSNAME
      ,pl.PATIENTID
      ,Patient.PATIENTNAME
      FROM
      FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner JOIN FLOWPACKAGELISTDISINFECT pld ON pld.PACKAGEID = pl.PACKAGEID
      inner join FlowDisinfectContainerList fdcl on pld.FRecycleID = fdcl.FRecycleID
      inner join DevicesUseLog dl on fdcl.DeviceLogID = dl.LogID
      inner join Devices d on dl.DeviceID = d.DeviceID
      inner join Container c on fdcl.ContainerID = c.ContainerID
      inner join CargoType ct on pl.CargoTypeID = ct.CargoTypeID
      left join AC_WorkGroup uchecker on fdcl.CheckID = uchecker.FID
      left join SYSTEMTYPEPARAMETER stpwashtype on stpwashtype.typevalue = fdcl.WASHTYPE  and stpwashtype.TYPEKEY='WashType'
      left join AC_WorkGroup udluser on dl.UserID = udluser.FID
      left join SystemTypeParameter stpcontainerstatus on stpcontainerstatus.TypeValue = fdcl.STATUS and stpcontainerstatus.TYPEKEY='ContainerStatus'
      LEFT JOIN DEVICEPROCESSRULE prule ON dl.DEVICEPROCESSRULEID = prule.RULEID
      left join Warehouse w on pl.LastWarehouseID = w.WarehouseID
      left join AC_WorkGroup pluser on pl.UserID = pluser.FID
      left join SystemTypeParameter pstatus on pstatus.TypeValue = sl.Status and pstatus.TypeKey = 'StorageStatus'
      left join PatientList Patient on pl.PatientID =Patient.PatientID
      WHERE 1=1 {0}
    </Content>
    <Content Key="GetFlowDisinfectDevices" Desc="清洗消毒追溯" DataBaseType="Oracle">
      SELECT pl.PACKAGEID
      ,fdcl.CHECKID
      ,uchecker.FNames as FLOWRECYCLECONTAINERCHECKNAME
      ,fdcl.CHECKDATE
      ,c.CONTAINERNAME
      ,fdcl.WASHTYPE
      ,stpwashtype.TypeName as  WASHTYPENAME
      ,dl.LOGID
      ,udluser.FNames as CLEANUSERNAME
      ,d.DeviceName as FLOWRECYCLECONTAINERLOGNAME
      ,fdcl.STATUS
      ,stpcontainerstatus.TYPENAME AS CONTAINERSTATUS
      ,sl.Barcode as STORAGEBARCODE
      ,ct.CARGOTYPENAME
      ,fdcl.WASHDATE
      ,nvl(prule.RuleName,'') as RULENAME
      ,w.WAREHOUSENAME
      ,pluser.FNames as FLOWPACKAGELISTUSERNAME
      ,pstatus.TypeName as STATUSNAME
      ,pl.PATIENTID
      ,Patient.PATIENTNAME
      FROM
      FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner JOIN FLOWPACKAGELISTDISINFECT pld ON pld.PACKAGEID = pl.PACKAGEID
      inner join FlowDisinfectContainerList fdcl on pld.FRecycleID = fdcl.FRecycleID
      inner join DevicesUseLog dl on fdcl.DeviceLogID = dl.LogID
      inner join Devices d on dl.DeviceID = d.DeviceID
      inner join Container c on fdcl.ContainerID = c.ContainerID
      inner join CargoType ct on pl.CargoTypeID = ct.CargoTypeID
      left join AC_WorkGroup uchecker on fdcl.CheckID = uchecker.FID
      left join SYSTEMTYPEPARAMETER stpwashtype on stpwashtype.typevalue = fdcl.WASHTYPE  and stpwashtype.TYPEKEY='WashType'
      left join AC_WorkGroup udluser on dl.UserID = udluser.FID
      left join SystemTypeParameter stpcontainerstatus on stpcontainerstatus.TypeValue = fdcl.STATUS and stpcontainerstatus.TYPEKEY='ContainerStatus'
      LEFT JOIN DEVICEPROCESSRULE prule ON dl.DEVICEPROCESSRULEID = prule.RULEID
      left join Warehouse w on pl.LastWarehouseID = w.WarehouseID
      left join AC_WorkGroup pluser on pl.UserID = pluser.FID
      left join SystemTypeParameter pstatus on pstatus.TypeValue = sl.Status and pstatus.TypeKey = 'StorageStatus'
      left join PatientList Patient on pl.PatientID =Patient.PatientID
      WHERE 1=1 {0}
    </Content>

    <Content Key="GetFlowSterilizeDevices" Desc="灭菌追溯" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      select pl.PACKAGEID
      ,dl.LOGID
      ,d.DEVICEID
      ,d.DEVICENAME
      ,dl.BEGINDATE
      ,dl.ENDDATE
      ,dluser.FID as DEVICESUSELOGUSERID
      ,dluser.FNames as DEVICESUSELOGUSERNAME
      ,pisok.TypeName as ISOK
      ,dl.USETIMES
      ,dl.TODAYUSETIMES
      ,dl.AFTERMAINTAINUSETIMES
      ,sl.Barcode as STORAGEBARCODE
      ,dlchecker.FID as DEVICESUSELOGCHECKID
      ,dlchecker.FNames as DEVICESUSELOGCHECKNAME
      ,pl.PATIENTID
      ,Patient.PATIENTNAME
      ,dl.CHECKDATE
      ,pbadflag.TypeName as BADFLAGSHOW
      ,w.WAREHOUSENAME
      ,sl.Barcode as STORAGEBARCODE
      ,pluser.FNames as FLOWPACKAGELISTUSERNAME
      ,pstatus.TYPENAME
      ,isnull(prule.RULENAME,'') as RULENAME
      ,c.CARGOTYPENAME
      ,d.LASTBPCDDATE,PATIENT.MEDICALRECORDCODE,PATIENT.BEDNO
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join FlowSterilizationList fsl on pl.PackageID = fsl.PackageID
      inner join DevicesUseLog dl on fsl.SterilizationLogID = dl.LogID
      inner join Devices d on dl.DeviceID = d.DeviceID
      inner join AC_WorkGroup dluser on dl.UserID = dluser.FID
      LEFT join AC_WorkGroup dlchecker on dl.CheckID = dlchecker.FID
      LEFT join SystemTypeParameter pisok on dl.IsOk = pisok.TypeValue and pisok.TypeKey = 'IsOK'
      left join SystemTypeParameter pbadflag on pl.BadFlag = pbadflag.TypeValue and pbadflag.TypeKey = 'QualifiedNO'
      left join PatientList Patient on pl.PatientID =Patient.PatientID
      left join Warehouse w on pl.LastWarehouseID = w.WarehouseID
      left join AC_WorkGroup pluser on pl.UserID = pluser.FID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      left join SystemTypeParameter pstatus on pstatus.TypeValue = sl.Status and pstatus.TypeKey = 'StorageStatus'
      LEFT JOIN DEVICEPROCESSRULE prule ON dl.DEVICEPROCESSRULEID = prule.RULEID
      where 1=1 {0}
    </Content>
    <Content Key="GetFlowSterilizeDevices" Desc="灭菌追溯" DataBaseType="Oracle">
      select pl.PACKAGEID
      ,dl.LOGID
      ,d.DEVICEID
      ,d.DEVICENAME
      ,dl.BEGINDATE
      ,dl.ENDDATE
      ,dluser.FID as DEVICESUSELOGUSERID
      ,dluser.FNames as DEVICESUSELOGUSERNAME
      ,pisok.TypeName as ISOK
      ,dl.USETIMES
      ,dl.TODAYUSETIMES
      ,dl.AFTERMAINTAINUSETIMES
      ,sl.Barcode as STORAGEBARCODE
      ,dlchecker.FID as DEVICESUSELOGCHECKID
      ,dlchecker.FNames as DEVICESUSELOGCHECKNAME
      ,pl.PATIENTID
      ,Patient.PATIENTNAME
      ,dl.CHECKDATE
      ,pbadflag.TypeName as BADFLAGSHOW
      ,w.WAREHOUSENAME
      ,sl.Barcode as STORAGEBARCODE
      ,pluser.FNames as FLOWPACKAGELISTUSERNAME
      ,pstatus.TYPENAME
      ,nvl(prule.RULENAME,'') as RULENAME
      ,c.CARGOTYPENAME
      ,d.LASTBPCDDATE,PATIENT.MEDICALRECORDCODE,PATIENT.BEDNO
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join FlowSterilizationList fsl on pl.PackageID = fsl.PackageID
      inner join DevicesUseLog dl on fsl.SterilizationLogID = dl.LogID
      inner join Devices d on dl.DeviceID = d.DeviceID
      inner join AC_WorkGroup dluser on dl.UserID = dluser.FID
      LEFT join AC_WorkGroup dlchecker on dl.CheckID = dlchecker.FID
      LEFT join SystemTypeParameter pisok on dl.IsOk = pisok.TypeValue and pisok.TypeKey = 'IsOK'
      left join SystemTypeParameter pbadflag on pl.BadFlag = pbadflag.TypeValue and pbadflag.TypeKey = 'QualifiedNO'
      left join PatientList Patient on pl.PatientID =Patient.PatientID
      left join Warehouse w on pl.LastWarehouseID = w.WarehouseID
      left join AC_WorkGroup pluser on pl.UserID = pluser.FID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      left join SystemTypeParameter pstatus on pstatus.TypeValue = sl.Status and pstatus.TypeKey = 'StorageStatus'
      LEFT JOIN DEVICEPROCESSRULE prule ON dl.DEVICEPROCESSRULEID = prule.RULEID
      where 1=1 {0}
    </Content>

    <Content Key="GetFlowRecyclePackageCountByDate" Desc="" DataBaseType="SqlServer">
      select COUNT(1)
      from FlowRecycle r  inner join FlowRecycleList rl  on r.FRecycleID = rl.FRecycleID
      where 1=1
    </Content>
    <Content Key="GetFlowRecyclePackageCountByDate" Desc="" DataBaseType="Oracle">
      select COUNT(1)
      from FlowRecycle r  inner join FlowRecycleList rl  on r.FRecycleID = rl.FRecycleID
      where 1=1
    </Content>

    <Content Key="GetFlowRecyclePackageCountByDateID" Desc="" DataBaseType="SqlServer">
      select COUNT(1)
      from FlowRecycle r  inner join FlowRecycleList rl  on r.FRecycleID = rl.FRecycleID
      inner join FLOWPACKAGELIST FP on fp.PackageID=rl.PackageID
      where 1=1
    </Content>
    <Content Key="GetFlowRecyclePackageCountByDateID" Desc="" DataBaseType="Oracle">
      select COUNT(1)
      from FlowRecycle r  inner join FlowRecycleList rl  on r.FRecycleID = rl.FRecycleID
      inner join FLOWPACKAGELIST FP on fp.PackageID=rl.PackageID
      where 1=1
    </Content>

    <Content Key="GetFlowWaitDisinfectPackageCountByDate" Desc="" DataBaseType="SqlServer">
      select COUNT(1)
      from FlowRecycle r  inner join FlowRecycleList rl  on r.FRecycleID = rl.FRecycleID
      where 1=1 and
      not exists (select 1 from FlowRecycleContainer cd  where cd.FRecycleID =  r.FRecycleID  and  cd.LastFDisinfectID is not null )
    </Content>
    <Content Key="GetFlowWaitDisinfectPackageCountByDate" Desc="" DataBaseType="Oracle">
      select COUNT(1)
      from FlowRecycle r  inner join FlowRecycleList rl  on r.FRecycleID = rl.FRecycleID
      where 1=1 and
      not exists (select 1 from FlowRecycleContainer cd  where cd.FRecycleID =  r.FRecycleID  and  cd.LastFDisinfectID is not null )
    </Content>

    <Content Key="GetFlowDisinfectedPackageCountByDate" Desc="" DataBaseType="SqlServer">
      select COUNT(1)
      from FlowRecycle r  inner join FlowRecycleList rl  on r.FRecycleID = rl.FRecycleID
      where 1=1 and
      not exists (select 1 from FlowRecycleContainer cd  where cd.FRecycleID =  r.FRecycleID  and  cd.LastFDisinfectID is  null )
    </Content>
    <Content Key="GetFlowDisinfectedPackageCountByDate" Desc="" DataBaseType="Oracle">
      select COUNT(1)
      from FlowRecycle r  inner join FlowRecycleList rl  on r.FRecycleID = rl.FRecycleID
      where 1=1 and
      not exists (select 1 from FlowRecycleContainer cd  where cd.FRecycleID =  r.FRecycleID  and  cd.LastFDisinfectID is  null )
    </Content>

    <Content Key="GetFlowPackageCountByDate" Desc="" DataBaseType="SqlServer">
      select COUNT(1)
      from FlowPackageList fl  inner join FlowPackage fp  on fl.FPackageID = fp.FPackageID
      where 1=1
    </Content>
    <Content Key="GetFlowPackageCountByDate" Desc="" DataBaseType="Oracle">
      select COUNT(1)
      from FlowPackageList fl  inner join FlowPackage fp  on fl.FPackageID = fp.FPackageID
      where 1=1
    </Content>

    <Content Key="GetFlowPackageCountByDateID" Desc="" DataBaseType="SqlServer">
      select COUNT(1)
      from FlowPackageList fl  inner join FlowPackage fp  on fl.FPackageID = fp.FPackageID
      where 1=1
    </Content>
    <Content Key="GetFlowPackageCountByDateID" Desc="" DataBaseType="Oracle">
      select COUNT(1)
      from FlowPackageList fl  inner join FlowPackage fp  on fl.FPackageID = fp.FPackageID
      where 1=1
    </Content>

    <Content Key="GetWaitSterilizeCountByDate" Desc="" DataBaseType="SqlServer">
      select COUNT(1)
      from FlowPackageList fl  inner join FlowPackage fp  on fl.FPackageID = fp.FPackageID
      where 1=1 and
      not exists (select 1 from FlowSterilizationList sl where sl. PackageID = fl. PackageID)
    </Content>
    <Content Key="GetWaitSterilizeCountByDate" Desc="" DataBaseType="Oracle">
      select COUNT(1)
      from FlowPackageList fl  inner join FlowPackage fp  on fl.FPackageID = fp.FPackageID
      where 1=1 and
      not exists (select 1 from FlowSterilizationList sl where sl. PackageID = fl. PackageID)
    </Content>

    <Content Key="GetSterilizingCountByDate" Desc="" DataBaseType="SqlServer">
      select COUNT(1)
      from FlowSterilizationList sl  inner join FlowPackageList p  on sl.PackageID = p.PackageID
      inner join DevicesUseLog dl  on sl.SterilizationLogID = dl.LogID
      where  dl.IsOk =0
    </Content>
    <Content Key="GetSterilizingCountByDate" Desc="" DataBaseType="Oracle">
      select COUNT(1)
      from FlowSterilizationList sl  inner join FlowPackageList p  on sl.PackageID = p.PackageID
      inner join DevicesUseLog dl  on sl.SterilizationLogID = dl.LogID
      where  dl.IsOk =0
    </Content>

    <Content Key="GetSterilizedCountByDate" Desc="" DataBaseType="SqlServer">
      select COUNT(1)
      from FlowSterilizationList sl  inner join FlowPackageList p  on sl.PackageID = p.PackageID
      inner join DevicesUseLog dl  on sl.SterilizationLogID = dl.LogID
      where   dl.IsOk =1
    </Content>
    <Content Key="GetSterilizedCountByDate" Desc="" DataBaseType="Oracle">
      select COUNT(1)
      from FlowSterilizationList sl  inner join FlowPackageList p  on sl.PackageID = p.PackageID
      inner join DevicesUseLog dl  on sl.SterilizationLogID = dl.LogID
      where   dl.IsOk =1
    </Content>

    <Content Key="GetProvideCountByDate" Desc="" DataBaseType="SqlServer">
      select  COUNT(1)
      from FlowProvide p  inner join FlowProvideList pl  on p.ProvideID = pl.ProvideID
      where 1=1
    </Content>
    <Content Key="GetProvideCountByDate" Desc="" DataBaseType="Oracle">
      select  COUNT(1)
      from FlowProvide p  inner join FlowProvideList pl  on p.ProvideID = pl.ProvideID
      where 1=1
    </Content>

    <Content Key="Report_GetUserFlowPackageTrackA" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      select  AC_User.Name NAME,AC_User.Code CODE
      ,w.RecycleNum RECYCLENUM,e.PackageNum PACKAGENUM,r.ProvideNum PROVIDENUM,t.SterilizeNum STERILIZENUM,y.Num NUM
      from AC_User left join AC_OrgUser
      on
      AC_User.ID=AC_OrgUser.UserID
      left join (select a.OPID,count(b.PackageID) RecycleNum from FlowRecycle  a  inner join FlowRecycleList  b
      on
      a.FRecycleID=b.FRecycleID
      where  RecycleDate  between @useData1  and @useData2
      
      group by a.OPID) w
      on
      AC_User.ID=w.OPID
      full join (select FlowPackage.OPID,COUNT(PackageID) PackageNum from FlowPackageList
      inner join FlowPackage on FlowPackageList.FPackageID =FlowPackage.FPackageID
      where FlowPackage.PackageDate  between @useData1  and @useData2
      
      group by FlowPackage.OPID) e
      on
      AC_User.ID=e.OPID full join
      (Select OPID,count(b.PackageID)ProvideNum from FlowProvide  a inner join FlowProvideList  b
      on
      a.ProvideID=b.ProvideID
      where ProvideDate between @useData1  and @useData2
      
      group by OPID) r
      on
      AC_User.ID=r.OPID full join
      (select ou.ID,sum(dl.TodayUseTimes)  SterilizeNum From DevicesUseLog dl inner join Devices d on dl.DeviceID = d.deviceid
      Inner join AC_User ou on dl. UserID= ou.id
      Where d.DeviceType >= 4 and dl.BeginDate between @useData1  and @useData2
      
      group by ou.ID) t
      on
      AC_User.ID=t.ID full join
      (select a.UserID,COUNT(e.ContainerID)  Num
      from DevicesUseLog  a left join Devices  b
      on
      a.DeviceID=b.DeviceID
      left join FlowDisinfect  c
      on
      a.LogID=c.LogID left join FlowDisinfectContainerList  d
      on
      c.FDisinfectID=d.FDisinfectID
      left join Container  e
      on
      d.ContainerID=e.ContainerID
      where DeviceType < 3  and a.BeginDate between @useData1  and @useData2
      
      group by a.UserID) y
      on
      AC_User.ID=y.UserID
      where (w.RecycleNum is  not null or r.ProvideNum is  not null or  e.PackageNum is  not null
      and t.SterilizeNum is not null or y.Num is  not null) and AC_User.FlowOrgID=@floworgid
      
      ]]>
    </Content>
    <Content Key="Report_GetUserFlowPackageTrackA" Desc="" DataBaseType="Oracle">
      <![CDATA[
      select  AC_User.Name NAME,AC_User.Code CODE
      ,w.RecycleNum RECYCLENUM,e.PackageNum PACKAGENUM,r.ProvideNum PROVIDENUM,t.SterilizeNum STERILIZENUM,y.Num NUM
      from AC_User left join AC_OrgUser
      on
      AC_User.ID=AC_OrgUser.UserID
      left join (select a.OPID,count(b.PackageID) RecycleNum from FlowRecycle  a  inner join FlowRecycleList  b
      on
      a.FRecycleID=b.FRecycleID
      where  RecycleDate  between :useData1  and :useData2
      
      group by a.OPID) w
      on
      AC_User.ID=w.OPID
      full join (select FlowPackage.OPID,COUNT(PackageID) PackageNum from FlowPackageList
      inner join FlowPackage on FlowPackageList.FPackageID =FlowPackage.FPackageID
      where FlowPackage.PackageDate  between :useData1  and :useData2
      
      group by FlowPackage.OPID) e
      on
      AC_User.ID=e.OPID full join
      (Select OPID,count(b.PackageID)ProvideNum from FlowProvide  a inner join FlowProvideList  b
      on
      a.ProvideID=b.ProvideID
      where ProvideDate between :useData1 and :useData2
      
      group by OPID) r
      on
      AC_User.ID=r.OPID full join
      (select ou.ID,sum(dl.TodayUseTimes)  SterilizeNum From DevicesUseLog dl inner join Devices d on dl.DeviceID = d.deviceid
      Inner join AC_User ou on dl. UserID= ou.id
      Where d.DeviceType >= 4 and dl.BeginDate between :useData1  and :useData2
      
      group by ou.ID) t
      on
      AC_User.ID=t.ID full join
      (select a.UserID,COUNT(e.ContainerID)  Num
      from DevicesUseLog  a left join Devices  b
      on
      a.DeviceID=b.DeviceID
      left join FlowDisinfect  c
      on
      a.LogID=c.LogID left join FlowDisinfectContainerList  d
      on
      c.FDisinfectID=d.FDisinfectID
      left join Container  e
      on
      d.ContainerID=e.ContainerID
      where DeviceType < 3  and a.BeginDate between :useData1  and :useData2
      
      group by a.UserID) y
      on
      AC_User.ID=y.UserID
      where (w.RecycleNum is  not null or r.ProvideNum is  not null or  e.PackageNum is  not null
      and t.SterilizeNum is not null or y.Num is  not null) and AC_User.FlowOrgID=:floworgid
      
      ]]>
    </Content>

    <Content Key="Report_GetUserFlowPackageTrackB" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      select  AC_User.Name NAME,AC_User.Code CODE
      ,w.RecycleNum RECYCLENUM,e.PackageNum PACKAGENUM,r.ProvideNum PROVIDENUM,t.SterilizeNum STERILIZENUM,y.Num NUM
      from AC_User left join AC_OrgUser
      on
      AC_User.ID=AC_OrgUser.UserID
      left join (select a.OPID,count(b.PackageID) RecycleNum from FlowRecycle  a  inner join FlowRecycleList  b
      on
      a.FRecycleID=b.FRecycleID
      where  RecycleDate  between @useData1  and @useData2
      and a.OPID=@useID
      
      group by a.OPID) w
      on
      AC_User.ID=w.OPID
      full join (select FlowPackage.OPID,COUNT(PackageID) PackageNum from FlowPackageList
      inner join FlowPackage on FlowPackageList.FPackageID =FlowPackage.FPackageID
      where FlowPackage.PackageDate  between @useData1  and @useData2
      and OPID=@useID
      
      group by FlowPackage.OPID) e
      on
      AC_User.ID=e.OPID full join
      (Select OPID,count(b.PackageID)ProvideNum from FlowProvide  a inner join FlowProvideList  b
      on
      a.ProvideID=b.ProvideID
      where ProvideDate between @useData1  and @useData2
      and a.OPID=@useID
      
      group by OPID) r
      on
      AC_User.ID=r.OPID full join
      (select ou.ID,sum(dl.TodayUseTimes)  SterilizeNum From DevicesUseLog dl inner join Devices d on dl.DeviceID = d.deviceid
      Inner join AC_User ou on dl. UserID= ou.id
      Where d.DeviceType >= 4 and dl.BeginDate between @useData1  and @useData2
      and ou.ID=@useID
      
      group by ou.ID) t
      on
      AC_User.ID=t.ID full join
      (select a.UserID,COUNT(e.ContainerID)  Num
      from DevicesUseLog  a left join Devices  b
      on
      a.DeviceID=b.DeviceID
      left join FlowDisinfect  c
      on
      a.LogID=c.LogID left join FlowDisinfectContainerList  d
      on
      c.FDisinfectID=d.FDisinfectID
      left join Container  e
      on
      d.ContainerID=e.ContainerID
      where DeviceType < 3  and a.BeginDate between @useData1  and @useData2
      and a.UserID=@useID
      
      group by a.UserID) y
      on
      AC_User.ID=y.UserID
      where (w.RecycleNum is  not null or r.ProvideNum is  not null or  e.PackageNum is  not null
      and t.SterilizeNum is not null or y.Num is  not null) and AC_User.FlowOrgID=@floworgid
      
      ]]>
    </Content>
    <Content Key="Report_GetUserFlowPackageTrackB" Desc="" DataBaseType="Oracle">
      <![CDATA[
      select  AC_User.Name NAME,AC_User.Code CODE
      ,w.RecycleNum RECYCLENUM,e.PackageNum PACKAGENUM,r.ProvideNum PROVIDENUM,t.SterilizeNum STERILIZENUM,y.Num NUM
      from AC_User left join AC_OrgUser
      on
      AC_User.ID=AC_OrgUser.UserID
      left join (select a.OPID,count(b.PackageID) RecycleNum from FlowRecycle  a  inner join FlowRecycleList  b
      on
      a.FRecycleID=b.FRecycleID
      where  RecycleDate  between :useData1  and :useData2
      and a.OPID=:useID
      
      group by a.OPID) w
      on
      AC_User.ID=w.OPID
      full join (select FlowPackage.OPID,COUNT(PackageID) PackageNum from FlowPackageList
      inner join FlowPackage on FlowPackageList.FPackageID =FlowPackage.FPackageID
      where FlowPackage.PackageDate  between :useData1  and :useData2
      and OPID=:useID
      
      group by FlowPackage.OPID) e
      on
      AC_User.ID=e.OPID full join
      (Select OPID,count(b.PackageID)ProvideNum from FlowProvide  a inner join FlowProvideList  b
      on
      a.ProvideID=b.ProvideID
      where ProvideDate between :useData1 and :useData2
      and a.OPID=:useID
      
      group by OPID) r
      on
      AC_User.ID=r.OPID full join
      (select ou.ID,sum(dl.TodayUseTimes)  SterilizeNum From DevicesUseLog dl inner join Devices d on dl.DeviceID = d.deviceid
      Inner join AC_User ou on dl. UserID= ou.id
      Where d.DeviceType >= 4 and dl.BeginDate between :useData1  and :useData2
      and ou.ID=:useID
      
      group by ou.ID) t
      on
      AC_User.ID=t.ID full join
      (select a.UserID,COUNT(e.ContainerID)  Num
      from DevicesUseLog  a left join Devices  b
      on
      a.DeviceID=b.DeviceID
      left join FlowDisinfect  c
      on
      a.LogID=c.LogID left join FlowDisinfectContainerList  d
      on
      c.FDisinfectID=d.FDisinfectID
      left join Container  e
      on
      d.ContainerID=e.ContainerID
      where DeviceType < 3  and a.BeginDate between :useData1  and :useData2
      and a.UserID=:useID
      
      group by a.UserID) y
      on
      AC_User.ID=y.UserID
      where (w.RecycleNum is  not null or r.ProvideNum is  not null or  e.PackageNum is  not null
      and t.SterilizeNum is not null or y.Num is  not null) and AC_User.FlowOrgID=:floworgid
      
      ]]>
    </Content>

    <Content Key="Report_Recycletotal" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      select SUM(isnull(c.InstrumentsNumber,1)) As RECYCLETOTAL
      from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
      inner join FlowPackageList pl on frl.PackageID = pl.PackageID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      where fr.RecycleDate between  @begindate  and  @enddate and fr.FlowOrgID=@floworgid
      ]]>
    </Content>

    <Content Key="Report_Recycletotal" Desc="" DataBaseType="Oracle">      
      <![CDATA[
     select SUM(nvl(c.InstrumentsNumber,1)) As RECYCLETOTAL
      from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
      inner join FlowPackageList pl on frl.PackageID = pl.PackageID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      where fr.RecycleDate between  :begindate  and  :enddate and fr.FlowOrgID= :floworgid
       ]]>
    </Content>

    <Content Key="Report_Packagetotal" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      select SUM(isnull(c.InstrumentsNumber,1)) As PACKAGETOTAL
      from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      where p.PackageDate between @begindate and @enddate  and istemp = 0  and p.FlowOrgID = @floworgid
      ]]>
    </Content>
    
    <Content Key="Report_Packagetotal" Desc="" DataBaseType="Oracle">
      <![CDATA[
      select SUM(nvl(c.InstrumentsNumber,1)) As PACKAGETOTAL
      from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      where p.PackageDate between :begindate and :enddate  and istemp = 0  and p.FlowOrgID = :floworgid
      ]]>
    </Content> 

    <Content Key="Report_Sterilizationtotal" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      select SUM(isnull(c.InstrumentsNumber,1)) As STERILIZATIONTOTAL
      from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
      inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      where dl.BeginDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid
      ]]>
    </Content>

    <Content Key="Report_Sterilizationtotal" Desc="" DataBaseType="Oracle">
      <![CDATA[
      select SUM(nvl(c.InstrumentsNumber,1)) As STERILIZATIONTOTAL
      from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
      inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      where dl.BeginDate between  :begindate  and  :enddate and pl.FlowOrgID= :floworgid
      ]]>
    </Content>

    <Content Key="Report_Providetotal" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      select SUM(isnull(c.InstrumentsNumber,1)) As PROVIDETOTAL
      from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
      inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      where fp.ProvideDate between  @begindate  and  @enddate and fp.FlowOrgID=@floworgid
      ]]>
    </Content>

    <Content Key="Report_Providetotal" Desc="" DataBaseType="Oracle">
      <![CDATA[
      select SUM(nvl(c.InstrumentsNumber,1)) As PROVIDETOTAL
      from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
      inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
      inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
      where fp.ProvideDate between  :begindate  and  :enddate and fp.FlowOrgID= :floworgid
      ]]>
    </Content>
    
    <Content Key="Report_UserTeamWorkReportA" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;	  
      
	  select 'A.回收清洗' as WORKTYPE,u.Name as USERNAME,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/@recycletotal * 100 AS VALUE,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on fr.opid = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on fr.FlowOrgID=we.FlowOrgID
      where fr.RecycleDate between  @begindate  and  @enddate and fr.FlowOrgID=@floworgid  and we.WeightTypeID=0
      group by u.ID,u.Name
      union all
      select 'B.配包'  as WORKTYPE,u.Name as USERNAME,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/@packagetotal * 100 AS VALUE,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
							  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
							  inner join AC_WorkGroup g   on p.opid = g.FID
							  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
							  inner join AC_User u on gu.FUserID=u.ID
							  inner join Weight we on p.FlowOrgID=we.FlowOrgID
      where p.PackageDate between @begindate and @enddate  and istemp = 0  and p.FlowOrgID=@floworgid and we.WeightTypeID=2
      group by u.ID,u.Name
      union all
      select 'C.灭菌'  as WORKTYPE,u.Name as USERNAME,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/@sterilizationtotal * 100 AS VALUE,
       sum(isnull(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on dl.UserID = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on pl.FlowOrgID=we.FlowOrgID
      where dl.BeginDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid  and we.WeightTypeID=3
      group by u.ID,u.Name
      union all
      select 'D.发放' as WORKTYPE,u.Name as USERNAME,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/@providetotal * 100 AS VALUE,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
						  inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on fp.opid = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on fp.FlowOrgID=we.FlowOrgID
      where fp.ProvideDate between @begindate and @enddate  and fp.FlowOrgID=@floworgid and we.WeightTypeID=4
      group by u.ID,u.Name
      
      ]]>
    </Content>
    <Content Key="Report_UserTeamWorkReportA" Desc="" DataBaseType="Oracle">
      <![CDATA[     		
     		
	  select 'A.回收清洗' as WORKTYPE,u.Name as USERNAME,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/  :recycletotal * 100 AS VALUE,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on fr.opid = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on fr.FlowOrgID=we.FlowOrgID
      where fr.RecycleDate between  :begindate  and  :enddate and fr.FlowOrgID=  :floworgid  and we.WeightTypeID=0
      group by u.ID,u.Name
      union all
      select 'B.配包'  as WORKTYPE,u.Name as USERNAME,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/  :packagetotal * 100 AS VALUE,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
							  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
							  inner join AC_WorkGroup g   on p.opid = g.FID
							  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
							  inner join AC_User u on gu.FUserID=u.ID
							  inner join Weight we on p.FlowOrgID=we.FlowOrgID
      where p.PackageDate between :begindate and :enddate  and istemp = 0  and p.FlowOrgID=  :floworgid and we.WeightTypeID=2
      group by u.ID,u.Name
      union all
      select 'C.灭菌'  as WORKTYPE,u.Name as USERNAME,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/  :sterilizationtotal * 100 AS VALUE,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on dl.UserID = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on pl.FlowOrgID=we.FlowOrgID
      where dl.BeginDate between  :begindate  and  :enddate and pl.FlowOrgID= :floworgid  and we.WeightTypeID=3
      group by u.ID,u.Name
      union all
      select 'D.发放' as WORKTYPE,u.Name as USERNAME,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/  :providetotal * 100 AS VALUE,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
						  inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on fp.opid = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on fp.FlowOrgID=we.FlowOrgID
      where fp.ProvideDate between :begindate and :enddate  and fp.FlowOrgID= :floworgid and we.WeightTypeID=4
      group by u.ID,u.Name
      
      
      ]]>
    </Content>

        
    <Content Key="Report_UserTeamWorkReportB" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
          
	  select 'A.回收清洗' as WORKTYPE,u.Name as USERNAME,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/@recycletotal * 100 AS VALUE,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on fr.opid = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on fr.FlowOrgID=we.FlowOrgID
      where fr.RecycleDate between  @begindate  and  @enddate and fr.FlowOrgID=@floworgid and u.ID = @userid and we.WeightTypeID=0
      group by u.ID,u.Name
      union all
      select 'B.配包'  as WORKTYPE,u.Name as USERNAME,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/@packagetotal * 100 AS VALUE,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
							  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
							  inner join AC_WorkGroup g   on p.opid = g.FID
							  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
							  inner join AC_User u on gu.FUserID=u.ID
							  inner join Weight we on p.FlowOrgID=we.FlowOrgID
      where p.PackageDate between @begindate and @enddate  and istemp = 0  and p.FlowOrgID=@floworgid and u.ID = @userid and we.WeightTypeID=2
      group by u.ID,u.Name
      union all
      select 'C.灭菌'  as WORKTYPE,u.Name as USERNAME,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/@sterilizationtotal * 100 AS VALUE,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on dl.UserID = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on pl.FlowOrgID=we.FlowOrgID
      where dl.BeginDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and u.ID = @userid  and we.WeightTypeID=3
      group by u.ID,u.Name
      union all
      select 'D.发放' as WORKTYPE,u.Name as USERNAME,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/@providetotal * 100 AS VALUE,
      sum(isnull(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
						  inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on fp.opid = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on fp.FlowOrgID=we.FlowOrgID
      where fp.ProvideDate between @begindate and @enddate  and fp.FlowOrgID=@floworgid and u.ID = @userid and we.WeightTypeID=4
      group by u.ID,u.Name
      ]]>
    </Content>
    <Content Key="Report_UserTeamWorkReportB" Desc="" DataBaseType="Oracle">
      <![CDATA[      
      
	  select 'A.回收清洗' as WORKTYPE,u.Name as USERNAME,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/  :recycletotal * 100 AS VALUE,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on fr.opid = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on fr.FlowOrgID=we.FlowOrgID
      where fr.RecycleDate between  :begindate  and  :enddate and fr.FlowOrgID=  :floworgid and u.ID =  :userid  and we.WeightTypeID=0
      group by u.ID,u.Name    
      union all
      select 'B.配包'  as WORKTYPE,u.Name as USERNAME,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/  :packagetotal * 100 AS VALUE,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
							  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
							  inner join AC_WorkGroup g   on p.opid = g.FID
							  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
							  inner join AC_User u on gu.FUserID=u.ID
							  inner join Weight we on p.FlowOrgID=we.FlowOrgID
      where p.PackageDate between  :begindate and  :enddate  and istemp = 0  and p.FlowOrgID=  :floworgid and u.ID =  :userid  and we.WeightTypeID=2
      group by u.ID,u.Name
      union all
      select 'C.灭菌'  as WORKTYPE,u.Name as USERNAME,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/  :sterilizationtotal * 100 AS VALUE,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on dl.UserID = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on pl.FlowOrgID=we.FlowOrgID
      where dl.BeginDate between  :begindate  and  :enddate and pl.FlowOrgID=  :floworgid and u.ID =  :userid   and we.WeightTypeID=3
      group by u.ID,u.Name
      union all
      select 'D.发放' as WORKTYPE,u.Name as USERNAME,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber*we.WeightValue)/  :providetotal * 100 AS VALUE,
      sum(nvl(c.InstrumentsNumber,1)/g.FNumber) AS QUANTITY
      from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
						  inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
						  inner join AC_WorkGroup g   on fp.opid = g.FID
						  inner join AC_UserWorkGroup gu on g.FID=gu.FGroupID
						  inner join AC_User u on gu.FUserID=u.ID
						  inner join Weight we on fp.FlowOrgID=we.FlowOrgID
      where fp.ProvideDate between  :begindate and  :enddate  and fp.FlowOrgID=  :floworgid and u.ID =  :userid  and we.WeightTypeID=4
      group by u.ID,u.Name
      ]]>
    </Content>
    
    
    
    <Content Key="Report_UserWorkReportA" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
      select 'A.回收包'  WORKTYPE,au.Name  USERNAME,t.CargoTypeName  INFONAME,
      --d.QUANTITY ,
      d.QUANTITY/u.FNumber QUANTITY,
      w.WarehouseName  INFO1,d.Barcode  INFO2, we.WeightValue  ,d.QUANTITY*t.InstrumentsNumber INSTRUMENTSNUMBER
      from FlowRecycle  a   inner join FlowRecycleList b   on a.FRecycleID=b.FRecycleID
      inner join FlowPackageList c  on b.PackageID=c.PackageID
      left join StorageList d   on c.StorageID=d.StorageID
      inner join AC_WorkGroup u   on a.opid = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      inner join CargoType  t   on d.CargoTypeid = t.CargoTypeid
      left join Warehouse  w   on c.lastwarehouseid = w.WarehouseID 
      where a.RecycleDate between  @begindate  and  @enddate and a.FlowOrgID=@floworgid  and we.WeightTypeID=0

      union all
      select 'B.自动清洗次数'  WORKTYPE,au.Name  USERNAME,dv.DEVICENAME  INFONAME,
      --1  QUANTITY, 
      1/u.FNumber QUANTITY,
      cast(du.todayusetimes as nvarchar)  INFO1,cast(du.isok as nvarchar)  INFO2, we.WeightValue ,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d inner join DevicesUseLog du  on d.LogID = du.LogID
      inner join AC_WorkGroup u   on du.UserID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on d.FlowOrgID=we.FlowOrgID
      inner join Devices dv   on du.DeviceID = dv.DeviceID
      where d.washtype <> 0 and du.BeginDate between @begindate and @enddate  and d.FlowOrgID=@floworgid and we.WeightTypeID=1

      union all
      select 'C.人工清洗网篮'  WORKTYPE,au.Name  USERNAME,c.ContainerName  INFONAME,
      --1  QUANTITY,
      1/u.FNumber QUANTITY,
      cast(du.todayusetimes as nvarchar) INFO1,cast(dl.status as nvarchar)  INFO2, we.WeightValue ,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d inner join DevicesUseLog du   on d.LogID = du.LogID
      inner join FlowDisinfectContainerList dl   on d.FDisinfectID = dl.FDisinfectID
      inner join AC_WorkGroup u   on du.UserID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on d.FlowOrgID=we.FlowOrgID
      inner join Container c   on dl.ContainerID = c.ContainerID
      where d.washtype = 0 and du.BeginDate between @begindate and @enddate  and d.FlowOrgID=@floworgid and we.WeightTypeID=1
      
      union all
      select 'D.审核网篮'  WORKTYPE,au.Name  USERNAME,c.ContainerName  INFONAME,
      --1  QUANTITY,
      1/u.FNumber QUANTITY,
      cast(du.todayusetimes as nvarchar)   INFO1,cast(dl.status as nvarchar) INFO2, 0  WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d   inner join DevicesUseLog du   on d.LogID = du.LogID
      inner join FlowDisinfectContainerList dl   on d.FDisinfectID = dl.FDisinfectID
      inner join AC_WorkGroup u   on dl.checkid = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Container c   on dl.ContainerID = c.ContainerID
      where dl.CheckDate between @begindate and @enddate  and d.FlowOrgID=@floworgid 
      
      union all
      select 'E.配包'  WorkType,au.Name  UserName,c.CargoTypeName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      cast(b.barcode as nvarchar)  Info1,cast(expdate as nvarchar)  Info2, we.WeightValue ,1*1 INSTRUMENTSNUMBER
      from FlowPackageList a  inner join StorageList b   on a.StorageID=b.StorageID
      inner join CargoType c   on b.CargoTypeID=c.CargoTypeID
      inner join FlowPackage d on a.FPackageID = d.FPackageID
      inner join AC_WorkGroup u   on d.OPID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where d.PackageDate between @begindate and @enddate  and istemp = @istempkind  and a.FlowOrgID=@floworgid and we.WeightTypeID=2
       
      union all
      select 'F.包包'  WorkType,au.Name  UserName,c.CargoTypeName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      cast(b.barcode as nvarchar)  Info1,cast(expdate as nvarchar)  Info2, we.WeightValue ,1*1 INSTRUMENTSNUMBER
      from FlowPackageList a  inner join StorageList b   on a.StorageID=b.StorageID
      inner join CargoType c   on b.CargoTypeID=c.CargoTypeID
      inner join FlowPackage d on a.FPackageID = d.FPackageID
      inner join AC_WorkGroup u   on a.CheckID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where d.PackageDate between @begindate and @enddate  and istemp = @istempkind  and a.FlowOrgID=@floworgid and we.WeightTypeID=2
      union all
      select 'G.灭菌'  WORKTYPE,au.Name  USERNAME,e.DeviceName  INFONAME,
      --1  QUANTITY,
      1/u.FNumber QUANTITY,
      cast(c.TodayUseTimes as nvarchar)  INFO1,''  INFO2, we.WeightValue ,1*1 INSTRUMENTSNUMBER
      from  FlowSterilizationList a   inner join  FlowPackageList b   on a.PackageID=b.PackageID
      inner join  DevicesUseLog c   on a.SterilizationLogID=c.LogID
      inner join  AC_WorkGroup u   on c.UserID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on b.FlowOrgID=we.FlowOrgID
      inner join  Devices  e   on c.DeviceID=e.DeviceID
      where c.BeginDate between @begindate and @enddate  and b.FlowOrgID=@floworgid and we.WeightTypeID=3
      
      union all
      select 'H.发放'  WORKTYPE,au.Name  USERNAME,e.CARGOTYPENAME  INFONAME,
      --1  QUANTITY,
      1/u.FNumber QUANTITY,
      g.NAME  INFO1,''  INFO2, we.WeightValue ,1*1 INSTRUMENTSNUMBER
      from FlowProvide  a inner join FlowProvideList  b   on a.ProvideID=b.ProvideID
      inner join FlowPackageList  c   on b.PackageID=c.PackageID
      inner join  StorageList  d   on c.StorageID=d.StorageID
      inner join CargoType  e   on d.CargoTypeID=e.CargoTypeID
      inner join AC_OrgUser  f   on a.OPID=f.UserID
      inner join AC_Org  g   on f.OrgID=g.ID
      inner join AC_WorkGroup  u   on a.OPID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where a.ProvideDate between @begindate and @enddate  and a.FlowOrgID=@floworgid and we.WeightTypeID=4
      
      ]]>
    </Content>
    <Content Key="Report_UserWorkReportA" Desc="" DataBaseType="Oracle">
      <![CDATA[
      select 'A.回收包'  WorkType,au.Name  UserName,t.CargoTypeName  InfoName,
      --d.Quantity , 
      d.QUANTITY/u.FNumber QUANTITY,
      to_char(w.WarehouseName)  Info1,to_char(d.Barcode)  Info2, we.WeightValue,d.QUANTITY*t.InstrumentsNumber INSTRUMENTSNUMBER
      from FlowRecycle  a   inner join FlowRecycleList b   on a.FRecycleID=b.FRecycleID
      inner join FlowPackageList c  on b.PackageID=c.PackageID
      left join StorageList d   on c.StorageID=d.StorageID
      inner join AC_WorkGroup u   on a.opid = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      inner join CargoType  t   on d.CargoTypeid = t.CargoTypeid
      left join Warehouse  w   on c.lastwarehouseid = w.WarehouseID
      where a.RecycleDate between  :begindate  and  :enddate  and a.FlowOrgID=:floworgid and we.WeightTypeID=0

      union all
      select 'B.自动清洗次数'  WorkType,au.Name  UserName,dv.DeviceName  InfoName,
      --1  Quantity,
       1/u.FNumber QUANTITY,
      to_char(du.todayusetimes) Info1,to_char(du.isok)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d inner join DevicesUseLog du  on d.LogID = du.LogID
      inner join AC_WorkGroup u   on du.UserID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on d.FlowOrgID=we.FlowOrgID
      inner join Devices dv   on du.DeviceID = dv.DeviceID
      where d.washtype <> 0 and du.BeginDate between :begindate and :enddate  and d.FlowOrgID=:floworgid and we.WeightTypeID=1
      
      union all
      select 'C.人工清洗网篮'  WorkType,au.Name  UserName,c.ContainerName  InfoName,
      --1  Quantity,
       1/u.FNumber QUANTITY,
      to_char(du.todayusetimes)  Info1,to_char(dl.status)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d inner join DevicesUseLog du   on d.LogID = du.LogID
      inner join FlowDisinfectContainerList dl   on d.FDisinfectID = dl.FDisinfectID
      inner join AC_WorkGroup u   on du.UserID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on d.FlowOrgID=we.FlowOrgID
      inner join Container c   on dl.ContainerID = c.ContainerID
      where d.washtype = 0 and du.BeginDate between :begindate and :enddate  and d.FlowOrgID=:floworgid and we.WeightTypeID=1
      
      union all
      select 'D.审核网篮'  WorkType,au.Name  UserName,c.ContainerName  InfoName,
      --1  Quantity,
       1/u.FNumber QUANTITY,
      to_char(du.todayusetimes)  Info1,to_char(dl.status)  Info2, 0 WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d   inner join DevicesUseLog du   on d.LogID = du.LogID
      inner join FlowDisinfectContainerList dl   on d.FDisinfectID = dl.FDisinfectID
      inner join AC_WorkGroup u   on dl.checkid = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Container c   on dl.ContainerID = c.ContainerID
      where dl.CheckDate between :begindate and :enddate  and d.FlowOrgID=:floworgid
      
      union all
      select 'E.配包'  WorkType,au.Name  UserName,c.CargoTypeName  InfoName,
      --1  Quantity,
       1/u.FNumber QUANTITY,
      to_char(b.barcode)  Info1,to_char(expdate)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowPackageList a inner join StorageList b   on a.StorageID=b.StorageID
      inner join CargoType c   on b.CargoTypeID=c.CargoTypeID
      inner join FlowPackage d  on a.FPackageID =d.FPackageID
      inner join AC_WorkGroup u   on d.OPID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where d.PackageDate between :begindate and :enddate  and istemp = :istempkind  and a.FlowOrgID=:floworgid and we.WeightTypeID=2
      
      union all
      select 'F.包包'  WorkType,au.Name  UserName,c.CargoTypeName  InfoName,
      --1  Quantity,
       1/u.FNumber QUANTITY,
      to_char(b.barcode)  Info1,to_char(expdate)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowPackageList a inner join StorageList b   on a.StorageID=b.StorageID
      inner join CargoType c   on b.CargoTypeID=c.CargoTypeID
      inner join FlowPackage d  on a.FPackageID =d.FPackageID
      inner join AC_WorkGroup u   on a.CheckID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where d.PackageDate between :begindate and :enddate  and istemp = :istempkind  and a.FlowOrgID=:floworgid and we.WeightTypeID=2
      union all
      select 'G.灭菌'  WorkType,au.Name  UserName,e.DeviceName  InfoName,
      --1  Quantity,
       1/u.FNumber QUANTITY,
      to_char(c.TodayUseTimes)  Info1,''  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from  FlowSterilizationList a   inner join  FlowPackageList b   on a.PackageID=b.PackageID
      inner join  DevicesUseLog c   on a.SterilizationLogID=c.LogID
      inner join  AC_WorkGroup u   on c.UserID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on b.FlowOrgID=we.FlowOrgID
      inner join  Devices  e   on c.DeviceID=e.DeviceID
      where c.BeginDate between :begindate and :enddate  and b.FlowOrgID=:floworgid and we.WeightTypeID=3
      
      union all
      select 'H.发放'  WorkType,au.Name  UserName,e.CargoTypeName  InfoName,
      --1  Quantity,
       1/u.FNumber QUANTITY,
      to_char(g.Name)  Info1,''  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowProvide  a inner join FlowProvideList  b   on a.ProvideID=b.ProvideID
      inner join FlowPackageList  c   on b.PackageID=c.PackageID
      inner join  StorageList  d   on c.StorageID=d.StorageID
      inner join CargoType  e   on d.CargoTypeID=e.CargoTypeID
      inner join AC_OrgUser  f   on a.OPID=f.UserID
      inner join AC_Org  g   on f.OrgID=g.ID
      inner join AC_WorkGroup  u   on a.OPID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where a.ProvideDate between :begindate and :enddate  and a.FlowOrgID=:floworgid and we.WeightTypeID=4
      
      ]]>
    </Content>

    <Content Key="Report_UserWorkReportB" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
      select 'A.回收包'  WORKTYPE,au.Name  USERNAME,t.CargoTypeName  INFONAME,
      --d.QUANTITY ,
       d.QUANTITY/u.FNumber QUANTITY,
      w.WarehouseName  INFO1,d.Barcode  INFO2, we.WeightValue ,d.QUANTITY*t.InstrumentsNumber INSTRUMENTSNUMBER
      from FlowRecycle  a   inner join FlowRecycleList b   on a.FRecycleID=b.FRecycleID
      inner join FlowPackageList c  on b.PackageID=c.PackageID
      left join StorageList d   on c.StorageID=d.StorageID
      inner join AC_WorkGroup u   on a.opid = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      inner join CargoType  t   on d.CargoTypeid = t.CargoTypeid
      left join Warehouse  w   on c.lastwarehouseid = w.WarehouseID
      where a.RecycleDate between  @begindate  and  @enddate
      and u.FID=@userid  and a.FlowOrgID=@floworgid and we.WeightTypeID=0

      union all
      select 'B.自动清洗次数'  WORKTYPE,au.Name  USERNAME,dv.DEVICENAME  INFONAME,
      --1  QUANTITY,
       1/u.FNumber QUANTITY,
      cast(du.todayusetimes as nvarchar)  INFO1,cast(du.isok as nvarchar)  INFO2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d inner join DevicesUseLog du  on d.LogID = du.LogID
      inner join AC_WorkGroup u   on du.UserID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on d.FlowOrgID=we.FlowOrgID
      inner join Devices dv   on du.DeviceID = dv.DeviceID
      where d.washtype <> 0 and du.BeginDate between @begindate and @enddate
      and u.FID=@userid  and d.FlowOrgID=@floworgid and we.WeightTypeID=1

      union all
      select 'C.人工清洗网篮'  WORKTYPE,au.Name  USERNAME,c.ContainerName  INFONAME,
      --1  QUANTITY, 
      1/u.FNumber QUANTITY,
      cast(du.todayusetimes as nvarchar) INFO1,cast(dl.status as nvarchar)  INFO2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d inner join DevicesUseLog du   on d.LogID = du.LogID
      inner join FlowDisinfectContainerList dl   on d.FDisinfectID = dl.FDisinfectID
      inner join AC_WorkGroup u   on du.UserID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on d.FlowOrgID=we.FlowOrgID
      inner join Container c   on dl.ContainerID = c.ContainerID
      where d.washtype = 0 and du.BeginDate between @begindate and @enddate
      and u.FID=@userid  and d.FlowOrgID=@floworgid and we.WeightTypeID=1
      
      union all
      select 'D.审核网篮'  WORKTYPE,au.Name  USERNAME,c.ContainerName  INFONAME,
      --1  QUANTITY,
      1/u.FNumber QUANTITY,
      cast(du.todayusetimes as nvarchar)   INFO1,cast(dl.status as nvarchar) INFO2, 0 WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d   inner join DevicesUseLog du   on d.LogID = du.LogID
      inner join FlowDisinfectContainerList dl   on d.FDisinfectID = dl.FDisinfectID
      inner join AC_WorkGroup u   on dl.checkid = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Container c   on dl.ContainerID = c.ContainerID
      where dl.CheckDate between @begindate and @enddate
      and u.FID=@userid  and d.FlowOrgID=@floworgid
      
      union all
      select 'E.配包'  WorkType,au.Name  UserName,c.CargoTypeName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      cast(b.barcode as nvarchar)  Info1,cast(expdate as nvarchar)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowPackageList a  inner join StorageList b   on a.StorageID=b.StorageID
      inner join CargoType c   on b.CargoTypeID=c.CargoTypeID
      inner join FlowPackage d on a.FPackageID = d.FPackageID
      inner join AC_WorkGroup u   on d.OPID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where d.PackageDate between @begindate and @enddate  and istemp = @istempkind
      and u.FID=@userid  and a.FlowOrgID=@floworgid and we.WeightTypeID=2
       
      union all
      select 'F.包包'  WorkType,au.Name  UserName,c.CargoTypeName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      cast(b.barcode as nvarchar)  Info1,cast(expdate as nvarchar)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowPackageList a  inner join StorageList b   on a.StorageID=b.StorageID
      inner join CargoType c   on b.CargoTypeID=c.CargoTypeID
      inner join FlowPackage d on a.FPackageID = d.FPackageID
      inner join AC_WorkGroup u   on a.CheckID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where d.PackageDate between @begindate and @enddate  and istemp = @istempkind
      and u.FID=@userid  and a.FlowOrgID=@floworgid and we.WeightTypeID=2
      
      union all
      select 'G.灭菌'  WORKTYPE,au.Name  USERNAME,e.DeviceName  INFONAME,
      --1  QUANTITY,
      1/u.FNumber QUANTITY,
      cast(c.TodayUseTimes as nvarchar)  INFO1,''  INFO2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from  FlowSterilizationList a   inner join  FlowPackageList b   on a.PackageID=b.PackageID
      inner join  DevicesUseLog c   on a.SterilizationLogID=c.LogID
      inner join  AC_WorkGroup u   on c.UserID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on b.FlowOrgID=we.FlowOrgID
      inner join  Devices  e   on c.DeviceID=e.DeviceID
      where c.BeginDate between @begindate and @enddate
      and u.FID=@userid  and b.FlowOrgID=@floworgid and we.WeightTypeID=3
      
      union all
      select 'H.发放'  WORKTYPE,au.Name  USERNAME,e.CARGOTYPENAME  INFONAME,
      --1  QUANTITY,
      1/u.FNumber QUANTITY,
      g.NAME  INFO1,''  INFO2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowProvide  a inner join FlowProvideList  b   on a.ProvideID=b.ProvideID
      inner join FlowPackageList  c   on b.PackageID=c.PackageID
      inner join  StorageList  d   on c.StorageID=d.StorageID
      inner join CargoType  e   on d.CargoTypeID=e.CargoTypeID
      inner join AC_OrgUser  f   on a.OPID=f.UserID
      inner join AC_Org  g   on f.OrgID=g.ID
      inner join AC_WorkGroup  u   on a.OPID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where a.ProvideDate between @begindate and @enddate
      and u.FID=@userid  and a.FlowOrgID=@floworgid and we.WeightTypeID=4
      
      ]]>
    </Content>
    <Content Key="Report_UserWorkReportB" Desc="" DataBaseType="Oracle">
      <![CDATA[
      select 'A.回收包'  WorkType,au.Name  UserName,t.CargoTypeName  InfoName,
      --d.Quantity , 
      d.QUANTITY/u.FNumber QUANTITY,
      to_char(w.WarehouseName)  Info1,to_char(d.Barcode)  Info2, we.WeightValue,d.QUANTITY*t.InstrumentsNumber INSTRUMENTSNUMBER
      from FlowRecycle  a   inner join FlowRecycleList b   on a.FRecycleID=b.FRecycleID
      inner join FlowPackageList c  on b.PackageID=c.PackageID
      left join StorageList d   on c.StorageID=d.StorageID
      inner join AC_WorkGroup u   on a.opid = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      inner join CargoType  t   on d.CargoTypeid = t.CargoTypeid
      left join Warehouse  w   on c.lastwarehouseid = w.WarehouseID
      where a.RecycleDate between  :begindate  and  :enddate
      and u.FID = :userid  and a.FlowOrgID=:floworgid and we.WeightTypeID=0

      union all
      select 'B.自动清洗次数'  WorkType,au.Name  UserName,dv.DeviceName  InfoName,
      --1  Quantity, 
      1/u.FNumber QUANTITY,
      to_char(du.todayusetimes) Info1,to_char(du.isok)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d inner join DevicesUseLog du  on d.LogID = du.LogID
      inner join AC_WorkGroup u   on du.UserID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on d.FlowOrgID=we.FlowOrgID
      inner join Devices dv   on du.DeviceID = dv.DeviceID
      where d.washtype <> 0 and du.BeginDate between :begindate and :enddate
      and u.FID=:userid and d.FlowOrgID=:floworgid and we.WeightTypeID=1
      
      union all
      select 'C.人工清洗网篮'  WorkType,au.Name  UserName,c.ContainerName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      to_char(du.todayusetimes)  Info1,to_char(dl.status)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d inner join DevicesUseLog du   on d.LogID = du.LogID
      inner join FlowDisinfectContainerList dl   on d.FDisinfectID = dl.FDisinfectID
      inner join AC_WorkGroup u   on du.UserID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on d.FlowOrgID=we.FlowOrgID
      inner join Container c   on dl.ContainerID = c.ContainerID
      where d.washtype = 0 and du.BeginDate between :begindate and :enddate
      and u.FID=:userid and d.FlowOrgID=:floworgid and we.WeightTypeID=1
      
      union all
      select 'D.审核网篮'  WorkType,au.Name  UserName,c.ContainerName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      to_char(du.todayusetimes)  Info1,to_char(dl.status)  Info2,0 WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowDisinfect d   inner join DevicesUseLog du   on d.LogID = du.LogID
      inner join FlowDisinfectContainerList dl   on d.FDisinfectID = dl.FDisinfectID
      inner join AC_WorkGroup u   on dl.checkid = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Container c   on dl.ContainerID = c.ContainerID
      where dl.CheckDate between :begindate and :enddate
      and u.FID=:userid and d.FlowOrgID=:floworgid
      
      union all
      select 'E.配包'  WorkType,au.Name  UserName,c.CargoTypeName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      to_char(b.barcode)  Info1,to_char(expdate)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowPackageList a inner join StorageList b   on a.StorageID=b.StorageID
      inner join CargoType c   on b.CargoTypeID=c.CargoTypeID
      inner join FlowPackage d  on a.FPackageID =d.FPackageID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      inner join AC_WorkGroup u   on d.OPID=u.FID
      where d.PackageDate between :begindate and :enddate  and istemp = :istempkind
      and u.FID=:userid and a.FlowOrgID=:floworgid and we.WeightTypeID=2
      
      union all
      select 'F.包包'  WorkType,au.Name  UserName,c.CargoTypeName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      to_char(b.barcode)  Info1,to_char(expdate)  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowPackageList a inner join StorageList b   on a.StorageID=b.StorageID
      inner join CargoType c   on b.CargoTypeID=c.CargoTypeID
      inner join FlowPackage d  on a.FPackageID =d.FPackageID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      inner join AC_WorkGroup u   on a.CheckID=u.FID
      where d.PackageDate between :begindate and :enddate  and istemp = :istempkind
      and u.FID=:userid and a.FlowOrgID=:floworgid and we.WeightTypeID=2
      
      union all
      select 'G.灭菌'  WorkType,au.Name  UserName,e.DeviceName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      to_char(c.TodayUseTimes)  Info1,''  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from  FlowSterilizationList a   inner join  FlowPackageList b   on a.PackageID=b.PackageID
      inner join  DevicesUseLog c   on a.SterilizationLogID=c.LogID
      inner join  AC_WorkGroup u   on c.UserID=u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on b.FlowOrgID=we.FlowOrgID
      inner join  Devices  e   on c.DeviceID=e.DeviceID
      where c.BeginDate between :begindate and :enddate
      and u.FID=:userid and b.FlowOrgID=:floworgid and we.WeightTypeID=3
      
      union all
      select 'H.发放'  WorkType,au.Name  UserName,e.CargoTypeName  InfoName,
      --1  Quantity,
      1/u.FNumber QUANTITY,
      to_char(g.Name)  Info1,''  Info2, we.WeightValue,1*1 INSTRUMENTSNUMBER
      from FlowProvide  a inner join FlowProvideList  b   on a.ProvideID=b.ProvideID
      inner join FlowPackageList  c   on b.PackageID=c.PackageID
      inner join  StorageList  d   on c.StorageID=d.StorageID
      inner join CargoType  e   on d.CargoTypeID=e.CargoTypeID
      inner join AC_OrgUser  f   on a.OPID=f.UserID
      inner join AC_Org  g   on f.OrgID=g.ID
      inner join AC_WorkGroup  u   on a.OPID = u.FID
      inner join AC_UserWorkGroup uw on u.FID=uw.FGroupID
      inner join AC_User au on uw.FUserID=au.ID
      inner join Weight we on a.FlowOrgID=we.FlowOrgID
      where a.ProvideDate between :begindate and :enddate
      and u.FID=:userid and a.FlowOrgID=:floworgid and we.WeightTypeID=4
      
      ]]>
    </Content>

    <Content Key="ReceiveDetailInfo" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      dbo.fun_get_Date(FlowProvide.ProvideDate,'Daily') AS [Date],
      AC_Org.Name AS Area,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName AS CargoTypeKindText,
      CargoType.CargoTypeName AS CargoTypeText,
      StorageList.Barcode AS BarCode,
      ISNULL(CargoType.Amount,0.00) AS UnitPrice,
      ISNULL(CargoType.Amount,0.00) * 1 AS TotalPrice,
      ISNULL(FlowProvideList.Status,0.00) AS ConfirmQty,
      1 AS Qty,
      PackageType.PName AS OutPacking
      ,Case when FlowProvideList.ProvideConfirmID = '00000000-0000-0000-0000-000000000000' THEN '未接收' ELSE '已接收' END as ConfirmText
      ,Case when FlowProvideList.ProvideConfirmID = '00000000-0000-0000-0000-000000000000' THEN 0 ELSE 1 END as ConfirmStatus
      FROM FlowProvide
      INNER JOIN FlowProvideList  on FlowProvide.ProvideID = FlowProvideList.ProvideID
      INNER JOIN FlowPackageList  on FlowProvideList.PackageID = FlowPackageList.PackageID
      LEFT JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      LEFT JOIN AC_ORG  on FlowProvide.OrgID = AC_Org.ID
      LEFT JOIN CargoType  on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind ON CargoType.CargoTypeKind = CargoTypeKind.ID
      LEFT JOIN SystemTypeParameter AS CargoTopType ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
      LEFT JOIN FlowSterilizationList  on FlowSterilizationList.PackageID = FlowPackageList.PackageID
      LEFT JOIN DevicesUseLog  on FlowSterilizationList.SterilizationLogID = DevicesUseLog.LogID
      LEFT JOIN Devices  on DevicesUseLog.DeviceID = Devices.DeviceID
      INNER JOIN StorageList  on FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN AC_User  on FlowProvide.OPID = AC_User.ID
      Where 1 = 1  {0} -- 可能需要震泽及其下属所有科室
      Order By FlowProvide.ProvideDate DESC,AC_Org.Name,CargoTypeText
    </Content>
    <Content Key="ReceiveDetailInfo" DataBaseType="Oracle">
      SELECT
      fun_get_Date(FlowProvide.ProvideDate,'Daily') AS ProvideDate,
      AC_Org.Name AS Area,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName AS CargoTypeKindText,
      CargoType.CargoTypeName AS CargoTypeText,
      StorageList.Barcode AS BarCode,
      nvl(CargoType.Amount,0.00) AS UnitPrice,
      nvl(CargoType.Amount,0.00) * 1 AS TotalPrice,
      nvl(FlowProvideList.Status,0.00) AS ConfirmQty,
      1 AS Qty,
      PackageType.PName AS OutPacking
      from FlowProvide
      INNER JOIN FlowProvideList  on FlowProvide.ProvideID = FlowProvideList.ProvideID
      INNER JOIN FlowPackageList  on FlowProvideList.PackageID = FlowPackageList.PackageID
      LEFT JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      LEFT JOIN AC_ORG  on FlowProvide.OrgID = AC_Org.ID
      LEFT JOIN CargoType  on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN CargoTypeKind ON CargoType.CargoTypeKind = CargoTypeKind.ID
      LEFT JOIN SystemTypeParameter  CargoTopType ON CargoTopType.TypeKey = 'CargoTopType' AND CargoType.CargoTopType = CargoTopType.TypeValue
      LEFT JOIN FlowSterilizationList  on FlowSterilizationList.PackageID = FlowPackageList.PackageID
      LEFT JOIN DevicesUseLog  on FlowSterilizationList.SterilizationLogID = DevicesUseLog.LogID
      LEFT JOIN Devices  on DevicesUseLog.DeviceID = Devices.DeviceID
      INNER JOIN StorageList  on FlowPackageList.StorageID = StorageList.StorageID
      INNER JOIN AC_WorkGroup  on FlowProvide.OPID = AC_WorkGroup.FID
      Where 1 = 1  {0} -- 可能需要震泽及其下属所有科室
      Order By FlowProvide.ProvideDate DESC,AC_Org.Name,CargoTypeText
    </Content>

    <Content Key="StockDetailInfo" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      CARGOTOPTYPENAME AS CargoTopTypeText --种类
      , KindName AS CargoTypeKindText        --类别
      , CARGOTYPENAME AS CargoTypeText--无菌物品
      , PackageTypeName AS OutPacking --外包装
      , PTypeID
      , OrgID
      , OrgText --区域
      , OrgBarCode
      , STORAGEID
      , INID
      , INLISTID
      , CARGOTOPTYPE
      , CARGOTYPEID
      , LOCATIONID
      , QUANTITY
      , MODIFIER
      , MODIFYTIME
      , STATUS
      , BARCODE --条码
      , MANUFACTURERID
      , MAEDATE
      , EXPDATE --失效日期
      , LOTNUMBER
      , PRICE
      , AFTERMAINTAINUSETIMES
      , STERILIZEDATE
      , WAREHOUSEID
      , USETIMES
      , LASTMAINTAINDATE
      , WAREHOUSENAME
      , LOCATIONNAME
      , WarehouseName
      , STATUSNAME
      FROM View_StorageList
      Where Quantity>0  AND CargoTopType=16 AND Status IN (60,50)
      {0}
      Order by EXPDate
    </Content>
    <Content Key="StockDetailInfo" DataBaseType="Oracle">
      SELECT
      CARGOTOPTYPENAME AS CargoTopTypeText --种类
      , KindName AS CargoTypeKindText        --类别
      , CARGOTYPENAME AS CargoTypeText--无菌物品
      , PackageTypeName AS OutPacking --外包装
      , PTypeID
      , OrgID
      , OrgText --区域
      , OrgBarCode
      , STORAGEID
      , INID
      , INLISTID
      , CARGOTOPTYPE
      , CARGOTYPEID
      , LOCATIONID
      , QUANTITY
      , MODIFIER
      , MODIFYTIME
      , STATUS
      , BARCODE --条码
      , MANUFACTURERID
      , MAEDATE
      , EXPDATE --失效日期
      , LOTNUMBER
      , PRICE
      , AFTERMAINTAINUSETIMES
      , STERILIZEDATE
      , WAREHOUSEID
      , USETIMES
      , LASTMAINTAINDATE
      , WAREHOUSENAME
      , LOCATIONNAME
      , WarehouseName
      , STATUSNAME
      FROM View_StorageList
      Where Quantity>0  AND CargoTopType=16 AND Status IN (60,50)
      {0}
      Order by EXPDate
    </Content>

    <Content Key="PackageStockSummary" DataBaseType="SqlServer">
      <![CDATA[
      SELECT  
      AC_Org.Name AS AreaText
      , WAREHOUSE.WarehouseName AS WarehouseText
      , view_CargoType.CargoTopTypeText --种类
      , view_CargoType.CargoTypeKindText        --类别
      , view_CargoType.CargoTypeText--无菌物品
      , view_CargoType.CargoTypeID
      , view_CargoType.CargoTopType
      , view_CargoType.CargoTypeKind
      , SUM(QUANTITY) AS Qty -- 数量
      , StorageList.STATUS
      , ST.TypeName AS STATUSNAME
      FROM StorageList
      LEFT JOIN view_CargoType
      ON StorageList.CargoTypeID = view_CargoType.CargoTypeID
      INNER JOIN FlowPackageList
      ON StorageList.StorageID = FlowPackageList.StorageID
      INNER JOIN FlowProvideList
      ON FlowProvideList.PackageID = FlowPackageList.PackageID
      INNER JOIN FlowProvide
      ON FlowProvideList.ProvideID = FlowProvide.ProvideID
      INNER JOIN AC_Org
      ON FlowProvide.OrgID = AC_Org.ID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      INNER JOIN SystemTypeParameter  ST WITH (NOLOCK)  ON StorageList.Status = ST.TypeValue AND ST.TypeKey = 'StorageStatus'   
      WHERE Quantity>0 
      AND (StorageList.CargoTopType = 16 AND StorageList.STATUS IN (50,60))-- 灭菌包 & 已发放
      {0}
      GROUP BY AC_Org.Name,WarehouseName
      , view_CargoType.CargoTopTypeText --种类
      , view_CargoType.CargoTypeKindText        --类别
      , view_CargoType.CargoTypeText--无菌物品
      , view_CargoType.CargoTypeID
      , view_CargoType.CargoTopType
      , view_CargoType.CargoTypeKind
      , StorageList.STATUS
      , ST.TypeName 
      Order BY AreaText
      , view_CargoType.CargoTopTypeText --种类
      , view_CargoType.CargoTypeKindText        --类别
      , view_CargoType.CargoTypeText
      ]]>
    </Content>
    <Content Key="PackageStockSummary" DataBaseType="Oracle">
      <![CDATA[
      SELECT  
      AC_Org.Name AS AreaText
      , WAREHOUSE.WarehouseName AS WarehouseText
      , view_CargoType.CargoTopTypeText --种类
      , view_CargoType.CargoTypeKindText        --类别
      , view_CargoType.CargoTypeText--无菌物品
      , view_CargoType.CargoTypeID
      , view_CargoType.CargoTopType
      , view_CargoType.CargoTypeKind
      , SUM(QUANTITY) AS Qty -- 数量
      , StorageList.STATUS
      , ST.TypeName AS STATUSNAME
      FROM StorageList
      LEFT JOIN view_CargoType
      ON StorageList.CargoTypeID = view_CargoType.CargoTypeID
      INNER JOIN FlowPackageList
      ON StorageList.StorageID = FlowPackageList.StorageID
      INNER JOIN FlowProvideList
      ON FlowProvideList.PackageID = FlowPackageList.PackageID
      INNER JOIN FlowProvide
      ON FlowProvideList.ProvideID = FlowProvide.ProvideID
      INNER JOIN AC_Org
      ON FlowProvide.OrgID = AC_Org.ID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      INNER JOIN SystemTypeParameter  ST WITH (NOLOCK)  ON StorageList.Status = ST.TypeValue AND ST.TypeKey = 'StorageStatus'   
      WHERE Quantity>0 
      AND (StorageList.CargoTopType = 16 AND StorageList.STATUS IN (50,60))-- 灭菌包 & 已发放
     {0}
      GROUP BY AC_Org.Name,WarehouseName
      , view_CargoType.CargoTopTypeText --种类
      , view_CargoType.CargoTypeKindText        --类别
      , view_CargoType.CargoTypeText--无菌物品
      , view_CargoType.CargoTypeID
      , view_CargoType.CargoTopType
      , view_CargoType.CargoTypeKind
      , StorageList.STATUS
      , ST.TypeName 
      Order BY AreaText
      , view_CargoType.CargoTopTypeText --种类
      , view_CargoType.CargoTypeKindText        --类别
      , view_CargoType.CargoTypeText
      ]]>
    </Content>

    <Content Key="PersonnelDetailDaily" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      DECLARE @SummaryType varchar(16)
      SET @SummaryType = 'Daily'
      SELECT
      WorkDetail.[Date] AS [Date]
      ,AC_Org.ID
      ,AC_Org.Name AS OrgText
      ,WorkDetail.OPID
      ,Employee.FNames AS UserText
      ,CargoType.CargoTopTypeText --种类
      ,CargoType.CargoTypeKindText--类别
      ,CargoType.CargoTypeText--无菌物品、器械包
      ,WorkDetail.[CargoTypeID]
      ,SUM([RecycleQty]) AS [RecycleQty]
      ,SUM([PackageQty]) AS [PackageQty]
      ,SUM([SterilizationQty]) AS [SterilizationQty]
      ,SUM([ProvideQty]) AS [ProvideQty]
      ,SUM([UseQty]) AS [UseQty]
      FROM [view_WorkDetail] AS WorkDetail
      LEFT JOIN view_CargoType AS CargoType
      ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN AC_WorkGroup AS Employee
      ON WorkDetail.OPID = Employee.FID
      LEFT JOIN AC_OrgUser
      ON WorkDetail.OPID = AC_OrgUser.UserID
      LEFT JOIN AC_Org
      ON AC_OrgUser.OrgID = AC_Org.ID
      WHERE 1 = 1 {0}
      GROUP BY WorkDetail.[Date],WorkDetail.OPID,Employee.FNames,AC_Org.ID,AC_Org.Name,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.[CargoTypeID]
      ORDER BY [Date] DESC,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="PersonnelDetailDaily" DataBaseType="Oracle">
      SELECT
      WorkDetail.OpDate AS OpDate
      ,AC_Org.ID
      ,AC_Org.Name AS OrgText
      ,WorkDetail.OPID
      ,Employee.FNames AS UserText
      ,CargoType.CargoTopTypeText --种类
      ,CargoType.CargoTypeKindText--类别
      ,CargoType.CargoTypeText--无菌物品、器械包
      ,WorkDetail.CargoTypeID
      ,SUM(RecycleQty) AS RecycleQty
      ,SUM(PackageQty) AS PackageQty
      ,SUM(SterilizationQty) AS SterilizationQty
      ,SUM(ProvideQty) AS ProvideQty
      ,SUM(UseQty) AS UseQty
      FROM view_WorkDetail  WorkDetail
      LEFT JOIN view_CargoType  CargoType
      ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN AC_WorkGroup AS Employee
      ON WorkDetail.OPID = Employee.FID
      LEFT JOIN AC_OrgUser
      ON WorkDetail.OPID = AC_OrgUser.UserID
      LEFT JOIN AC_Org
      ON AC_OrgUser.OrgID = AC_Org.ID
      WHERE 1 = 1 {0}
      GROUP BY WorkDetail.OpDate,WorkDetail.OPID,Employee.FNames,AC_Org.ID,AC_Org.Name,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.CargoTypeID
      ORDER BY OpDate DESC,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="ReportStorageValidity" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      SELECT
      CASE ISNULL(H.Name,'') WHEN '' THEN C.WAREHOUSENAME ELSE H.Name END AS AreaText,
      C.WAREHOUSENAME,
      D.LOCATIONNAME,
      A.CargoTypeID,
      A.Barcode,
      B.CARGOTYPENAME,
      G.ProvideDate,
      convert(varchar(10), A.EXPDATE ,120) AS EXPDATE,
      Datediff(DAY,GETDATE(),A.EXPDate) AS VALIDDATEDAYS,
      B.WarningDays,
      A.QUANTITY
      FROM STORAGELIST A
      LEFT JOIN CARGOTYPE B  ON A.CARGOTYPEID = B.CARGOTYPEID
      LEFT JOIN Warehouse  C on A.WarehouseID = C.WarehouseID
      LEFT JOIN Location D on D.LocationID = A.LocationID
      INNER JOIN FlowPackageList E ON E.StorageID = A.StorageID
      LEFT JOIN FlowProvideList F ON E.PackageID = F.PackageID
      LEFT JOIN FlowProvide G ON F.ProvideID = G.ProvideID
      LEFT JOIN AC_Org H ON H.ID = G.OrgID
      WHERE 1=1 AND A.CargoTopType = 16 AND A.[Status] IN (50,60) -- 灭菌包,已发放
      {0}
      ORDER BY AreaText,C.WAREHOUSENAME
    </Content>
    <Content Key="ReportStorageValidity" DataBaseType="Oracle">
      SELECT
      CASE nvl(H.Name,'') WHEN '' THEN C.WAREHOUSENAME ELSE H.Name END AS AreaText,
      C.WAREHOUSENAME,
      D.LOCATIONNAME,
      A.CargoTypeID,
      A.Barcode,
      B.CARGOTYPENAME,
      G.ProvideDate,
      to_char( A.EXPDATE,'yyyy-mm-dd') AS EXPDATE,
      datediff('D',A.EXPDate,sysdate) AS VALIDDATEDAYS,
      B.WarningDays,
      A.QUANTITY
      FROM STORAGELIST A
      LEFT JOIN CARGOTYPE B  ON A.CARGOTYPEID = B.CARGOTYPEID
      LEFT JOIN Warehouse  C on A.WarehouseID = C.WarehouseID
      LEFT JOIN Location D on D.LocationID = A.LocationID
      INNER JOIN FlowPackageList E ON E.StorageID = A.StorageID
      LEFT JOIN FlowProvideList F ON E.PackageID = F.PackageID
      LEFT JOIN FlowProvide G ON F.ProvideID = G.ProvideID
      LEFT JOIN AC_Org H ON H.ID = G.OrgID
      WHERE 1=1 AND A.CargoTopType = 16 AND A.Status IN (50,60) -- 灭菌包,已发放
      {0}
      ORDER BY AreaText,C.WAREHOUSENAME
    </Content>

    <Content Key="StorageSafe" DataBaseType="SqlServer">
      <![CDATA[
      SELECT C.WAREHOUSENAME, A.CARGOTYPENAME, A.SAFEQUANTITY,SUM(B.QUANTITY) AS Qty
      FROM CARGOTYPE A WITH (NOLOCK) INNER JOIN
      STORAGELIST B WITH (NOLOCK) ON A.CARGOTYPEID = B.CARGOTYPEID
      LEFT JOIN Warehouse  C on B.WarehouseID = C.WarehouseID
      WHERE 1=1 and A.SAFEQUANTITY <> 0 AND C.WarehouseID IS NOT NULL AND C.WarehouseID = '565869D8-9642-4ECD-A9BF-1F27A4EB4B7E'
      GROUP BY A.CARGOTYPENAME,C.WAREHOUSENAME,A.SAFEQUANTITY
      ]]>
    </Content>
    <Content Key="StorageSafe" DataBaseType="Oracle">
      <![CDATA[
      SELECT C.WAREHOUSENAME, A.CARGOTYPENAME, A.SAFEQUANTITY,SUM(B.QUANTITY) AS Qty
      FROM CARGOTYPE A  INNER JOIN
      STORAGELIST B WITH  ON A.CARGOTYPEID = B.CARGOTYPEID
      LEFT JOIN Warehouse  C on B.WarehouseID = C.WarehouseID
      WHERE 1=1 and A.SAFEQUANTITY <> 0 AND C.WarehouseID IS NOT NULL AND C.WarehouseID = '565869D8-9642-4ECD-A9BF-1F27A4EB4B7E'
      GROUP BY A.CARGOTYPENAME,C.WAREHOUSENAME,A.SAFEQUANTITY
      ]]>
    </Content>

    <Content Key="ContainerStatusReport" DataBaseType="SqlServer">
      select distinct
      c.BARCODE,--网篮编号
      c.ContainerName as CONTAINERNAME,--网篮名称
      s.TypeName as TYPENAME -- 网篮状态
      from  FlowRecycleContainer rc with (nolock) inner join Container c with (nolock) on c.Containerid = rc.Containerid
      inner join SystemTypeParameter s with (nolock) on c.Status = s.TypeValue and s.TypeKey = 'ContainerStatus'
      inner join FlowRecycle r with (nolock) on rc.FRecycleID = r.FRecycleID
      where 1 = 1{0}
    </Content>
    <Content Key="ContainerStatusReport" DataBaseType="Oracle">
      select distinct
      c.BARCODE,--网篮编号
      c.ContainerName as CONTAINERNAME,--网篮名称
      s.TypeName as TYPENAME -- 网篮状态
      from  FlowRecycleContainer rc inner join Container c on c.Containerid = rc.Containerid
      inner join SystemTypeParameter s on c.Status = s.TypeValue and s.TypeKey = 'ContainerStatus'
      inner join FlowRecycle r on rc.FRecycleID = r.FRecycleID
      where 1=1 {0}
    </Content>

    <Content Key="PackNoSterilize" DataBaseType="SqlServer">
      select
      sl.Barcode as BARCODE,--包条码
      ck.KindName AS KINDNAME,--类别
      c.CargoTypeName AS CARGOTYPENAME,--包类型
      sl.MAEDate AS MAEDATE,--配包日期
      pt.PName AS PNAME,--外包装
      pu.FNames as OPNAME,--配包人
      cu.FNames as CHECKERNAME, --审核人
      fl.ValidDate --准用日期，不需要显示
      from FlowPackageList fl with (nolock)
      inner join FlowPackage f with (nolock) on fl.FPackageID = f.FPackageID
      inner join StorageList sl with (nolock) on fl.StorageID = sl.StorageID
      inner join CargoType c with (nolock) on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck with (nolock) on c.CargoTypeKind = ck.ID
      inner join PackageType pt with (nolock) on fl.PackageTypeID = pt.PTypeID
      inner join AC_WorkGroup pu with (nolock) on f.OPID = pu.FID
      left join AC_WorkGroup cu with (nolock) on fl.CheckID = cu.FID
      where sl.Status = 40  and IsTemp = 0 {0}
      ORDER BY sl.MAEDate DESC
    </Content>
    <Content Key="PackNoSterilize" DataBaseType="Oracle">
      select
      sl.Barcode as BARCODE,--包条码
      ck.KindName AS KINDNAME,--类别
      c.CargoTypeName AS CARGOTYPENAME,--包类型
      sl.MAEDate AS MAEDATE,--配包日期
      pt.PName AS PNAME,--外包装
      pu.FNames as OPNAME,--配包人
      cu.FNames as CHECKERNAME, --审核人
      fl.ValidDate --准用日期，不需要显示
      from FlowPackageList fl
      inner join FlowPackage f  on fl.FPackageID = f.FPackageID
      inner join StorageList sl  on fl.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck  on c.CargoTypeKind = ck.ID
      inner join PackageType pt  on fl.PackageTypeID = pt.PTypeID
      inner join AC_WorkGroup pu  on f.OPID = pu.FID
      left join AC_WorkGroup cu  on fl.CheckID = cu.FID
      where sl.Status = 40   and IsTemp = 0 {0}
      ORDER BY sl.MAEDate DESC
    </Content>

    <Content Key="Query_PackSterilizeing" DataBaseType="SqlServer">
      select
      sl.Barcode as BARCODE,--包条码
      ck.KindName AS KINDNAME,--类别
      c.CargoTypeName AS CARGOTYPENAME,--包类型
      sl.MAEDate AS MAEDATE,--配包日期
      pt.PName AS PNAME,--外包装
      pu.FNames as OPNAME,--配包人
      cu.FNames as CHECKERNAME, --审核人
      fl.ValidDate --准用日期，不需要显示
      from FlowPackageList fl with (nolock)
      inner join FlowPackage f with (nolock) on fl.FPackageID = f.FPackageID
      inner join StorageList sl with (nolock) on fl.StorageID = sl.StorageID
      inner join CargoType c with (nolock) on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck with (nolock) on c.CargoTypeKind = ck.ID
      inner join PackageType pt with (nolock) on fl.PackageTypeID = pt.PTypeID
      inner join AC_WorkGroup pu with (nolock) on f.OPID = pu.FID
      left join AC_WorkGroup cu with (nolock) on fl.CheckID = cu.FID
      where sl.Status = 40 and fl.BadFlag=-2 {0}
      ORDER BY sl.MAEDate DESC
    </Content>
    <Content Key="Query_PackSterilizeing" DataBaseType="Oracle">
      select
      sl.Barcode as BARCODE,--包条码
      ck.KindName AS KINDNAME,--类别
      c.CargoTypeName AS CARGOTYPENAME,--包类型
      sl.MAEDate AS MAEDATE,--配包日期
      pt.PName AS PNAME,--外包装
      pu.FNames as OPNAME,--配包人
      cu.FNames as CHECKERNAME, --审核人
      fl.ValidDate --准用日期，不需要显示
      from FlowPackageList fl
      inner join FlowPackage f  on fl.FPackageID = f.FPackageID
      inner join StorageList sl  on fl.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck  on c.CargoTypeKind = ck.ID
      inner join PackageType pt  on fl.PackageTypeID = pt.PTypeID
      inner join AC_WorkGroup pu  on f.OPID = pu.FID
      left join AC_WorkGroup cu  on fl.CheckID = cu.FID
      where sl.Status = 40 and fl.BadFlag=-2 {0}
      ORDER BY sl.MAEDate DESC
    </Content>

    <Content Key="PackageCodeRecycle" DataBaseType="SqlServer">
      select CONTENT,LOGTIME,FNames NAME,cargotypename as CARGOTYPETEXT from SysLog  left join  CargoType  on syslog.KeyID2=CargoType.cargotypeid
      inner join AC_WorkGroup pu  on syslog.Operator = pu.FID
      where LogType=17 {0} order by logtime desc
    </Content>
    <Content Key="PackageCodeRecycle" DataBaseType="Oracle">
      select CONTENT,LOGTIME,FNames NAME,cargotypename as CARGOTYPETEXT from SysLog  left join CargoType  on syslog.KeyID2=CargoType.cargotypeid
      inner join AC_WorkGroup pu  on syslog.Operator = pu.FID
      where LogType=17 {0} order by logtime desc
    </Content>


    <Content Key="UserReport" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      DECLARE @SummaryType varchar(16)
      SET @SummaryType = 'Daily'
      SELECT
      dbo.fun_get_Date(FlowUse.UseDate,@SummaryType) AS [Date], --日期
      CargoTypeInfo.CargoTopTypeText AS CargoTopTypeText, --种类
      CargoTypeInfo.CargoTypeKindText AS CargoTypeKindText,--类别
      CargoTypeInfo.CargoTypeText AS CargoTypeText,--无菌物品
      COUNT(FlowUseList.Quantity) AS Qty --数量
      FROM FlowUse
      INNER JOIN FlowUseList  on FlowUse.UseID = FlowUseList.UseID
      INNER JOIN StorageList  on FlowUseList.StorageID = StorageList.StorageID
      INNER JOIN FlowPackageList  on FlowPackageList.StorageID = StorageList.StorageID
      INNER JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      INNER JOIN AC_ORG AS UseArea  on FlowUse.OrgID = UseArea.ID
      INNER JOIN view_CargoType AS CargoTypeInfo ON FlowPackageList.CargoTypeID = CargoTypeInfo.CargoTypeID
      INNER JOIN AC_WorkGroup  on FlowUse.OPID = AC_WorkGroup.FID
      WHERE 1 = 1
      GROUP BY
      UseArea.Name,
      dbo.fun_get_Date(FlowUse.UseDate,@SummaryType),
      CargoTypeInfo.CargoTypeText,
      CargoTypeInfo.CargoTypeKindText,
      CargoTypeInfo.CargoTopTypeText
      Order By [Date] DESC,CargoTypeText
    </Content>
    <Content Key="UserReport" DataBaseType="Oracle">
      SELECT
      fun_get_Date(FlowUse.UseDate,'Daily') AS UseDate, --日期
      CargoTypeInfo.CargoTopTypeText AS CargoTopTypeText, --种类
      CargoTypeInfo.CargoTypeKindText AS CargoTypeKindText,--类别
      CargoTypeInfo.CargoTypeText AS CargoTypeText,--无菌物品
      COUNT(FlowUseList.Quantity) AS Qty --数量
      FROM FlowUse
      INNER JOIN FlowUseList  on FlowUse.UseID = FlowUseList.UseID
      INNER JOIN StorageList  on FlowUseList.StorageID = StorageList.StorageID
      INNER JOIN FlowPackageList  on FlowPackageList.StorageID = StorageList.StorageID
      INNER JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      INNER JOIN AC_ORG  UseArea  on FlowUse.OrgID = UseArea.ID
      INNER JOIN view_CargoType  CargoTypeInfo ON FlowPackageList.CargoTypeID = CargoTypeInfo.CargoTypeID
      INNER JOIN AC_WorkGroup  on FlowUse.OPID = AC_WorkGroup.FID
      WHERE 1 = 1
      GROUP BY
      UseArea.Name,
      fun_get_Date(FlowUse.UseDate,'Daily'),
      CargoTypeInfo.CargoTypeText,
      CargoTypeInfo.CargoTypeKindText,
      CargoTypeInfo.CargoTopTypeText
      Order By UseDate DESC,CargoTypeText
    </Content>

    <Content Key="UseSummaryDaily" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      DECLARE @SummaryType varchar(16)
      SET @SummaryType = 'Daily'
      SELECT
      UseArea.Name AS UseArea, --区域
      dbo.fun_get_Date(FlowUse.UseDate,@SummaryType) AS [Date], --日期
      CargoTypeInfo.CargoTopTypeText AS CargoTopTypeText, --种类
      CargoTypeInfo.CargoTypeKindText AS CargoTypeKindText,--类别
      CargoTypeInfo.CargoTypeText AS CargoTypeText,--无菌物品
      COUNT(FlowUseList.Quantity) AS Qty --数量
      FROM FlowUse
      INNER JOIN FlowUseList  on FlowUse.UseID = FlowUseList.UseID
      INNER JOIN StorageList  on FlowUseList.StorageID = StorageList.StorageID
      INNER JOIN FlowPackageList  on FlowPackageList.StorageID = StorageList.StorageID
      INNER JOIN PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      INNER JOIN AC_ORG AS UseArea  on FlowUse.OrgID = UseArea.ID
      left JOIN view_CargoType AS CargoTypeInfo ON FlowPackageList.CargoTypeID = CargoTypeInfo.CargoTypeID
      INNER JOIN AC_WorkGroup  on FlowUse.OPID = AC_WorkGroup.FID
      WHERE 1 = 1  {0} -- 可能需要震泽及其下属所有科室
      GROUP BY
      UseArea.Name,
      dbo.fun_get_Date(FlowUse.UseDate,@SummaryType),
      CargoTypeInfo.CargoTypeText,
      CargoTypeInfo.CargoTypeKindText,
      CargoTypeInfo.CargoTopTypeText
      Order By [Date] DESC,UseArea,CargoTypeText
    </Content>
    <Content Key="UseSummaryDaily" DataBaseType="Oracle">
      SELECT
      UseArea.Name AS UseArea, --区域
      fun_get_Date(FlowUse.UseDate,'Daily') AS UseDate, --日期
      CargoTypeInfo.CargoTopTypeText AS CargoTopTypeText, --种类
      CargoTypeInfo.CargoTypeKindText AS CargoTypeKindText,--类别
      CargoTypeInfo.CargoTypeText AS CargoTypeText,--无菌物品
      COUNT(FlowUseList.Quantity) AS Qty --数量
      FROM FlowUse
      inner join FlowUseList  on FlowUse.UseID = FlowUseList.UseID
      inner join StorageList  on FlowUseList.StorageID = StorageList.StorageID
      inner join FlowPackageList  on FlowPackageList.StorageID = StorageList.StorageID
      inner join PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG AS UseArea  on FlowUse.OrgID = UseArea.ID
      left join view_CargoType  CargoTypeInfo ON FlowPackageList.CargoTypeID = CargoTypeInfo.CargoTypeID
      inner join AC_WorkGroup  on FlowUse.OPID = AC_WorkGroup.FID
      WHERE 1 = 1  {0} -- 可能需要震泽及其下属所有科室
      GROUP BY
      UseArea.Name,
      fun_get_Date(FlowUse.UseDate,'Daily'),
      CargoTypeInfo.CargoTypeText,
      CargoTypeInfo.CargoTypeKindText,
      CargoTypeInfo.CargoTopTypeText
      Order By UseDate DESC,UseArea,CargoTypeText
    </Content>

    <Content Key="UseSummaryMonthly" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      DECLARE @SummaryType varchar(16)
      SET @SummaryType = 'Monthly'
      SELECT
      UseArea.Name AS UseArea, --区域
      dbo.fun_get_Date(FlowUse.UseDate,@SummaryType) AS [Date], --日期
      CargoTypeInfo.CargoTopTypeText AS CargoTopTypeText, --种类
      CargoTypeInfo.CargoTypeKindText AS CargoTypeKindText,--类别
      CargoTypeInfo.CargoTypeText AS CargoTypeText,--无菌物品
      COUNT(FlowUseList.Quantity) AS Qty --数量
      FROM FlowUse
      inner join FlowUseList  on FlowUse.UseID = FlowUseList.UseID
      inner join StorageList  on FlowUseList.StorageID = StorageList.StorageID
      inner join FlowPackageList  on FlowPackageList.StorageID = StorageList.StorageID
      inner join PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG AS UseArea  on FlowUse.OrgID = UseArea.ID
      left join view_CargoType AS CargoTypeInfo ON FlowPackageList.CargoTypeID = CargoTypeInfo.CargoTypeID
      inner join AC_WorkGroup  on FlowUse.OPID = AC_WorkGroup.FID
      WHERE 1 = 1  {0} -- 可能需要震泽及其下属所有科室
      GROUP BY
      UseArea.Name,
      dbo.fun_get_Date(FlowUse.UseDate,@SummaryType),
      CargoTypeInfo.CargoTypeText,
      CargoTypeInfo.CargoTypeKindText,
      CargoTypeInfo.CargoTopTypeText
      Order By [Date] DESC,UseArea,CargoTypeText
    </Content>
    <Content Key="UseSummaryMonthly" DataBaseType="Oracle">
      SELECT
      UseArea.Name AS UseArea, --区域
      fun_get_Date(FlowUse.UseDate, 'Monthly') AS BeginDate, --日期
      CargoTypeInfo.CargoTopTypeText AS CargoTopTypeText, --种类
      CargoTypeInfo.CargoTypeKindText AS CargoTypeKindText,--类别
      CargoTypeInfo.CargoTypeText AS CargoTypeText,--无菌物品
      COUNT(FlowUseList.Quantity) AS Qty --数量
      FROM FlowUse
      inner join FlowUseList  on FlowUse.UseID = FlowUseList.UseID
      inner join StorageList  on FlowUseList.StorageID = StorageList.StorageID
      inner join FlowPackageList  on FlowPackageList.StorageID = StorageList.StorageID
      inner join PackageType  on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG  UseArea  on FlowUse.OrgID = UseArea.ID
      left join view_CargoType  CargoTypeInfo ON FlowPackageList.CargoTypeID = CargoTypeInfo.CargoTypeID
      inner join AC_WorkGroup  on FlowUse.OPID = AC_WorkGroup.FID
      WHERE 1 = 1  {0} -- 可能需要震泽及其下属所有科室
      GROUP BY
      UseArea.Name,
      fun_get_Date(FlowUse.UseDate,'Monthly'),
      CargoTypeInfo.CargoTypeText,
      CargoTypeInfo.CargoTypeKindText,
      CargoTypeInfo.CargoTopTypeText
      Order By BeginDate DESC,UseArea,CargoTypeText
    </Content>

    <Content Key="WorkSummaryDaily" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      DECLARE @SummaryType varchar(16)
      SET @SummaryType = 'Daily'
      SELECT
      dbo.fun_get_Date(WorkDetail.[Date],@SummaryType) AS [Date]
      --,CargoType.CargoTopTypeText --种类
      --,CargoType.CargoTypeKindText--类别
      --,CargoType.CargoTypeText--无菌物品、器械包
      --,WorkDetail.[CargoTypeID]
      ,SUM([RecycleQty]) AS [RecycleQty]
      ,SUM([PackageQty]) AS [PackageQty]
      ,SUM([SterilizationQty]) AS [SterilizationQty]
      ,SUM([ProvideQty]) AS [ProvideQty]
      ,SUM([UseQty]) AS [UseQty]
      FROM [view_WorkDetail] AS WorkDetail
      --LEFT JOIN view_CargoType AS CargoType
      --ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      WHERE 1 = 1 {0}
      GROUP BY dbo.fun_get_Date(WorkDetail.[Date],@SummaryType)--,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.[CargoTypeID]
      ORDER BY [Date] DESC
    </Content>
    <Content Key="WorkSummaryDaily" DataBaseType="Oracle">
      SELECT
      fun_get_Date(WorkDetail.OpDate,'Daily') AS OpDate
      --,CargoType.CargoTopTypeText --种类
      --,CargoType.CargoTypeKindText--类别
      --,CargoType.CargoTypeText--无菌物品、器械包
      --,WorkDetail.CargoTypeID
      ,SUM(RecycleQty) AS RecycleQty
      ,SUM(PackageQty) AS PackageQty
      ,SUM(SterilizationQty) AS SterilizationQty
      ,SUM(ProvideQty) AS ProvideQty
      ,SUM(UseQty) AS UseQty
      FROM view_WorkDetail  WorkDetail
      --LEFT JOIN view_CargoType  CargoType
      --ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      WHERE 1 = 1 {0}
      GROUP BY fun_get_Date(WorkDetail.OpDate,'Daily')--,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.CargoTypeID
      ORDER BY OpDate DESC
    </Content>

    <Content Key="WorkSummaryMonthly" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      DECLARE @SummaryType varchar(16)
      SET @SummaryType = 'Monthly'
      SELECT
      dbo.fun_get_Date(WorkDetail.[Date],@SummaryType) AS [Date]
      --,CargoType.CargoTopTypeText --种类
      --,CargoType.CargoTypeKindText--类别
      --,CargoType.CargoTypeText--无菌物品、器械包
      --,WorkDetail.[CargoTypeID]
      ,SUM([RecycleQty]) AS [RecycleQty]
      ,SUM([PackageQty]) AS [PackageQty]
      ,SUM([SterilizationQty]) AS [SterilizationQty]
      ,SUM([ProvideQty]) AS [ProvideQty]
      ,SUM([UseQty]) AS [UseQty]
      FROM [view_WorkDetail] AS WorkDetail
      --LEFT JOIN view_CargoType AS CargoType
      --ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      WHERE 1 = 1 {0}
      GROUP BY dbo.fun_get_Date(WorkDetail.[Date],@SummaryType)--,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.[CargoTypeID]
      ORDER BY [Date] DESC
    </Content>
    <Content Key="WorkSummaryMonthly" DataBaseType="Oracle">
      SELECT
      fun_get_Date(WorkDetail.OpDate,'Monthly') AS OpDate
      --,CargoType.CargoTopTypeText --种类
      --,CargoType.CargoTypeKindText--类别
      --,CargoType.CargoTypeText--无菌物品、器械包
      --,WorkDetail.CargoTypeID
      ,SUM(RecycleQty) AS RecycleQty
      ,SUM(PackageQty) AS PackageQty
      ,SUM(SterilizationQty) AS SterilizationQty
      ,SUM(ProvideQty) AS ProvideQty
      ,SUM(UseQty) AS UseQty
      FROM view_WorkDetail  WorkDetail
      --LEFT JOIN view_CargoType  CargoType
      --ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      WHERE 1 = 1 {0}
      GROUP BY fun_get_Date(WorkDetail.OpDate,'Monthly')--,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.CargoTypeID
      ORDER BY OpDate DESC
    </Content>

    <Content Key="WorkDetailDaily" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      DECLARE @SummaryType varchar(16)
      SET @SummaryType = 'Daily'
      SELECT
      dbo.fun_get_Date(WorkDetail.[Date],@SummaryType) AS [Date]
      ,CargoType.CargoTopTypeText --种类
      ,CargoType.CargoTypeKindText--类别
      ,CargoType.CargoTypeText--无菌物品、器械包
      ,WorkDetail.[CargoTypeID]
      ,SUM([RecycleQty]) AS [RecycleQty]
      ,SUM([PackageQty]) AS [PackageQty]
      ,SUM([SterilizationQty]) AS [SterilizationQty]
      ,SUM([ProvideQty]) AS [ProvideQty]
      ,SUM([UseQty]) AS [UseQty]
      FROM [view_WorkDetail] AS WorkDetail
      LEFT JOIN view_CargoType AS CargoType
      ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      WHERE 1 = 1 {0}
      GROUP BY dbo.fun_get_Date(WorkDetail.[Date],@SummaryType),CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.[CargoTypeID]
      ORDER BY [Date] DESC,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="WorkDetailDaily" DataBaseType="Oracle">
      SELECT
      fun_get_Date(WorkDetail.Date,'Daily') AS OpDate
      ,CargoType.CargoTopTypeText --种类
      ,CargoType.CargoTypeKindText--类别
      ,CargoType.CargoTypeText--无菌物品、器械包
      ,WorkDetail.CargoTypeID
      ,SUM(RecycleQty) AS RecycleQty
      ,SUM(PackageQty) AS PackageQty
      ,SUM(SterilizationQty) AS SterilizationQty
      ,SUM(ProvideQty) AS ProvideQty
      ,SUM(UseQty) AS UseQty
      FROM view_WorkDetail  WorkDetail
      LEFT JOIN view_CargoType  CargoType
      ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      WHERE 1 = 1 {0}
      GROUP BY fun_get_Date(WorkDetail.OpDate,'Daily'),CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.CargoTypeID
      ORDER BY OpDate DESC,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="WorkDetailMonthly" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      DECLARE @SummaryType varchar(16)
      SET @SummaryType = 'Monthly'
      SELECT
      dbo.fun_get_Date(WorkDetail.[Date],@SummaryType) AS [Date]
      ,CargoType.CargoTopTypeText --种类
      ,CargoType.CargoTypeKindText--类别
      ,CargoType.CargoTypeText--无菌物品、器械包
      ,WorkDetail.[CargoTypeID]
      ,SUM([RecycleQty]) AS [RecycleQty]
      ,SUM([PackageQty]) AS [PackageQty]
      ,SUM([SterilizationQty]) AS [SterilizationQty]
      ,SUM([ProvideQty]) AS [ProvideQty]
      ,SUM([UseQty]) AS [UseQty]
      FROM [view_WorkDetail] AS WorkDetail
      LEFT JOIN view_CargoType AS CargoType
      ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      WHERE 1 = 1 {0}
      GROUP BY dbo.fun_get_Date(WorkDetail.[Date],@SummaryType),CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.[CargoTypeID]
      ORDER BY [Date] DESC,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="WorkDetailMonthly" DataBaseType="Oracle">
      SELECT
      fun_get_Date(WorkDetail.OpDate,'Monthly') AS OpDate
      ,CargoType.CargoTopTypeText --种类
      ,CargoType.CargoTypeKindText--类别
      ,CargoType.CargoTypeText--无菌物品、器械包
      ,WorkDetail.CargoTypeID
      ,SUM(RecycleQty) AS RecycleQty
      ,SUM(PackageQty) AS PackageQty
      ,SUM(SterilizationQty) AS SterilizationQty
      ,SUM(ProvideQty) AS ProvideQty
      ,SUM(UseQty) AS UseQty
      FROM view_WorkDetail  WorkDetail
      LEFT JOIN view_CargoType  CargoType
      ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      WHERE 1 = 1 {0}
      GROUP BY dbo.fun_get_Date(WorkDetail.OpDate,'Monthly'),CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.CargoTypeID
      ORDER BY OpDate DESC,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="PersonnelDetailMonthly" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
      DECLARE @SummaryType varchar(16)
      SET @SummaryType = 'Monthly'
      SELECT
      dbo.fun_get_Date(WorkDetail.[Date],@SummaryType) AS [Date]
      ,WorkDetail.OPID
      ,Employee.FNames AS UserText
      ,CargoType.CargoTopTypeText --种类
      ,CargoType.CargoTypeKindText--类别
      ,CargoType.CargoTypeText--无菌物品、器械包
      ,WorkDetail.[CargoTypeID]
      ,SUM([RecycleQty]) AS [RecycleQty]
      ,SUM([PackageQty]) AS [PackageQty]
      ,SUM([SterilizationQty]) AS [SterilizationQty]
      ,SUM([ProvideQty]) AS [ProvideQty]
      ,SUM([UseQty]) AS [UseQty]
      FROM [view_WorkDetail] AS WorkDetail
      LEFT JOIN view_CargoType AS CargoType
      ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN AC_WorkGroup AS Employee
      ON WorkDetail.OPID = Employee.ID
      WHERE 1 = 1 {0}
      GROUP BY dbo.fun_get_Date(WorkDetail.[Date],@SummaryType),WorkDetail.OPID,Employee.FNames,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.[CargoTypeID]
      ORDER BY [Date] DESC,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="PersonnelDetailMonthly" DataBaseType="Oracle">
      SELECT
      fun_get_Date(WorkDetail.OpDate,'Monthly') AS OpDate
      ,WorkDetail.OPID
      ,Employee.FNames AS UserText
      ,CargoType.CargoTopTypeText --种类
      ,CargoType.CargoTypeKindText--类别
      ,CargoType.CargoTypeText--无菌物品、器械包
      ,WorkDetail.CargoTypeID
      ,SUM(RecycleQty) AS RecycleQty
      ,SUM(PackageQty) AS PackageQty
      ,SUM(SterilizationQty) AS SterilizationQty
      ,SUM(ProvideQty) AS ProvideQty
      ,SUM(UseQty) AS UseQty
      FROM view_WorkDetail  WorkDetail
      LEFT JOIN view_CargoType  CargoType
      ON WorkDetail.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN AC_WorkGroup  Employee
      ON WorkDetail.OPID = Employee.ID
      WHERE 1 = 1 {0}
      GROUP BY fun_get_Date(WorkDetail.OpDate,'Monthly'),WorkDetail.OPID,Employee.FNames,CargoType.CargoTopTypeText,CargoType.CargoTypeKindText,CargoType.CargoTypeText,WorkDetail.CargoTypeID
      ORDER BY OpDate DESC,CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="QueryFailedPackage" DataBaseType="SqlServer">
      select
      o.Name as Area,
      ck.KindName AS CargoTypeKindText,--类别
      c.CargoTypeName AS CargoTypeText,--包类型
      sl.Barcode,
      pt.PName AS OutPacking,--外包装
      dbo.fun_get_BadFlagReason(fl.BadFlagReason) as BadFlagReason  -- 坏包原因
      from FlowPackageList fl
      inner join FlowPackage f  on fl.FPackageID = f.FPackageID
      inner join StorageList sl  on fl.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck  on c.CargoTypeKind = ck.ID
      inner join PackageType pt  on fl.PackageTypeID = pt.PTypeID
      inner join Warehouse  w  on w.WarehouseID   = sl.WarehouseID
      inner join AC_Org o   on o.ID=w.OrgID
      where fl.BadFlag = 1 {0}
    </Content>
    <Content Key="QueryFailedPackage" DataBaseType="Oracle">
      select
      o.Name as Area,
      ck.KindName AS CargoTypeKindText,--类别
      c.CargoTypeName AS CargoTypeText,--包类型
      sl.Barcode,
      pt.PName AS OutPacking,--外包装
      fun_get_BadFlagReason(fl.BadFlagReason) as BadFlagReason  -- 坏包原因
      from FlowPackageList fl
      inner join FlowPackage f  on fl.FPackageID = f.FPackageID
      inner join StorageList sl  on fl.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck  on c.CargoTypeKind = ck.ID
      inner join PackageType pt  on fl.PackageTypeID = pt.PTypeID
      inner join Warehouse  w  on w.WarehouseID   = sl.WarehouseID
      inner join AC_Org o   on o.ID=w.OrgID
      where fl.BadFlag = 1 {0}
    </Content>

    <Content Key="ReportRecyclePDASummary" DataBaseType="SqlServer">
      SELECT C.CARGOTYPEID,C.CARGOTYPENAME,1 AS FQTY
      FROM FLOWRECYCLE R WITH (NOLOCK)
      INNER JOIN FLOWRECYCLELIST RL WITH (NOLOCK) ON R.FRECYCLEID = RL.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST PL WITH (NOLOCK) ON RL.PACKAGEID = PL.PACKAGEID
      INNER JOIN STORAGELIST SL WITH (NOLOCK) ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN WAREHOUSE W WITH (NOLOCK) ON SL.WAREHOUSEID = W.WAREHOUSEID
      INNER JOIN CARGOTYPE C WITH (NOLOCK) ON PL.CARGOTYPEID = C.CARGOTYPEID
      WHERE 1=1 {0}
      ORDER BY C.CARGOTYPENAME
    </Content>
    <Content Key="ReportRecyclePDASummary" DataBaseType="Oracle">
      SELECT C.CARGOTYPEID,C.CARGOTYPENAME,1 AS FQTY
      FROM FLOWRECYCLE R
      INNER JOIN FLOWRECYCLELIST RL  ON R.FRECYCLEID = RL.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST PL   ON RL.PACKAGEID = PL.PACKAGEID
      INNER JOIN STORAGELIST SL   ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN WAREHOUSE W  ON SL.WAREHOUSEID = W.WAREHOUSEID
      INNER JOIN CARGOTYPE C  ON PL.CARGOTYPEID = C.CARGOTYPEID
      WHERE 1 = 1 {0}
      ORDER BY C.CARGOTYPENAME
    </Content>


    <Content Key="Report_WorkLoadSummany" Desc="" DataBaseType="SqlServer">
      <![CDATA[
   SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
    with dtemp as
    (
	    select fpl.PackageID
	    from FlowDisinfect fd inner join FlowDisinfectContainerList fdc on fd.FDisinfectID = fdc.FDisinfectID
						      inner join FlowRecycleContainer frc on fd.FDisinfectID = frc.LastFDisinfectID
						      inner join FlowRecycleList frl on frc.FRecycleID = frl.FRecycleID
						      inner join FlowPackageList fpl on frl.PackageID = fpl.PackageID
	    where fd.DisinfectDate between  @begindate  and  @enddate and fpl.FlowOrgID=@floworgid 
	    group by fpl.PackageID
	    having COUNT(fdc.Status) = SUM(case fdc.status when 1 then 1 when 2 then 1 else 0 end)
    )
	 SELECT CK.KINDNAME,C.CARGOTYPENAME,1 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	  from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where fr.RecycleDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid 
   union all
   	 SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,1 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	  from dtemp inner join FlowPackageList pl on dtemp.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	 union all 
	 SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,1 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
								inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
                inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
    where p.PackageDate between @begindate and @enddate  and istemp = 0  and pl.FlowOrgID = @floworgid
   union all 
	 SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,1 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from FlowPackageList pl	inner join  FlowPackageIn p on pl.FPackageID = p.FPackageID
								inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
                inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
    where p.PackageInDate between @begindate and @enddate  and istemp = 2  and pl.FlowOrgID = @floworgid 
   union all   
     
    SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,1 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where dl.BeginDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid 
    union all
     SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,1 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where dl.BeginDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and pl.badflag = -2
     union all 
    SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,1 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
						  inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where fp.ProvideDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid 
    union all
    
    SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,1 AS USENUM,0 AS USENOTRECYCLENUM
	 from FlowPackageList pl
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where pl.UseDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid 
    union all
    
     SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,1 AS USENOTRECYCLENUM
	 from FlowPackageList pl
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join storagelist sl on pl.StorageID = sl.StorageID
	  where pl.UseDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and sl.status = 70
      
	
      ]]>
    </Content>
    <Content Key="Report_WorkLoadSummany" Desc="" DataBaseType="Oracle">
      <![CDATA[
      with dtemp as
    (
	    select fpl.PackageID
	    from FlowDisinfect fd inner join FlowDisinfectContainerList fdc on fd.FDisinfectID = fdc.FDisinfectID
						      inner join FlowRecycleContainer frc on fd.FDisinfectID = frc.LastFDisinfectID
						      inner join FlowRecycleList frl on frc.FRecycleID = frl.FRecycleID
						      inner join FlowPackageList fpl on frl.PackageID = fpl.PackageID
	    where fd.DisinfectDate between  :begindate  and  :enddate and fpl.FlowOrgID=:floworgid 
	    group by fpl.PackageID
	    having COUNT(fdc.Status) = SUM(case fdc.status when 1 then 1 when 2 then 1 else 0 end)
    )
	 SELECT CK.KINDNAME,C.CARGOTYPENAME,1 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	  from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where fr.RecycleDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid 
   union all
   	 SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,1 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	  from dtemp inner join FlowPackageList pl on dtemp.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	 union all 
	 SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,1 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
								inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
                inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
    where p.PackageDate between :begindate and :enddate  and istemp = 0  and pl.FlowOrgID = :floworgid
   union all 
	 SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,1 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from FlowPackageList pl	inner join  FlowPackageIn p on pl.FPackageID = p.FPackageID
								inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
                inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
    where p.PackageInDate between :begindate and :enddate  and istemp = 2  and pl.FlowOrgID = :floworgid 
   union all   
     
    SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,1 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where dl.BeginDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid 
    union all
     SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,1 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where dl.BeginDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid and pl.badflag = -2
     union all 
    SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,1 AS PROVIDENUM,0 AS USENUM,0 AS USENOTRECYCLENUM
	 from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
						  inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where fp.ProvideDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid 
    union all
    
    SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,1 AS USENUM,0 AS USENOTRECYCLENUM
	 from FlowPackageList pl
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
	  where pl.UseDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid 
    union all
    
     SELECT CK.KINDNAME,C.CARGOTYPENAME,0 AS RECYCLENUM,0 AS DISINFECTNUM,0 AS PACKAGENUM,0 AS STERILIZENUM,0 AS STERILIZECHECKNUM,0 AS PROVIDENUM,0 AS USENUM,1 AS USENOTRECYCLENUM
	 from FlowPackageList pl
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join storagelist sl on pl.StorageID = sl.StorageID
	  where pl.UseDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid and sl.status = 70
     ]]>
    </Content>

    <Content Key="Report_PackageTraceAll" Desc="" DataBaseType="SqlServer">
      <![CDATA[
   SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
  	SELECT '无条码回收' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,fr.RecycleDate as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	  from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on fr.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
	  where fr.RecycleDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and pl.istemp = 1
   union all
    SELECT '配包未审核' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,p.PackageDate as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
								inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
                inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
                inner join ac_workgroup aw on P.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
    where p.PackageDate between @begindate and @enddate  and istemp = 0  and pl.FlowOrgID = @floworgid and pl.CheckID is null
   union all   
     
    SELECT '灭菌未审核' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,dl.begindate  as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on dl.UserID = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
	  where dl.BeginDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and pl.badflag = -2 
    union all
     SELECT '发放未确认' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,fp.ProvideDate  as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
						  inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on fp.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
	  where fp.ProvideDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and fpl.status = 0
    union all
    
    SELECT '领取未入库' as WRONGKIND, CK.KINDNAME,C.CARGOTYPENAME,f.fetchdate  as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowPackageList pl
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join storagelist sl on pl.storageid = sl.storageid
              inner join flowfetchlist fl on fl.packageid = pl.packageid
              inner join flowfetch f on fl.fetchid = f.fetchid and f.fetchtype = 0
              inner join ac_workgroup aw on f.opid = aw.fid
	  where f.fetchdate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and not exists(select 1 from flowfetch inner join flowfetchlist on flowfetch.FetchID = FlowFetchList.FetchID and flowfetchlist.PackageID = pl.packageid and FlowFetch.FetchType = 2)

    union all
    
    SELECT '使用未领取' as WRONGKIND, CK.KINDNAME,C.CARGOTYPENAME,pl.UseDate  as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowPackageList pl
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on pl.userid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
	  where pl.UseDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and not exists(select 1 from flowfetch inner join flowfetchlist on flowfetch.FetchID = FlowFetchList.FetchID and flowfetchlist.PackageID = pl.packageid and FlowFetch.FetchType = 0 )
    union all
    
     SELECT  '回收未使用' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,fr.RecycleDate  as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, isnull(w.warehousename,'') + isnull(l.LocationName,'')  as MEMO
	 from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on fr.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
              left join location l on sl.locationid = l.locationid
              left join Warehouse w on sl.WarehouseID = w.WarehouseID
	  where fr.RecycleDate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and pl.istemp = 0 and pl.userid is null
      union all
    SELECT '添加新任务' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,p.PackageDate as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
								inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
                inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
                inner join ac_workgroup aw on P.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
    where p.PackageDate between @begindate and @enddate  and istemp = 0  and pl.FlowOrgID = @floworgid and not exists(select 1 from FlowPackageListDisinfect where FlowPackageListDisinfect.PackageID = pl.PackageID and FlowPackageListDisinfect.FRecycleID<> '00000000-0000-0000-0000-000000000000')
                                                                                                       and (pl.BadFlag < 0  or exists(select 1 from FlowSterilizationList where FlowSterilizationList.PackageID = pl.PackageID))
      ]]>
    </Content>
    <Content Key="Report_PackageTraceAll" Desc="" DataBaseType="Oracle">
      <![CDATA[
      SELECT '无条码回收' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,fr.RecycleDate as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	  from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on fr.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
	  where fr.RecycleDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid and pl.istemp = 1
   union all
    SELECT '配包未审核' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,p.PackageDate as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
								inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
                inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
                inner join ac_workgroup aw on P.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
    where p.PackageDate between :begindate and :enddate  and istemp = 0  and pl.FlowOrgID = :floworgid and pl.CheckID is null
   union all   
     
    SELECT '灭菌未审核' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,dl.begindate  as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from DevicesUseLog dl inner join FlowSterilizationList fsl on dl.LogID = fsl.SterilizationLogID
							inner join FlowPackageList pl on fsl.PackageID = pl.PackageID
							inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on dl.UserID = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
	  where dl.BeginDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid and pl.badflag = -2 
    union all
     SELECT '发放未确认' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,fp.ProvideDate  as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID = fpl.ProvideID
						  inner join FlowPackageList pl on fpl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on fp.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
	  where fp.ProvideDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid and fpl.status = 0
    union all
    
    SELECT '领取未入库' as WRONGKIND, CK.KINDNAME,C.CARGOTYPENAME,f.fetchdate as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowPackageList pl
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join storagelist sl on pl.storageid = sl.storageid
              inner join flowfetchlist fl on fl.packageid = pl.packageid
              inner join flowfetch f on fl.fetchid = f.fetchid and f.fetchtype = 0
              inner join ac_workgroup aw on f.opid = aw.fid
	  where f.fetchdate between  @begindate  and  @enddate and pl.FlowOrgID=@floworgid and fl.packageid not  in  (select flowfetchlist.packageid from flowfetch inner join flowfetchlist on flowfetch.FetchID = FlowFetchList.FetchID  and FlowFetch.FetchType = 2)

    union all
    
    SELECT '使用未领取' as WRONGKIND, CK.KINDNAME,C.CARGOTYPENAME,pl.UseDate  as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowPackageList pl
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on pl.userid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
	  where pl.UseDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid and pl.packageid not  in  (select flowfetchlist.packageid from flowfetch inner join flowfetchlist on flowfetch.FetchID = FlowFetchList.FetchID  and FlowFetch.FetchType = 2)
    union all
    
     SELECT  '回收未使用' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,fr.RecycleDate  as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, nvl(w.warehousename,'') || nvl(l.LocationName,'') as MEMO
	 from FlowRecycle fr inner join FlowRecycleList frl on fr.FRecycleID = frl.FRecycleID
						  inner join FlowPackageList pl on frl.PackageID = pl.PackageID
						  inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
              inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
              inner join ac_workgroup aw on fr.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
              left join location l on sl.locationid = l.locationid
              left join Warehouse w on sl.WarehouseID = w.WarehouseID
	  where fr.RecycleDate between  :begindate  and  :enddate and pl.FlowOrgID=:floworgid and pl.istemp = 0 and pl.userid is null
    union all
    SELECT '添加新任务' as WRONGKIND,CK.KINDNAME,C.CARGOTYPENAME,p.PackageDate as OPDATE,aw.fnames as OPNAME,sl.BARCODE, 1 as NUM, '' as MEMO
	 from FlowPackageList pl	inner join  FlowPackage p on pl.FPackageID = p.FPackageID
								inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
                inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID 
                inner join ac_workgroup aw on P.opid = aw.fid
              inner join storagelist sl on pl.storageid = sl.storageid
    where p.PackageDate between :begindate and :enddate  and istemp = 0  and pl.FlowOrgID = :floworgid and pl.packageid not in (select PackageID from FlowPackageListDisinfect where   FlowPackageListDisinfect.FRecycleID<> '00000000-0000-0000-0000-000000000000')
                                                                                                       and (pl.BadFlag < 0  or pl.packageid in  (select  packageid from FlowSterilizationList))
     ]]>
    </Content>

    <Content Key="ReportFetchInSummary" Desc="入库报表" DataBaseType="SqlServer">
      <![CDATA[
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
        SELECT C.CARGOTYPENAME,FIN.OPID,ACO.NAME OPERATOR, FIN.RECIPIENTID,ACR.NAME RECIPIENT, FIN.FETCHDATE,SL.EXPDATE,FIN.LOCATIONID,L.LOCATIONNAME,W.WAREHOUSENAME,AO.NAME ORGNAME ,COUNT(1) QTY
        FROM FLOWFETCH FIN
        INNER JOIN FLOWFETCHLIST FL ON FL.FETCHID=FIN.FETCHID
        INNER JOIN FLOWPACKAGELIST FPL ON FPL.PACKAGEID=FL.PACKAGEID
        INNER JOIN STORAGELIST SL ON SL.STORAGEID=FPL.STORAGEID
        INNER JOIN CARGOTYPE C ON C.CARGOTYPEID=FPL.CARGOTYPEID
        LEFT JOIN AC_USER ACO ON ACO.ID=FIN.OPID
        LEFT JOIN AC_USER ACR ON ACR.ID=FIN.RECIPIENTID
        LEFT JOIN LOCATION L ON L.LOCATIONID=FIN.LOCATIONID 
        LEFT JOIN WAREHOUSE W ON W.WAREHOUSEID=L.WAREHOUSEID 
        LEFT JOIN AC_ORG AO ON AO.ID=W.ORGID 
        WHERE FIN.FETCHTYPE=2 {0}
        GROUP BY C.CARGOTYPENAME,FIN.OPID,ACO.NAME, FIN.RECIPIENTID,ACR.NAME, FIN.FETCHDATE,SL.EXPDATE,FIN.LOCATIONID,L.LOCATIONNAME,W.WAREHOUSENAME,AO.NAME
        ORDER BY FETCHDATE DESC
      ]]>
    </Content>
    <Content Key="ReportFetchInSummary" Desc="入库报表" DataBaseType="Oracle">
      <![CDATA[
        SELECT C.CARGOTYPENAME,FIN.OPID,ACO.NAME OPERATOR, FIN.RECIPIENTID,ACR.NAME RECIPIENT, FIN.FETCHDATE,SL.EXPDATE,FIN.LOCATIONID,L.LOCATIONNAME,W.WAREHOUSENAME,AO.NAME ORGNAME ,COUNT(1) QTY
        FROM FLOWFETCH FIN
        INNER JOIN FLOWFETCHLIST FL ON FL.FETCHID=FIN.FETCHID
        INNER JOIN FLOWPACKAGELIST FPL ON FPL.PACKAGEID=FL.PACKAGEID
        INNER JOIN STORAGELIST SL ON SL.STORAGEID=FPL.STORAGEID
        INNER JOIN CARGOTYPE C ON C.CARGOTYPEID=FPL.CARGOTYPEID
        LEFT JOIN AC_USER ACO ON ACO.ID=FIN.OPID
        LEFT JOIN AC_USER ACR ON ACR.ID=FIN.RECIPIENTID
        LEFT JOIN LOCATION L ON L.LOCATIONID=FIN.LOCATIONID 
        LEFT JOIN WAREHOUSE W ON W.WAREHOUSEID=L.WAREHOUSEID 
        LEFT JOIN AC_ORG AO ON AO.ID=W.ORGID 
        WHERE FIN.FETCHTYPE=2 {0}
        GROUP BY C.CARGOTYPENAME,FIN.OPID,ACO.NAME, FIN.RECIPIENTID,ACR.NAME, FIN.FETCHDATE,SL.EXPDATE,FIN.LOCATIONID,L.LOCATIONNAME,W.WAREHOUSENAME,AO.NAME
        ORDER BY FETCHDATE DESC
      ]]>
    </Content>
    <Content Key="Query_ReportHistory" DataBaseType="SqlServer">
      SELECT * FROM ReportHistory WHERE 1 = 1 {0}
    </Content>
	<Content Key="Query_ReportHistory" DataBaseType="Oracle">
		  SELECT * FROM ReportHistory WHERE 1 = 1 {0}
	</Content>

    <Content Key="ReportWorkloadSummary" Desc="月份统计工作量及收入统计报表" DataBaseType="SqlServer">
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
        declare @FDate varchar(20)
        declare @FProvideQty int
        declare @FSterilizeQty int
        declare @FSterilizeDQty int
        declare @FAccount decimal(18,2)

        select @FDate = CONVERT(varchar(7),@begindate,120)

        select @FProvideQty = COUNT(1),@FAccount = SUM(c.Amount) 
        from 
        (
        select distinct p.PackageID,p.CargoTypeID
        from FlowProvideList fpl inner join FlowProvide fp on fp.ProvideID=fpl.ProvideID
                                  inner join flowpackagelist p on fpl.packageid = p.packageid
        where ProvideDate between @begindate and @enddate 
        ) as t inner join CargoType c on t.CargoTypeID = c.CargoTypeID

        select @FSterilizeQty = COUNT(1)
        from DevicesUseLog du inner join Devices d on du.DeviceID = d.DeviceID
        where BeginDate between @begindate and @enddate and d.DeviceType =4 

        select @FSterilizeDQty = COUNT(1)
        from DevicesUseLog du inner join Devices d on du.DeviceID = d.DeviceID
        where BeginDate between @begindate and @enddate and d.DeviceType =5

        select @FDate as FDate,@FProvideQty as FProvideQty,
		        @FSterilizeQty as FSterilizeQty,
		        @FSterilizeDQty as FSterilizeDQty,
		        @FAccount as FAccount

      ]]>
    </Content>
    <Content Key="ReportWorkloadSummary" Desc="月份统计工作量及收入统计报表" DataBaseType="Oracle">
      <![CDATA[
      declare 
	   vFDate varchar2(20);
       vFProvideQty number;
       vFSterilizeQty number;
       vFSterilizeDQty number;
       vFAccount NUMBER(18,2);
	   o_cursor sys_refcursor;
      begin
		vFDate := to_char(:begindate,'yyyy-mm');

      select  COUNT(1),SUM(c.Amount) into  vFProvideQty,vFAccount
      from 
      (
      select distinct p.PackageID,p.CargoTypeID
      from FlowProvideList fpl inner join FlowProvide fp on fp.ProvideID=fpl.ProvideID
                            inner join flowpackagelist p on fpl.packageid = p.packageid
      where ProvideDate between :begindate and :enddate 
      ) t inner join CargoType c on t.CargoTypeID = c.CargoTypeID;

      select    COUNT(1) into vFSterilizeQty
      from DevicesUseLog du inner join Devices d on du.DeviceID = d.DeviceID
      where BeginDate between :begindate and :enddate and d.DeviceType =4 ;

      select  COUNT(1) into vFSterilizeDQty
      from DevicesUseLog du inner join Devices d on du.DeviceID = d.DeviceID
      where BeginDate between :begindate and :enddate and d.DeviceType =5;

      open o_cursor for select vFDate as FDate,vFProvideQty as FProvideQty,
		      vFSterilizeQty as FSterilizeQty,
		      vFSterilizeDQty as FSterilizeDQty,
		      vFAccount as FAccount from dual;
      end;			  
       
      ]]>
    </Content>

    <Content Key="GetProvideRecycleReport" Desc="回收发放数量" DataBaseType="SqlServer">
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
      SELECT
      ORGID,O.NAME AS ORGNAME,T.CARGOTYPEID,C.CARGOTYPENAME,SUM(RECYCLEQTY) AS RECYCLEQTY,SUM(RETURNQTY) AS RETURNQTY,SUM(PROVIDEQTY) AS PROVIDEQTY,SUM(LENDQTY) AS LENDQTY
      FROM
      (
      SELECT
      W.OrgID as ORGID,
      FPL.CargoTypeID as CARGOTYPEID,
      COUNT(distinct RL.PackageID) as RECYCLEQTY,
      0 as RETURNQTY,
      0 as PROVIDEQTY,
      0 as LENDQTY
      FROM FlowRecycleList RL
      INNER JOIN FlowRecycle FR ON FR.FRecycleID = RL.FRecycleID
      INNER JOIN FlowPackageList FPL ON RL.PackageID = FPL.PackageID
      INNER JOIN Warehouse W ON FPL.LastWarehouseID = W.WarehouseID
      where 1=1 {0}
      GROUP BY W.OrgID,FPL.CargoTypeID
      UNION ALL
      SELECT
      FR.OrgID as ORGID,
      RL.CargoTypeID as CARGOTYPEID,
      0 as RECYCLEQTY,
      SUM(ReturnQuantity) as RETURNQTY,
      0 as PROVIDEQTY,
      0 as LENDQTY
      FROM FlowProvideLendReturnDetail RL
      INNER JOIN FlowProvideLendReturn FR ON FR.ProvideLendReturnID = RL.ProvideLendReturnID
      where 1=1 {3}
      GROUP BY FR.OrgID,RL.CargoTypeID
      UNION ALL
      SELECT
      FP.OrgID AS ORGID,
      FPL.CargoTypeID AS CARGOTYPEID,
      0 AS RECYCLEQTY,
      0 as RETURNQTY,
      COUNT(distinct FPL.PackageID) AS PROVIDEQTY,
      0 AS LENDQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      INNER JOIN AC_ORG AO ON FP.OrgID = AO.ID
      INNER JOIN CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      where FPL.LENDFLAG = 0 {1}
      GROUP BY FP.OrgID,FPL.CargoTypeID
      UNION ALL
      SELECT
      FP.OrgID AS ORGID,
      FPL.CargoTypeID AS CARGOTYPEID,
      0 AS RECYCLEQTY,
      0 AS RETURNQTY,
      0 AS PROVIDEQTY,
      COUNT(distinct FPL.PackageID) AS LENDQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      INNER JOIN AC_ORG AO ON FP.OrgID = AO.ID
      INNER JOIN CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      where FPL.LENDFLAG = 1 {1}
      GROUP BY FP.OrgID,FPL.CargoTypeID
      ) T
      INNER JOIN CargoType C ON T.CARGOTYPEID = C.CargoTypeID
      INNER JOIN AC_Org O ON T.ORGID = O.ID
      GROUP BY ORGID,O.NAME,T.CARGOTYPEID,C.CARGOTYPENAME
      {2}
    </Content>

    <Content Key="GetProvideRecycleReport" Desc="回收发放数量" DataBaseType="Oracle">
      SELECT
      ORGID,O.NAME AS ORGNAME,T.CARGOTYPEID,C.CARGOTYPENAME,SUM(RECYCLEQTY) AS RECYCLEQTY,SUM(RETURNQTY) AS RETURNQTY,SUM(PROVIDEQTY) AS PROVIDEQTY,SUM(LENDQTY) AS LENDQTY
      FROM
      (
      SELECT
      W.OrgID as ORGID,
      FPL.CargoTypeID as CARGOTYPEID,
      COUNT(distinct RL.PackageID) as RECYCLEQTY,
      0 as RETURNQTY,
      0 as PROVIDEQTY,
      0 as LENDQTY
      FROM FlowRecycleList RL
      INNER JOIN FlowRecycle FR ON FR.FRecycleID = RL.FRecycleID
      INNER JOIN FlowPackageList FPL ON RL.PackageID = FPL.PackageID
      INNER JOIN Warehouse W ON FPL.LastWarehouseID = W.WarehouseID
      where 1=1 {0}
      GROUP BY W.OrgID,FPL.CargoTypeID
      UNION ALL
      SELECT
      FR.OrgID as ORGID,
      RL.CargoTypeID as CARGOTYPEID,
      0 as RECYCLEQTY,
      SUM(ReturnQuantity) as RETURNQTY,
      0 as PROVIDEQTY,
      0 as LENDQTY
      FROM FlowProvideLendReturnDetail RL
      INNER JOIN FlowProvideLendReturn FR ON FR.ProvideLendReturnID = RL.ProvideLendReturnID
      where 1=1 {3}
      GROUP BY FR.OrgID,RL.CargoTypeID
      UNION ALL
      SELECT
      FP.OrgID AS ORGID,
      FPL.CargoTypeID AS CARGOTYPEID,
      0 AS RECYCLEQTY,
      0 as RETURNQTY,
      COUNT(distinct FPL.PackageID) AS PROVIDEQTY,
      0 AS LENDQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      INNER JOIN AC_ORG AO ON FP.OrgID = AO.ID
      INNER JOIN CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      where FPL.LENDFLAG = 0 {1}
      GROUP BY FP.OrgID,FPL.CargoTypeID
      UNION ALL
      SELECT
      FP.OrgID AS ORGID,
      FPL.CargoTypeID AS CARGOTYPEID,
      0 AS RECYCLEQTY,
      0 AS RETURNQTY,
      0 AS PROVIDEQTY,
      COUNT(distinct FPL.PackageID) AS LENDQTY
      FROM FlowProvideList PL
      INNER JOIN FlowProvide FP ON FP.ProvideID = PL.ProvideID
      INNER JOIN FlowPackageList FPL  ON PL.PackageID = FPL.PackageID
      INNER JOIN AC_ORG AO ON FP.OrgID = AO.ID
      INNER JOIN CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      where FPL.LENDFLAG = 1 {1}
      GROUP BY FP.OrgID,FPL.CargoTypeID
      ) T
      INNER JOIN CargoType C ON T.CARGOTYPEID = C.CargoTypeID
      INNER JOIN AC_Org O ON T.ORGID = O.ID
      GROUP BY ORGID,O.NAME,T.CARGOTYPEID,C.CARGOTYPENAME
      {2}
    </Content>
    <Content Key="ReportProvideMaterialStock" Desc="一次性物品统计" DataBaseType="SqlServer">
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		select CARGOTYPENAME,sum(InQty) as INQTY, sum(OutQty) as OUTQTY, sum(StockQty) as STOCKQTY
		from
		(
		SELECT  c.CargoTypeName, sum(sil.Quantity) as InQty, 0 as OutQty, 0 as StockQty
		From StorageIn si inner join StorageInList sil on si.InID = sil.InID
		inner join CargoType c on sil.CargoTypeID = c.CargoTypeID
		where c.cargotoptype = 2 {0}
		group by c.CargoTypeName
		union all
		SELECT  c.CargoTypeName,0 as InQty,  sum(sol.Quantity) as  OutQty, 0 as StockQty
		From StorageOut so inner join StorageOutList sol on so.OutID = sol.OutID
		inner join CargoType c on sol.CargoTypeID = c.CargoTypeID
		where c.cargotoptype = 2 {1}
		group by c.CargoTypeName
		union all
		select  c.CargoTypeName,0 as InQty,  0 as  OutQty, sum(sl.Quantity) as StockQty
		from StorageList sl inner join CargoType c on sl.CargoTypeID = c.CargoTypeID
		where c.cargotoptype = 2 and sl.Quantity > 0 and CONVERT(varchar(10),SL.EXPDate,120) >CONVERT(varchar(10),GETDATE(),120) {2}
		group by c.CargoTypeName
		)   a
		Group By
		a.CargoTypeName
	</Content>
    <Content Key="ReportProvideMaterialStock" Desc="一次性物品统计" DataBaseType="Oracle">
		select CARGOTYPENAME,sum(InQty) as INQTY, sum(OutQty) as OUTQTY, sum(StockQty) as STOCKQTY
		from
		(
		SELECT  c.CargoTypeName, sum(sil.Quantity) as InQty, 0 as OutQty, 0 as StockQty
		From StorageIn si inner join StorageInList sil on si.InID = sil.InID
		inner join CargoType c on sil.CargoTypeID = c.CargoTypeID
		where c.cargotoptype = 2 {0}
		group by c.CargoTypeName
		union all
		SELECT  c.CargoTypeName,0 as InQty,  sum(sol.Quantity) as  OutQty, 0 as StockQty
		From StorageOut so inner join StorageOutList sol on so.OutID = sol.OutID
		inner join CargoType c on sol.CargoTypeID = c.CargoTypeID
		where c.cargotoptype = 2 {1}
		group by c.CargoTypeName
		union all
		select  c.CargoTypeName,0 as InQty,  0 as  OutQty, sum(sl.Quantity) as StockQty
		from StorageList sl inner join CargoType c on sl.CargoTypeID = c.CargoTypeID
		where c.cargotoptype = 2 and sl.Quantity > 0 and to_char(sl.expdate,'yyyy-mm-dd')>to_char(sysdate,'yyyy-mm-dd') {2}
		group by c.CargoTypeName
		)  a
		Group By
		a.CargoTypeName
	</Content>
  </Contents>
</SqlConfig>
