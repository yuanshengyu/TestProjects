<?xml version="1.0" encoding="utf-8" ?>
<SqlConfig>
  <Contents>
    <Content Key="Query_BadReaseStorageList" DataBaseType="SqlServer">
      <![CDATA[
      SELECT D.DEVICENAME,convert(char(10), DL.BeginDate ,120) as TODAYDATE,DL.TODAYUSETIMES,SL.BARCODE,C.CARGOTYPENAME,SL.QUANTITY,DL.ISCALLBACK,SC.TYPENAME AS ISCALLBACKNAME,dbo.fun_get_BadFlagReason(FP.BadFlagReason) AS BADREASON,tstatus.TypeName as STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME
      FROM FlowPackageList FP WITH (NOLOCK) 
      LEFT JOIN FlowSterilizationList FS WITH (NOLOCK) ON FP.PackageID = FS.PackageID
      LEFT JOIN DevicesUseLog DL WITH (NOLOCK) ON DL.LogID = FS.SterilizationLogID
      LEFT JOIN Devices D WITH (NOLOCK)  ON DL.DeviceID = D.DeviceID
      LEFT JOIN CargoType C WITH (NOLOCK) ON FP.CargoTypeID = C.CargoTypeID
      LEFT JOIN StorageList SL WITH (NOLOCK) ON FP.StorageID = SL.StorageID
      LEFT JOIN SystemTypeParameter tstatus with (nolock) on SL.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
      LEFT JOIN SystemTypeParameter SC WITH (NOLOCK) ON DL.ISCALLBACK = SC.TYPEVALUE AND SC.TYPEKEY = 'YesOrNo'
      LEFT JOIN WAREHOUSE W WITH (NOLOCK) ON SL.WAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L WITH (NOLOCK) ON SL.LOCATIONID = L.LOCATIONID
      WHERE FP.BadFlag > 0
      ]]>
    </Content>
    <Content Key="Query_BadReaseStorageList" DataBaseType="Oracle">
      <![CDATA[
      SELECT D.DEVICENAME, to_char(DL.BeginDate ,'yyyy-mm-dd') as TODAYDATE,D.TODAYUSETIMES,SL.BARCODE,C.CARGOTYPENAME,SL.QUANTITY,DL.ISCALLBACK,SC.TYPENAME AS ISCALLBACKNAME,fun_get_BadFlagReason(FP.BadFlagReason) AS BADREASON,tstatus.TypeName as STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME
      FROM FlowPackageList FP  
      LEFT JOIN FlowSterilizationList FS  ON FP.PackageID = FS.PackageID
      LEFT JOIN DevicesUseLog DL  ON DL.LogID = FS.SterilizationLogID
      LEFT JOIN Devices D   ON DL.DeviceID = D.DeviceID
      LEFT JOIN CargoType C  ON FP.CargoTypeID = C.CargoTypeID
      LEFT JOIN StorageList SL  ON FP.StorageID = SL.StorageID
      LEFT JOIN SystemTypeParameter tstatus on SL.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
      LEFT JOIN SystemTypeParameter SC  ON DL.ISCALLBACK = SC.TYPEVALUE AND SC.TYPEKEY = 'YesOrNo'
      LEFT JOIN WAREHOUSE W WITH (NOLOCK) ON SL.WAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L WITH (NOLOCK) ON SL.LOCATIONID = L.LOCATIONID
      WHERE FP.BadFlag > 0
      ]]>
    </Content>

    <Content Key="SP_Query_BadReason" DataBaseType="SqlServer">
      SELECT
      REASONID,
      ReasonComments
      FROM BADREASON
      WHERE 1 = 1
    </Content>
    <Content Key="SP_Query_BadReason" DataBaseType="Oracle">
      SELECT
      REASONID,
      ReasonComments
      FROM BADREASON
      WHERE 1 = 1
    </Content>

    <Content Key="Query_CargoTypeByLevel" Desc="查询产品数据" DataBaseType="SqlServer">
      select * from CargoType where 1=1 {0}
    </Content>
    <Content Key="Query_CargoTypeByLevel" Desc="查询产品数据" DataBaseType="Oracle">
      select * from CargoType where 1=1 {0}
    </Content>
    <Content Key="Query_BadReasonByFlag" DataBaseType="Oracle">
      select fun_get_BadFlagReason(:BadReasonFlag) from dual
    </Content>
    <Content Key="Query_BadReasonByFlag" DataBaseType="SqlServer">
      select dbo.fun_get_BadFlagReason(@BadReasonFlag)
    </Content>

    <Content Key="Query_BadReason" DataBaseType="SqlServer">
      <![CDATA[
      SELECT  REASONID,REASONCOMMENTS FROM BADREASON
      WHERE 1=1
      ]]>
    </Content>
    <Content Key="Query_BadReason" DataBaseType="Oracle">
      <![CDATA[
     SELECT  REASONID,REASONCOMMENTS FROM BADREASON
      WHERE 1=1
      ]]>
    </Content>

    <Content Key="Query_BadReasonMaxReasonid" DataBaseType="SqlServer">
      <![CDATA[
      SELECT case when MAX(REASONID)<131072 then 131072 else max(reasonid)*2 end as maxreason   FROM BADREASON
      ]]>
    </Content>
    <Content Key="Query_BadReasonMaxReasonid" DataBaseType="Oracle">
      <![CDATA[
      SELECT case when MAX(REASONID)<131072 then 131072 else max(reasonid)*2 end as maxreason   FROM BADREASON
      ]]>
    </Content>

    <Content Key="Query_BadReasonIsExistByIDAndComments" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM BadReason WHERE   ReasonComments=@ReasonComments and ReasonID <> @ReasonID
      ]]>
    </Content>
    <Content Key="Query_BadReasonIsExistByIDAndComments" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM BadReason WHERE   ReasonComments=:ReasonComments and ReasonID <> :ReasonID
      ]]>
    </Content>

    <Content Key="Query_CargoType" DataBaseType="SqlServer">
		SELECT CargoType.* 
		,CargoTypeKind.KindName as CargoTypeKindName
		FROM CargoType Inner join CargoTypeKind on CargoTypeKind.id=CargoType.CargoTypeKind
		WHERE 1=1
	</Content>
    <Content Key="Query_CargoType" DataBaseType="Oracle">
		SELECT CargoType.*
		,CargoTypeKind.KindName as CargoTypeKindName
		FROM CargoType Inner join CargoTypeKind on CargoTypeKind.id=CargoType.CargoTypeKind
		WHERE 1 = 1
	</Content>
    <Content Key="Query_GetPackageComponent" DataBaseType="SqlServer">
      SELECT
      PackageSetting.PackageSettingID
      ,PackageSetting.PackageTypeID
      ,PackageSetting.CargoTypeID
      ,PackageSetting.CargoTypeName
      ,PackageSetting.CargoTopType
      ,PackageSetting.Quantity
      ,PackageSetting.IsTrack
      ,PackageSetting.IsDynamic
      ,PackageSetting.IsRecycleDynamic
      ,PackageSetting.IsCSSDProvide
      ,PackageSetting.FOrder
      ,PackageSetting.IsDoctorOwn
      ,view_CargoType.CargoTypeKindText
      ,view_CargoType.CargoTopTypeText
      ,view_CargoType.CargoTypeText
      FROM PackageSetting
      LEFT JOIN view_CargoType WITH (NOLOCK) ON PackageSetting.CargoTypeID = view_CargoType.CargoTypeID
      WHERE 1 = 1 {0}
      ORDER BY view_CargoType.CargoTopTypeText,view_CargoType.CargoTypeKindText
    </Content>
	  <Content Key="Query_GetPackageComponent" DataBaseType="Oracle">
		  SELECT
		  PackageSetting.PackageSettingID
		  ,PackageSetting.PackageTypeID
		  ,PackageSetting.CargoTypeID
		  ,PackageSetting.CargoTypeName
		  ,PackageSetting.CargoTopType
		  ,PackageSetting.Quantity
		  ,PackageSetting.IsTrack
		  ,PackageSetting.IsDynamic
		  ,PackageSetting.IsRecycleDynamic
		  ,PackageSetting.IsCSSDProvide
		  ,PackageSetting.FOrder
		  ,PackageSetting.IsDoctorOwn
		  ,view_CargoType.CargoTypeKindText
		  ,view_CargoType.CargoTopTypeText
		  ,view_CargoType.CargoTypeText
		  FROM PackageSetting
		  LEFT JOIN view_CargoType  ON PackageSetting.CargoTypeID = view_CargoType.CargoTypeID
		  WHERE 1 = 1 {0}
		  ORDER BY view_CargoType.CargoTopTypeText,view_CargoType.CargoTypeKindText
	  </Content>
    <Content Key="Query_CargoTypeByCondition" DataBaseType="SqlServer">
      SELECT
      CARGOTYPE.CargoTypeID
      ,CARGOTYPE.CARGOTYPENAME
      ,CARGOTYPE.CargoTopType
      ,CARGOTYPE.IsTrack
      ,CARGOTYPE.IsDisabled
      ,CARGOTYPE.IsValidDate
      ,CARGOTYPE.VALIDDATEDAYS
      ,CARGOTYPE.Modifier
      ,CARGOTYPE.ModifyTime
      ,CARGOTYPE.SAFEQUANTITY
      ,CARGOTYPE.WarningDays
      ,CARGOTYPE.NeedMaintainTimes
      ,CARGOTYPE.ScrapeTimes
      ,CARGOTYPE.CargoImage
      ,CARGOTYPE.WashType
      ,CARGOTYPE.MinNumberPerPackage
      ,CARGOTYPE.BarCode
      ,CARGOTYPE.ManufacturerID
      ,CARGOTYPE.PackageTypeID
      ,CARGOTYPE.Pinyin
      ,CARGOTYPE.CargoTypeKind
      ,CARGOTYPE.Remark
      ,CARGOTYPE.TimesOrDays
      ,CARGOTYPE.amount
      ,CARGOTYPE.pertype
      ,CARGOTYPE.NeedMaintainDays
      ,CARGOTYPE.ScrapeDays
      ,CARGOTYPE.PackageNotAllContainer
      ,CARGOTYPE.PackageCheckMode
      ,CARGOTYPE.IsPrintContents
      ,CARGOTYPE.IsRecycleAlone
      ,CARGOTYPE.IsNeedBCP
      ,CARGOTYPE.IsVirtualPackage
      ,CARGOTYPE.Model
      ,CARGOTYPE.IsNormal
      ,CARGOTYPE.OfficialName
      ,CARGOTYPE.IsRecycleDynamic
      ,CARGOTYPE.IsIn
      ,CARGOTYPE.IsDisinfectOnly
      ,CARGOTYPE.IsDynamic
      ,CARGOTYPE.Specification
      ,CARGOTYPE.NumPerContainer
      ,CARGOTYPE.CheckerDefaultPackager
      ,CARGOTYPE.MinUnit
      ,CARGOTYPE.FWastage
      ,CARGOTYPE.FCostPrice
      ,CARGOTYPE.FLevel
      ,CARGOTYPE.PrintStyle
      ,CARGOTYPE.IsOEM
      ,CARGOTYPE.SynDataID
      ,CARGOTYPE.IsForOrgs
      ,CARGOTYPE.InstrumentsNumber
      ,CARGOTYPE.IsRecycleCheck
      ,CARGOTYPE.SupplierID
      ,CARGOTYPE.IsInstrumentPackage
      ,CARGOTYPE.FDynamicBinding
      ,CARGOTYPE.FFixedBinding
      ,CARGOTYPE.Unit
      ,CARGOTYPE.IsAutoPrintAllBarcode
      ,SYSTEMTYPEPARAMETER.TYPENAME
      ,PACKAGETYPE.PNAME AS OutPacking
      ,ISTRACKYESNO.TYPENAME AS ISTRACK_NAME
      ,ISVALIDDATEYESNO.TYPENAME  AS ISVALIDDATE_NAME
      ,view_CargoType.CargoTypeKindText AS CARGOTYPEKINDNAME
      ,view_CargoType.CargoTypeKindText
      ,view_CargoType.CargoTopTypeText

      ,PACKAGETYPE.PNAME as PACKAGETYPENAME
      ,case when CARGOTYPE.IsNormal=0 then '是' else '否' end as ISNORMALS
      ,o.Name as SUPPLYROOMNAME
      ,CARGOTYPE.InstrumentsNumber as INSTRUMENTSNUMBERS
      ,case when CARGOTYPE.IsNeedBCP=0 then '否' else '是' end as ISNEEDBCPS
      ,CARGOTYPE.amount as AMOUNTS
      FROM CARGOTYPE  WITH (NOLOCK)  LEFT JOIN PACKAGETYPE  WITH (NOLOCK)  ON CARGOTYPE.PACKAGETYPEID =PACKAGETYPE.PTYPEID
      LEFT JOIN view_CargoType WITH (NOLOCK) ON CARGOTYPE.CargoTypeID = view_CargoType.CargoTypeID
      --LEFT JOIN CARGOTYPEKIND WITH (NOLOCK) ON CARGOTYPE.CARGOTYPEKIND = CARGOTYPEKIND.ID
      LEFT JOIN SYSTEMTYPEPARAMETER WITH (NOLOCK)  ON  (CARGOTYPE.WASHTYPE=SYSTEMTYPEPARAMETER.TYPEVALUE AND  SYSTEMTYPEPARAMETER.TYPEKEY='WashType')
      LEFT JOIN SYSTEMTYPEPARAMETER ISTRACKYESNO  WITH (NOLOCK) ON ( CARGOTYPE.ISTRACK = ISTRACKYESNO.TYPEVALUE AND ISTRACKYESNO.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER ISVALIDDATEYESNO WITH (NOLOCK)  ON ( CARGOTYPE.ISVALIDDATE = ISVALIDDATEYESNO.TYPEVALUE AND ISVALIDDATEYESNO.TYPEKEY = 'YesOrNo')
      left join AC_Org o on CARGOTYPE.SupplyRoom=o.ID
      WHERE  1=1 AND CARGOTYPE.ISDISABLED !=1 {0}

    </Content>
    <Content Key="Query_CargoTypeByCondition" DataBaseType="Oracle">
      SELECT
      CARGOTYPE.CargoTypeID
      ,CARGOTYPE.CARGOTYPENAME
      ,CARGOTYPE.CargoTopType
      ,CARGOTYPE.IsTrack
      ,CARGOTYPE.IsDisabled
      ,CARGOTYPE.IsValidDate
      ,CARGOTYPE.VALIDDATEDAYS
      ,CARGOTYPE.Modifier
      ,CARGOTYPE.ModifyTime
      ,CARGOTYPE.SAFEQUANTITY
      ,CARGOTYPE.WarningDays
      ,CARGOTYPE.NeedMaintainTimes
      ,CARGOTYPE.ScrapeTimes
      ,CARGOTYPE.CargoImage
      ,CARGOTYPE.WashType
      ,CARGOTYPE.MinNumberPerPackage
      ,CARGOTYPE.BarCode
      ,CARGOTYPE.ManufacturerID
      ,CARGOTYPE.PackageTypeID
      ,CARGOTYPE.Pinyin
      ,CARGOTYPE.CargoTypeKind
      ,CARGOTYPE.Remark
      ,CARGOTYPE.TimesOrDays
      ,CARGOTYPE.amount
      ,CARGOTYPE.pertype
      ,CARGOTYPE.NeedMaintainDays
      ,CARGOTYPE.ScrapeDays
      ,CARGOTYPE.PackageNotAllContainer
      ,CARGOTYPE.PackageCheckMode
      ,CARGOTYPE.IsPrintContents
      ,CARGOTYPE.IsRecycleAlone
      ,CARGOTYPE.IsNeedBCP
      ,CARGOTYPE.IsVirtualPackage
      ,CARGOTYPE.Model
      ,CARGOTYPE.IsNormal
      ,CARGOTYPE.OfficialName
      ,CARGOTYPE.IsRecycleDynamic
      ,CARGOTYPE.IsIn
      ,CARGOTYPE.IsDisinfectOnly
      ,CARGOTYPE.IsDynamic
      ,CARGOTYPE.Specification
      ,CARGOTYPE.NumPerContainer
      ,CARGOTYPE.CheckerDefaultPackager
      ,CARGOTYPE.MinUnit
      ,CARGOTYPE.FWastage
      ,CARGOTYPE.FCostPrice
      ,CARGOTYPE.FLevel
      ,CARGOTYPE.PrintStyle
      ,CARGOTYPE.IsOEM
      ,CARGOTYPE.SynDataID
      ,CARGOTYPE.IsForOrgs
      ,CARGOTYPE.InstrumentsNumber
      ,CARGOTYPE.IsRecycleCheck
      ,CARGOTYPE.SupplierID
      ,CARGOTYPE.IsInstrumentPackage
      ,CARGOTYPE.FDynamicBinding
      ,CARGOTYPE.FFixedBinding
      ,CARGOTYPE.Unit
      ,CARGOTYPE.IsAutoPrintAllBarcode
      ,SYSTEMTYPEPARAMETER.TYPENAME
      ,PACKAGETYPE.PNAME AS OutPacking
      ,ISTRACKYESNO.TYPENAME AS ISTRACK_NAME
      ,ISVALIDDATEYESNO.TYPENAME  AS ISVALIDDATE_NAME
      ,view_CargoType.CargoTypeKindText AS CARGOTYPEKINDNAME
      ,view_CargoType.CargoTypeKindText
      ,view_CargoType.CargoTopTypeText

      ,PACKAGETYPE.PNAME as PACKAGETYPENAME
      ,case when CARGOTYPE.IsNormal=0 then '是' else '否' end as ISNORMALS
      ,o.Name as SUPPLYROOMNAME
      ,CARGOTYPE.InstrumentsNumber as INSTRUMENTSNUMBERS
      ,case when CARGOTYPE.IsNeedBCP=0 then '否' else '是' end as ISNEEDBCPS
      ,CARGOTYPE.amount as AMOUNTS
      FROM CARGOTYPE   LEFT JOIN PACKAGETYPE   ON CARGOTYPE.PACKAGETYPEID =PACKAGETYPE.PTYPEID
      LEFT JOIN view_CargoType WITH (NOLOCK) ON CARGOTYPE.CargoTypeID = view_CargoType.CargoTypeID
      --LEFT JOIN CARGOTYPEKIND WITH (NOLOCK) ON CARGOTYPE.CARGOTYPEKIND = CARGOTYPEKIND.ID
      LEFT JOIN SYSTEMTYPEPARAMETER   ON  (CARGOTYPE.WASHTYPE=SYSTEMTYPEPARAMETER.TYPEVALUE AND  SYSTEMTYPEPARAMETER.TYPEKEY='WashType')
      LEFT JOIN SYSTEMTYPEPARAMETER ISTRACKYESNO   ON ( CARGOTYPE.ISTRACK = ISTRACKYESNO.TYPEVALUE AND ISTRACKYESNO.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER ISVALIDDATEYESNO   ON ( CARGOTYPE.ISVALIDDATE = ISVALIDDATEYESNO.TYPEVALUE AND ISVALIDDATEYESNO.TYPEKEY = 'YesOrNo')
      left join AC_Org o on CARGOTYPE.SupplyRoom=o.ID
      WHERE  1=1 AND CARGOTYPE.ISDISABLED!=1 {0}
    </Content>

    <Content Key="Select_CargoImageByCargoTypeID" DataBaseType="SqlServer">
      SELECT CARGOTYPE.CARGOTYPEID,CARGOTYPE.CARGOTYPENAME ,DATAFILE.DATA FROM CARGOTYPE WITH (NOLOCK) INNER JOIN DATAFILEMAPING WITH (NOLOCK)
      ON
      CARGOTYPE.CARGOTYPEID =DATAFILEMAPING.FOREIGNID
      INNER JOIN DATAFILE WITH (NOLOCK)
      ON
      DATAFILEMAPING.DATAID=DATAFILE.DATAID WHERE (CARGOTYPE.ISDISABLED=0 OR CARGOTYPE.ISDISABLED IS NULL) AND CARGOTYPE.CARGOTYPEID =@CARGOTYPEID
    </Content>
    <Content Key="Select_CargoImageByCargoTypeID" DataBaseType="Oracle">
      SELECT CARGOTYPE.CARGOTYPEID,CARGOTYPE.CARGOTYPENAME ,DATAFILE.DATA FROM CARGOTYPE  INNER JOIN DATAFILEMAPING
      ON
      CARGOTYPE.CARGOTYPEID =DATAFILEMAPING.FOREIGNID
      INNER JOIN DATAFILE
      ON
      DATAFILEMAPING.DATAID=DATAFILE.DATAID WHERE (CARGOTYPE.ISDISABLED=0 OR CARGOTYPE.ISDISABLED IS NULL) AND CARGOTYPE.CARGOTYPEID =:CARGOTYPEID
    </Content>

    <Content Key="Query_CargoTypeNameIsExistByTopTypeAndTypeName" DataBaseType="SqlServer">
      SELECT COUNT(*) FROM CARGOTYPE WITH (NOLOCK) WHERE ISDISABLED = 0 AND CARGOTOPTYPE = @cargoTopType    AND CARGOTYPENAME=@cargoTypeName
    </Content>
    <Content Key="Query_CargoTypeNameIsExistByTopTypeAndTypeName" DataBaseType="Oracle">
      SELECT COUNT(*) FROM CARGOTYPE  WHERE ISDISABLED = 0 AND CARGOTOPTYPE = :cargoTopType    AND CARGOTYPENAME=:cargoTypeName
    </Content>

    <Content Key="Query_CargoTypeNameIsExistByCargoTypeIDAndTypeName" DataBaseType="SqlServer">
      <!--<![CDATA[
      SELECT COUNT(*) FROM CargoType WHERE   CargoTypeName=@CargoTypeName  and CargoTopType <> 16   and CargoTypeID <> @CargoTypeID and IsNull(ISDISABLED,0) = 0
      ]]>-->

      <![CDATA[
      SELECT COUNT(*) FROM CargoType WHERE  CargoTypeKind=@CargoTypeKind and  CargoTypeName=@CargoTypeName  and CargoTopType = @CargoTopType   and CargoTypeID <> @CargoTypeID and IsNull(ISDISABLED,0) = 0
      ]]>
    </Content>
    <Content Key="Query_CargoTypeNameIsExistByCargoTypeIDAndTypeName" DataBaseType="Oracle">
      <!--<![CDATA[
      SELECT COUNT(*) FROM CargoType WHERE   CargoTypeName=:CargoTypeName  and CargoTopType <> 16   and CargoTypeID <> :CargoTypeID and nvl(ISDISABLED,0) = 0
      ]]>-->

      <![CDATA[
      SELECT COUNT(*) FROM CargoType WHERE  CargoTypeKind=:CargoTypeKind and  CargoTypeName=:CargoTypeName  and CargoTopType = :CargoTopType   and CargoTypeID <> :CargoTypeID and nvl(ISDISABLED,0) = 0
      ]]>
    </Content>

    <Content Key="Query_CargoTypeNameIsExistByCargoTypeIDAndTypeNameAndCargoTypeKind" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM CargoType WHERE   CargoTypeName=@CargoTypeName  and CargoTopType = 16   and CargoTypeID <> @CargoTypeID  and  CargoTypeKind =@CargoTypeKind and  IsNull(ISDISABLED,0) = 0
      ]]>
    </Content>
    <Content Key="Query_CargoTypeNameIsExistByCargoTypeIDAndTypeNameAndCargoTypeKind" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM CargoType WHERE   CargoTypeName=:CargoTypeName  and CargoTopType = 16   and CargoTypeID <> :CargoTypeID and  CargoTypeKind =:CargoTypeKind and nvl(ISDISABLED,0) = 0
      ]]>
    </Content>

    <Content Key="GetSynDataCargoType" DataBaseType="SqlServer">
      SELECT CARGOTYPEID,CARGOTYPENAME,CARGOTOPTYPE,BARCODE,PACKAGETYPEID,PINYIN,
      CARGOTYPEKIND,ISRECYCLEALONE,ISVIRTUALPACKAGE,ISNEEDBCP,ISIN,ISOEM FROM CARGOTYPE WHERE IsNull(ISDISABLED,0) = 0
    </Content>
    <Content Key="GetSynDataCargoType" DataBaseType="Oracle">
      SELECT CARGOTYPEID,CARGOTYPENAME,CARGOTOPTYPE,BARCODE,PACKAGETYPEID,PINYIN,
      CARGOTYPEKIND,ISRECYCLEALONE,ISVIRTUALPACKAGE,ISNEEDBCP,ISIN,ISOEM FROM CARGOTYPE WHERE nvl(ISDISABLED,0) = 0
    </Content>

    <Content Key="GetCargoTopType" DataBaseType="SqlServer">
      SELECT ID,CARGOTOPTYPE,KINDNAME ,PREVID ,CODE ,ISDELETE  FROM CARGOTYPEKIND  WHERE ID=@treeCargoTopType  AND (CARGOTYPEKIND.ISDELETE=0 OR CARGOTYPEKIND.ISDELETE IS NULL)
    </Content>
    <Content Key="GetCargoTopType" DataBaseType="Oracle">
      SELECT ID,CARGOTOPTYPE,KINDNAME ,PREVID ,CODE ,ISDELETE  FROM CARGOTYPEKIND  WHERE ID=:treeCargoTopType  AND (CARGOTYPEKIND.ISDELETE=0 OR CARGOTYPEKIND.ISDELETE IS NULL)
    </Content>

    <Content Key="Query_GetPackageByOrg" DataBaseType="SqlServer">
      SELECT CARGOTYPE.CARGOTYPEID
      , CARGOTYPE.CARGOTYPENAME
      , CARGOTYPEKIND.KINDNAME
      , null AS QUANTITY
      ,ISNULL(CARGOTYPEORDER.RECYCLEQTY,0) AS ORDERQTY
      ,CARGOTYPE.pinyin  AS PYCODE
      FROM CARGOTYPE  WITH (NOLOCK) INNER JOIN CARGOTYPEKIND   WITH (NOLOCK) ON CARGOTYPE.CARGOTYPEKIND = CARGOTYPEKIND.ID
      LEFT JOIN CARGOTYPEORDER WITH (NOLOCK) ON (CARGOTYPE.CARGOTYPEID = CARGOTYPEORDER.CARGOTYPEID
      AND CARGOTYPEORDER.ORGID = @orgid )
      WHERE CARGOTYPE.ISDISABLED = 0  AND (CARGOTYPEKIND.ORGID = @orgid or CargoTypeKind.KindName in ('通用','通用包') or CargoType.IsForOrgs = 1)
      ORDER BY ISNULL(CARGOTYPEORDER.RECYCLEQTY,0) DESC ,CARGOTYPENAME ASC,CARGOTYPEKIND.KINDNAME ASC
    </Content>
    <Content Key="Query_GetPackageByOrg" DataBaseType="Oracle">
      SELECT CARGOTYPE.CARGOTYPEID
      , CARGOTYPE.CARGOTYPENAME
      , CARGOTYPEKIND.KINDNAME
      , null AS QUANTITY
      ,nvl(CARGOTYPEORDER.RECYCLEQTY,0) AS ORDERQTY
      ,CARGOTYPE.pinyin AS PYCODE
      FROM CARGOTYPE  INNER JOIN CARGOTYPEKIND  ON CARGOTYPE.CARGOTYPEKIND = CARGOTYPEKIND.ID
      LEFT JOIN CARGOTYPEORDER  ON (CARGOTYPE.CARGOTYPEID = CARGOTYPEORDER.CARGOTYPEID
      AND CARGOTYPEORDER.ORGID = :orgid)
      WHERE CARGOTYPE.ISDISABLED = 0  AND (CARGOTYPEKIND.ORGID = :orgid or CargoTypeKind.KindName in ('通用','通用包') or CargoType.IsForOrgs = 1)
      ORDER BY nvl(CARGOTYPEORDER.RECYCLEQTY,0) DESC ,CARGOTYPENAME ASC,CARGOTYPEKIND.KINDNAME ASC
    </Content>
    <Content Key="Query_GetPackageByOrgFloworgID" DataBaseType="SqlServer">
      SELECT CARGOTYPE.CARGOTYPEID
      , CARGOTYPE.CARGOTYPENAME
      , CARGOTYPEKIND.KINDNAME
      , null AS QUANTITY
      ,ISNULL(CARGOTYPEORDER.RECYCLEQTY,0) AS ORDERQTY
      ,CARGOTYPE.pinyin  AS PYCODE
      FROM CARGOTYPE  WITH (NOLOCK) INNER JOIN CARGOTYPEKIND   WITH (NOLOCK) ON CARGOTYPE.CARGOTYPEKIND = CARGOTYPEKIND.ID
      LEFT JOIN CARGOTYPEORDER WITH (NOLOCK) ON (CARGOTYPE.CARGOTYPEID = CARGOTYPEORDER.CARGOTYPEID
      AND CARGOTYPEORDER.ORGID = @orgid )
      WHERE CARGOTYPE.ISDISABLED = 0  AND (CARGOTYPEKIND.ORGID = @orgid or CargoTypeKind.KindName in ('通用','通用包') or CargoType.IsForOrgs = 1)
      and CARGOTYPE.cargotypeid in (select keyid from floworgbasedata where type = 'cargotype' and floworgid =@floworgid)
      ORDER BY ISNULL(CARGOTYPEORDER.RECYCLEQTY,0) DESC ,CARGOTYPENAME ASC,CARGOTYPEKIND.KINDNAME ASC
    </Content>
    <Content Key="Query_GetPackageByOrgFloworgID" DataBaseType="Oracle">
      SELECT CARGOTYPE.CARGOTYPEID
      , CARGOTYPE.CARGOTYPENAME
      , CARGOTYPEKIND.KINDNAME
      , null AS QUANTITY
      ,nvl(CARGOTYPEORDER.RECYCLEQTY,0) AS ORDERQTY
      ,CARGOTYPE.pinyin AS PYCODE
      FROM CARGOTYPE  INNER JOIN CARGOTYPEKIND  ON CARGOTYPE.CARGOTYPEKIND = CARGOTYPEKIND.ID
      LEFT JOIN CARGOTYPEORDER  ON (CARGOTYPE.CARGOTYPEID = CARGOTYPEORDER.CARGOTYPEID
      AND CARGOTYPEORDER.ORGID = :orgid)
      WHERE CARGOTYPE.ISDISABLED = 0  AND (CARGOTYPEKIND.ORGID = :orgid or CargoTypeKind.KindName in ('通用','通用包') or CargoType.IsForOrgs = 1)
      and CARGOTYPE.cargotypeid in (select keyid from floworgbasedata where type = 'cargotype' and floworgid =:floworgid)
      ORDER BY nvl(CARGOTYPEORDER.RECYCLEQTY,0) DESC ,CARGOTYPENAME ASC,CARGOTYPEKIND.KINDNAME ASC
    </Content>

    <Content Key="SP_Select_CargoTypeKind" DataBaseType="Oracle">
      SELECT CARGOTYPEKIND.ID
      ,CARGOTYPEKIND.CARGOTOPTYPE
      ,CARGOTYPEKIND.KINDNAME
      ,CARGOTYPEKIND.PREVID
      ,CARGOTYPEKIND.CODE
      ,CARGOTYPEKIND.ORGID
      ,CARGOTYPEKIND.PINYIN
      ,AC_ORG.NAME as ORGNAME
      ,PREVKIND.KINDNAME AS PREVKINDNAME
      ,SystemTypeParameter.TypeName AS CargoTopTypeText
      FROM CARGOTYPEKIND  LEFT JOIN CARGOTYPEKIND PREVKIND  ON CARGOTYPEKIND.PREVID=PREVKIND.ID
      LEFT JOIN AC_ORG ON CARGOTYPEKIND.ORGID=AC_ORG.ID
      INNER JOIN SystemTypeParameter ON SystemTypeParameter.TypeKey = 'CargoTopType' AND SystemTypeParameter.TypeValue= CARGOTYPEKIND.CARGOTOPTYPE
      WHERE  1=1
    </Content>
    <Content Key="SP_Select_CargoTypeKind" DataBaseType="SqlServer">
      SELECT CARGOTYPEKIND.ID
      ,CARGOTYPEKIND.CARGOTOPTYPE
      ,CARGOTYPEKIND.KINDNAME
      ,CARGOTYPEKIND.PREVID
      ,CARGOTYPEKIND.CODE
      ,CARGOTYPEKIND.ORGID
      ,CARGOTYPEKIND.PINYIN
      ,AC_ORG.NAME as ORGNAME
      ,PREVKIND.KINDNAME AS PREVKINDNAME
      ,SystemTypeParameter.TypeName AS CargoTopTypeText
      FROM CARGOTYPEKIND WITH (NOLOCK) LEFT JOIN CARGOTYPEKIND PREVKIND WITH (NOLOCK)  ON CARGOTYPEKIND.PREVID=PREVKIND.ID
      LEFT JOIN AC_ORG WITH (NOLOCK) ON CARGOTYPEKIND.ORGID=AC_ORG.ID
      INNER JOIN SystemTypeParameter WITH (NOLOCK) ON SystemTypeParameter.TypeKey = 'CargoTopType' AND SystemTypeParameter.TypeValue= CARGOTYPEKIND.CARGOTOPTYPE
      WHERE  1=1
    </Content>

    <Content Key="SP_Query_CargoTypeKind" DataBaseType="Oracle">
      SELECT CARGOTYPEKIND.ID
      ,CARGOTYPEKIND.CARGOTOPTYPE
      ,CARGOTYPEKIND.KINDNAME
      ,CARGOTYPEKIND.PREVID
      ,CARGOTYPEKIND.CODE
      ,CARGOTYPEKIND.ORGID
      ,CARGOTYPEKIND.PINYIN
      ,AC_ORG.NAME as ORGNAME
      ,PREVKIND.KINDNAME AS PREVKINDNAME
      ,SystemTypeParameter.TypeName AS CargoTopTypeText
      FROM CARGOTYPEKIND  LEFT JOIN CARGOTYPEKIND PREVKIND  ON CARGOTYPEKIND.PREVID=PREVKIND.ID
      LEFT JOIN AC_ORG ON CARGOTYPEKIND.ORGID=AC_ORG.ID
      INNER JOIN SystemTypeParameter ON SystemTypeParameter.TypeKey = 'CargoTopType' AND SystemTypeParameter.TypeValue= CARGOTYPEKIND.CARGOTOPTYPE
      WHERE  1=1 {0}
    </Content>
    <Content Key="SP_Query_CargoTypeKind" DataBaseType="SqlServer">
      SELECT CARGOTYPEKIND.ID
      ,CARGOTYPEKIND.CARGOTOPTYPE
      ,CARGOTYPEKIND.KINDNAME
      ,CARGOTYPEKIND.PREVID
      ,CARGOTYPEKIND.CODE
      ,CARGOTYPEKIND.ORGID
      ,CARGOTYPEKIND.PINYIN
      ,AC_ORG.NAME as ORGNAME
      ,PREVKIND.KINDNAME AS PREVKINDNAME
      ,SystemTypeParameter.TypeName AS CargoTopTypeText
      FROM CARGOTYPEKIND WITH (NOLOCK) LEFT JOIN CARGOTYPEKIND PREVKIND WITH (NOLOCK)  ON CARGOTYPEKIND.PREVID=PREVKIND.ID
      LEFT JOIN AC_ORG WITH (NOLOCK) ON CARGOTYPEKIND.ORGID=AC_ORG.ID
      INNER JOIN SystemTypeParameter WITH (NOLOCK) ON SystemTypeParameter.TypeKey = 'CargoTopType' AND SystemTypeParameter.TypeValue= CARGOTYPEKIND.CARGOTOPTYPE
      WHERE  1=1 {0}
    </Content>
    
    <Content Key="GetAllTypeKind" DataBaseType="SqlServer">
      SELECT ID
      ,KINDNAME
      , CARGOTOPTYPE
      , PREVID
      ,PINYIN
      FROM CARGOTYPEKIND  WHERE ISDELETE=0 OR ISDELETE IS NULL
    </Content>
    <Content Key="GetAllTypeKind" DataBaseType="Oracle">
      SELECT ID
      ,KINDNAME
      , CARGOTOPTYPE
      , PREVID
      ,PINYIN
      FROM CARGOTYPEKIND  WHERE ISDELETE=0 OR ISDELETE IS NULL
    </Content>

    <Content Key="GetAllTypeKindBycargoTopType" DataBaseType="SqlServer">
      SELECT ID
      ,KINDNAME
      ,CARGOTOPTYPE
      ,PREVID
      ,PINYIN
      FROM CARGOTYPEKIND  WHERE  CARGOTOPTYPE=@cargoTopType AND (CARGOTYPEKIND.ISDELETE=0 OR CARGOTYPEKIND.ISDELETE IS NULL) Order By Code
    </Content>
    <Content Key="GetAllTypeKindBycargoTopType" DataBaseType="Oracle">
      SELECT ID
      ,KINDNAME
      ,CARGOTOPTYPE
      ,PREVID
      ,PINYIN
      FROM CARGOTYPEKIND  WHERE  CARGOTOPTYPE=:cargoTopType AND (CARGOTYPEKIND.ISDELETE=0 OR CARGOTYPEKIND.ISDELETE IS NULL)
    </Content>

    <Content Key="GetSynDataCargoTypeKind" DataBaseType="SqlServer">
      SELECT ID,KINDNAME,CODE,ORGID,PINYIN FROM CARGOTYPEKIND WHERE ISDELETE = 0
    </Content>
    <Content Key="GetSynDataCargoTypeKind" DataBaseType="Oracle">
      SELECT ID,KINDNAME,CODE,ORGID,PINYIN FROM CARGOTYPEKIND WHERE ISDELETE = 0
    </Content>

    <Content Key="Select_CargoTypeKindByCondition" DataBaseType="SqlServer">
      SELECT CARGOTYPEKIND.ID
      ,CARGOTYPEKIND.CARGOTOPTYPE
      ,CARGOTYPEKIND.KINDNAME
      ,CARGOTYPEKIND.PREVID
      ,CARGOTYPEKIND.CODE
      ,CARGOTYPEKIND.ISDELETE
      ,CARGOTYPEKIND.PINYIN
      ,PREVKIND.KINDNAME AS PREVKINDNAME,(SELECT TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY = 'CargoTopType' AND TYPEVALUE= CARGOTYPEKIND.CARGOTOPTYPE) AS CARGOTOPTYPETEXT
      FROM CARGOTYPEKIND LEFT JOIN CARGOTYPEKIND PREVKIND  ON CARGOTYPEKIND.PREVID=PREVKIND.ID
      WHERE  1=1 AND  (CARGOTYPEKIND.ISDELETE =0 OR  CARGOTYPEKIND.ISDELETE IS NULL) {0}
    </Content>
    <Content Key="Select_CargoTypeKindByCondition" DataBaseType="Oracle">
      SELECT CARGOTYPEKIND.ID
      ,CARGOTYPEKIND.CARGOTOPTYPE
      ,CARGOTYPEKIND.KINDNAME
      ,CARGOTYPEKIND.PREVID
      ,CARGOTYPEKIND.CODE
      ,CARGOTYPEKIND.ISDELETE
      ,CARGOTYPEKIND.PINYIN
      ,PREVKIND.KINDNAME AS PREVKINDNAME,(SELECT TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY = 'CargoTopType' AND TYPEVALUE= CARGOTYPEKIND.CARGOTOPTYPE) AS CARGOTOPTYPETEXT
      FROM CARGOTYPEKIND LEFT JOIN CARGOTYPEKIND PREVKIND  ON CARGOTYPEKIND.PREVID=PREVKIND.ID
      WHERE  1=1 AND  (CARGOTYPEKIND.ISDELETE =0 OR  CARGOTYPEKIND.ISDELETE IS NULL) {0}
    </Content>

    <Content Key="Select_CargoTypeKindByPreID" DataBaseType="SqlServer">
      SELECT CARGOTYPEKIND.ID
      ,CARGOTYPEKIND.CARGOTOPTYPE
      ,CARGOTYPEKIND.KINDNAME
      ,CARGOTYPEKIND.PREVID
      ,CARGOTYPEKIND.CODE
      ,CARGOTYPEKIND.PINYIN
      ,PREVKIND.KINDNAME AS PREVKINDNAME
      FROM CARGOTYPEKIND  LEFT JOIN CARGOTYPEKIND PREVKIND ON CARGOTYPEKIND.PREVID=PREVKIND.ID
      WHERE  (CARGOTYPEKIND.PREVID=@PrevID  OR  '@PrevID'='00000000-0000-0000-0000-000000000000') AND (CARGOTYPEKIND.ISDELETE=0 OR CARGOTYPEKIND.ISDELETE IS NULL)
    </Content>
    <Content Key="Select_CargoTypeKindByPreID" DataBaseType="Oracle">
      SELECT CARGOTYPEKIND.ID
      ,CARGOTYPEKIND.CARGOTOPTYPE
      ,CARGOTYPEKIND.KINDNAME
      ,CARGOTYPEKIND.PREVID
      ,CARGOTYPEKIND.CODE
      ,CARGOTYPEKIND.PINYIN
      ,PREVKIND.KINDNAME AS PREVKINDNAME
      FROM CARGOTYPEKIND  LEFT JOIN CARGOTYPEKIND PREVKIND ON CARGOTYPEKIND.PREVID=PREVKIND.ID
      WHERE  (CARGOTYPEKIND.PREVID=:PrevID  OR  ':PrevID'='00000000-0000-0000-0000-000000000000') AND (CARGOTYPEKIND.ISDELETE=0 OR CARGOTYPEKIND.ISDELETE IS NULL)
    </Content>

    <Content Key="Query_TypeKindTreeData" DataBaseType="Oracle">
      <![CDATA[
      SELECT TO_NUMBER(ROW_NUMBER() OVER (ORDER BY CARGOTOPTYPE ASC)||9999) AS TYPEVALUE, CARGOTOPTYPE,9999 AS ORDERBY,ID,KINDNAME AS NAME FROM CARGOTYPEKIND 
      LEFT JOIN SYSTEMTYPEPARAMETER 
      ON CARGOTYPEKIND.CARGOTOPTYPE = SYSTEMTYPEPARAMETER.TYPEVALUE
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType' AND (CARGOTYPEKIND.ISDELETE =0 OR CARGOTYPEKIND.ISDELETE IS NULL) 
      UNION 
      SELECT TYPEVALUE,NULL AS CARGOTOPTYPE,1 AS ORDERBY,to_char(TYPEVALUE) AS ID,TYPENAME AS NAME FROM SYSTEMTYPEPARAMETER
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType' 
      ORDER BY CARGOTOPTYPE,ORDERBY,NAME 
      ]]>
    </Content>
    <Content Key="Query_TypeKindTreeData" DataBaseType="SqlServer">
      <![CDATA[
      SELECT CONVERT(INT,(ROW_NUMBER() OVER (ORDER BY CARGOTOPTYPE ASC))+9999) AS TYPEVALUE, CARGOTOPTYPE,9999 AS ORDERBY,CONVERT(VARCHAR(36),ID) AS ID,KINDNAME AS NAME FROM CARGOTYPEKIND 
      WITH (NOLOCK) LEFT JOIN SYSTEMTYPEPARAMETER WITH (NOLOCK)  
      ON CARGOTYPEKIND.CARGOTOPTYPE = SYSTEMTYPEPARAMETER.TYPEVALUE
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType'AND (CARGOTYPEKIND.ISDELETE =0 OR CARGOTYPEKIND.ISDELETE IS NULL) 
      UNION 
      SELECT TYPEVALUE,NULL AS CARGOTOPTYPE,1 AS ORDERBY,CONVERT(VARCHAR(36),TYPEVALUE) AS ID,TYPENAME AS NAME FROM SYSTEMTYPEPARAMETER
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType' 
      ORDER BY CARGOTOPTYPE,ORDERBY,NAME 
      ]]>
    </Content>

    <Content Key="Query_TypeKindPackageTreeData" DataBaseType="Oracle">
      <![CDATA[
      SELECT TO_NUMBER(ROW_NUMBER() OVER (ORDER BY CARGOTOPTYPE ASC)||9999) AS TYPEVALUE, CARGOTOPTYPE,9999 AS ORDERBY,ID,KINDNAME AS NAME FROM CARGOTYPEKIND 
      LEFT JOIN SYSTEMTYPEPARAMETER 
      ON CARGOTYPEKIND.CARGOTOPTYPE = SYSTEMTYPEPARAMETER.TYPEVALUE
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType' AND (CARGOTYPEKIND.ISDELETE =0 OR CARGOTYPEKIND.ISDELETE IS NULL) {0}
      UNION 
      SELECT TYPEVALUE,NULL AS CARGOTOPTYPE,1 AS ORDERBY,TO_CHAR(TYPEVALUE) AS ID,TYPENAME AS NAME FROM SYSTEMTYPEPARAMETER
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType' AND TYPEVALUE = 16
      ORDER BY CARGOTOPTYPE,ORDERBY,NAME 
      ]]>
    </Content>
    <Content Key="Query_TypeKindPackageTreeData" DataBaseType="SqlServer">
      <![CDATA[
      SELECT CONVERT(INT,(ROW_NUMBER() OVER (ORDER BY CARGOTOPTYPE ASC))+9999) AS TYPEVALUE, CARGOTOPTYPE,9999 AS ORDERBY,CONVERT(VARCHAR(36),ID) AS ID,KINDNAME AS NAME FROM CARGOTYPEKIND 
      WITH (NOLOCK) LEFT JOIN SYSTEMTYPEPARAMETER WITH (NOLOCK)  
      ON CARGOTYPEKIND.CARGOTOPTYPE = SYSTEMTYPEPARAMETER.TYPEVALUE
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType'AND (CARGOTYPEKIND.ISDELETE =0 OR CARGOTYPEKIND.ISDELETE IS NULL)  {0}
      UNION 
      SELECT TYPEVALUE,NULL AS CARGOTOPTYPE,1 AS ORDERBY,CONVERT(VARCHAR(36),TYPEVALUE) AS ID,TYPENAME AS NAME FROM SYSTEMTYPEPARAMETER
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType'  AND TYPEVALUE = 16
      ORDER BY CARGOTOPTYPE,ORDERBY,NAME 
      ]]>
    </Content>

    <Content Key="Query_TypeKindInstrumentTreeData" DataBaseType="Oracle">
      <![CDATA[
     SELECT cargotype.cargotypeid as ID,cargotypename AS NAME,cargotype.CARGOTYPEKIND
      FROM CARGOTYPEKIND 
      inner join cargotype on CARGOTYPEKIND.id=cargotype.CARGOTYPEKIND
      WHERE   (CARGOTYPEKIND.ISDELETE =0 OR CARGOTYPEKIND.ISDELETE IS NULL)  and CARGOTYPEKIND.CARGOTOPTYPE=1
      union
      SELECT  ID,KINDNAME AS NAME,'00000000-0000-0000-0000-000000000000' as CARGOTYPEKIND
      FROM CARGOTYPEKIND where CARGOTYPEKIND.CARGOTOPTYPE=1 
      union 
      select '00000000-0000-0000-0000-000000000000' as ID,'器械' as NAME,null AS  CARGOTYPEKIND  from dual
      order by CARGOTYPEKIND
      ]]>
    </Content>
    <Content Key="Query_TypeKindInstrumentTreeData" DataBaseType="SqlServer">
      <![CDATA[
      SELECT cargotype.cargotypeid AS ID,cargotypename AS NAME,cargotype.CARGOTYPEKIND
      FROM CARGOTYPEKIND 
      inner join cargotype on CARGOTYPEKIND.id=cargotype.CARGOTYPEKIND
      WHERE   (CARGOTYPEKIND.ISDELETE =0 OR CARGOTYPEKIND.ISDELETE IS NULL)  and CARGOTYPEKIND.CARGOTOPTYPE=1
      union
      SELECT  
      ID,KINDNAME AS NAME,'00000000-0000-0000-0000-000000000000' as CARGOTYPEKIND
      FROM CARGOTYPEKIND where CARGOTYPEKIND.CARGOTOPTYPE=1  
      union 
      select '00000000-0000-0000-0000-000000000000' as ID,'器械' as NAME,null AS  CARGOTYPEKIND  
      order by CARGOTYPEKIND
      ]]>
    </Content>

    <Content Key="Query_GetCargoTypeInstrument" DataBaseType="Oracle">
      select s.STORAGEID,c.CARGOTYPEID,c.CARGOTYPENAME,fp.FLOWPACKAGELISTOPIDNAME,fp.PACKAGEDATE,fp.FLOWPACKAGELISTUSERNAME,s.USETIMES
      from StorageList s
      inner join CargoType c on c.CargoTypeID = s.CargoTypeID
      inner join view_PakageInfo fp ON fp.STORAGEID = s.STORAGEID
      where s.Barcode like '68%' and s.CargoTopType=1
    </Content>
    <Content Key="Query_GetCargoTypeInstrument" DataBaseType="SqlServer">
      select s.STORAGEID,c.CARGOTYPEID,c.CARGOTYPENAME,fp.FLOWPACKAGELISTOPIDNAME,fp.PACKAGEDATE,fp.FLOWPACKAGELISTUSERNAME,s.USETIMES
      from StorageList s
      inner join CargoType c on c.CargoTypeID = s.CargoTypeID
      inner join view_PakageInfo fp ON fp.STORAGEID = s.STORAGEID
      where s.Barcode like '68%' and s.CargoTopType=1
    </Content>

    <Content Key="Query_GetInstrumentByStorageID" DataBaseType="Oracle">
      select im.STORAGEID,im.USERID,u.FNames NAME,im.MAINTAINDATE,im.MAINTAINTYPE,im.REMARK
      from InstrumentMaintainLog im
      inner join StorageList s  on s.StorageID = im.StorageID
      inner join AC_WorkGroup u on u.FID=im.UserID
      WHERE s.StorageID = :storageID
    </Content>
    <Content Key="Query_GetInstrumentByStorageID" DataBaseType="SqlServer">
      select im.STORAGEID,im.USERID,u.FNames NAME,im.MAINTAINDATE,im.MAINTAINTYPE,im.REMARK
      from InstrumentMaintainLog im
      inner join StorageList s  on s.StorageID = im.StorageID
      inner join AC_WorkGroup u on u.FID=im.UserID
      WHERE s.StorageID = @storageID
    </Content>


    <Content Key="IsExistCargoTypeKind" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM CARGOTYPEKIND WHERE   KindName=@KindName  and ( IsDelete is null or IsDelete=0)  and ID <> @ID
      ]]>
    </Content>
    <Content Key="IsExistCargoTypeKind" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM CARGOTYPEKIND WHERE   KindName=:KindName  and ( IsDelete is null or IsDelete=0)  and ID <> :ID
      ]]>
    </Content>

    <Content Key="SP_Select_Org" DataBaseType="SqlServer">
      SELECT AC_ORG.ID
      ,AC_ORG.NAME
      ,AC_ORG.CODE
      ,AC_ORG.PREVID
      ,PREVORG.NAME AS PREVNAME
      ,AC_ORG.TEL
      ,AC_ORG.FAX
      ,AC_ORG.REMARK
      ,AC_ORG.CANOPERATESTORAGEIN
      ,AC_ORG.CANOPERATEFLOW
      ,AC_ORG.CANPROVIDED
      ,AC_ORG.ADDRESS
      ,AC_ORG.ISOUTSIDE
      ,AC_ORG.DOPROVIDECONFIRM
      ,AC_ORG.SYNDATAID
      ,AC_ORG.DEFAULTWAREHOUSEID,AC_ORG.DEFAULTLOCATIONID
      ,AC_ORG.INSTRUMENTWAREHOUSEID
      ,AC_ORG.INSTRUMENTTEMPWAREHOUSEID
      ,AC_ORG.MATERIALWAREHOUSEID
      ,AC_ORG.MATERIALTEMPWAREHOUSEID
      ,AC_ORG.PACKAGEWAREHOUSEID
      ,AC_ORG.PACKAGEPROVIDEWAREHOUSEID
      ,AC_ORG.ONETIMEWAREHOUSEID
      ,AC_ORG.ONETIMEPROVIDEWAREHOUSEID
      ,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
      ,AC_ORG.ISOUTLAYDEPT
      FROM AC_ORG  WITH (NOLOCK)
      LEFT JOIN AC_ORG PREVORG  WITH (NOLOCK)
      ON AC_ORG.PREVID = PREVORG.ID
      where 1=1 AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
    </Content>
    <Content Key="SP_Select_Org" DataBaseType="Oracle">
      SELECT AC_ORG.ID
      ,AC_ORG.NAME
      ,AC_ORG.CODE
      ,AC_ORG.PREVID
      ,PREVORG.NAME AS PREVNAME
      ,AC_ORG.TEL
      ,AC_ORG.FAX
      ,AC_ORG.REMARK
      ,AC_ORG.CANOPERATESTORAGEIN
      ,AC_ORG.CANOPERATEFLOW
      ,AC_ORG.CANPROVIDED
      ,AC_ORG.ADDRESS
      ,AC_ORG.ISOUTSIDE
      ,AC_ORG.DOPROVIDECONFIRM
      ,AC_ORG.SYNDATAID
      ,AC_ORG.DEFAULTWAREHOUSEID,AC_ORG.DEFAULTLOCATIONID
      ,AC_ORG.INSTRUMENTWAREHOUSEID
      ,AC_ORG.INSTRUMENTTEMPWAREHOUSEID
      ,AC_ORG.MATERIALWAREHOUSEID
      ,AC_ORG.MATERIALTEMPWAREHOUSEID
      ,AC_ORG.PACKAGEWAREHOUSEID
      ,AC_ORG.PACKAGEPROVIDEWAREHOUSEID
      ,AC_ORG.ONETIMEWAREHOUSEID
      ,AC_ORG.ONETIMEPROVIDEWAREHOUSEID
      ,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
      ,AC_ORG.ISOUTLAYDEPT
      FROM AC_ORG
      LEFT JOIN AC_ORG PREVORG
      ON AC_ORG.PREVID = PREVORG.ID
      where 1=1 AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
    </Content>

    <Content Key="SP_Query_Org" DataBaseType="SqlServer">
      SELECT AC_ORG.ID
      ,AC_ORG.NAME
      ,AC_ORG.CODE
      ,AC_ORG.PREVID
      ,PREVORG.NAME AS PREVNAME
      ,AC_ORG.TEL
      ,AC_ORG.FAX
      ,AC_ORG.REMARK
      ,AC_ORG.CANOPERATESTORAGEIN
      ,TP.TYPENAME as CANOPERATESTORAGEINTYPENAME
      ,AC_ORG.CANOPERATEFLOW
      ,CTP.TYPENAME as CANOPERATEFLOWTYPENAME
      ,AC_ORG.CANPROVIDED
      ,BTP.TYPENAME as CANPROVIDEDTYPENAME
      ,AC_ORG.DOPROVIDECONFIRM
      ,DOP.TYPENAME as DOPROVIDECONFIRMTYPENAME
      ,AC_ORG.ADDRESS
      ,AC_ORG.ISOUTSIDE
      ,ISBD.TYPENAME as ISOUTSIDETYPENAME
      ,AC_ORG.ISOUTSIDEUSE
      ,OUTSE.TYPENAme as ISOUTSIDEUSETYPENAME
      ,AC_ORG.SYNDATAID
      ,AC_ORG.DEFAULTWAREHOUSEID,AC_ORG.DEFAULTLOCATIONID
      ,AC_ORG.INSTRUMENTWAREHOUSEID
      ,AC_ORG.INSTRUMENTTEMPWAREHOUSEID
      ,AC_ORG.MATERIALWAREHOUSEID
      ,AC_ORG.MATERIALTEMPWAREHOUSEID
      ,AC_ORG.PACKAGEWAREHOUSEID
      ,AC_ORG.PACKAGEPROVIDEWAREHOUSEID
      ,AC_ORG.ONETIMEWAREHOUSEID
      ,AC_ORG.ONETIMEPROVIDEWAREHOUSEID
      ,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
      ,AC_ORG.ISOUTLAYDEPT
      ,ISOUT.TYPENAME as ISOUTLAYDEPTTYPENAME
      ,AC_ORG.DEDUCTIONWAREHOUSE
      FROM AC_ORG  WITH (NOLOCK)
      LEFT JOIN AC_ORG PREVORG  WITH (NOLOCK)
      ON AC_ORG.PREVID = PREVORG.ID
      LEFT JOIN SYSTEMTYPEPARAMETER TP  ON ( AC_ORG.CANOPERATESTORAGEIN = TP.TYPEVALUE AND TP.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER CTP ON ( AC_ORG.CANOPERATEFLOW =  CTP.TYPEVALUE AND CTP.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER BTP ON ( AC_ORG.CANPROVIDED =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER ISBD ON ( AC_ORG.ISOUTSIDE = ISBD.TYPEVALUE AND ISBD.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER OUTSE  ON ( AC_ORG.ISOUTSIDEUSE = OUTSE.TYPEVALUE AND OUTSE.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER DOP ON ( AC_ORG.DOPROVIDECONFIRM =  DOP.TYPEVALUE AND DOP.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER ISOUT ON ( AC_ORG.ISOUTLAYDEPT =  ISOUT.TYPEVALUE AND ISOUT.TYPEKEY = 'YesOrNo')
      where 1=1 AND (AC_ORG.ISDISABLED =0 OR AC_ORG.ISDISABLED IS NULL)
    </Content>
    <Content Key="SP_Query_Org" DataBaseType="Oracle">
      SELECT AC_ORG.ID
      ,AC_ORG.NAME
      ,AC_ORG.CODE
      ,AC_ORG.PREVID
      ,PREVORG.NAME AS PREVNAME
      ,AC_ORG.TEL
      ,AC_ORG.FAX
      ,AC_ORG.REMARK
      ,AC_ORG.CANOPERATESTORAGEIN
      ,TP.TYPENAME as CANOPERATESTORAGEINTYPENAME
      ,AC_ORG.CANOPERATEFLOW
      ,CTP.TYPENAME as CANOPERATEFLOWTYPENAME
      ,AC_ORG.CANPROVIDED
      ,BTP.TYPENAME as CANPROVIDEDTYPENAME
      ,AC_ORG.DOPROVIDECONFIRM
      ,DOP.TYPENAME as DOPROVIDECONFIRMTYPENAME
      ,AC_ORG.ADDRESS
      ,AC_ORG.ISOUTSIDE
      ,ISBD.TYPENAME as ISOUTSIDETYPENAME
      ,AC_ORG.ISOUTSIDEUSE
      ,OUTSE.TYPENAme as ISOUTSIDEUSETYPENAME
      ,AC_ORG.SYNDATAID
      ,AC_ORG.DEFAULTWAREHOUSEID,AC_ORG.DEFAULTLOCATIONID
      ,AC_ORG.INSTRUMENTWAREHOUSEID
      ,AC_ORG.INSTRUMENTTEMPWAREHOUSEID
      ,AC_ORG.MATERIALWAREHOUSEID
      ,AC_ORG.MATERIALTEMPWAREHOUSEID
      ,AC_ORG.PACKAGEWAREHOUSEID
      ,AC_ORG.PACKAGEPROVIDEWAREHOUSEID
      ,AC_ORG.ONETIMEWAREHOUSEID
      ,AC_ORG.ONETIMEPROVIDEWAREHOUSEID
      ,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
      ,AC_ORG.ISOUTLAYDEPT
      ,ISOUT.TYPENAME as ISOUTLAYDEPTTYPENAME
      ,AC_ORG.DEDUCTIONWAREHOUSE
      FROM AC_ORG  WITH (NOLOCK)
      LEFT JOIN AC_ORG PREVORG  WITH (NOLOCK)
      ON AC_ORG.PREVID = PREVORG.ID
      LEFT JOIN SYSTEMTYPEPARAMETER TP  ON ( AC_ORG.CANOPERATESTORAGEIN = TP.TYPEVALUE AND TP.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER CTP ON ( AC_ORG.CANOPERATEFLOW =  CTP.TYPEVALUE AND CTP.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER BTP ON ( AC_ORG.CANPROVIDED =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER ISBD ON ( AC_ORG.ISOUTSIDE = ISBD.TYPEVALUE AND ISBD.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER OUTSE  ON ( AC_ORG.ISOUTSIDEUSE = OUTSE.TYPEVALUE AND OUTSE.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER DOP ON ( AC_ORG.DOPROVIDECONFIRM =  DOP.TYPEVALUE AND DOP.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER ISOUT ON ( AC_ORG.ISOUTLAYDEPT =  ISOUT.TYPEVALUE AND ISOUT.TYPEKEY = 'YesOrNo')
      where 1=1 AND (AC_ORG.ISDISABLED =0 OR AC_ORG.ISDISABLED IS NULL)
    </Content>
    
    <Content Key="Select_CSSD_Dept" DataBaseType="SqlServer">
      SELECT DISTINCT CSSD_DEPT.SUBJ_DEPT_CODE
      ,CSSD_DEPT.SUBJ_DEPT_NAME
      ,CSSD_DEPT.FLAG
      ,CSSD_DEPT.FCODE
      ,CSSD_DEPT.PINYIN
      ,CSSD_DEPT.SUBJ_DEPT_PREID
      ,CSSD_DEPT.SUBJ_DEPT_PRENAME
      FROM CSSD_DEPT
    </Content>

    <Content Key="Select_CSSD_Dept" DataBaseType="Oracle">
      SELECT DISTINCT CSSD_DEPT.SUBJ_DEPT_CODE
      ,CSSD_DEPT.SUBJ_DEPT_NAME
      ,CSSD_DEPT.FLAG
      ,CSSD_DEPT.FCODE
      ,CSSD_DEPT.PINYIN
      ,CSSD_DEPT.SUBJ_DEPT_PREID
      ,CSSD_DEPT.SUBJ_DEPT_PRENAME
      FROM CSSD_DEPT
    </Content>
    
    <Content Key="Select_AC_Org" DataBaseType="SqlServer">
		SELECT AC_ORG.ID
		,AC_ORG.NAME
		,AC_ORG.CODE
		,AC_ORG.PREVID
		,AC_ORG.TEL
		,AC_ORG.FAX
		,AC_ORG.REMARK
		,AC_ORG.CANOPERATESTORAGEIN
		,AC_ORG.CANOPERATEFLOW
		,AC_ORG.CANPROVIDED
		,AC_ORG.DOPROVIDECONFIRM
		,AC_ORG.ADDRESS
		,AC_ORG.ISOUTSIDE
		,AC_ORG.SYNDATAID
		,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
		FROM AC_ORG  WITH (NOLOCK)
	</Content>
    <Content Key="Select_AC_Org" DataBaseType="Oracle">
		SELECT AC_ORG.ID
		,AC_ORG.NAME
		,AC_ORG.CODE
		,AC_ORG.PREVID
		,AC_ORG.TEL
		,AC_ORG.FAX
		,AC_ORG.REMARK
		,AC_ORG.CANOPERATESTORAGEIN
		,AC_ORG.CANOPERATEFLOW
		,AC_ORG.CANPROVIDED
		,AC_ORG.DOPROVIDECONFIRM
		,AC_ORG.ADDRESS
		,AC_ORG.ISOUTSIDE
		,AC_ORG.SYNDATAID
		,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
		FROM AC_ORG
	</Content>


    <Content Key="Select_GetByOrgID" DataBaseType="SqlServer">
		SELECT AC_ORG.ID
		,AC_ORG.NAME
		,AC_ORG.CODE
		,AC_ORG.PREVID
		,PREVORG.NAME AS PREVNAME
		,AC_ORG.TEL
		,AC_ORG.FAX
		,AC_ORG.REMARK
		,AC_ORG.CANOPERATESTORAGEIN
		,AC_ORG.CANOPERATEFLOW
		,AC_ORG.CANPROVIDED
		,AC_ORG.DOPROVIDECONFIRM
		,AC_ORG.ADDRESS
		,AC_ORG.ISOUTSIDE
		,AC_ORG.SYNDATAID
		,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
		,AC_ORG.DEFAULTWAREHOUSEID,W1.WAREHOUSENAME DEFAULTWAREHOUSENAME,AC_ORG.DEFAULTLOCATIONID,L1.LOCATIONNAME DEFAULTLOCATIONNAME
		,AC_ORG.INSTRUMENTWAREHOUSEID,W2.WAREHOUSENAME INSTRUMENTWAREHOUSENAME
		,AC_ORG.INSTRUMENTTEMPWAREHOUSEID,W3.WAREHOUSENAME INSTRUMENTTEMPWAREHOUSENAME
		,AC_ORG.MATERIALWAREHOUSEID,W4.WAREHOUSENAME MATERIALWAREHOUSENAME
		,AC_ORG.MATERIALTEMPWAREHOUSEID,W5.WAREHOUSENAME MATERIALTEMPWAREHOUSENAME
		,AC_ORG.PACKAGEWAREHOUSEID,W6.WAREHOUSENAME PACKAGEWAREHOUSENAME
		,AC_ORG.PACKAGEPROVIDEWAREHOUSEID,W7.WAREHOUSENAME PACKAGEPROVIDEWAREHOUSENAME
		,AC_ORG.ONETIMEWAREHOUSEID,W8.WAREHOUSENAME ONETIMEWAREHOUSENAME
		,AC_ORG.ONETIMEPROVIDEWAREHOUSEID,W9.WAREHOUSENAME ONETIMEPROVIDEWAREHOUSENAME
		FROM AC_ORG
		LEFT JOIN AC_ORG PREVORG ON AC_ORG.PREVID = PREVORG.ID
		LEFT JOIN Warehouse W1 ON AC_ORG.DEFAULTWAREHOUSEID=W1.WAREHOUSEID
		LEFT JOIN Warehouse W2 ON AC_ORG.INSTRUMENTWAREHOUSEID=W2.WAREHOUSEID
		LEFT JOIN Warehouse W3 ON AC_ORG.INSTRUMENTTEMPWAREHOUSEID=W3.WAREHOUSEID
		LEFT JOIN Warehouse W4 ON AC_ORG.MATERIALWAREHOUSEID=W4.WAREHOUSEID
		LEFT JOIN Warehouse W5 ON AC_ORG.MATERIALTEMPWAREHOUSEID=W5.WAREHOUSEID
		LEFT JOIN Warehouse W6 ON AC_ORG.PACKAGEWAREHOUSEID=W6.WAREHOUSEID
		LEFT JOIN Warehouse W7 ON AC_ORG.PACKAGEPROVIDEWAREHOUSEID=W7.WAREHOUSEID
		LEFT JOIN Warehouse W8 ON AC_ORG.ONETIMEWAREHOUSEID=W8.WAREHOUSEID
		LEFT JOIN Warehouse W9 ON AC_ORG.ONETIMEPROVIDEWAREHOUSEID=W9.WAREHOUSEID
		LEFT JOIN Location L1 ON AC_ORG.DEFAULTLOCATIONID=L1.LOCATIONID

		WHERE AC_ORG.ID=@OrgID
	</Content>
    <Content Key="Select_GetByOrgID" DataBaseType="Oracle">
		SELECT AC_ORG.ID
		,AC_ORG.NAME
		,AC_ORG.CODE
		,AC_ORG.PREVID
		,PREVORG.NAME AS PREVNAME
		,AC_ORG.TEL
		,AC_ORG.FAX
		,AC_ORG.REMARK
		,AC_ORG.CANOPERATESTORAGEIN
		,AC_ORG.CANOPERATEFLOW
		,AC_ORG.CANPROVIDED
		,AC_ORG.DOPROVIDECONFIRM
		,AC_ORG.ADDRESS
		,AC_ORG.ISOUTSIDE
		,AC_ORG.SYNDATAID
		,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
		,AC_ORG.DEFAULTWAREHOUSEID,W1.WAREHOUSENAME DEFAULTWAREHOUSENAME,AC_ORG.DEFAULTLOCATIONID,L1.LOCATIONNAME DEFAULTLOCATIONNAME
		,AC_ORG.INSTRUMENTWAREHOUSEID,W2.WAREHOUSENAME INSTRUMENTWAREHOUSENAME
		,AC_ORG.INSTRUMENTTEMPWAREHOUSEID,W3.WAREHOUSENAME INSTRUMENTTEMPWAREHOUSENAME
		,AC_ORG.MATERIALWAREHOUSEID,W4.WAREHOUSENAME MATERIALWAREHOUSENAME
		,AC_ORG.MATERIALTEMPWAREHOUSEID,W5.WAREHOUSENAME MATERIALTEMPWAREHOUSENAME
		,AC_ORG.PACKAGEWAREHOUSEID,W6.WAREHOUSENAME PACKAGEWAREHOUSENAME
		,AC_ORG.PACKAGEPROVIDEWAREHOUSEID,W7.WAREHOUSENAME PACKAGEPROVIDEWAREHOUSENAME
		,AC_ORG.ONETIMEWAREHOUSEID,W8.WAREHOUSENAME ONETIMEWAREHOUSENAME
		,AC_ORG.ONETIMEPROVIDEWAREHOUSEID,W9.WAREHOUSENAME ONETIMEPROVIDEWAREHOUSENAME
		FROM AC_ORG
		LEFT JOIN AC_ORG PREVORG  ON AC_ORG.PREVID = PREVORG.ID
		LEFT JOIN Warehouse W1 ON AC_ORG.DEFAULTWAREHOUSEID=W1.WAREHOUSEID
		LEFT JOIN Warehouse W2 ON AC_ORG.INSTRUMENTWAREHOUSEID=W2.WAREHOUSEID
		LEFT JOIN Warehouse W3 ON AC_ORG.INSTRUMENTTEMPWAREHOUSEID=W3.WAREHOUSEID
		LEFT JOIN Warehouse W4 ON AC_ORG.MATERIALWAREHOUSEID=W4.WAREHOUSEID
		LEFT JOIN Warehouse W5 ON AC_ORG.MATERIALTEMPWAREHOUSEID=W5.WAREHOUSEID
		LEFT JOIN Warehouse W6 ON AC_ORG.PACKAGEWAREHOUSEID=W6.WAREHOUSEID
		LEFT JOIN Warehouse W7 ON AC_ORG.PACKAGEPROVIDEWAREHOUSEID=W7.WAREHOUSEID
		LEFT JOIN Warehouse W8 ON AC_ORG.ONETIMEWAREHOUSEID=W8.WAREHOUSEID
		LEFT JOIN Warehouse W9 ON AC_ORG.ONETIMEPROVIDEWAREHOUSEID=W9.WAREHOUSEID
		LEFT JOIN Location L1 ON AC_ORG.DEFAULTLOCATIONID=L1.LOCATIONID
		WHERE AC_ORG.ID=:OrgID
	</Content>
	  <Content Key="Select_Org" DataBaseType="SqlServer">
		  SELECT AC_ORG.ID
		  ,AC_ORG.NAME
		  ,AC_ORG.CODE
		  ,AC_ORG.PREVID
		  ,PREVORG.NAME AS PREVNAME
		  ,AC_ORG.TEL
		  ,AC_ORG.FAX
		  ,AC_ORG.REMARK
		  ,AC_ORG.CANOPERATESTORAGEIN
		  ,AC_ORG.CANOPERATEFLOW
		  ,AC_ORG.CANPROVIDED
		  ,AC_ORG.DOPROVIDECONFIRM
		  ,AC_ORG.ADDRESS
		  ,AC_ORG.ISOUTSIDE
		  ,AC_ORG.SYNDATAID
		  ,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
		  ,AC_ORG.DEFAULTWAREHOUSEID,W1.WAREHOUSENAME DEFAULTWAREHOUSENAME,AC_ORG.DEFAULTLOCATIONID,L1.LOCATIONNAME DEFAULTLOCATIONNAME
		  ,AC_ORG.INSTRUMENTWAREHOUSEID,W2.WAREHOUSENAME INSTRUMENTWAREHOUSENAME
		  ,AC_ORG.INSTRUMENTTEMPWAREHOUSEID,W3.WAREHOUSENAME INSTRUMENTTEMPWAREHOUSENAME
		  ,AC_ORG.MATERIALWAREHOUSEID,W4.WAREHOUSENAME MATERIALWAREHOUSENAME
		  ,AC_ORG.MATERIALTEMPWAREHOUSEID,W5.WAREHOUSENAME MATERIALTEMPWAREHOUSENAME
		  ,AC_ORG.PACKAGEWAREHOUSEID,W6.WAREHOUSENAME PACKAGEWAREHOUSENAME
		  ,AC_ORG.PACKAGEPROVIDEWAREHOUSEID,W7.WAREHOUSENAME PACKAGEPROVIDEWAREHOUSENAME
		  ,AC_ORG.ONETIMEWAREHOUSEID,W8.WAREHOUSENAME ONETIMEWAREHOUSENAME
		  ,AC_ORG.ONETIMEPROVIDEWAREHOUSEID,W9.WAREHOUSENAME ONETIMEPROVIDEWAREHOUSENAME
		  FROM AC_ORG
		  LEFT JOIN AC_ORG PREVORG ON AC_ORG.PREVID = PREVORG.ID
		  LEFT JOIN Warehouse W1 ON AC_ORG.DEFAULTWAREHOUSEID=W1.WAREHOUSEID
		  LEFT JOIN Warehouse W2 ON AC_ORG.INSTRUMENTWAREHOUSEID=W2.WAREHOUSEID
		  LEFT JOIN Warehouse W3 ON AC_ORG.INSTRUMENTTEMPWAREHOUSEID=W3.WAREHOUSEID
		  LEFT JOIN Warehouse W4 ON AC_ORG.MATERIALWAREHOUSEID=W4.WAREHOUSEID
		  LEFT JOIN Warehouse W5 ON AC_ORG.MATERIALTEMPWAREHOUSEID=W5.WAREHOUSEID
		  LEFT JOIN Warehouse W6 ON AC_ORG.PACKAGEWAREHOUSEID=W6.WAREHOUSEID
		  LEFT JOIN Warehouse W7 ON AC_ORG.PACKAGEPROVIDEWAREHOUSEID=W7.WAREHOUSEID
		  LEFT JOIN Warehouse W8 ON AC_ORG.ONETIMEWAREHOUSEID=W8.WAREHOUSEID
		  LEFT JOIN Warehouse W9 ON AC_ORG.ONETIMEPROVIDEWAREHOUSEID=W9.WAREHOUSEID
		  LEFT JOIN Location L1 ON AC_ORG.DEFAULTLOCATIONID=L1.LOCATIONID
		  WHERE 1=1
	  </Content>
	  <Content Key="Select_Org" DataBaseType="Oracle">
		  SELECT AC_ORG.ID
		  ,AC_ORG.NAME
		  ,AC_ORG.CODE
		  ,AC_ORG.PREVID
		  ,PREVORG.NAME AS PREVNAME
		  ,AC_ORG.TEL
		  ,AC_ORG.FAX
		  ,AC_ORG.REMARK
		  ,AC_ORG.CANOPERATESTORAGEIN
		  ,AC_ORG.CANOPERATEFLOW
		  ,AC_ORG.CANPROVIDED
		  ,AC_ORG.DOPROVIDECONFIRM
		  ,AC_ORG.ADDRESS
		  ,AC_ORG.ISOUTSIDE
		  ,AC_ORG.SYNDATAID
		  ,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
		  ,AC_ORG.DEFAULTWAREHOUSEID,W1.WAREHOUSENAME DEFAULTWAREHOUSENAME,AC_ORG.DEFAULTLOCATIONID,L1.LOCATIONNAME DEFAULTLOCATIONNAME
		  ,AC_ORG.INSTRUMENTWAREHOUSEID,W2.WAREHOUSENAME INSTRUMENTWAREHOUSENAME
		  ,AC_ORG.INSTRUMENTTEMPWAREHOUSEID,W3.WAREHOUSENAME INSTRUMENTTEMPWAREHOUSENAME
		  ,AC_ORG.MATERIALWAREHOUSEID,W4.WAREHOUSENAME MATERIALWAREHOUSENAME
		  ,AC_ORG.MATERIALTEMPWAREHOUSEID,W5.WAREHOUSENAME MATERIALTEMPWAREHOUSENAME
		  ,AC_ORG.PACKAGEWAREHOUSEID,W6.WAREHOUSENAME PACKAGEWAREHOUSENAME
		  ,AC_ORG.PACKAGEPROVIDEWAREHOUSEID,W7.WAREHOUSENAME PACKAGEPROVIDEWAREHOUSENAME
		  ,AC_ORG.ONETIMEWAREHOUSEID,W8.WAREHOUSENAME ONETIMEWAREHOUSENAME
		  ,AC_ORG.ONETIMEPROVIDEWAREHOUSEID,W9.WAREHOUSENAME ONETIMEPROVIDEWAREHOUSENAME
		  FROM AC_ORG
		  LEFT JOIN AC_ORG PREVORG  ON AC_ORG.PREVID = PREVORG.ID
		  LEFT JOIN Warehouse W1 ON AC_ORG.DEFAULTWAREHOUSEID=W1.WAREHOUSEID
		  LEFT JOIN Warehouse W2 ON AC_ORG.INSTRUMENTWAREHOUSEID=W2.WAREHOUSEID
		  LEFT JOIN Warehouse W3 ON AC_ORG.INSTRUMENTTEMPWAREHOUSEID=W3.WAREHOUSEID
		  LEFT JOIN Warehouse W4 ON AC_ORG.MATERIALWAREHOUSEID=W4.WAREHOUSEID
		  LEFT JOIN Warehouse W5 ON AC_ORG.MATERIALTEMPWAREHOUSEID=W5.WAREHOUSEID
		  LEFT JOIN Warehouse W6 ON AC_ORG.PACKAGEWAREHOUSEID=W6.WAREHOUSEID
		  LEFT JOIN Warehouse W7 ON AC_ORG.PACKAGEPROVIDEWAREHOUSEID=W7.WAREHOUSEID
		  LEFT JOIN Warehouse W8 ON AC_ORG.ONETIMEWAREHOUSEID=W8.WAREHOUSEID
		  LEFT JOIN Warehouse W9 ON AC_ORG.ONETIMEPROVIDEWAREHOUSEID=W9.WAREHOUSEID
		  LEFT JOIN Location L1 ON AC_ORG.DEFAULTLOCATIONID=L1.LOCATIONID
		  WHERE 1=1
	  </Content>

    <Content Key="SP_Select_OrgUser" DataBaseType="SqlServer">
		SELECT AC_ORG.ID
		,AC_ORG.CODE
		,AC_ORG.NAME
		,AC_ORG.PREVID
		,AC_ORG.TEL
		,AC_ORG.FAX
		,AC_ORG.REMARK
		,AC_ORG.CANPROVIDED
		,AC_ORG.CANOPERATESTORAGEIN
		,AC_ORG.CANOPERATEFLOW
		,AC_ORG.ADDRESS
		,AC_ORG.ISOUTSIDE
		,AC_ORG.DOPROVIDECONFIRM
		,AC_ORG.SYNDATAID
		,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
		FROM AC_ORGUSER  WITH (NOLOCK)
		LEFT JOIN AC_ORG  WITH (NOLOCK)  ON AC_ORGUSER.ORGID = AC_ORG.ID WHERE 1 = 1 AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL )
	</Content>
    <Content Key="SP_Select_OrgUser" DataBaseType="Oracle">
		SELECT AC_ORG.ID
		,AC_ORG.CODE
		,AC_ORG.NAME
		,AC_ORG.PREVID
		,AC_ORG.TEL
		,AC_ORG.FAX
		,AC_ORG.REMARK
		,AC_ORG.CANPROVIDED
		,AC_ORG.CANOPERATESTORAGEIN
		,AC_ORG.CANOPERATEFLOW
		,AC_ORG.ADDRESS
		,AC_ORG.ISOUTSIDE
		,AC_ORG.DOPROVIDECONFIRM
		,AC_ORG.SYNDATAID
		,AC_ORG.PINYIN,AC_ORG.SYNDATACODE
		FROM AC_ORGUSER
		LEFT JOIN AC_ORG    ON AC_ORGUSER.ORGID = AC_ORG.ID WHERE 1 = 1 AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL )
	</Content>

    <Content Key="SP_Select_Location" DataBaseType="SqlServer">
      SELECT LOCATIONID,LOCATIONNAME,LOCATIONTYPE,ORGID,BARCODE,Location.ISDISABLED,MODIFIER,MODIFYTIME,Location.REMARK,WAREHOUSEID,ac_org.name ORGNAME,Location.PINYIN
      FROM Location inner join ac_org on location.orgid=ac_org.id where 1=1
    </Content>
    <Content Key="SP_Select_Location" DataBaseType="Oracle">
      SELECT LOCATIONID,LOCATIONNAME,LOCATIONTYPE,ORGID,BARCODE,Location.ISDISABLED,MODIFIER,MODIFYTIME,Location.REMARK,WAREHOUSEID,ac_org.name ORGNAME,Location.PINYIN
      FROM Location inner join ac_org on location.orgid=ac_org.id where 1=1
    </Content>

    <Content Key="Select_AC_OrgUser" DataBaseType="SqlServer">
		SELECT AC_ORGUSER.ORGID
		,AC_ORGUSER.USERID
		,AC_ORG.NAME AS ORGNAME
		,AC_USER.CODE
		,AC_USER.NAME
		,AC_USER.LOGINNAME
		,AC_USER.PASSWORD
		,AC_USER.SEX
		,AC_USER.MOBILE
		,AC_USER.TEL
		,AC_USER.EMAIL
		,AC_USER.ADDRESS
		,AC_USER.PHOTO
		,AC_USER.REMARK
		,AC_USER.AVAILABLE
		,AC_USER.JOBTITLE
		,AC_USER.DATEAVAILABLE
		,AC_USER.DATEDUTY
		,AC_USER.SYNDATAID
		,AC_USER.PINYIN,AC_USER.SYNDATACODE
		FROM AC_ORGUSER WITH (NOLOCK) LEFT JOIN AC_ORG WITH (NOLOCK) ON AC_ORGUSER.ORGID =AC_ORG.ID
		LEFT JOIN AC_USER WITH (NOLOCK) ON AC_ORGUSER.USERID=AC_USER.ID WHERE 1=1 and  AC_ORGUSER.USERID = @UserID
	</Content>
    <Content Key="Select_AC_OrgUser" DataBaseType="Oracle">
		SELECT AC_ORGUSER.ORGID
		,AC_ORGUSER.USERID
		,AC_ORG.NAME AS ORGNAME
		,AC_USER.CODE
		,AC_USER.NAME
		,AC_USER.LOGINNAME
		,AC_USER.PASSWORD
		,AC_USER.SEX
		,AC_USER.MOBILE
		,AC_USER.TEL
		,AC_USER.EMAIL
		,AC_USER.ADDRESS
		,AC_USER.PHOTO
		,AC_USER.REMARK
		,AC_USER.AVAILABLE
		,AC_USER.JOBTITLE
		,AC_USER.DATEAVAILABLE
		,AC_USER.DATEDUTY
		,AC_USER.SYNDATAID
		,AC_USER.PINYIN,AC_USER.SYNDATACODE
		FROM AC_ORGUSER   LEFT JOIN AC_ORG  ON AC_ORGUSER.ORGID =AC_ORG.ID
		LEFT JOIN AC_USER   ON AC_ORGUSER.USERID=AC_USER.ID WHERE 1=1 and  AC_ORGUSER.USERID =  :UserID
	</Content>

    <Content Key="Query_AC_OrgCanStorage" DataBaseType="SqlServer">
      SELECT AC_ORG.ID
      ,AC_ORG.NAME
      ,AC_ORG.CODE
      ,AC_ORG.PREVID
      ,AC_ORG.TEL
      ,AC_ORG.FAX
      ,AC_ORG.REMARK
      ,AC_ORG.CANPROVIDED
      ,AC_ORG.CANOPERATESTORAGEIN
      ,AC_ORG.CANOPERATEFLOW
      FROM AC_ORG WHERE 1=1  AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
    </Content>
    <Content Key="Query_AC_OrgCanStorage" DataBaseType="Oracle">
      SELECT AC_ORG.ID
      ,AC_ORG.NAME
      ,AC_ORG.CODE
      ,AC_ORG.PREVID
      ,AC_ORG.TEL
      ,AC_ORG.FAX
      ,AC_ORG.REMARK
      ,AC_ORG.CANPROVIDED
      ,AC_ORG.CANOPERATESTORAGEIN
      ,AC_ORG.CANOPERATEFLOW
      FROM AC_ORG WHERE 1=1  AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
    </Content>
    <Content Key="Query_SensorNodeTreeData" DataBaseType="SqlServer">
      SELECT
      SensorTreeID AS ID
      ,dbo.to_char(SensorTreeName) AS NAME
      ,isnull(ParentSensorTreeID,'00000000-0000-0000-0000-000000000000') AS PREVID
      ,OrderID
      From SensorTree WITH (nolock) WHERE 1 = 1

      UNION
      SELECT '00000000-0000-0000-0000-000000000000','所有传感器',NULL AS PREVID,'000000' AS OrderID
      FROM SensorTree

      ORDER BY OrderID
    </Content>
    <Content Key="Query_SensorNodeTreeData" DataBaseType="Oracle">
      SELECT
      SensorTreeID AS ID
      ,to_char(SensorTreeName) AS NAME
      ,nvl(ParentSensorTreeID,'00000000-0000-0000-0000-000000000000') AS PREVID
      ,OrderID
      From SensorTree  WHERE 1 = 1
      UNION
      SELECT '00000000-0000-0000-0000-000000000000','所有传感器',NULL AS PREVID,'000000' AS OrderID
      FROM SensorTree
      ORDER BY OrderID
    </Content>
    <Content Key="Query_AC_OrgTreeData" DataBaseType="SqlServer">
      SELECT AC_ORG.ID
      ,dbo.to_char(AC_ORG.NAME) as NAME
      ,isnull(PREVID,'00000000-0000-0000-0000-000000000000') AS PREVID
      ,AC_ORG.Pinyin
      From AC_Org with (nolock) where   (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
      UNION
      SELECT '00000000-0000-0000-0000-000000000000','科室部门',NULL AS PREVID ,'拼音' from AC_Org
    </Content>
    <Content Key="Query_AC_OrgTreeData" DataBaseType="Oracle">
      SELECT AC_ORG.ID
      ,AC_ORG.NAME as NAME
      ,nvl(PREVID,'00000000-0000-0000-0000-000000000000') AS PREVID
      ,AC_ORG.pinyin
      From AC_Org   where   (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
      UNION
      SELECT '00000000-0000-0000-0000-000000000000','科室部门',NULL AS PREVID ,'拼音' from AC_Org
    </Content>

    <Content Key="Query_AC_OrgTreeDataCanStorage" DataBaseType="SqlServer">
      SELECT ID
      ,NAME
      ,CAST(CODE as varchar)
      ,isnull(PrevID,'00000000-0000-0000-0000-000000000000') AS PREVID
      FROM AC_Org
      WHERE (CanOperateStorageIn=1 OR CanOperateFlow=1)  AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
      UNION
      SELECT '00000000-0000-0000-0000-000000000000' as ID,'科室部门' as NAME ,'99999' as CODE,NULL AS PREVID FROM View_DUAL
    </Content>
    <Content Key="Query_AC_OrgTreeDataCanStorage" DataBaseType="Oracle">
      SELECT ID
      ,NAME
      ,to_char(CODE)
      ,nvl(PrevID,'00000000-0000-0000-0000-000000000000') AS PREVID
      FROM AC_Org
      WHERE (CanOperateStorageIn=1 OR CanOperateFlow=1)  AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
      UNION
      SELECT '00000000-0000-0000-0000-000000000000' as ID,'科室部门' as NAME ,'99999' as CODE,NULL AS PREVID FROM View_DUAL
    </Content>

    <Content Key="Query_GetSynDataOrg" DataBaseType="SqlServer">
      SELECT ID,CODE,NAME,ISDISABLED,CANOPERATEFLOW,pinyin As FPinyin,IsOutSide FROM AC_ORG WHERE IsNull(ISDISABLED,0) = 0
    </Content>
    <Content Key="Query_GetSynDataOrg" DataBaseType="Oracle">
      SELECT ID,CODE,NAME,ISDISABLED,CANOPERATEFLOW,pinyin As FPinyin,IsOutSide FROM AC_ORG WHERE nvl(ISDISABLED,0) = 0
    </Content>

    <Content Key="Query_IsExistOrgByNameAndID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM AC_ORG WHERE   NAME=@Name  and ( IsDisabled is null or IsDisabled=0)  and ID <> @ID
      ]]>
    </Content>
    <Content Key="Query_IsExistOrgByNameAndID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM AC_ORG WHERE   NAME=:Name  and ( IsDisabled is null or IsDisabled=0)  and ID <> :ID
      ]]>
    </Content>

    <Content Key="Query_IsExistSensorID" DataBaseType="SqlServer">
      SELECT COUNT(*) FROM SensorNode WHERE SensorID=@SensorID
    </Content>
    <Content Key="Query_IsExistSensorID" DataBaseType="Oracle">
      SELECT COUNT(*) FROM SensorNode WHERE SensorID=:SensorID
    </Content>


    <Content Key="Query_GetOrgOneProductsByOrgID" DataBaseType="SqlServer">
      SELECT B.CARGOTYPEID,B.CARGOTOPTYPETEXT,B.CARGOTYPEKINDTEXT,B.CARGOTYPETEXT
      FROM AC_ORGONEPRODUCTS A
      INNER JOIN view_CargoType B ON A.CARGOTYPEID=B.CargoTypeID
      WHERE B.CARGOTOPTYPETEXT='一次性物品' AND A.ID=@ID
    </Content>
    <Content Key="Query_GetOrgOneProductsByOrgID" DataBaseType="Oracle">
      SELECT B.CARGOTYPEID,B.CARGOTOPTYPETEXT,B.CARGOTYPEKINDTEXT,B.CARGOTYPETEXT
      FROM AC_ORGONEPRODUCTS A
      INNER JOIN view_CargoType B ON A.CARGOTYPEID=B.CargoTypeID
      WHERE B.CARGOTOPTYPETEXT='一次性物品' AND A.ID=:ID
    </Content>

    <!--<Content Key="Query_ACOrgProductsByCargoTopTypeAndID" DataBaseType="SqlServer">
      SELECT B.CARGOTYPEID,B.CARGOTOPTYPETEXT,B.CARGOTYPEKINDTEXT,B.CARGOTYPETEXT
      FROM AC_ORGPRODUCTS A
      INNER JOIN view_CargoType B ON A.CARGOTYPEID=B.CargoTypeID
      WHERE B.CARGOTOPTYPE=@CargoTopType AND A.ID=@ID
    </Content>
    <Content Key="Query_ACOrgProductsByCargoTopTypeAndID" DataBaseType="Oracle">
      SELECT B.CARGOTYPEID,B.CARGOTOPTYPETEXT,B.CARGOTYPEKINDTEXT,B.CARGOTYPETEXT
      FROM AC_ORGPRODUCTS A
      INNER JOIN view_CargoType B ON A.CARGOTYPEID=B.CargoTypeID
      WHERE B.CARGOTOPTYPE=:CargoTopType AND A.ID=:ID
    </Content>-->

    <Content Key="Query_SafeStockByCargoTopTypeAndID" DataBaseType="SqlServer">
      SELECT B.CARGOTYPEID,B.CARGOTOPTYPETEXT,B.CARGOTYPEKINDTEXT,B.CARGOTYPETEXT
      ,A.BASEQTY,A.SAFEQTY,ISNULL(A.ISDEFAULTSHOW,0) AS ISDEFAULTSHOW
      FROM SafeStock A
      INNER JOIN view_CargoType B ON A.CargoTypeID=B.CargoTypeID
      WHERE B.CARGOTOPTYPE=@CargoTopType AND A.OrgID=@OrgID
    </Content>
    <Content Key="Query_SafeStockByCargoTopTypeAndID" DataBaseType="Oracle">
      SELECT B.CARGOTYPEID,B.CARGOTOPTYPETEXT,B.CARGOTYPEKINDTEXT,B.CARGOTYPETEXT
      ,A.BASEQTY,A.SAFEQTY,nvl(A.ISDEFAULTSHOW,0) AS ISDEFAULTSHOW
      FROM SafeStock A
      INNER JOIN view_CargoType B ON A.CargoTypeID=B.CargoTypeID
      WHERE B.CARGOTOPTYPE=:CargoTopType AND A.OrgID=:OrgID
    </Content>

    <Content Key="GetSynDataOrgUser" DataBaseType="SqlServer">
      SELECT ORGID,USERID FROM AC_ORGUSER
    </Content>
    <Content Key="GetSynDataOrgUser" DataBaseType="Oracle">
      SELECT ORGID,USERID FROM AC_ORGUSER
    </Content>

    <Content Key="GetSynDataPrivilege" DataBaseType="SqlServer">
      SELECT ID,NAME,CODE FROM AC_Privilege
    </Content>
    <Content Key="GetSynDataPrivilege" DataBaseType="Oracle">
      SELECT ID,NAME,CODE FROM AC_Privilege
    </Content>

    <Content Key="Query_AC_RoleByCondition" DataBaseType="SqlServer">
      SELECT AC_ROLE.ID
      , AC_ROLE.NAME
      , AC_ROLE.REMARK , AC_ROLE.PINYIN  FROM AC_ROLE  WITH (NOLOCK) WHERE  1 = 1 AND (AC_ROLE.ISDISABLED =0 OR AC_ROLE.ISDISABLED IS NULL)
    </Content>
    <Content Key="Query_AC_RoleByCondition" DataBaseType="Oracle">
      SELECT AC_ROLE.ID
      , AC_ROLE.NAME
      , AC_ROLE.REMARK , AC_ROLE.PINYIN  FROM AC_ROLE   WHERE  1 = 1 AND (AC_ROLE.ISDISABLED =0 OR AC_ROLE.ISDISABLED IS NULL)
    </Content>

    <Content Key="IsExistAC_PrivilegeByNameAndID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM AC_PRIVILEGE WHERE   NAME=@Name  and ID <> @id
      ]]>
    </Content>
    <Content Key="IsExistAC_PrivilegeByNameAndID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM AC_PRIVILEGE WHERE   NAME=:Name  and ID <> :id
      ]]>
    </Content>

    <Content Key="Select_AC_Privilege" DataBaseType="SqlServer">
      SELECT AC_PRIVILEGE.ID
      , AC_PRIVILEGE.NAME
      , AC_PRIVILEGE.CODE
      , AC_PRIVILEGE.PREID
      , AC_PRIVILEGE.TREELEVEL
      , AC_PRIVILEGE.MODULEID
      , AC_PRIVILEGE.BITID,A.ROLEID ,A.OPERATENAME,A.AVAILABLE ,(CASE WHEN (A.ID IS NULL) THEN 0 ELSE 1 END) AS ISPRIVILEGE,AC_PRIVILEGE.ID AS PRIVILEGEID
      FROM AC_PRIVILEGE   WITH (NOLOCK)
      LEFT JOIN (SELECT * FROM AC_ROLEPRIVILEGE WITH (NOLOCK)  WHERE ROLEID=@RoleID) A ON A.PRIVILEGEID=AC_PRIVILEGE.ID ORDER BY CODE ASC
    </Content>
    <Content Key="Select_AC_Privilege" DataBaseType="Oracle">
      SELECT AC_PRIVILEGE.ID
      , AC_PRIVILEGE.NAME
      , AC_PRIVILEGE.CODE
      , AC_PRIVILEGE.PREID
      , AC_PRIVILEGE.TREELEVEL
      , AC_PRIVILEGE.MODULEID
      , AC_PRIVILEGE.BITID,A.ROLEID ,A.OPERATENAME,A.AVAILABLE ,(CASE WHEN (A.ID IS NULL) THEN 0 ELSE 1 END) AS ISPRIVILEGE,AC_PRIVILEGE.ID AS PRIVILEGEID
      FROM AC_PRIVILEGE
      LEFT JOIN (SELECT * FROM AC_ROLEPRIVILEGE   WHERE ROLEID=:RoleID) A ON A.PRIVILEGEID=AC_PRIVILEGE.ID ORDER BY CODE ASC
    </Content>

    <Content Key="IsExistAC_RoleByNameAndID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM AC_ROLE WHERE   NAME=@Name  and ( IsDisabled is null or IsDisabled=0)  and id <> @id
      ]]>
    </Content>
    <Content Key="IsExistAC_RoleByNameAndID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM AC_ROLE WHERE   NAME=:Name  and ( IsDisabled is null or IsDisabled=0)  and id <> :id
      ]]>
    </Content>

    <Content Key="GetSynDataRolePrivilege" DataBaseType="SqlServer">
      SELECT ID,ROLEID,PRIVILEGEID FROM AC_RolePrivilege WHERE Available = 1
    </Content>
    <Content Key="GetSynDataRolePrivilege" DataBaseType="Oracle">
      SELECT ID,ROLEID,PRIVILEGEID FROM AC_RolePrivilege WHERE Available = 1
    </Content>

    <Content Key="GetSynDataRoleUser" DataBaseType="SqlServer">
      SELECT ROLEID,USERID FROM AC_RoleUser
    </Content>
    <Content Key="GetSynDataRoleUser" DataBaseType="Oracle">
      SELECT ROLEID,USERID FROM AC_RoleUser
    </Content>

    <Content Key="SP_Select_User" DataBaseType="SqlServer">
      SELECT AC_User.*
      ,AC_OrgUser.ORGID,sex.TypeName as SEX_NAME,Available.TypeName as AVAILABLE_NAME
      FROM AC_User
      LEFT JOIN AC_OrgUser
      ON AC_User.ID = AC_OrgUser.UserID
      left join ac_org on ac_org.id=AC_OrgUser.orgid and isnull(ac_user.isdisabled,0)=0 and isnull(ac_org.isdisabled,0)=0
      left join  SystemTypeParameter sex on (sex.TypeKey = 'Sex' AND sex.TypeValue =AC_User.sex)
      left join  SystemTypeParameter Available on (Available.TypeKey = 'Available' AND Available.TypeValue =AC_User.Available)
      WHERE 1 = 1
    </Content>
    <Content Key="SP_Select_User" DataBaseType="Oracle">
      SELECT AC_User.*
      ,AC_OrgUser.ORGID,sex.TypeName  as SEX_NAME,Available.TypeName as AVAILABLE_NAME
      FROM AC_User
      LEFT JOIN AC_OrgUser
      ON AC_User.ID = AC_OrgUser.UserID
      left join ac_org on ac_org.id=AC_OrgUser.orgid and nvl(ac_user.isdisabled,0)=0 and nvl(ac_org.isdisabled,0)=0
      left join  SystemTypeParameter sex on (sex.TypeKey = 'Sex' AND sex.TypeValue =AC_User.sex)
      left join  SystemTypeParameter Available on (Available.TypeKey = 'Available' AND Available.TypeValue =AC_User.Available)
      WHERE 1 = 1
    </Content>

    <Content Key="Select_PermissionChecked" DataBaseType="SqlServer">
      select  TOP 1 u.NAME +'`'+O.NAME+'`'+O.CODE+'`'+cast(O.CANOPERATEFLOW as nvarchar)+'`'+u.PKEY+'`'+convert(varchar(300),u.id)
      from AC_User U WITH (NOLOCK) INNER JOIN AC_RoleUser RU WITH (NOLOCK) ON U.ID = RU.UserID
      INNER JOIN AC_RolePrivilege RP WITH (NOLOCK) ON RU.RoleID = RP.RoleID
      INNER JOIN AC_Privilege P WITH (NOLOCK) ON RP.PrivilegeID = P.ID
      INNER JOIN AC_OrgUser OU WITH (NOLOCK) ON OU.UserID = U.ID
      INNER JOIN AC_ORG O WITH (NOLOCK) ON OU.OrgID = O.ID
      WHERE U.Code = @BARCODE AND (P.Code = @PERMISSIONCODE OR  @PERMISSIONCODE = 0)
    </Content>
    <Content Key="Select_PermissionChecked" DataBaseType="Oracle">
      select u.NAME ||'`'||O.NAME||'`'|| O.CODE||'`'||CAST(O.CANOPERATEFLOW AS VARCHAR(2))||'`'||U.PKEY||'`'||U.ID
      from AC_User U   INNER JOIN AC_RoleUser RU   ON U.ID = RU.UserID
      INNER JOIN AC_RolePrivilege RP   ON RU.RoleID = RP.RoleID
      INNER JOIN AC_Privilege P   ON RP.PrivilegeID = P.ID
      INNER JOIN AC_OrgUser OU   ON OU.UserID = U.ID
      INNER JOIN AC_ORG O  ON OU.OrgID = O.ID
      WHERE U.Code = :BARCODE AND (P.Code = :PERMISSIONCODE OR  :PERMISSIONCODE = 0)
    </Content>
    <Content Key="SQL_SignIn" DataBaseType="SqlServer">
		Select
		AccountUser.ID
		,AccountUser.CODE
		,AccountUser.NAME
		,AccountUser.LOGINNAME
		,AccountUser.PASSWORD
		,AccountUser.SEX
		,AccountUser.MOBILE
		,AccountUser.TEL
		,AccountUser.EMAIL
		,AccountUser.ADDRESS
		,AccountUser.PHOTO
		,AccountUser.REMARK
		,AccountUser.AVAILABLE
		,AccountUser.JOBTITLE
		,AccountUser.DATEAVAILABLE
		,AccountUser.DATEDUTY
		,AccountUser.SYNDATAID,AccountUser.SYNDATACODE
		,AccountUser.FlowOrgID
		,AC_Org.ID AS DeptmentID
		,AC_Org.Name AS DeptmentName
		FROM AC_User AS AccountUser
		LEFT JOIN AC_OrgUser
		ON AccountUser.ID = AC_OrgUser.UserID
		INNER JOIN AC_Org
		ON AC_OrgUser.OrgID = AC_Org.ID
		WHERE  (AccountUser.ISDISABLED =0)   AND (AccountUser.AVAILABLE = 0)
	</Content>
	  <Content Key="SQL_SignIn" DataBaseType="Oracle">
		  Select
		  AccountUser.ID
		  ,AccountUser.CODE
		  ,AccountUser.NAME
		  ,AccountUser.LOGINNAME
		  ,AccountUser.PASSWORD
		  ,AccountUser.SEX
		  ,AccountUser.MOBILE
		  ,AccountUser.TEL
		  ,AccountUser.EMAIL
		  ,AccountUser.ADDRESS
		  ,AccountUser.PHOTO
		  ,AccountUser.REMARK
		  ,AccountUser.AVAILABLE
		  ,AccountUser.JOBTITLE
		  ,AccountUser.DATEAVAILABLE
		  ,AccountUser.DATEDUTY
		  ,AccountUser.SYNDATAID,AccountUser.SYNDATACODE
		  ,AccountUser.FlowOrgID
		  ,AC_Org.ID AS DeptmentID
		  ,AC_Org.Name AS DeptmentName
		  FROM AC_User   AccountUser
		  LEFT JOIN AC_OrgUser
		  ON AccountUser.ID = AC_OrgUser.UserID
		  INNER JOIN AC_Org
		  ON AC_OrgUser.OrgID = AC_Org.ID
		  WHERE  (AccountUser.ISDISABLED =0)   AND (AccountUser.AVAILABLE = 0)
	  </Content>
    <Content Key="Query_Select_login" DataBaseType="SqlServer">
		Select ID
		,CODE
		,NAME
		,LOGINNAME
		,PASSWORD
		,SEX
		,MOBILE
		,TEL
		,EMAIL
		,ADDRESS
		,PHOTO
		,REMARK
		,AVAILABLE
		,JOBTITLE
		,DATEAVAILABLE
		,DATEDUTY,SYNDATAID,FlowOrgID,Pinyin,SYNDATACODE  From AC_User Where  (AC_USER.ISDISABLED =0)   AND (AC_USER.AVAILABLE = 0)  AND LOGINNAME =@loginName and  PASSWORD = @password
	</Content>
    <Content Key="Query_Select_login" DataBaseType="Oracle">
		Select ID
		,CODE
		,NAME
		,LOGINNAME
		,PASSWORD
		,SEX
		,MOBILE
		,TEL
		,EMAIL
		,ADDRESS
		,PHOTO
		,REMARK
		,AVAILABLE
		,JOBTITLE
		,DATEAVAILABLE
		,DATEDUTY,SYNDATAID,FlowOrgID,Pinyin,SYNDATACODE  From AC_User Where  (AC_USER.ISDISABLED =0)  AND (AC_USER.AVAILABLE = 0)  AND lower(LOGINNAME) =lower(:loginName) and  PASSWORD = :password
	</Content>

    <Content Key="Query_SelectLoginByBarCode" DataBaseType="SqlServer">
		Select ID
		,CODE
		,NAME
		,LOGINNAME
		,PASSWORD
		,SEX
		,MOBILE
		,TEL
		,EMAIL
		,ADDRESS
		,PHOTO
		,REMARK
		,AVAILABLE
		,JOBTITLE
		,DATEAVAILABLE
		,DATEDUTY,SYNDATAID,FlowOrgID,Pinyin,SYNDATACODE  From AC_User Where  (AC_USER.ISDISABLED =0 ) AND (AC_USER.AVAILABLE = 0)
	</Content>
    <Content Key="Query_SelectLoginByBarCode" DataBaseType="Oracle">
		Select ID
		,CODE
		,NAME
		,LOGINNAME
		,PASSWORD
		,SEX
		,MOBILE
		,TEL
		,EMAIL
		,ADDRESS
		,PHOTO
		,REMARK
		,AVAILABLE
		,JOBTITLE
		,DATEAVAILABLE
		,DATEDUTY,SYNDATAID,FlowOrgID,Pinyin,SYNDATACODE  From AC_User Where  (AC_USER.ISDISABLED =0 ) AND (AC_USER.AVAILABLE = 0)
	</Content>

    <Content Key="Query_SelectLoginByBarCodeAndPrivilegeCode" DataBaseType="SqlServer">
		SELECT TOP 1 U.ID
		,U.CODE
		,U.NAME
		,U.LOGINNAME
		,U.PASSWORD
		,U.SEX
		,U.MOBILE
		,U.TEL
		,U.EMAIL
		,U.ADDRESS
		,U.PHOTO
		,U.REMARK
		,U.AVAILABLE
		,U.JOBTITLE
		,U.DATEAVAILABLE
		,U.DATEDUTY
		,U.SYNDATAID,U.SYNDATACODE
		,U.PINYIN
		FROM AC_USER U
		INNER JOIN AC_ROLEUSER UR  ON U.ID = UR.USERID
		INNER JOIN AC_ROLE R ON R.ID = UR.ROLEID
		INNER JOIN AC_ROLEPRIVILEGE RP ON UR.ROLEID = RP.ROLEID
		INNER JOIN AC_PRIVILEGE P ON RP.PRIVILEGEID = P.ID
		WHERE  (U.ISDISABLED =0 ) AND (U.AVAILABLE = 0)
	</Content>
    <Content Key="Query_SelectLoginByBarCodeAndPrivilegeCode" DataBaseType="Oracle">
      <![CDATA[
      SELECT U.ID
      ,U.CODE
      ,U.NAME
      ,U.LOGINNAME
      ,U.PASSWORD
      ,U.SEX
      ,U.MOBILE
      ,U.TEL
      ,U.EMAIL
      ,U.ADDRESS
      ,U.PHOTO
      ,U.REMARK
      ,U.AVAILABLE
      ,U.JOBTITLE
      ,U.DATEAVAILABLE
      ,U.DATEDUTY
      ,U.SYNDATAID,U.SYNDATACODE
      ,U.PINYIN
      FROM AC_USER U
      INNER JOIN AC_ROLEUSER UR  ON U.ID = UR.USERID
      INNER JOIN AC_ROLE R ON R.ID = UR.ROLEID
      INNER JOIN AC_ROLEPRIVILEGE RP ON UR.ROLEID = RP.ROLEID
      INNER JOIN AC_PRIVILEGE P ON RP.PRIVILEGEID = P.ID
      WHERE  (U.ISDISABLED =0 ) AND (U.AVAILABLE = 0) AND  rownum < 2 
      ]]>
    </Content>

    <Content Key="GetUserRolesByUserID" DataBaseType="SqlServer">
      SELECT AC_ROLE.ID,AC_ROLE.NAME,(CASE WHEN A.ROLEID IS NULL  THEN 0 ELSE 1 END)  AS ISPRIVILEGE,@USERID AS USERID,AC_ROLE.ID AS ROLEID,AC_ROLE.REMARK
      FROM AC_ROLE
      LEFT JOIN(SELECT * FROM AC_ROLEUSER  WHERE USERID=@UserID) A
      ON AC_ROLE.ID =A.ROLEID AND A.USERID=@UserID WHERE AC_ROLE.ISDISABLED =0 OR AC_ROLE.ISDISABLED IS NULL
    </Content>
    <Content Key="GetUserRolesByUserID" DataBaseType="Oracle">
      SELECT AC_ROLE.ID,AC_ROLE.NAME, (CASE WHEN A.ROLEID IS NULL  THEN 0 ELSE 1 END)  AS ISPRIVILEGE,:USERID AS USERID,AC_ROLE.ID AS ROLEID,AC_ROLE.REMARK
      FROM AC_ROLE
      LEFT JOIN(SELECT * FROM AC_ROLEUSER  WHERE USERID=:UserID) A
      ON AC_ROLE.ID =A.ROLEID AND A.USERID=:UserID WHERE AC_ROLE.ISDISABLED =0 OR AC_ROLE.ISDISABLED IS NULL
    </Content>
	  <Content Key="GetUserRolesByPBGW" DataBaseType="SqlServer">
		  SELECT AC_ROLE.ID,AC_ROLE.NAME,(CASE WHEN A.ROLEID IS NULL  THEN 0 ELSE 1 END)  AS ISPRIVILEGE,@FID AS FID,AC_ROLE.ID AS ROLEID,AC_ROLE.REMARK
		  FROM AC_ROLE
		  LEFT JOIN AC_RolePBGW A
		  ON AC_ROLE.ID =A.ROLEID AND A.FID=@FID WHERE AC_ROLE.ISDISABLED =0 OR AC_ROLE.ISDISABLED IS NULL
	  </Content>
	  <Content Key="GetUserRolesByPBGW" DataBaseType="Oracle">
		  SELECT AC_ROLE.ID,AC_ROLE.NAME,(CASE WHEN A.ROLEID IS NULL  THEN 0 ELSE 1 END)  AS ISPRIVILEGE,:FID AS FID,AC_ROLE.ID AS ROLEID,AC_ROLE.REMARK
		  FROM AC_ROLE
		  LEFT JOIN AC_RolePBGW A
		  ON AC_ROLE.ID =A.ROLEID AND A.FID=:FID WHERE AC_ROLE.ISDISABLED =0 OR AC_ROLE.ISDISABLED IS NULL
	  </Content>
    <Content Key="Query_PrivilegeCodesByUserID" DataBaseType="SqlServer">
      SELECT P.CODE,P.BITID
      FROM AC_ROLEUSER RU INNER JOIN AC_ROLEPRIVILEGE RP ON RU.ROLEID = RP.ROLEID
      INNER JOIN AC_PRIVILEGE P ON P.ID = RP.PRIVILEGEID
      WHERE RU.USERID=@UserID
    </Content>
    <Content Key="Query_PrivilegeCodesByUserID" DataBaseType="Oracle">
      SELECT P.CODE,P.BITID
      FROM AC_ROLEUSER RU INNER JOIN AC_ROLEPRIVILEGE RP ON RU.ROLEID = RP.ROLEID
      INNER JOIN AC_PRIVILEGE P ON P.ID = RP.PRIVILEGEID
      WHERE RU.USERID=:UserID
    </Content>
	  <Content Key="Query_PrivilegeCodesByPBGW" DataBaseType="SqlServer">
		  SELECT P.CODE,P.BITID
		  FROM AC_RolePBGW RU INNER JOIN AC_ROLEPRIVILEGE RP ON RU.ROLEID = RP.ROLEID
		  INNER JOIN AC_PRIVILEGE P ON P.ID = RP.PRIVILEGEID
		  WHERE RU.FID=@FID
	  </Content>
	  <Content Key="Query_PrivilegeCodesByPBGW" DataBaseType="Oracle">
		  SELECT P.CODE,P.BITID
		  FROM AC_RolePBGW RU INNER JOIN AC_ROLEPRIVILEGE RP ON RU.ROLEID = RP.ROLEID
		  INNER JOIN AC_PRIVILEGE P ON P.ID = RP.PRIVILEGEID
		  WHERE RU.FID=:FID
	  </Content>
	  <Content Key="GetNowPBGWInfo" DataBaseType="SqlServer">
		  select USERID,STATION_ID from   user_scheduler where @now BETWEEN START_TIME and end_time
	  </Content>
	  <Content Key="GetNowPBGWInfo" DataBaseType="Oracle">
		  select USERID,STATION_ID from   user_scheduler where :now BETWEEN START_TIME and end_time
	  </Content> 
	  <Content Key="Query_GetPrivilegeListByUserID" DataBaseType="SqlServer">
      SELECT P.CODE,P.BITID
      FROM AC_ROLEUSER RU INNER JOIN AC_ROLEPRIVILEGE RP ON RU.ROLEID = RP.ROLEID
      INNER JOIN AC_PRIVILEGE P ON P.ID = RP.PRIVILEGEID
      WHERE 1=1
    </Content>
    <Content Key="Query_GetPrivilegeListByUserID" DataBaseType="Oracle">
      SELECT P.CODE,P.BITID
      FROM AC_ROLEUSER RU INNER JOIN AC_ROLEPRIVILEGE RP ON RU.ROLEID = RP.ROLEID
      INNER JOIN AC_PRIVILEGE P ON P.ID = RP.PRIVILEGEID
      WHERE 1=1
    </Content>

    <Content Key="Query_GetAC_UserByBarCode" DataBaseType="SqlServer">
      SELECT U.*
      FROM AC_USER U WHERE 1=1
    </Content>
    <Content Key="Query_GetAC_UserByBarCode" DataBaseType="Oracle">
      SELECT U.*
      FROM AC_USER U WHERE 1=1
    </Content>
    
    <Content Key="GetCssd_Users" DataBaseType="SqlServer">
      SELECT DISTINCT DB_USER
      ,USER_NAME
      --,UPDATETIME
      ,USER_ID
      ,USER_TYPE
      ,DEPT_CODE
      ,DEPT_NAME
      ,SUBJ_DEPT_CODE
      ,SUBJ_DEPT_NAME
      ,HRID
      ,FLAG
      ,USERSEX
      ,FCODE
      ,PINYIN
      FROM CSSD_USERS
    </Content>
    
    <Content Key="GetCssd_Users" DataBaseType="Oracle">
      SELECT DISTINCT DB_USER
      ,USER_NAME
      --,UPDATETIME
      ,USER_ID
      ,USER_TYPE
      ,DEPT_CODE
      ,DEPT_NAME
      ,SUBJ_DEPT_CODE
      ,SUBJ_DEPT_NAME
      ,HRID
      ,FLAG
      ,USERSEX
      ,FCODE
      ,PINYIN
      FROM CSSD_USERS
    </Content>
    
    <Content Key="GetSynDataUser" DataBaseType="SqlServer">
      SELECT ID,CODE,NAME,ISDISABLED,PKEY,PINYIN FROM AC_USER WHERE ISDISABLED = 0 AND AVAILABLE = 0
    </Content>
    <Content Key="GetSynDataUser" DataBaseType="Oracle">
      SELECT ID,CODE,NAME,ISDISABLED,PKEY,PINYIN FROM AC_USER WHERE ISDISABLED = 0 AND AVAILABLE = 0
    </Content>

    <Content Key="Query_GetAC_UserByName" DataBaseType="SqlServer">
      SELECT U.*
      FROM AC_USER U WHERE 1=1
    </Content>
    <Content Key="Query_GetAC_UserByName" DataBaseType="Oracle">
      SELECT U.*
      FROM AC_USER U WHERE 1=1
    </Content>

    <Content Key="Update_PKeyByUserID" DataBaseType="SqlServer">
      UPDATE AC_User SET PKey=@PKey WHERE ID=@UserID
    </Content>
    <Content Key="Update_PKeyByUserID" DataBaseType="Oracle">
      UPDATE AC_User SET PKey=:PKey WHERE ID=:UserID
    </Content>

    <Content Key="Select_GetCodeByCodeAndPKey" DataBaseType="SqlServer">
      SELECT Code FROM AC_User
      WHERE (AC_User.IsDisabled =0) AND (AC_User.Available = 0)
      AND PKey=@PKey AND Code=@Code
    </Content>
    <Content Key="Select_GetCodeByCodeAndPKey" DataBaseType="Oracle">
      SELECT Code FROM AC_User
      WHERE (AC_User.IsDisabled =0) AND (AC_User.Available = 0)
      AND PKey=:PKey AND Code=:Code
    </Content>


    <Content Key="IsExistContainerByNameAndID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(1) FROM CONTAINER WHERE (ISDISABLED is null or ISDISABLED=0) AND CONTAINERNAME = @containerName  and ContainerID <> @containerid
      ]]>
    </Content>
    <Content Key="IsExistContainerByNameAndID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(1) FROM CONTAINER WHERE (ISDISABLED is null or ISDISABLED=0) AND CONTAINERNAME = :containerName  and ContainerID <> :containerid
      ]]>
    </Content>

    <Content Key="GetContainerByConditionName" DataBaseType="SqlServer">
      SELECT CONTAINER.CONTAINERID
      ,CONTAINER.CONTAINERNAME
      ,CONTAINER.BARCODE
      ,CONTAINER.WASHTYPE
      ,CONTAINER.MODIFIER
      ,CONTAINER.MODIFYTIME
      ,CONTAINER.WASHTYPENOW
      ,CONTAINER.DEVICELOGID
      ,CONTAINER.DEFAULTCOLOR
      ,CONTAINER.STATUS
      ,CONTAINER.FPACKAGETYPE
      ,CONTAINER.PINYIN
      ,CT.CargoTypeName CARGOTYPENAME
      ,CONTAINER.CONTAINERIMAGE
      ,CONTAINER.REMARK,(SELECT TypeName FROM SystemTypeParameter WHERE TypeKey = 'WashType' AND TypeValue= CONTAINER.WASHTYPE) AS WASHTYPE_NAME
      , CONTAINER.CONTAINERTYPE,(SELECT TypeName FROM SystemTypeParameter WHERE TypeKey = 'ContainerType' AND TypeValue= CONTAINER.CONTAINERTYPE)  CONTAINERTYPENAME
      FROM CONTAINER
      LEFT JOIN CargoType CT ON CONTAINER.FPackageType=CT.CargoTypeID
      WHERE CONTAINER.ISDISABLED=0 AND CONTAINERNAME LIKE '%'+@containerName+'%'
    </Content>
    <Content Key="GetContainerByConditionName" DataBaseType="Oracle">
      SELECT CONTAINER.CONTAINERID
      ,CONTAINER.CONTAINERNAME
      ,CONTAINER.BARCODE
      ,CONTAINER.WASHTYPE
      ,CONTAINER.MODIFIER
      ,CONTAINER.MODIFYTIME
      ,CONTAINER.WASHTYPENOW
      ,CONTAINER.DEVICELOGID
      ,CONTAINER.DEFAULTCOLOR
      ,CONTAINER.STATUS
      ,CONTAINER.FPACKAGETYPE
      ,CONTAINER.PINYIN
      ,CT.CargoTypeName CARGOTYPENAME
      ,CONTAINER.CONTAINERIMAGE
      ,CONTAINER.REMARK,(SELECT TypeName FROM SystemTypeParameter WHERE TypeKey = 'WashType' AND TypeValue= CONTAINER.WASHTYPE) AS WASHTYPE_NAME
      , CONTAINER.CONTAINERTYPE,(SELECT TypeName FROM SystemTypeParameter WHERE TypeKey = 'ContainerType' AND TypeValue= CONTAINER.CONTAINERTYPE)  CONTAINERTYPENAME
      FROM CONTAINER
      LEFT JOIN CargoType CT ON CONTAINER.FPackageType=CT.CargoTypeID
      WHERE CONTAINER.ISDISABLED=0 AND CONTAINERNAME LIKE '%'||:containerName||'%'
    </Content>

    <Content Key="GetContainersByBarcodes" DataBaseType="SqlServer">
      SELECT CONTAINERID ,CONTAINERNAME,BARCODE,WASHTYPE FROM CONTAINER   WHERE ISDISABLED=0 AND BARCODE IN ({0})
    </Content>
    <Content Key="GetContainersByBarcodes" DataBaseType="Oracle">
      SELECT CONTAINERID ,CONTAINERNAME,BARCODE,WASHTYPE FROM CONTAINER   WHERE ISDISABLED=0 AND BARCODE IN ({0})
    </Content>

    <Content Key="GetContainersByBarcode" DataBaseType="SqlServer">
      SELECT CONTAINER.CONTAINERID ,
      CONTAINER.CONTAINERNAME,
      CONTAINER.BARCODE,
      CONTAINER.WASHTYPE,
      CONTAINER.ISDISABLED,
      CONTAINER.MODIFIER,
      CONTAINER.MODIFYTIME,
      CONTAINER.WASHTYPENOW,
      CONTAINER.DEVICELOGID,
      CONTAINER.STATUS,
      CONTAINER.REMARK,
      CONTAINER.FRECYCLEID,
      CONTAINER.WASHDATE,
      CONTAINER.DEFAULTCOLOR,
      CONTAINER.PACKAGEBARCODE,
      CONTAINER.FPACKAGETYPE,
      CONTAINER.PINYIN,
      CONTAINER.CONTAINERTYPE,
      CONTAINER.FDISINFECTID,
      PackageStatic.CARGOTYPEID
      ,CP.CONTAINERPACKAGEID
      FROM CONTAINER LEFT OUTER JOIN PackageStatic ON CONTAINER.CONTAINERID = PACKAGESTATIC.CONTAINERID
      LEFT JOIN FlowContainerPackage cp  on cp.ContainerID = CONTAINER.CONTAINERID AND cp.ReadyStatus = 0
      WHERE CONTAINER.ISDISABLED=0 AND CONTAINER.BARCODE=@Barcode
    </Content>
    <Content Key="GetContainersByBarcode" DataBaseType="Oracle">
      SELECT CONTAINER.CONTAINERID ,
      CONTAINER.CONTAINERNAME,
      CONTAINER.BARCODE,
      CONTAINER.WASHTYPE,
      CONTAINER.ISDISABLED,
      CONTAINER.MODIFIER,
      CONTAINER.MODIFYTIME,
      CONTAINER.WASHTYPENOW,
      CONTAINER.DEVICELOGID,
      CONTAINER.STATUS,
      CONTAINER.REMARK,
      CONTAINER.FRECYCLEID,
      CONTAINER.WASHDATE,
      CONTAINER.DEFAULTCOLOR,
      CONTAINER.PACKAGEBARCODE,
      CONTAINER.FPACKAGETYPE,
      CONTAINER.PINYIN,
      CONTAINER.CONTAINERTYPE,
      CONTAINER.FDISINFECTID,
      PackageStatic.CARGOTYPEID
      ,CP.CONTAINERPACKAGEID
      FROM CONTAINER LEFT OUTER JOIN PackageStatic ON CONTAINER.CONTAINERID = PACKAGESTATIC.CONTAINERID
      LEFT JOIN FlowContainerPackage cp  on cp.ContainerID = CONTAINER.CONTAINERID AND cp.ReadyStatus = 0
      WHERE CONTAINER.ISDISABLED=0 AND CONTAINER.BARCODE=:Barcode
    </Content>

    <Content Key="GetContainerStatusByBarcode" DataBaseType="SqlServer">
      SELECT CONTAINERID ,
      CONTAINERNAME,
      BARCODE
      FROM CONTAINER
      WHERE BARCODE=@Barcode
    </Content>
    <Content Key="GetContainerStatusByBarcode" DataBaseType="Oracle">
      SELECT CONTAINERID ,
      CONTAINERNAME,
      BARCODE
      FROM CONTAINER
      WHERE BARCODE=:Barcode
    </Content>


    <Content Key="GetContainerByBarcode" DataBaseType="SqlServer">
      <![CDATA[
      SELECT TOP 1 CONTAINER.CONTAINERID
      ,CONTAINER.FPACKAGETYPE
      ,CONTAINER.CONTAINERNAME
      ,CONTAINER.BARCODE
      ,CONTAINER.CONTAINERIMAGE
      ,CONTAINER.WASHTYPE
      ,CONTAINER.ISDISABLED
      ,CONTAINER.MODIFIER
      ,CONTAINER.MODIFYTIME
      ,CONTAINER.WASHTYPENOW
      ,CONTAINER.DEVICELOGID
      ,CONTAINER.STATUS
      ,CONTAINER.REMARK
      ,CONTAINER.FRECYCLEID
      ,CONTAINER.WASHDATE
      ,CONTAINER.DEFAULTCOLOR
      ,CONTAINER.PINYIN
      ,CONTAINER.CONTAINERTYPE
      ,CONTAINER.FDISINFECTID
	  ,CONTAINER.PACKAGEBARCODE
      ,isnull(T1.FNAMES,'') AS CHECKERNAME
      ,isnull(T1.FUSERS,'') AS CHECKERCODE
      FROM CONTAINER 
      left outer join  FlowDisinfectContainerList on Container.FDisinfectID = FlowDisinfectContainerList.FDisinfectID
      left outer join AC_WorkGroup t1 on FlowDisinfectContainerList.CheckID = t1.FID
      WHERE CONTAINER.ISDISABLED =0 AND CONTAINER.BARCODE = @BARCODE 
      ]]>
    </Content>

    <Content Key="GetContainerByBarcode" DataBaseType="Oracle">
      <![CDATA[
      SELECT  CONTAINER.CONTAINERID
      ,CONTAINER.FPACKAGETYPE
      ,CONTAINER.CONTAINERNAME
      ,CONTAINER.BARCODE
      ,CONTAINER.CONTAINERIMAGE
      ,CONTAINER.WASHTYPE
      ,CONTAINER.ISDISABLED
      ,CONTAINER.MODIFIER
      ,CONTAINER.MODIFYTIME
      ,CONTAINER.WASHTYPENOW
      ,CONTAINER.DEVICELOGID
      ,CONTAINER.STATUS
      ,CONTAINER.REMARK
      ,CONTAINER.FRECYCLEID
      ,CONTAINER.WASHDATE
      ,CONTAINER.DEFAULTCOLOR
      ,CONTAINER.PINYIN
      ,CONTAINER.CONTAINERTYPE
      ,CONTAINER.FDISINFECTID
	  ,CONTAINER.PACKAGEBARCODE
      ,nvl(T1.FNAMES,'') AS CHECKERNAME
      ,nvl(T1.FUSERS,'') AS CHECKERCODE
      FROM CONTAINER 
      left outer join  FlowDisinfectContainerList on Container.FDisinfectID = FlowDisinfectContainerList.FDisinfectID
      left outer join AC_WorkGroup t1 on FlowDisinfectContainerList.CheckID = t1.FID
      WHERE rownum = 1 AND CONTAINER.ISDISABLED =0 AND CONTAINER.BARCODE = :BARCODE
      ]]>
    </Content>

	  <Content Key="GetContainerByBarcodes" DataBaseType="SqlServer">
		 <![CDATA[
			 SELECT TOP 1 CONTAINER.CONTAINERID
		  ,CONTAINER.FPACKAGETYPE
		  ,CONTAINER.CONTAINERNAME
		  ,CONTAINER.BARCODE
		  ,CONTAINER.CONTAINERIMAGE
		  ,CONTAINER.WASHTYPE
		  ,CONTAINER.ISDISABLED
		  ,CONTAINER.MODIFIER
		  ,CONTAINER.MODIFYTIME
		  ,CONTAINER.WASHTYPENOW
		  ,CONTAINER.DEVICELOGID
		  ,CONTAINER.STATUS
		  ,CONTAINER.REMARK
		  ,CONTAINER.FRECYCLEID
		  ,CONTAINER.WASHDATE
		  ,CONTAINER.DEFAULTCOLOR
		  ,CONTAINER.PINYIN
		  ,CONTAINER.CONTAINERTYPE
		  ,CONTAINER.FDISINFECTID
		  ,CONTAINER.PACKAGEBARCODE

		  ,fr.RecycleDate    --回收时间
		  ,fd.DisinfectDate  --清洗时间
		  ,slog.LogTime      --审核时间
		  ,t2.FNames as RecycleName  --回收人
		  ,t3.FNames as DisinfectName --清洗人

		  ,isnull(T1.FNAMES,'') AS CHECKERNAME
		  ,isnull(T1.FUSERS,'') AS CHECKERCODE
		  FROM CONTAINER
		  left outer join  FlowDisinfectContainerList on Container.FDisinfectID = FlowDisinfectContainerList.FDisinfectID
		  left outer join AC_WorkGroup t1 on FlowDisinfectContainerList.CheckID = t1.FID

		  left outer join FlowRecycle fr on CONTAINER.FRecycleID=fr.FRecycleID
		  left outer join AC_WorkGroup t2 on fr.OPID=t2.FID
		  left outer join FlowDisinfect fd on FlowDisinfectContainerList.FDisinfectID=fd.FDisinfectID
		  left join DevicesUseLog dl  on fd. LogID = dl.Logid
		  left join AC_WorkGroup t3 on dl.UserID=t3.FID
		  left join SysLog slog on fd.LogID=slog.KeyID1
		  WHERE CONTAINER.ISDISABLED =0 {0}
		 ]]>
	  </Content>

	  <Content Key="GetContainerByBarcodes" DataBaseType="Oracle">
		  <![CDATA[
      SELECT  CONTAINER.CONTAINERID
      ,CONTAINER.FPACKAGETYPE
      ,CONTAINER.CONTAINERNAME
      ,CONTAINER.BARCODE
      ,CONTAINER.CONTAINERIMAGE
      ,CONTAINER.WASHTYPE
      ,CONTAINER.ISDISABLED
      ,CONTAINER.MODIFIER
      ,CONTAINER.MODIFYTIME
      ,CONTAINER.WASHTYPENOW
      ,CONTAINER.DEVICELOGID
      ,CONTAINER.STATUS
      ,CONTAINER.REMARK
      ,CONTAINER.FRECYCLEID
      ,CONTAINER.WASHDATE
      ,CONTAINER.DEFAULTCOLOR
      ,CONTAINER.PINYIN
      ,CONTAINER.CONTAINERTYPE
      ,CONTAINER.FDISINFECTID
	  ,CONTAINER.PACKAGEBARCODE
	  
	  ,fr.RecycleDate    --回收时间
	  ,fd.DisinfectDate  --清洗时间
	  ,slog.LogTime      --审核时间
	  ,t2.FNames as RecycleName  --回收人
	  ,t3.FNames as DisinfectName --清洗人
	  
      ,nvl(T1.FNAMES,'') AS CHECKERNAME
      ,nvl(T1.FUSERS,'') AS CHECKERCODE
      FROM CONTAINER 
      left outer join  FlowDisinfectContainerList on Container.FDisinfectID = FlowDisinfectContainerList.FDisinfectID
      left outer join AC_WorkGroup t1 on FlowDisinfectContainerList.CheckID = t1.FID
	  
	  left outer join FlowRecycle fr on CONTAINER.FRecycleID=fr.FRecycleID
	  left outer join AC_WorkGroup t2 on fr.OPID=t2.FID
	  left outer join FlowDisinfect fd on FlowDisinfectContainerList.FDisinfectID=fd.FDisinfectID
	  left join DevicesUseLog dl  on fd. LogID = dl.Logid
	  left join AC_WorkGroup t3 on dl.UserID=t3.FID
	  left join SysLog slog on fd.LogID=slog.KeyID1
      WHERE rownum = 1 AND CONTAINER.ISDISABLED =0 {0}
      ]]>
	  </Content>
	  
    <Content Key="GetContainerByName" DataBaseType="SqlServer">
      SELECT * FROM CONTAINER  WHERE  ContainerName = @containerName
    </Content>
    <Content Key="GetContainerByName" DataBaseType="Oracle">
      SELECT * FROM CONTAINER  WHERE  ContainerName = :containerName
    </Content>

    <Content Key="Query_SynDataContainer" DataBaseType="SqlServer">
      SELECT CONTAINERID,CONTAINERNAME,BARCODE,isnull(STATUS,0) as STATUS,PACKAGEBARCODE FROM Container WHERE IsDisabled = 0
    </Content>
    <Content Key="Query_SynDataContainer" DataBaseType="Oracle">
      SELECT CONTAINERID,CONTAINERNAME,BARCODE,nvl(STATUS,0) as STATUS,PACKAGEBARCODE  FROM Container WHERE IsDisabled = 0
    </Content>

    <Content Key="GetContainerPackageBarcode" DataBaseType="SqlServer">
      select packageBarcode from container where barcode =@Barcode
    </Content>
    <Content Key="GetContainerPackageBarcode" DataBaseType="Oracle">
      select packageBarcode from container where barcode =:Barcode
    </Content>

    <Content Key="GetDataFileEntitiesByForeignID" DataBaseType="SqlServer">
      select * from DataFileMaping  inner join DataFile
      on DataFileMaping.DataID=DataFile.DataID
      where DataFileMaping.ForeignID=@id order by UploadDateTime asc
    </Content>
    <Content Key="GetDataFileEntitiesByForeignID" DataBaseType="Oracle">
      select * from DataFileMaping  inner join DataFile
      on DataFileMaping.DataID=DataFile.DataID
      where DataFileMaping.ForeignID=:id order by UploadDateTime asc
    </Content>

    <Content Key="GetSynDataDataFile" DataBaseType="SqlServer">
      SELECT DataID,Data,Type FROM DataFile WHERE DataID = '00000000-0000-0000-0000-000000000001'
    </Content>
    <Content Key="GetSynDataDataFile" DataBaseType="Oracle">
      SELECT DataID,Data,Type FROM DataFile WHERE DataID = '00000000-0000-0000-0000-000000000001'
    </Content>

    <Content Key="Query_DeviceProcessRule" DataBaseType="SqlServer">
      SELECT DEVICEPROCESSRULE.RULEID
      ,DEVICEPROCESSRULE.DEVICETYPE
      ,DEVICEPROCESSRULE.RULENAME
      ,DEVICEPROCESSRULE.CODE
      ,DEVICEPROCESSRULE.BARCODEIMAGE
      ,DEVICEPROCESSRULE.ISDISABLED
      FROM DEVICEPROCESSRULE WITH (NOLOCK) WHERE 1=1
    </Content>
    <Content Key="Query_DeviceProcessRule" DataBaseType="Oracle">
      SELECT DEVICEPROCESSRULE.RULEID
      ,DEVICEPROCESSRULE.DEVICETYPE
      ,DEVICEPROCESSRULE.RULENAME
      ,DEVICEPROCESSRULE.CODE
      ,DEVICEPROCESSRULE.BARCODEIMAGE
      ,DEVICEPROCESSRULE.ISDISABLED
      FROM DEVICEPROCESSRULE  WHERE 1=1
    </Content>

    <Content Key="GetRulesByDeviceType" DataBaseType="SqlServer">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE DEVICETYPE = @DEVICETYPE  AND ISDISABLED = 0
    </Content>
    <Content Key="GetRulesByDeviceType" DataBaseType="Oracle">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE DEVICETYPE = :DEVICETYPE  AND ISDISABLED = 0
    </Content>

    <Content Key="Query_DeviceProcessRuleList" DataBaseType="SqlServer">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE   ISDISABLED = 0
    </Content>
    <Content Key="Query_DeviceProcessRuleList" DataBaseType="Oracle">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE   ISDISABLED = 0
    </Content>

    <Content Key="Select_GetNoDeviceModelRulesByDeviceType" DataBaseType="SqlServer">
      <![CDATA[
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE DEVICETYPE = @devicetype AND ISDISABLED = 0 and (DEVICEMODEL='' or DEVICEMODEL is null)
      ]]>
    </Content>
    <Content Key="Select_GetNoDeviceModelRulesByDeviceType" DataBaseType="Oracle">
      <![CDATA[
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE DEVICETYPE = :devicetype AND ISDISABLED = 0  and DEVICEMODEL is null
      ]]>
    </Content>

    <Content Key="Query_GetRulesByDeviceType" DataBaseType="SqlServer">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE DEVICETYPE = @DEVICETYPE AND ISDISABLED = 0 and  DEVICEMODEL = @DEVICEMODEL
    </Content>
    <Content Key="Query_GetRulesByDeviceType" DataBaseType="Oracle">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE DEVICETYPE = :DEVICETYPE AND ISDISABLED = 0 and  DEVICEMODEL = :DEVICEMODEL
    </Content>

    <Content Key="Query_GetRulesByDeviceTypeAll" Desc="显示全部灭菌程序" DataBaseType="SqlServer">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE DEVICETYPE = @DEVICETYPE AND ISDISABLED = 0
      order by RuleName
    </Content>
    <Content Key="Query_GetRulesByDeviceTypeAll" Desc="显示全部灭菌程序" DataBaseType="Oracle">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,BARCODEIMAGE,DEVICEMODEL
      FROM DEVICEPROCESSRULE
      WHERE DEVICETYPE = :DEVICETYPE AND ISDISABLED = 0
      order by RuleName
    </Content>
    
    <Content Key="Query_GetRulesByBarcode" DataBaseType="SqlServer">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,DEVICEMODEL
      FROM DEVICEPROCESSRULE where CODE =@barcode
    </Content>
    <Content Key="Query_GetRulesByBarcode" DataBaseType="Oracle">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE,DEVICEMODEL
      FROM DEVICEPROCESSRULE where CODE =:barcode
    </Content>

    <Content Key="GetSynDataDeviceProcessRule" DataBaseType="SqlServer">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE FROM DeviceProcessRule WHERE ISDISABLED = 0
    </Content>
    <Content Key="GetSynDataDeviceProcessRule" DataBaseType="Oracle">
      SELECT RULEID,DEVICETYPE,RULENAME,CODE FROM DeviceProcessRule WHERE ISDISABLED = 0
    </Content>

    <Content Key="IsExistRulesByRuleNameTypeID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM DeviceProcessRule WHERE   RULENAME=@RuleName  and DeviceType=@DeviceType and ( IsDisabled is null or IsDisabled=0)  and RuleID <> @RuleID
      ]]>
    </Content>
    <Content Key="IsExistRulesByRuleNameTypeID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM DeviceProcessRule WHERE   RULENAME=:RuleName  and DeviceType=:DeviceType and ( IsDisabled is null or IsDisabled=0)  and RuleID <> :RuleID
      ]]>
    </Content>

    <Content Key="Query_Devices" DataBaseType="SqlServer">
      Select Devices.DEVICEID,Devices.DEVICENAME,
      Devices.DEVICENUMBER,Devices.MANUFACTURERID,
      Devices.PRODUCTIONDATE,Devices.DEVICEMODEL,
      Devices.STARTUSINGDATE,Devices.USETIMES,
      Devices.LASTMAINTAINDATE,Devices.AFTERMAINTAINUSETIMES,
      Devices.TODAYDATE,Devices.TODAYUSETIMES,Devices.NEEDMAINTAINTIMES,
      Devices.NEEDMAINTAINDAYS,Devices.DEVICEIMAGE,Devices.MODIFIER,
      Devices.MODIFYTIME,Devices.ISDISABLED,Devices.BARCODE,
      Devices.DEVICETYPE,Devices.SUPPLIERID,Devices.REMARK,
      Devices.BARCODEIMAGE,Devices.TODAYTESTCOUNT,
      Devices.LASTBPCDDATE,Devices.LASTBPCDRESULT,
      Devices.TODAYTESTPASS,Devices.TODAYTESTTIMES,Devices.PINYIN
      From Devices
      WHERE 1=1
    </Content>
    <Content Key="Query_Devices" DataBaseType="Oracle">
      Select Devices.DEVICEID,Devices.DEVICENAME,
      Devices.DEVICENUMBER,Devices.MANUFACTURERID,
      Devices.PRODUCTIONDATE,Devices.DEVICEMODEL,
      Devices.STARTUSINGDATE,Devices.USETIMES,
      Devices.LASTMAINTAINDATE,Devices.AFTERMAINTAINUSETIMES,
      Devices.TODAYDATE,Devices.TODAYUSETIMES,Devices.NEEDMAINTAINTIMES,
      Devices.NEEDMAINTAINDAYS,Devices.DEVICEIMAGE,Devices.MODIFIER,
      Devices.MODIFYTIME,Devices.ISDISABLED,Devices.BARCODE,
      Devices.DEVICETYPE,Devices.SUPPLIERID,Devices.REMARK,
      Devices.BARCODEIMAGE,Devices.TODAYTESTCOUNT,
      Devices.LASTBPCDDATE,Devices.LASTBPCDRESULT,
      Devices.TODAYTESTPASS,Devices.TODAYTESTTIMES,Devices.PINYIN
      From Devices
      WHERE 1=1
    </Content>

    <Content Key="Query_GetDevicesByCondition" DataBaseType="SqlServer">
      SELECT DEVICEID
      ,DEVICES.DEVICENAME
      ,DEVICES.DEVICETYPE
      ,DEVICES.DEVICENUMBER
      ,DEVICES.MANUFACTURERID
      ,DEVICES.PRODUCTIONDATE
      ,DEVICES.DEVICEMODEL
      ,DEVICES.STARTUSINGDATE
      ,DEVICES.USETIMES
      ,DEVICES.LASTMAINTAINDATE
      ,DEVICES.USETIMES
      ,DEVICES.TODAYTESTCOUNT
      ,DEVICES.AFTERMAINTAINUSETIMES
      ,DEVICES.TODAYDATE
      ,DEVICES.TODAYUSETIMES
      ,DEVICES.NEEDMAINTAINTIMES
      ,DEVICES.NEEDMAINTAINDAYS
      ,DEVICES.REMARK
      ,DEVICES.ISDISABLED
      ,DEVICES.DEVICEIMAGE
      ,DEVICES.SMARTNODEID
      ,DEVICES.BARCODE
      ,DEVICES.PINYIN
      ,MANUFACTURER.NAME AS MANUFACTURERNAME,DEVICES.SUPPLYROOM
      FROM DEVICES  LEFT JOIN  MANUFACTURER
      ON MANUFACTURER.MANUFACTURERID=DEVICES.MANUFACTURERID WHERE 1=1 {0}
      AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL)
      Order By DEVICES.DEVICENAME ASC
    </Content>
    <Content Key="Query_GetDevicesByCondition" DataBaseType="Oracle">
      SELECT DEVICEID
      ,DEVICES.DEVICENAME
      ,DEVICES.DEVICETYPE
      ,DEVICES.DEVICENUMBER
      ,DEVICES.MANUFACTURERID
      ,DEVICES.PRODUCTIONDATE
      ,DEVICES.DEVICEMODEL
      ,DEVICES.STARTUSINGDATE
      ,DEVICES.USETIMES
      ,DEVICES.LASTMAINTAINDATE
      ,DEVICES.USETIMES
      ,DEVICES.TODAYTESTCOUNT
      ,DEVICES.AFTERMAINTAINUSETIMES
      ,DEVICES.TODAYDATE
      ,DEVICES.TODAYUSETIMES
      ,DEVICES.NEEDMAINTAINTIMES
      ,DEVICES.NEEDMAINTAINDAYS
      ,DEVICES.REMARK
      ,DEVICES.ISDISABLED
      ,DEVICES.DEVICEIMAGE
      ,DEVICES.SMARTNODEID
      ,DEVICES.BARCODE
      ,DEVICES.PINYIN
      ,MANUFACTURER.NAME AS MANUFACTURERNAME,DEVICES.SUPPLYROOM
      FROM DEVICES  LEFT JOIN  MANUFACTURER
      ON MANUFACTURER.MANUFACTURERID=DEVICES.MANUFACTURERID WHERE 1=1 {0}
      AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL)
      Order By DEVICES.DEVICENAME ASC
    </Content>

    <Content Key="Query_DevicesGetTreeData" DataBaseType="SqlServer">
      SELECT TYPEVALUE,TYPENAME,TYPEVALUE AS ID,TYPENAME AS NAME,-1 AS PREVID FROM SYSTEMTYPEPARAMETER
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'DeviceType'
      UNION all
      SELECT -1 AS TYPEVALUE ,'设备' AS TYPENAME,-1 AS ID ,'设备' AS NAME,-1 AS PREVID FROM View_Dual
      ORDER BY TYPEVALUE
    </Content>
    <Content Key="Query_DevicesGetTreeData" DataBaseType="Oracle">
      SELECT TYPEVALUE,TYPENAME,TYPEVALUE AS ID,TYPENAME AS NAME,-1 AS PREVID FROM SYSTEMTYPEPARAMETER
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'DeviceType'
      UNION all
      SELECT -1 AS TYPEVALUE ,'设备' AS TYPENAME,-1 AS ID ,'设备' AS NAME,-1 AS PREVID FROM View_Dual
      ORDER BY TYPEVALUE
    </Content>

    <Content Key="Query_DisInfectDevices" DataBaseType="SqlServer">
      <![CDATA[
      SELECT BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,CASE WHEN DATEDIFF(DAY,TODAYDATE,GETDATE()) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,DEVICEMODEL 
      FROM DEVICES WHERE DEVICETYPE <= 2  AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) 
      AND (SupplyRoom is null or SupplyRoom = @floworgid )
      ORDER BY DEVICENAME
      ]]>
    </Content>

    <Content Key="Query_DisInfectDevices" DataBaseType="Oracle">
      <![CDATA[
      SELECT BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,CASE WHEN datediff('D',SYSDATE,TODAYDATE) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,DEVICEMODEL FROM DEVICES WHERE DEVICETYPE <= 2 AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) 
      AND (SupplyRoom is null or SupplyRoom = :floworgid )
      ORDER BY DEVICENAME
      ]]>
    </Content>

    <Content Key="Query_DevicesEntityGetByBarcode" DataBaseType="SqlServer">
      SELECT *
      FROM DEVICES WHERE BarCode = @barcode  and isdisabled = 0
    </Content>

    <Content Key="Query_DevicesEntityGetByBarcode" DataBaseType="Oracle">
      SELECT *
      FROM DEVICES WHERE BarCode = :barcode  and isdisabled = 0
    </Content>

    <Content Key="Query_GetSynDataDevices" DataBaseType="SqlServer">
      SELECT DEVICEID,DEVICENAME,DEVICETYPE,
      ISNULL(TODAYUSETIMES,0) AS TODAYUSETIMES,
      ISNULL(TODAYTESTPASS,0) AS TODAYTESTPASS,
      ISNULL(TODAYTESTCOUNT,0) AS TODAYTESTCOUNT,
      ISNULL(TODAYDATE,GETDATE()) AS TODAYDATE,
      Barcode FROM DEVICES
      WHERE ISDISABLED = 0
    </Content>
    <Content Key="Query_GetSynDataDevices" DataBaseType="Oracle">
      SELECT DEVICEID,
      DEVICENAME,
      DEVICETYPE,
      nvl(TODAYUSETIMES, 0) AS TODAYUSETIMES,
      nvl(TODAYTESTPASS, 0) AS TODAYTESTPASS,
      nvl(TODAYTESTCOUNT, 0) AS TODAYTESTCOUNT,
      nvl(TODAYDATE, sysdate) AS TODAYDATE,
      Barcode
      FROM DEVICES
      WHERE ISDISABLED = 0
    </Content>

    <Content Key="Query_IsExistDevicesByNameAndID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM Devices WHERE   DeviceName=@DeviceName and ( IsDisabled is null or IsDisabled=0)  and DeviceID <> @DeviceID
      ]]>
    </Content>
    <Content Key="Query_IsExistDevicesByNameAndID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM Devices WHERE   DeviceName=:DeviceName and ( IsDisabled is null or IsDisabled=0)  and DeviceID <> :DeviceID
      ]]>
    </Content>

    <Content Key="Query_DevicesGetSterilizeDevicesA" DataBaseType="SqlServer">
		SELECT BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,DEVICEMODEL,
		CASE WHEN DATEDIFF(DAY,TODAYDATE,@DateRange) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,
		CASE WHEN DATEDIFF(DAY,TODAYDATE,@DateRange) = 0 THEN TODAYTESTCOUNT ELSE 0 END AS TODAYTESTCOUNT,

		CASE WHEN DATEDIFF(DAY,TODAYDATE,@DateRange) = 0 THEN
		CASE WHEN TODAYTESTPASS = 1 THEN '已通过' ELSE '已测'+CAST(TODAYTESTTIMES AS NVARCHAR)+'次 还需'+CAST((1 - TODAYTESTCOUNT) AS NVARCHAR)+'次' END
		ELSE '已测0次 还需1次' END AS BDINFO,
		CASE WHEN isnull(lastbpcddate,'')='' THEN '' ELSE cast(DATEPART(month,lastbpcddate) as varchar)+'月'+cast(DATEPART(day,lastbpcddate) as varchar)+datename(weekday,lastbpcddate) END AS BCDINFO
		FROM DEVICES WHERE DEVICETYPE = 4  AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) AND (SupplyRoom is null or SupplyRoom = @floworgid )
		union
		select  BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,DEVICEMODEL,
		CASE WHEN DATEDIFF(DAY,TODAYDATE,@DateRange) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,
		CASE WHEN DATEDIFF(DAY,TODAYDATE,@DateRange) = 0 THEN TODAYTESTCOUNT ELSE 0 END AS TODAYTESTCOUNT,'不需要' as BDINFO,
		CASE WHEN isnull(lastbpcddate,'')='' THEN '' ELSE cast(DATEPART(month,lastbpcddate) as varchar)+'月'+cast(DATEPART(day,lastbpcddate) as varchar)+datename(weekday,lastbpcddate) END AS BCDINFO
		FROM DEVICES WHERE DEVICETYPE in (5,6) AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) AND (SupplyRoom is null or SupplyRoom = @floworgid )
		ORDER BY DEVICENAME
	</Content>
    <Content Key="Query_DevicesGetSterilizeDevicesA" DataBaseType="Oracle">
		SELECT BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,DEVICEMODEL,
		CASE WHEN datediff('D',:DateRange,TODAYDATE) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,
		CASE WHEN datediff('D',:DateRange,TODAYDATE) = 0 THEN TODAYTESTCOUNT ELSE 0 END AS TODAYTESTCOUNT,

		CASE WHEN datediff('D',:DateRange,TODAYDATE) = 0 THEN
		CASE WHEN TODAYTESTPASS = 1 THEN '已通过' ELSE '已测'||TO_CHAR(TODAYTESTTIMES)||'次 还需'||TO_CHAR((1 - TODAYTESTCOUNT))||'次' END
		ELSE '已测0次 还需1次' END AS BDINFO,
		CASE WHEN  lastbpcddate is null THEN '' ELSE to_char(lastbpcddate,'mm')||'月'||to_char(lastbpcddate,'dd')||'星期'||
		case to_char(lastbpcddate, 'DY') when 'MON' then '一' when 'TUE' then '二' when 'WED' then '三'
		when 'THU' then '四' when 'FRI' then '五' when 'SAT' then '六' when 'SUN' then '日'  end     END AS BCDINFO
		FROM DEVICES WHERE DEVICETYPE = 4  AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) AND (SupplyRoom is null or SupplyRoom = :floworgid )
		union all
		select  BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,DEVICEMODEL,
		CASE WHEN datediff('D',:DateRange,TODAYDATE) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,
		CASE WHEN datediff('D',:DateRange,TODAYDATE) = 0 THEN TODAYTESTCOUNT ELSE 0 END AS TODAYTESTCOUNT,'不需要' as BDINFO,
		CASE WHEN  lastbpcddate is null THEN '' ELSE to_char(lastbpcddate,'mm')||'月'||to_char(lastbpcddate,'dd')||'星期'||
		case to_char(lastbpcddate, 'DY') when 'MON' then '一' when 'TUE' then '二' when 'WED' then '三'
		when 'THU' then '四' when 'FRI' then '五' when 'SAT' then '六' when 'SUN' then '日'  end     END AS BCDINFO
		FROM DEVICES WHERE DEVICETYPE in (5,6) AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) AND (SupplyRoom is null or SupplyRoom = :floworgid )
	</Content>
	  <Content Key="Query_DevicesBDTestNotChecked" DataBaseType="SqlServer">
		  select logid from devicesuselog where deviceid=@deviceid and DATEDIFF(DAY,begindate,@DateRange) = 0 and isbdtest=1 and isok=0 
	  </Content>
	  <Content Key="Query_DevicesBDTestNotChecked" DataBaseType="Oracle">
		  select logid from devicesuselog where deviceid=:deviceid and datediff('D',begindate,:DateRange) = 0 and isbdtest=1 and isok=0 
	  </Content>
    <Content Key="Query_DevicesGetSterilizeDevicesB" DataBaseType="SqlServer">
		SELECT BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,DEVICEMODEL,
		CASE WHEN DATEDIFF(DAY,TODAYDATE,@DateRange) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,
		CASE WHEN DATEDIFF(DAY,TODAYDATE,@DateRange) = 0 THEN TODAYTESTCOUNT ELSE 0 END AS TODAYTESTCOUNT,

		'未强制' AS BDINFO,
		CASE WHEN isnull(lastbpcddate,'')='' THEN '' ELSE cast(DATEPART(month,lastbpcddate) as varchar)+'月'+cast(DATEPART(day,lastbpcddate) as varchar)+datename(weekday,lastbpcddate) END AS BCDINFO
		FROM DEVICES WHERE DEVICETYPE = 4  AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) AND (SupplyRoom is null or SupplyRoom = @floworgid )
		union
		select  BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,DEVICEMODEL,
		CASE WHEN DATEDIFF(DAY,TODAYDATE,@DateRange) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,
		CASE WHEN DATEDIFF(DAY,TODAYDATE,@DateRange) = 0 THEN TODAYTESTCOUNT ELSE 0 END AS TODAYTESTCOUNT,'不需要' as BDINFO,
		CASE WHEN isnull(lastbpcddate,'')='' THEN '' ELSE cast(DATEPART(month,lastbpcddate) as varchar)+'月'+cast(DATEPART(day,lastbpcddate) as varchar)+datename(weekday,lastbpcddate) END AS BCDINFO
		FROM DEVICES WHERE DEVICETYPE in (5,6) AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) AND (SupplyRoom is null or SupplyRoom = @floworgid )
		ORDER BY DEVICENAME
	</Content>
    <Content Key="Query_DevicesGetSterilizeDevicesB" DataBaseType="Oracle">
		SELECT BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,DEVICEMODEL,
		CASE WHEN datediff('D',:DateRange,TODAYDATE) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,
		CASE WHEN datediff('D',:DateRange,TODAYDATE) = 0 THEN TODAYTESTCOUNT ELSE 0 END AS TODAYTESTCOUNT,

		'未强制' AS BDINFO,
		CASE WHEN  lastbpcddate is null THEN '' ELSE to_char(lastbpcddate,'mm')||'月'||to_char(lastbpcddate,'dd')||'星期'||
		case to_char(lastbpcddate, 'DY') when 'MON' then '一' when 'TUE' then '二' when 'WED' then '三'
		when 'THU' then '四' when 'FRI' then '五' when 'SAT' then '六' when 'SUN' then '日'  end     END AS BCDINFO
		FROM DEVICES WHERE DEVICETYPE = 4  AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) AND (SupplyRoom is null or SupplyRoom = :floworgid )
		union all
		select  BARCODEIMAGE,DEVICENAME AS NAME,DEVICEID AS VALUE,BARCODE,DEVICETYPE,DEVICEMODEL,
		CASE WHEN datediff('D',:DateRange,TODAYDATE) = 0 THEN TODAYUSETIMES ELSE 0 END AS TODAYUSETIMES,
		CASE WHEN datediff('D',:DateRange,TODAYDATE) = 0 THEN TODAYTESTCOUNT ELSE 0 END AS TODAYTESTCOUNT,'不需要' as BDINFO,
		CASE WHEN  lastbpcddate is null THEN '' ELSE to_char(lastbpcddate,'mm')||'月'||to_char(lastbpcddate,'dd')||'星期'||
		case to_char(lastbpcddate, 'DY') when 'MON' then '一' when 'TUE' then '二' when 'WED' then '三'
		when 'THU' then '四' when 'FRI' then '五' when 'SAT' then '六' when 'SUN' then '日'  end     END AS BCDINFO
		FROM DEVICES WHERE DEVICETYPE in (5,6) AND  (DEVICES.ISDISABLED = 0 OR  DEVICES.ISDISABLED IS NULL) AND (SupplyRoom is null or SupplyRoom = :floworgid )
	</Content>

    <Content Key="Query_GetDevmainLogByDevIda" DataBaseType="SqlServer">
      SELECT U.*  FROM DevicesMaintainLog U WHERE U.DeviceID = @devId
    </Content>
    <Content Key="Query_GetDevmainLogByDevIda" DataBaseType="Oracle">
      SELECT U.*  FROM DevicesMaintainLog U WHERE U.DeviceID = :devId
    </Content>

    <Content Key="Query_GetDevmainLogByDevIdb" DataBaseType="SqlServer">
      SELECT d.LOGID
      ,d.DEVICEID
      ,d.MAINTAINDATE
      ,d.STARTUSINGDATE
      ,d.USERID
      ,d.MAINTAINTYPE
      ,d.REMARK
      ,u.FNames NAME
      ,de.DEVICENAME
      ,d.ValidDateFrom
      ,d.ValidDateTo
      FROM DevicesMaintainLog d
      left join AC_WorkGroup  u on d.UserID=u.FID
      LEFT JOIN DEVICES de ON  de.DeviceID=d.DeviceID
      WHERE d.DeviceID = @devId
    </Content>
    <Content Key="Query_GetDevmainLogByDevIdb" DataBaseType="Oracle">
      SELECT d.LOGID
      ,d.DEVICEID
      ,d.MAINTAINDATE
      ,d.STARTUSINGDATE
      ,d.USERID
      ,d.MAINTAINTYPE
      ,d.REMARK
      ,u.FNames NAME
      ,de.DEVICENAME
      ,d.ValidDateFrom
      ,d.ValidDateTo
      FROM DevicesMaintainLog d
      left join AC_WorkGroup  u on d.UserID=u.FID
      LEFT JOIN DEVICES de ON  de.DeviceID=d.DeviceID
      WHERE d.DeviceID = :devId
    </Content>
	  <Content Key="Query_GetDevmainLogTodayIMRByDevIdb" DataBaseType="SqlServer">
		  SELECT d.LOGID
		  ,d.DEVICEID
		  ,d.MAINTAINDATE
		  ,d.STARTUSINGDATE
		  ,d.USERID
		  ,d.MAINTAINTYPE
		  ,d.REMARK
		  ,u.FNames NAME
		  ,de.DEVICENAME
		  FROM DevicesMaintainLog d
		  left join AC_WorkGroup  u on d.UserID=u.FID
		  LEFT JOIN DEVICES de ON  de.DeviceID=d.DeviceID
		  WHERE d.DeviceID = @devId and datediff(DAY,d.MAINTAINDATE,Getdate())=0 and d.MaintainType in ('安装','移位','大修')
	  </Content>
	  <Content Key="Query_GetDevmainLogTodayIMRByDevIdb" DataBaseType="Oracle">
		  SELECT d.LOGID
		  ,d.DEVICEID
		  ,d.MAINTAINDATE
		  ,d.STARTUSINGDATE
		  ,d.USERID
		  ,d.MAINTAINTYPE
		  ,d.REMARK
		  ,u.FNames NAME
		  ,de.DEVICENAME
		  FROM DevicesMaintainLog d
		  left join AC_WorkGroup  u on d.UserID=u.FID
		  LEFT JOIN DEVICES de ON  de.DeviceID=d.DeviceID
		  WHERE d.DeviceID = :devId and datediff('D',d.MAINTAINDATE,sysdate)=0 and d.MaintainType in ('安装','移位','大修')
	  </Content>
    <Content Key="Query_DevicesUseLogEntityGetByBarcode" DataBaseType="SqlServer">
      select *
      from  DevicesUseLog
      where barcode = @barcode
    </Content>
    <Content Key="Query_DevicesUseLogEntityGetByBarcode" DataBaseType="Oracle">
      select *
      from  DevicesUseLog
      where barcode = :barcode
    </Content>
    <Content Key="Query_DevicesUseLogEntityGetByPackageBarcode" DataBaseType="SqlServer">
      select * from DevicesUseLog where BarCode=(
      select MAX(du.BarCode) as strrilize
      from  DevicesUseLog du
      inner join FlowSterilizationList fsl
      on du.LogID=fsl.SterilizationLogID
      inner join StorageList sl
      on sl.StorageID=fsl.PackageID
      where sl.barcode = @barcode
      ) 
    </Content>
    <Content Key="Query_DevicesUseLogEntityGetByPackageBarcode" DataBaseType="Oracle">
      select * from DevicesUseLog where BarCode=(
      select MAX(du.BarCode) as strrilize
      from  DevicesUseLog du
      inner join FlowSterilizationList fsl
      on du.LogID=fsl.SterilizationLogID
      inner join StorageList sl
      on sl.StorageID=fsl.PackageID
      where sl.barcode = :barcode
      )
    </Content>
    <Content Key="Query_DevicesUseLogBarcodeGetByCPCDBarcode" DataBaseType="SqlServer">
      select BarCode from DevicesUseLog where CPCDBarcode = @barcode
    </Content>
    <Content Key="Query_DevicesUseLogBarcodeGetByCPCDBarcode" DataBaseType="Oracle">
      select BarCode from DevicesUseLog where CPCDBarcode = :barcode
    </Content>

    <Content Key="Query_DevicesUseLogBarcodeGetByBPCDBarcode" DataBaseType="SqlServer">
      select BarCode from DevicesUseLog where BPCDBarcode = @barcode
    </Content>
    <Content Key="Query_DevicesUseLogBarcodeGetByBPCDBarcode" DataBaseType="Oracle">
      select BarCode from DevicesUseLog where BPCDBarcode = :barcode
    </Content>

    <Content Key="Query_DeviceUsersByDeviceID" DataBaseType="SqlServer">
      SELECT ID
      , CODE
      , NAME
      , LOGINNAME
      , PASSWORD
      , SEX
      ,SYSTEMTYPEPARAMETER.TYPENAME AS SEX_NAME
      , MOBILE
      , TEL
      , EMAIL
      , ADDRESS
      , PHOTO
      , REMARK
      , AVAILABLE
      ,CASE WHEN AVAILABLE=0 THEN '在职'
      WHEN AVAILABLE=1 THEN '离职'
      END AS AVAILABLE_NAME
      , JOBTITLE
      , DATEAVAILABLE
      , DATEDUTY  FROM  AC_USER
      LEFT JOIN DEVICEUSERS
      ON AC_USER.ID=DEVICEUSERS.USERID
      LEFT JOIN SYSTEMTYPEPARAMETER ON (AC_USER.SEX=SYSTEMTYPEPARAMETER.TYPEVALUE and SYSTEMTYPEPARAMETER.TYPEKEY='Sex') where DEVICEUSERS.DEVICEID=@DeviceID
    </Content>
    <Content Key="Query_DeviceUsersByDeviceID" DataBaseType="Oracle">
      SELECT ID
      , CODE
      , NAME
      , LOGINNAME
      , PASSWORD
      , SEX
      ,SYSTEMTYPEPARAMETER.TYPENAME AS SEX_NAME
      , MOBILE
      , TEL
      , EMAIL
      , ADDRESS
      , PHOTO
      , REMARK
      , AVAILABLE
      ,CASE WHEN AVAILABLE=0 THEN '在职'
      WHEN AVAILABLE=1 THEN '离职'
      END AS AVAILABLE_NAME
      , JOBTITLE
      , DATEAVAILABLE
      , DATEDUTY  FROM  AC_USER
      LEFT JOIN DEVICEUSERS
      ON AC_USER.ID=DEVICEUSERS.USERID
      LEFT JOIN SYSTEMTYPEPARAMETER ON (AC_USER.SEX=SYSTEMTYPEPARAMETER.TYPEVALUE and SYSTEMTYPEPARAMETER.TYPEKEY='Sex') where DEVICEUSERS.DEVICEID=:DeviceID
    </Content>

    <Content Key="Query_GetLocationByCondition" DataBaseType="SqlServer">
      SELECT LOCATIONID
      ,LOCATIONNAME
      ,LOCATIONTYPE
      ,LOCATION.ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,BARCODE
      ,LOCATION.ISDISABLED
      ,MODIFIER
      ,MODIFYTIME
      ,LOCATION.REMARK
      ,WAREHOUSEID
      ,LOCATION.PINYIN
      FROM LOCATION LEFT JOIN AC_ORG ON LOCATION.ORGID = AC_ORG.ID
      WHERE  1=1 AND (LOCATION.ISDISABLED=0 OR LOCATION.ISDISABLED IS NULL)
    </Content>
    <Content Key="Query_GetLocationByCondition" DataBaseType="Oracle">
      SELECT LOCATIONID
      ,LOCATIONNAME
      ,LOCATIONTYPE
      ,LOCATION.ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,BARCODE
      ,LOCATION.ISDISABLED
      ,MODIFIER
      ,MODIFYTIME
      ,LOCATION.REMARK
      ,WAREHOUSEID
      ,LOCATION.PINYIN
      FROM LOCATION LEFT JOIN AC_ORG ON LOCATION.ORGID = AC_ORG.ID
      WHERE  1=1 AND (LOCATION.ISDISABLED=0 OR LOCATION.ISDISABLED IS NULL)
    </Content>

    <Content Key="Query_IsExistLocationBylocationNameType" DataBaseType="SqlServer">
      select count(*) from Location  where  IsDisabled=0 and   LocationType = @locationType and LocationName=@locationName
    </Content>
    <Content Key="Query_IsExistLocationBylocationNameType" DataBaseType="Oracle">
      select count(*) from Location  where  IsDisabled=0 and   LocationType = :locationType and LocationName=:locationName
    </Content>

    <Content Key="Query_IsExistLocationBylocationNamewarehouseID" DataBaseType="SqlServer">
      select count(*) from Location  where  IsDisabled=0 and LocationName=@locationName and WarehouseID=@warehouseID
    </Content>
    <Content Key="Query_IsExistLocationBylocationNamewarehouseID" DataBaseType="Oracle">
      select count(*) from Location  where  IsDisabled=0 and LocationName=:locationName and WarehouseID=:warehouseID
    </Content>

    <Content Key="Query_GetLocationIsExist" DataBaseType="SqlServer">
      select count(*) from Location  where  IsDisabled=0 and LocationName =@LocationName and WarehouseID=@WarehouseID and LocationID!=@LocationID
    </Content>
    <Content Key="Query_GetLocationIsExist" DataBaseType="Oracle">
      select count(*) from Location  where  IsDisabled=0 and LocationName =:LocationName and WarehouseID=:WarehouseID and LocationID!=:LocationID
    </Content>

    <Content Key="Query_GetbyLocationName" DataBaseType="SqlServer">
      SELECT LOCATIONID
      ,LOCATIONNAME
      ,LOCATIONTYPE
      ,LOCATION.ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,BARCODE
      ,Location.ISDISABLED
      ,MODIFIER
      ,MODIFYTIME
      ,LOCATION.REMARK
      ,WAREHOUSEID
      ,LOCATION.PINYIN
      FROM Location with (nolock) left join AC_Org with (nolock) on Location.OrgID = AC_Org.ID where Location.IsDisabled = 0 and  (LocationName like @locationName)
    </Content>
    <Content Key="Query_GetbyLocationName" DataBaseType="Oracle">
      SELECT LOCATIONID
      ,LOCATIONNAME
      ,LOCATIONTYPE
      ,LOCATION.ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,BARCODE
      ,Location.ISDISABLED
      ,MODIFIER
      ,MODIFYTIME
      ,LOCATION.REMARK
      ,WAREHOUSEID
      ,LOCATION.PINYIN
      FROM Location left join AC_Org  on Location.OrgID = AC_Org.ID where Location.IsDisabled = 0 and  (LocationName like :locationName)
    </Content>


    <Content Key="Query_LocationFullName" DataBaseType="SqlServer">
      SELECT w.warehousename + ' '+l.locationname as FULLNAME
      FROM Location l with (nolock) inner join Warehouse w with (nolock) on l.warehouseid = w.warehouseid
      where l.LocationID = @LocationID
    </Content>
    <Content Key="Query_LocationFullName" DataBaseType="Oracle">
      SELECT w.warehousename || ' ' || l.locationname as FULLNAME
      FROM Location l inner join Warehouse w on l.warehouseid = w.warehouseid
      where l.LocationID = :LocationID
    </Content>

    <Content Key="Query_LocationIsExist" DataBaseType="SqlServer">
      select count(*) from Location  where  IsDisabled=0 and   LocationType =@LocationType and LocationName=@LocationName and Location.OrgID=@OrgID
    </Content>
    <Content Key="Query_LocationIsExist" DataBaseType="Oracle">
      select count(*) from Location  where  IsDisabled=0 and   LocationType =:LocationType and LocationName=:LocationName and Location.OrgID=:OrgID
    </Content>

    <Content Key="Query_LocationEntityByBarcode" DataBaseType="SqlServer">
      SELECT LOCATIONID
      ,LOCATIONNAME
      ,LOCATIONTYPE
      ,LOCATION.ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,BARCODE
      ,LOCATION.ISDISABLED
      ,LOCATION.MODIFIER
      ,LOCATION.MODIFYTIME
      ,LOCATION.REMARK
      ,WAREHOUSEID
      FROM Location  left join AC_Org  on Location.OrgID = AC_Org.ID where Location.IsDisabled = 0 and  Location.barcode=@barcode
    </Content>
    <Content Key="Query_LocationEntityByBarcode" DataBaseType="Oracle">
      SELECT LOCATIONID
      ,LOCATIONNAME
      ,LOCATIONTYPE
      ,LOCATION.ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,BARCODE
      ,LOCATION.ISDISABLED
      ,LOCATION.MODIFIER
      ,LOCATION.MODIFYTIME
      ,LOCATION.REMARK
      ,WAREHOUSEID
      FROM Location  left join AC_Org  on Location.OrgID = AC_Org.ID where Location.IsDisabled = 0 and  Location.barcode=:barcode
    </Content>


    <Content Key="Query_LocationEntityByLocationID" DataBaseType="SqlServer">
      SELECT LOCATIONID
      ,LOCATIONNAME
      ,LOCATIONTYPE
      ,LOCATION.ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,BARCODE
      ,LOCATION.ISDISABLED
      ,LOCATION.MODIFIER
      ,LOCATION.MODIFYTIME
      ,LOCATION.REMARK
      ,WAREHOUSEID
      FROM Location  left join AC_Org  on Location.OrgID = AC_Org.ID where Location.IsDisabled = 0 and  Location.LocationID=@LocationID
    </Content>
    <Content Key="Query_LocationEntityByLocationID" DataBaseType="Oracle">
      SELECT LOCATIONID
      ,LOCATIONNAME
      ,LOCATIONTYPE
      ,LOCATION.ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,BARCODE
      ,LOCATION.ISDISABLED
      ,LOCATION.MODIFIER
      ,LOCATION.MODIFYTIME
      ,LOCATION.REMARK
      ,WAREHOUSEID
      FROM Location  left join AC_Org  on Location.OrgID = AC_Org.ID where Location.IsDisabled = 0 and  Location.LocationID=:LocationID
    </Content>


    <Content Key="Query_GetDefaultLocation" DataBaseType="SqlServer">
      SELECT TOP 1  Location.LOCATIONID
      ,Location.LOCATIONNAME
      FROM Location with (nolock)  inner join StorageList with (nolock) on StorageList.LocationID = Location.LocationID
      where Location.IsDisabled = 0 and Location.WarehouseID = @WarehouseID and
      StorageList.CargoTypeID =@CargoTypeID
      ORDER BY StorageList.Quantity desc
    </Content>
    <Content Key="Query_GetDefaultLocation" DataBaseType="Oracle">
		select * from
		(SELECT  l.LOCATIONID
		,l.LOCATIONNAME 
		FROM Location  l inner join StorageList sl on sl.LocationID = l.LocationID
		where l.IsDisabled = 0 and l.WarehouseID =:WarehouseID and
		sl.CargoTypeID =:CargoTypeID
		order by sl.Quantity desc
		) where rownum=1
	</Content>

    <Content Key="Query_GetSynDataLocation" DataBaseType="SqlServer">
      SELECT LocationID,LocationName,LocationType,OrgID,BarCode,WarehouseID
      FROM Location
      where IsDisabled = 0
    </Content>
    <Content Key="Query_GetSynDataLocation" DataBaseType="Oracle">
      SELECT LocationID,LocationName,LocationType,OrgID,BarCode,WarehouseID
      FROM Location
      where IsDisabled = 0
    </Content>

    <Content Key="Query_Manufacturer" DataBaseType="SqlServer">
      SELECT  MANUFACTURERID
      , MANUFACTURER.NAME
      , MANUFACTURER.ADDR
      , MANUFACTURER.POSTCODE
      , MANUFACTURER.DESCRIPTION
      , MANUFACTURER.TEL
      , MANUFACTURER.FAX
      , MANUFACTURER.LASTMODIFYTIME
      , MANUFACTURER.LASTMODIFIER
      , MANUFACTURER.ISDISABLED
      , MANUFACTURER.CONTACT
      , MANUFACTURER.CONTACTTEL
      , MANUFACTURER.ISSEA
      , MANUFACTURER.CODE
      , MANUFACTURER.PINYIN
      FROM MANUFACTURER
      where 1=1 AND MANUFACTURER.ISDISABLED =0
    </Content>
    <Content Key="Query_Manufacturer" DataBaseType="Oracle">
      SELECT  MANUFACTURER.MANUFACTURERID
      , MANUFACTURER.NAME
      , MANUFACTURER.ADDR
      , MANUFACTURER.POSTCODE
      , MANUFACTURER.DESCRIPTION
      , MANUFACTURER.TEL
      , MANUFACTURER.FAX
      , MANUFACTURER.LASTMODIFYTIME
      , MANUFACTURER.LASTMODIFIER
      , MANUFACTURER.ISDISABLED
      , MANUFACTURER.CONTACT
      , MANUFACTURER.CONTACTTEL
      , MANUFACTURER.ISSEA
      , MANUFACTURER.CODE
      , MANUFACTURER.PINYIN
      FROM MANUFACTURER
      WHERE  1=1  AND MANUFACTURER.ISDISABLED =0
    </Content>

    <Content Key="Query_ManufacturerExist" DataBaseType="SqlServer">
      SELECT COUNT(*) FROM MANUFACTURER
      where 1=1 AND (MANUFACTURER.ISDISABLED is null or  MANUFACTURER.ISDISABLED =0)
    </Content>
    <Content Key="Query_ManufacturerExist" DataBaseType="Oracle">
      SELECT COUNT(*) FROM MANUFACTURER
      where  1=1 AND (MANUFACTURER.ISDISABLED is null or  MANUFACTURER.ISDISABLED =0)
    </Content>

    <Content Key="Select_GetByManufacturerID" DataBaseType="SqlServer">
      SELECT MANUFACTURERPRODUCTS.CARGOTYPEID,TYPENAME,CARGOTYPENAME,MANUFACTURERPRODUCTS.MANUFACTURERID,MANUFACTURERPRODUCTS.MANUFACTURERPID,CARGOTYPE.CARGOTOPTYPE
      FROM MANUFACTURERPRODUCTS WITH (NOLOCK)
      INNER JOIN CARGOTYPE  WITH (NOLOCK)
      ON MANUFACTURERPRODUCTS.CARGOTYPEID=CARGOTYPE.CARGOTYPEID
      INNER JOIN SYSTEMTYPEPARAMETER WITH (NOLOCK)
      ON CARGOTYPE.CARGOTOPTYPE=SYSTEMTYPEPARAMETER.TYPEVALUE
      AND SYSTEMTYPEPARAMETER.TYPEKEY='CargoTopType'
      WHERE 1 = 1 AND MANUFACTURERPRODUCTS.MANUFACTURERID = @manufacturerID
    </Content>
    <Content Key="Select_GetByManufacturerID" DataBaseType="Oracle">
      SELECT MANUFACTURERPRODUCTS.CARGOTYPEID,TYPENAME,CARGOTYPENAME,MANUFACTURERPRODUCTS.MANUFACTURERID,MANUFACTURERPRODUCTS.MANUFACTURERPID,CARGOTYPE.CARGOTOPTYPE
      FROM MANUFACTURERPRODUCTS
      INNER JOIN CARGOTYPE
      ON MANUFACTURERPRODUCTS.CARGOTYPEID=CARGOTYPE.CARGOTYPEID
      INNER JOIN SYSTEMTYPEPARAMETER
      ON CARGOTYPE.CARGOTOPTYPE=SYSTEMTYPEPARAMETER.TYPEVALUE
      AND SYSTEMTYPEPARAMETER.TYPEKEY='CargoTopType'
      WHERE 1 = 1 AND MANUFACTURERPRODUCTS.MANUFACTURERID = :manufacturerID
    </Content>

    <Content Key="Query_Operation" DataBaseType="SqlServer">
      SELECT O.OPERATIONID,O.OPERATIONNAME,O.ORGID,A.NAME ORGNAME FROM OPERATION O
      LEFT JOIN AC_Org A ON O.ORGID=A.ID
      WHERE  1=1
    </Content>
    <Content Key="Query_Operation" DataBaseType="Oracle">
      SELECT O.OPERATIONID,O.OPERATIONNAME,O.ORGID,A.NAME ORGNAME FROM OPERATION O
      LEFT JOIN AC_Org A ON O.ORGID=A.ID
      WHERE  1=1
    </Content>

    <Content Key="Query_GetOperationHIS" DataBaseType="SqlServer">
      <![CDATA[
      select p.OPERATIONNAME,c.CARGOTYPEKINDTEXT,c.CARGOTYPETEXT,c.CARGOTYPEID, op.QUANTITY,
      isnull(SUM(s.Quantity),0) as STORAGEQUT,
      case when (op.Quantity- isnull(SUM(s.Quantity),0))<0 then 0 else op.Quantity- isnull(SUM(s.Quantity),0)  end as LACKQUT
      from OPERATIONSETTING op
      inner join Operation p on p.OperationID=op.OperationID
      left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
      left join StorageList s on s.CargoTypeID = op.CargoTypeID and s.status=50
      where 1=1 {0}
      group by p.OPERATIONNAME,c.CARGOTYPEKINDTEXT,c.CARGOTYPETEXT,c.CARGOTYPEID, op.QUANTITY
      --having op.Quantity > isnull(SUM(s.Quantity),0)
      order by p.OPERATIONNAME
      ]]>
    </Content>
    <Content Key="Query_GetOperationHIS" DataBaseType="Oracle">
      <![CDATA[
      select p.OPERATIONNAME,c.CARGOTYPEKINDTEXT,c.CARGOTYPETEXT,c.CARGOTYPEID, op.QUANTITY,
      nvl(SUM(s.Quantity),0) as STORAGEQUT,
      case when (op.Quantity- nvl(SUM(s.Quantity),0))<0 then 0 else op.Quantity- nvl(SUM(s.Quantity),0)  end as LACKQUT
      from OPERATIONSETTING op
      inner join Operation p on p.OperationID=op.OperationID
      left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
      left join StorageList s on s.CargoTypeID = op.CargoTypeID and s.status=50
      where 1=1 {0}
      group by p.OPERATIONNAME,c.CARGOTYPEKINDTEXT,c.CARGOTYPETEXT,c.CARGOTYPEID, op.QUANTITY
      --having op.Quantity > nvl(SUM(s.Quantity),0)
      order by p.OPERATIONNAME
      ]]>
    </Content>

    <Content Key="Query_GetOperationSettingYD" DataBaseType="SqlServer">
      SELECT ops.OPERATIONID,op.OPERATIONNAME as OPERATOR,ops.CARGOTYPEID,c.CARGOTYPENAME,ck.KINDNAME as CARGOTYPEKINDTEXT, ops.QUANTITY
      FROM OperationSetting ops
      inner join Operation op on op.OperationID=ops.OperationID
      inner join CargoType c on c.CargoTypeID = ops.CargoTypeID
      inner join CargoTypeKind ck on ck.ID = c.CargoTypeKind
      where 1=1
    </Content>
    <Content Key="Query_GetOperationSettingYD" DataBaseType="Oracle">
      SELECT ops.OPERATIONID,op.OPERATIONNAME as OPERATOR,ops.CARGOTYPEID,c.CARGOTYPENAME,ck.KINDNAME as CARGOTYPEKINDTEXT, ops.QUANTITY
      FROM OperationSetting ops
      inner join Operation op on op.OperationID=ops.OperationID
      inner join CargoType c on c.CargoTypeID = ops.CargoTypeID
      inner join CargoTypeKind ck on ck.ID = c.CargoTypeKind
      where 1=1
    </Content>

    <Content Key="Query_GetOperationHISSetting" DataBaseType="SqlServer">
      SELECT op.OPERATOR
      ,op.CARGOTYPENAME
      ,c.CARGOTYPEKINDTEXT
      ,op.QUANTITY
      ,op.SYSDATATIME
      ,op.CARGOTYPEID
      ,op.PATIENTID
      ,op.ORGID
      FROM OperationHISSetting op
      left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
      where 1=1
    </Content>
    <Content Key="Query_GetOperationHISSetting" DataBaseType="Oracle">
      SELECT op.OPERATOR
      ,op.CARGOTYPENAME
      ,c.CARGOTYPEKINDTEXT
      ,op.QUANTITY
      ,op.SYSDATATIME
      ,op.CARGOTYPEID
      ,op.PATIENTID
      ,op.ORGID
      FROM OperationHISSetting op
      left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
      where 1=1
    </Content>
	  <Content Key="Query_GetOperationHISSettingSummary" DataBaseType="SqlServer">
		  SELECT op.OPERATOR
		  ,op.CARGOTYPENAME
		  ,c.CARGOTYPEKINDTEXT
		  ,sum(op.QUANTITY) as  QUANTITY
		  ,op.CARGOTYPEID
		  FROM OperationHISSetting op
		  left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
		  left join OperationHIS oh on oh.PatientID=op.PatientID and oh.SysDataTime=op.SysDataTime and op.OPERATOR=oh.OPERATOR
		  where 1=1  {0}
		  group by op.OPERATOR,op.CARGOTYPENAME,c.CARGOTYPEKINDTEXT,op.CARGOTYPEID
	  </Content>
	  <Content Key="Query_GetOperationHISSettingSummary" DataBaseType="Oracle">
		  SELECT op.OPERATOR
		  ,op.CARGOTYPENAME
		  ,c.CARGOTYPEKINDTEXT
		  ,sum(op.QUANTITY) as  QUANTITY
		  ,op.CARGOTYPEID
		  FROM OperationHISSetting op
		  left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
		  left join OperationHIS oh on oh.PatientID=op.PatientID and oh.SysDataTime=op.SysDataTime and op.OPERATOR=oh.OPERATOR
		  where 1=1  {0}
		  group by op.OPERATOR,op.CARGOTYPENAME,c.CARGOTYPEKINDTEXT,op.CARGOTYPEID
	  </Content>
	  <Content Key="Query_GetOperationHISSettingHZ" DataBaseType="SqlServer">
		  SELECT op.CARGOTYPENAME
		  ,c.CARGOTYPEKINDTEXT
		  ,sum(op.QUANTITY) as  QUANTITY
		  ,op.CARGOTYPEID
		  FROM OperationHISSetting op
		  left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
		  left join OperationHIS oh on oh.PatientID=op.PatientID and oh.SysDataTime=op.SysDataTime and op.OPERATOR=oh.OPERATOR
		  where 1=1  {0}
		  group by op.CARGOTYPENAME,c.CARGOTYPEKINDTEXT,op.CARGOTYPEID
	  </Content>
	  <Content Key="Query_GetOperationHISSettingHZ" DataBaseType="Oracle">
		  SELECT op.CARGOTYPENAME
		  ,c.CARGOTYPEKINDTEXT
		  ,sum(op.QUANTITY) as  QUANTITY
		  ,op.CARGOTYPEID
		  FROM OperationHISSetting op
		  left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
		  left join OperationHIS oh on oh.PatientID=op.PatientID and oh.SysDataTime=op.SysDataTime and op.OPERATOR=oh.OPERATOR
		  where 1=1  {0}
		  group by op.CARGOTYPENAME,c.CARGOTYPEKINDTEXT,op.CARGOTYPEID
	  </Content>
	  <Content Key="Query_GetOperationHISSettingHZSafeStock" DataBaseType="SqlServer">
		  select * from 
		  (
			  select aa.*,isnull(ss.BASEQTY,0) as BASEQTY from
			  (
			  SELECT op.CARGOTYPENAME
			  ,c.CARGOTYPEKINDTEXT
			  ,sum(op.QUANTITY) as  QUANTITY
			  ,op.CARGOTYPEID
			  FROM OperationHISSetting op
			  left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
			  left join OperationHIS oh on oh.PatientID=op.PatientID and oh.SysDataTime=op.SysDataTime and op.OPERATOR=oh.OPERATOR
			  where 1=1 {0}
			  group by op.CARGOTYPENAME,c.CARGOTYPEKINDTEXT,op.CARGOTYPEID
			  ) aa  left join safestock ss on ss.cargotypeid=aa.cargotypeid
			  and ss.orgid=@orgid 
		  ) mm
		  where QUANTITY>BASEQTY
	  </Content>
	  <Content Key="Query_GetOperationHISSettingHZSafeStock" DataBaseType="Oracle">
		  select * from
		  (
		  select aa.*,nvl(ss.BASEQTY,0) as BASEQTY from
		  (
		  SELECT op.CARGOTYPENAME
		  ,c.CARGOTYPEKINDTEXT
		  ,sum(op.QUANTITY) as  QUANTITY
		  ,op.CARGOTYPEID
		  FROM OperationHISSetting op
		  left join view_CargoType c  on c.CargoTypeID = op.CargoTypeID
		  left join OperationHIS oh on oh.PatientID=op.PatientID and oh.SysDataTime=op.SysDataTime and op.OPERATOR=oh.OPERATOR
		  where 1=1 {0}
		  group by op.CARGOTYPENAME,c.CARGOTYPEKINDTEXT,op.CARGOTYPEID
		  ) aa  join safestock ss on ss.cargotypeid=aa.cargotypeid
		  and ss.orgid=:orgid
		  ) mm
		  where QUANTITY>BASEQTY
	  </Content>
    <Content Key="UpdateOperationHISBySql" DataBaseType="SqlServer">
      update OperationHIS set Flag=@flag where 1=1
    </Content>
    <Content Key="UpdateOperationHISBySql" DataBaseType="Oracle">
      update OperationHIS set Flag=:flag where 1=1
    </Content>

    <Content Key="Query_GetOperationHISAll" DataBaseType="SqlServer">
      select ID
      ,OPERATINGROOM
      ,SEQUENCE
      ,SCHEDULEDDATETIME
      ,NAME
      ,DEPTNAME
      ,LOCATION
      ,BEDNO
      ,SEX
      ,DATEOFBIRTH
      ,DIAGBEFOREOPERATION
      ,OPERATOR
      ,SURGEON
      ,FIRSTASSISTANT
      ,SECONDASSISTANT
      ,THIRDASSISTANT
      ,FOURTHASSISTANT
      ,ANESTHESIAMETHOD
      ,FIRSTOPERATIONNURSE
      ,SECONDOPERATIONNURSE
      ,SECONDSUPPLYNURSE
      ,NOTESONOPERATION
      ,SYSDATATIME
      ,CARGOTYPETEXT
      ,CARGOTYPETEXTYD
      ,PATIENTID
      ,case when FLAG=0 then '否' when FLAG=1 then '是' end as FLAG
      from OperationHIS where 1=1 {0} order by SysDataTime desc,operatingroom asc,deptname,operator
    </Content>
    <Content Key="Query_GetOperationHISAll" DataBaseType="Oracle">
      select ID
      ,OPERATINGROOM
      ,SEQUENCE
      ,SCHEDULEDDATETIME
      ,NAME
      ,DEPTNAME
      ,LOCATION
      ,BEDNO
      ,SEX
      ,DATEOFBIRTH
      ,DIAGBEFOREOPERATION
      ,OPERATOR
      ,SURGEON
      ,FIRSTASSISTANT
      ,SECONDASSISTANT
      ,THIRDASSISTANT
      ,FOURTHASSISTANT
      ,ANESTHESIAMETHOD
      ,FIRSTOPERATIONNURSE
      ,SECONDOPERATIONNURSE
      ,SECONDSUPPLYNURSE
      ,NOTESONOPERATION
      ,SYSDATATIME
      ,CARGOTYPETEXT
      ,CARGOTYPETEXTYD
      ,PATIENTID
      ,case when FLAG=0 then '否' when FLAG=1 then '是' end as FLAG
      from OperationHIS where 1=1 {0} order by SysDataTime desc,operatingroom asc,deptname,operator
    </Content>

    <Content Key="Query_GetOperationHISAllWHPP" DataBaseType="SqlServer">
      select
      OperationHIS.ID,ScheduledDatetime as SCHEDULEDDATETIME,OperatingRoom as OPERATIONROOM,Sequence as SEQUENCE,OperationHIS.Name as NAME,PatientAge as PATIENTAGE,PatientID as PATIENTID,
      DeptName as DEPTNAME,BedNo as BEDNO,OperationHIS.Sex as SEX,DiagBeforeOperation as DIAGBEFOREOPERATION,Operator as OPERATOR,Surgeon as SURGEON,
      AnesthesiaMethod as ANESTHESIAMETHOD,AnesthesiaDoctor as ANESTHESIADOCTOR,FirstOperationNurse as FIRSTOPERATIONNURSE,SecondSupplyNurse as SECONDSUPPLYNURSE,
      CargoTypeText as CARGOTYPETEXT,u.Name as USERID,CreateDate as CREATEDATE
      from OperationHIS
      left join Ac_User u on OperationHIS.UserID=u.ID
      where 1=1 {0}
      order by CreateDate desc
    </Content>
    <Content Key="Query_GetOperationHISAllWHPP" DataBaseType="Oracle">
      select
      OperationHIS.ID,ScheduledDatetime as SCHEDULEDDATETIME,OperatingRoom as OPERATIONROOM,Sequence as SEQUENCE,OperationHIS.Name as NAME,PatientAge as PATIENTAGE,PatientID as PATIENTID,
      DeptName as DEPTNAME,BedNo as BEDNO,OperationHIS.Sex as SEX,DiagBeforeOperation as DIAGBEFOREOPERATION,Operator as OPERATOR,Surgeon as SURGEON,
      AnesthesiaMethod as ANESTHESIAMETHOD,AnesthesiaDoctor as ANESTHESIADOCTOR,FirstOperationNurse as FIRSTOPERATIONNURSE,SecondSupplyNurse as SECONDSUPPLYNURSE,
      CargoTypeText as CARGOTYPETEXT,u.Name as USERID,CreateDate as CREATEDATE
      from OperationHIS
      left join Ac_User u on OperationHIS.UserID=u.ID
      where 1=1 {0}
      order by CreateDate desc
    </Content>

    <Content Key="Query_GetOperationHISAllGeneral" DataBaseType="SqlServer">
      select
      row_number() over(order by OperatingRoom,OperationSequence) as NO,
      OperatingRoom as OPERATINGROOM,
      OperationSequence as OPERATIONSEQUENCE,
      OperatingRoom +'-'+ OperationSequence as OPERATIONROOMANDSEQUENCE,
      ScheduledDatetime as SCHEDULEDDATETIME,
      Name as NAME,
      Sex as SEX,
      PatientAge as PATIENTAGE,
      PatientID as PATIENTID,
      BedNo as BEDNO,
      DeptName as DEPTNAME,
      DiagBeforeOperation as DIAGBEFOREOPERATION,
      Operator as OPERATOR,
      SurgeonDoctor as SURGEONDOCTOR,
      FirstAssistant as FIRSTASSISTANT,
      AnesthesiaDoctor as ANESTHESIADOCTOR,
      OperationMatter as OPERATIONMATTER,
      SecondSupplyNurse as SECONDSUPPLYNURSE,
      FirstOperationNurse as FIRSTOPERATIONNURSE,
      case when Status=0 then '已申请'
      when Status=1 then '已排班'
      when Status=-1 then '已撤销' end as STATUS,
      case when ProvideStatus=0 then '未发放' else '已发放' end  as PROVIDESTATUS,
      OperationInfoID as OPERATIONINFOID,
      ID
      from OperationHIS
      where 1=1 {0}
      order by OperatingRoom,OperationSequence
    </Content>
    <Content Key="Query_GetOperationHISAllGeneral" DataBaseType="Oracle">
      select
      row_number() over(order by OperatingRoom,OperationSequence) as NO,
      OperatingRoom as OPERATINGROOM,
      OperationSequence as OPERATIONSEQUENCE,
      OperatingRoom ||'-'|| OperationSequence as OPERATIONROOMANDSEQUENCE,
      ScheduledDatetime as SCHEDULEDDATETIME,
      Name as NAME,
      Sex as SEX,
      PatientAge as PATIENTAGE,
      PatientID as PATIENTID,
      BedNo as BEDNO,
      DeptName as DEPTNAME,
      DiagBeforeOperation as DIAGBEFOREOPERATION,
      Operator as OPERATOR,
      SurgeonDoctor as SURGEONDOCTOR,
      FirstAssistant as FIRSTASSISTANT,
      AnesthesiaDoctor as ANESTHESIADOCTOR,
      OperationMatter as OPERATIONMATTER,
      SecondSupplyNurse as SECONDSUPPLYNURSE,
      FirstOperationNurse as FIRSTOPERATIONNURSE,
      case when Status=0 then '已申请'
      when Status=1 then '已排班'
      when Status=-1 then '已撤销' end as STATUS,
      case when ProvideStatus=0 then '未发放' else '已发放' end  as PROVIDESTATUS,
      OperationInfoID as OPERATIONINFOID,
      ID
      from OperationHIS
      where 1=1 {0}
      order by OperatingRoom,OperationSequence
    </Content>
    
  
    <Content Key="Query_IsExistOperationByNameID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM OPERATION WHERE OPERATIONNAME=@operationName  and OperationID <> @OperationID
      ]]>
    </Content>
    <Content Key="Query_IsExistOperationByNameID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM OPERATION WHERE OPERATIONNAME=:operationName  and OperationID <> :OperationID
      ]]>
    </Content>

    <Content Key="Query_OperationSettingGetByID" DataBaseType="SqlServer">
      SELECT OP.CARGOTYPEID,V.CARGOTYPETEXT,V.CARGOTOPTYPETEXT,OP.QUANTITY
      FROM OPERATIONSETTING OP
      INNER JOIN VIEW_CARGOTYPE V ON V.CARGOTYPEID=OP.CARGOTYPEID
      WHERE OP.OPERATIONID= @ID
    </Content>
    <Content Key="Query_OperationSettingGetByID" DataBaseType="Oracle">
      SELECT OP.CARGOTYPEID,V.CARGOTYPETEXT,V.CARGOTOPTYPETEXT,OP.QUANTITY
      FROM OPERATIONSETTING OP
      INNER JOIN VIEW_CARGOTYPE V ON V.CARGOTYPEID=OP.CARGOTYPEID
      WHERE OP.OPERATIONID= :ID
    </Content>

    <Content Key="Query_OperationSettingAllData" DataBaseType="SqlServer">
      SELECT
      row_number() over(order by CARGOTYPEKINDTEXT) as NO,
      OP.CARGOTYPEID,v.CARGOTYPEKINDTEXT,V.CARGOTYPETEXT,V.CARGOTOPTYPETEXT,OP.QUANTITY,0 as REALITYQUANTITY,
      isnull(stock.StockQuantity,0) as STOCKQUANTITY
      FROM OPERATIONSETTING OP
      INNER JOIN VIEW_CARGOTYPE V ON V.CARGOTYPEID=OP.CARGOTYPEID
      left join (
      select sl.CargoTypeID,SUM(Quantity) as StockQuantity from StorageList sl
      inner join CargoType ct on sl.CargoTypeID=ct.CargoTypeID
      where 1=1 {0}
      group by sl.CargoTypeID
      )stock on OP.CargoTypeID=stock.CargoTypeID
      where 1=1 {1}
    </Content>
    <Content Key="Query_OperationSettingAllData" DataBaseType="Oracle">
      SELECT
      row_number() over(order by CARGOTYPEKINDTEXT) as NO,
      OP.CARGOTYPEID,v.CARGOTYPEKINDTEXT,V.CARGOTYPETEXT,V.CARGOTOPTYPETEXT,OP.QUANTITY,0 as REALITYQUANTITY,
      nvl(stock.StockQuantity,0) as STOCKQUANTITY
      FROM OPERATIONSETTING OP
      INNER JOIN VIEW_CARGOTYPE V ON V.CARGOTYPEID=OP.CARGOTYPEID
      left join (
      select sl.CargoTypeID,SUM(Quantity) as StockQuantity from StorageList sl
      inner join CargoType ct on sl.CargoTypeID=ct.CargoTypeID
      where 1=1 {0}
      group by sl.CargoTypeID
      )stock on OP.CargoTypeID=stock.CargoTypeID
      where 1=1 {1}
    </Content>

    <Content Key="Query_OperationSettingAllProvideData" DataBaseType="SqlServer">
      SELECT
      row_number() over(order by CARGOTYPEKINDTEXT) as NO,OperationID,
      OP.CARGOTYPEID,v.CARGOTYPEKINDTEXT,V.CARGOTYPETEXT,V.CARGOTOPTYPETEXT,
      0 as STOCKQUANTITY,
      setting.Quantity as QUANTITY,
      sum(OP.Quantity) as REALITYQUANTITY
      FROM OperationHISSetting OP
      INNER JOIN VIEW_CARGOTYPE V ON V.CARGOTYPEID=OP.CARGOTYPEID
      left join
      (
      select CargoTypeID,Quantity from OperationSetting
      where 1=1 {0}
      ) setting on setting.CargoTypeID=OP.CargoTypeID
      where 1=1 {1}
      group by CARGOTYPEKINDTEXT,OperationID,OP.CARGOTYPEID
      ,V.CARGOTYPETEXT,V.CARGOTOPTYPETEXT,setting.Quantity
    </Content>
    <Content Key="Query_OperationSettingAllProvideData" DataBaseType="Oracle">
      SELECT
      row_number() over(order by CARGOTYPEKINDTEXT) as NO,OperationID,
      OP.CARGOTYPEID,v.CARGOTYPEKINDTEXT,V.CARGOTYPETEXT,V.CARGOTOPTYPETEXT,
      0 as STOCKQUANTITY,
      setting.Quantity as QUANTITY,
      sum(OP.Quantity) as REALITYQUANTITY
      FROM OperationHISSetting OP
      INNER JOIN VIEW_CARGOTYPE V ON V.CARGOTYPEID=OP.CARGOTYPEID
      left join
      (
      select CargoTypeID,Quantity from OperationSetting
      where 1=1 {0}
      ) setting on setting.CargoTypeID=OP.CargoTypeID
      where 1=1 {1}
      group by CARGOTYPEKINDTEXT,OperationID,OP.CARGOTYPEID
      ,V.CARGOTYPETEXT,V.CARGOTOPTYPETEXT,setting.Quantity
    </Content>

    <Content Key="Query_PackageSettingByPackageTypeID" DataBaseType="SqlServer">
      Select P.PACKAGESETTINGID
      ,P.PACKAGETYPEID
      ,P.CARGOTYPEID
      ,C.CARGOTYPENAME
      ,P.CARGOTOPTYPE
      ,P.QUANTITY
      ,P.ISTRACK,
      p.ISDYNAMIC
      ,CASE WHEN P.ISTRACK = 1 THEN 0 ELSE P.QUANTITY END AS COUNTER
      ,P.FORDER
      ,ISNULL(p.IsLightChecks,0) AS IsLightChecks
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,Model as MODEL
      ,c.Remark as REMARK
      FROM PACKAGESETTING P    INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID WHERE P.PACKAGETYPEID=@PackageTypeID
      order by p.CARGOTOPTYPE,p.FOrder
    </Content>
    <Content Key="Query_PackageSettingByPackageTypeID" DataBaseType="Oracle">
      Select P.PACKAGESETTINGID
      ,P.PACKAGETYPEID
      ,P.CARGOTYPEID
      ,C.CARGOTYPENAME
      ,P.CARGOTOPTYPE
      ,P.QUANTITY
      ,P.ISTRACK,
      p.ISDYNAMIC
      ,CASE WHEN P.ISTRACK = 1 THEN 0 ELSE P.QUANTITY END AS COUNTER
      ,P.FORDER
      ,NVL(p.IsLightChecks,0) AS IsLightChecks
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,Model as MODEL
      ,c.Remark as REMARK
      FROM PACKAGESETTING P    INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID WHERE P.PACKAGETYPEID=:PackageTypeID
      order by p.CARGOTOPTYPE,p.FOrder
    </Content>
	  <Content Key="Query_PackageSettingByPackageTypeIDAndCargoTypeid" DataBaseType="SqlServer">
		  Select P.PACKAGESETTINGID
		  ,P.PACKAGETYPEID
		  ,P.CARGOTYPEID
		  ,C.CARGOTYPENAME
		  ,P.CARGOTOPTYPE
		  ,P.QUANTITY
		  ,P.ISTRACK,
		  p.ISDYNAMIC
		  ,CASE WHEN P.ISTRACK = 1 THEN 0 ELSE P.QUANTITY END AS COUNTER
		  FROM PACKAGESETTING P    INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID WHERE P.PACKAGETYPEID=@PackageTypeID and P.CargoTypeid=@CargoTypeid
		  order by p.CARGOTOPTYPE,p.FOrder
	  </Content>
	  <Content Key="Query_PackageSettingByPackageTypeIDAndCargoTypeid" DataBaseType="Oracle">
		  Select P.PACKAGESETTINGID
		  ,P.PACKAGETYPEID
		  ,P.CARGOTYPEID
		  ,C.CARGOTYPENAME
		  ,P.CARGOTOPTYPE
		  ,P.QUANTITY
		  ,P.ISTRACK,
		  p.ISDYNAMIC
		  ,CASE WHEN P.ISTRACK = 1 THEN 0 ELSE P.QUANTITY END AS COUNTER
		  FROM PACKAGESETTING P    INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID WHERE P.PACKAGETYPEID=:PackageTypeID and P.CargoTypeid=:CargoTypeid
		  order by p.CARGOTOPTYPE,p.FOrder
	  </Content>
    <Content Key="Query_PackageSettingInByPackageTypeID" DataBaseType="SqlServer">
		SELECT P.PACKAGESETTINGID
		,P.PACKAGETYPEID
		,P.CARGOTYPEID
		,C.CARGOTYPENAME
		,P.CARGOTOPTYPE
		,P.QUANTITY
		,P.ISTRACK,
		P.ISDYNAMIC
		,T3.QUANTITY AS COUNTER
		,P.FORDER
		FROM PACKAGESETTING P    INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID
		INNER JOIN FLOWPACKAGEINCARGOLIST T3 ON T3.CARGOTYPEID=C.CARGOTYPEID
		WHERE P.PACKAGETYPEID=@PackageTypeID
		AND T3.FPACKAGEID=@FPackageID
		order by p.CARGOTOPTYPE,p.FOrder
	</Content>
    <Content Key="Query_PackageSettingInByPackageTypeID" DataBaseType="Oracle">
		SELECT P.PACKAGESETTINGID
		,P.PACKAGETYPEID
		,P.CARGOTYPEID
		,C.CARGOTYPENAME
		,P.CARGOTOPTYPE
		,P.QUANTITY
		,P.ISTRACK,
		P.ISDYNAMIC
		,T3.QUANTITY AS COUNTER
		,P.FORDER
		FROM PACKAGESETTING P    INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID
		INNER JOIN FLOWPACKAGEINCARGOLIST T3 ON T3.CARGOTYPEID=C.CARGOTYPEID
		WHERE P.PACKAGETYPEID=:PackageTypeID
		AND T3.FPACKAGEID=:FPackageID
		order by p.CARGOTOPTYPE,p.FOrder
	</Content>

    <Content Key="Query_PackageSettingByCargoTypeID" DataBaseType="SqlServer">
      Select
      row_number() over(order by sc.CargotypeName) as NONUMBER,
      c.CargoTypeName CARGOTYPENAMEC,
      p.PACKAGESETTINGID, p.PACKAGETYPEID, p.CARGOTYPEID, sc.CARGOTYPENAME, p.CARGOTOPTYPE, p.QUANTITY,p.ISTRACK,p.ISDYNAMIC,p.ISRECYCLEDYNAMIC,p.ISCSSDPROVIDE,p.ISDOCTOROWN
      ,isnull(p.USETIMES,0) as USETIMES,isnull(sc.FPRICE,0) as FPRICE,isnull(sc.FCostPrice,0) as FCOSTPRICE,isnull(sc.FDISINFECTPRICE,0) as FDISINFECTPRICE,isnull(case isnull(p.usetimes,0) when 0 then 0 else sc.FPRICE/p.USETIMES end,0) as FUSEPRICE,cast(isnull(case p.usetimes when 0 then sc.FDISINFECTPRICE else isnull(sc.FPRICE*p.QUANTITY,0)/p.USETIMES+sc.FDISINFECTPRICE end ,0) as decimal(18,3)) as FCHANGEPRICE
      ,isnull(sc.WDisinfectPrice,0) as WDISINFECTPRICE
      ,isnull(sc.FWastage,0) as FWASTAGE
      ,isnull(sc.amount,0) as AMOUNT
      ,isnull(sc.FSterilizePrice,0) as FSTERILIZEPRICE
      ,isnull(sc.WSterilizePrice,0) as WSTERILIZEPRICE
      ,isnull(sc.FManPrice,0) as FMANPRICE
      ,isnull(sc.WManPrice,0) as WMANPRICE
      ,ISNULL(p.IsLightChecks,0) AS IsLightChecks
      ,sc.OfficialName as OFFICIALNAME
      ,sc.Specification as SPECIFICATION
      ,sc.Model as MODEL
      ,sc.Remark as REMARK
      from PackageSetting p  inner join Cargotype c  on p.PackageTypeID = c.CargoTypeID
      inner join CargoType sc on p.CargoTypeID = sc.CargoTypeID
      where c.CargoTypeID=@CargoTypeID
      Order By p.CARGOTOPTYPE,p.FOrder
    </Content>
    <Content Key="Query_PackageSettingByCargoTypeID" DataBaseType="Oracle">
      Select
      row_number() over(order by sc.CargotypeName) as NONUMBER,
      c.CargoTypeName CARGOTYPENAMEC,
      p.PACKAGESETTINGID, p.PACKAGETYPEID, p.CARGOTYPEID, sc.CARGOTYPENAME, p.CARGOTOPTYPE, p.QUANTITY,p.ISTRACK,p.ISDYNAMIC,p.ISRECYCLEDYNAMIC,p.ISCSSDPROVIDE,p.ISDOCTOROWN
      ,nvl(p.USETIMES,0) as USETIMES,nvl(sc.FPRICE,0) as FPRICE,nvl(sc.FCostPrice*p.QUANTITY,0) as FCOSTPRICE,nvl(sc.FDISINFECTPRICE,0) as FDISINFECTPRICE,nvl(case nvl(p.usetimes,0) when 0 then 0 else (sc.FPRICE*p.QUANTITY)/p.USETIMES end,0) as FUSEPRICE,nvl(case p.usetimes when 0 then sc.FDISINFECTPRICE else sc.FPRICE/p.USETIMES+sc.FDISINFECTPRICE end ,0) as FCHANGEPRICE
      ,nvl(sc.WDisinfectPrice,0) as WDISINFECTPRICE
      ,nvl(sc.FWastage,0) as FWASTAGE
      ,nvl(sc.amount,0) as AMOUNT
      ,nvl(sc.FSterilizePrice,0) as FSTERILIZEPRICE
      ,nvl(sc.WSterilizePrice,0) as WSTERILIZEPRICE
      ,nvl(sc.FManPrice,0) as FMANPRICE
      ,nvl(sc.WManPrice,0) as WMANPRICE
      ,NVL(p.IsLightChecks,0) AS IsLightChecks
      ,sc.OfficialName as OFFICIALNAME
      ,sc.Specification as SPECIFICATION
      ,sc.Model as MODEL
      ,sc.Remark as REMARK
      from PackageSetting p  inner join Cargotype c  on p.PackageTypeID = c.CargoTypeID
      inner join CargoType sc on p.CargoTypeID = sc.CargoTypeID
      where c.CargoTypeID=:CargoTypeID
      Order By p.CARGOTOPTYPE,p.FOrder
    </Content>
    <Content Key="Query_PackageSettingByCargoTypeIDFPackageID" DataBaseType="SqlServer">
      Select
      row_number() over(order by sc.CargotypeName) as NONUMBER,
      c.CargoTypeName CARGOTYPENAMEC,
      p.PACKAGESETTINGID, p.PACKAGETYPEID, p.CARGOTYPEID, sc.OfficialName CARGOTYPENAME, p.CARGOTOPTYPE, p.QUANTITY,p.ISTRACK,p.ISDYNAMIC,p.ISRECYCLEDYNAMIC,p.ISCSSDPROVIDE,p.ISDOCTOROWN
      ,isnull(p.USETIMES,0) as USETIMES,isnull(sc.FPRICE,0) as FPRICE,isnull(sc.FCostPrice,0) as FCOSTPRICE,isnull(sc.FDISINFECTPRICE,0) as FDISINFECTPRICE,isnull(case isnull(p.usetimes,0) when 0 then 0 else sc.FPRICE/p.USETIMES end,0) as FUSEPRICE,cast(isnull(case p.usetimes when 0 then sc.FDISINFECTPRICE else isnull(sc.FPRICE*p.QUANTITY,0)/p.USETIMES+sc.FDISINFECTPRICE end ,0) as decimal(18,3)) as FCHANGEPRICE
      ,isnull(sc.WDisinfectPrice,0) as WDISINFECTPRICE
      ,isnull(sc.FWastage,0) as FWASTAGE
      ,isnull(sc.amount,0) as AMOUNT
      ,isnull(sc.FSterilizePrice,0) as FSTERILIZEPRICE
      ,isnull(sc.WSterilizePrice,0) as WSTERILIZEPRICE
      ,isnull(sc.FManPrice,0) as FMANPRICE
      ,isnull(sc.WManPrice,0) as WMANPRICE
      ,ISNULL(p.IsLightChecks,0) AS IsLightChecks
      ,sc.OfficialName as OFFICIALNAME
      ,sc.Specification as SPECIFICATION
      ,sc.Model as MODEL
      ,fpr.Remark as REMARK,fpr.REMARKID
      from PackageSetting p  inner join Cargotype c  on p.PackageTypeID = c.CargoTypeID
      inner join CargoType sc on p.CargoTypeID = sc.CargoTypeID
      left join FlowPackageRemark fpr on fpr.fpackageID=@FPackageID and fpr.CargoTypeID=p.CargoTypeID
      where c.CargoTypeID=@CargoTypeID
      Order By p.CARGOTOPTYPE,p.FOrder
    </Content>
    <Content Key="Query_PackageSettingByCargoTypeIDFPackageID" DataBaseType="Oracle">
      Select
      row_number() over(order by sc.CargotypeName) as NONUMBER,
      c.CargoTypeName CARGOTYPENAMEC,
      p.PACKAGESETTINGID, p.PACKAGETYPEID, p.CARGOTYPEID,  sc.OfficialName CARGOTYPENAME, p.CARGOTOPTYPE, p.QUANTITY,p.ISTRACK,p.ISDYNAMIC,p.ISRECYCLEDYNAMIC,p.ISCSSDPROVIDE,p.ISDOCTOROWN
      ,nvl(p.USETIMES,0) as USETIMES,nvl(sc.FPRICE,0) as FPRICE,nvl(sc.FCostPrice*p.QUANTITY,0) as FCOSTPRICE,nvl(sc.FDISINFECTPRICE,0) as FDISINFECTPRICE,nvl(case nvl(p.usetimes,0) when 0 then 0 else (sc.FPRICE*p.QUANTITY)/p.USETIMES end,0) as FUSEPRICE,nvl(case p.usetimes when 0 then sc.FDISINFECTPRICE else sc.FPRICE/p.USETIMES+sc.FDISINFECTPRICE end ,0) as FCHANGEPRICE
      ,nvl(sc.WDisinfectPrice,0) as WDISINFECTPRICE
      ,nvl(sc.FWastage,0) as FWASTAGE
      ,nvl(sc.amount,0) as AMOUNT
      ,nvl(sc.FSterilizePrice,0) as FSTERILIZEPRICE
      ,nvl(sc.WSterilizePrice,0) as WSTERILIZEPRICE
      ,nvl(sc.FManPrice,0) as FMANPRICE
      ,nvl(sc.WManPrice,0) as WMANPRICE
      ,NVL(p.IsLightChecks,0) AS IsLightChecks
      ,sc.OfficialName as OFFICIALNAME
      ,sc.Specification as SPECIFICATION
      ,sc.Model as MODEL
      ,fpr.Remark as REMARK,fpr.REMARKID
      from PackageSetting p  inner join Cargotype c  on p.PackageTypeID = c.CargoTypeID
      inner join CargoType sc on p.CargoTypeID = sc.CargoTypeID
      left join FlowPackageRemark fpr on fpr.fpackageID=:FPackageID and fpr.CargoTypeID=p.CargoTypeID
      where c.CargoTypeID=:CargoTypeID
      Order By p.CARGOTOPTYPE,p.FOrder
    </Content>
	  <Content Key="Query_PackageSettingPackageTtypeIDByCargoTypeID" DataBaseType="SqlServer">
		  Select p.PACKAGESETTINGID, p.PACKAGETYPEID, p.CARGOTYPEID,  p.CARGOTOPTYPE, p.QUANTITY,p.ISTRACK,p.ISDYNAMIC,p.ISRECYCLEDYNAMIC,p.ISCSSDPROVIDE,p.ISDOCTOROWN
		  from PackageSetting p inner join Cargotype c  on p.PackageTypeID = c.CargoTypeID
		  where p.CargoTypeID=@CargoTypeID and c.cargotoptype=16
	  </Content>
	  <Content Key="Query_PackageSettingPackageTtypeIDByCargoTypeID" DataBaseType="Oracle">
		  Select p.PACKAGESETTINGID, p.PACKAGETYPEID, p.CARGOTYPEID,  p.CARGOTOPTYPE, p.QUANTITY,p.ISTRACK,p.ISDYNAMIC,p.ISRECYCLEDYNAMIC,p.ISCSSDPROVIDE,p.ISDOCTOROWN
		  from PackageSetting p inner join Cargotype c  on p.PackageTypeID = c.CargoTypeID
		  where p.CargoTypeID=:CargoTypeID and c.cargotoptype=16
	  </Content>
	  <Content Key="Query_PackageSettingSumQXByPackageTypeID" DataBaseType="SqlServer">
		  Select isnull(sum(p.QUANTITY),0) as CNT
		  from PackageSetting p
		  where p.cargotoptype=1 and  p.PackageTypeID=@PackageTypeID
	  </Content>
	  <Content Key="Query_PackageSettingSumQXByPackageTypeID" DataBaseType="Oracle">
		  Select nvl(sum(p.QUANTITY),0) as CNT
		  from PackageSetting p
		  where p.cargotoptype=1 and  p.PackageTypeID=:PackageTypeID
	  </Content>

    <Content Key="Query_PackageSettingByCargoTypeIDContent" DataBaseType="SqlServer">
      Select  c.CARGOTYPENAME,  p.QUANTITY
      from PackageSetting p  inner join Cargotype c  on p.CargoTypeID = c.CargoTypeID
      WHERE  p.CARGOTOPTYPE in (1,2,4) AND p.PackageTypeID=@CargoTypeID
    </Content>
    <Content Key="Query_PackageSettingByCargoTypeIDContent" DataBaseType="Oracle">
      Select  c.CARGOTYPENAME,  p.QUANTITY
      from PackageSetting p  inner join Cargotype c  on p.CargoTypeID = c.CargoTypeID
      WHERE  p.CARGOTOPTYPE in (1,2,4) AND p.PackageTypeID=:CargoTypeID
    </Content>

    <Content Key="Query_GetSynDataPackageSetting" DataBaseType="SqlServer">
      SELECT PackageSettingID,PackageTypeID,CargoTypeID,Quantity,IsTrack  FROM PackageSetting
    </Content>
    <Content Key="Query_GetSynDataPackageSetting" DataBaseType="Oracle">
      SELECT PackageSettingID,PackageTypeID,CargoTypeID,Quantity,IsTrack  FROM PackageSetting
    </Content>

    <Content Key="Query_PackageSetting" DataBaseType="Oracle">
      Select PackageSetting.PACKAGESETTINGID, PackageSetting.PACKAGETYPEID, PackageSetting.CARGOTYPEID, Cargotype.CARGOTYPENAME, PackageSetting.CARGOTOPTYPE, PackageSetting.QUANTITY,Cargotype.ISTRACK
      from PackageSetting inner join Cargotype on PackageSetting.PackageTypeID = Cargotype.CargoTypeID where 1=1
    </Content>
    <Content Key="Query_PackageSetting" DataBaseType="SqlServer">
      Select PackageSetting.PACKAGESETTINGID, PackageSetting.PACKAGETYPEID, PackageSetting.CARGOTYPEID, Cargotype.CARGOTYPENAME, PackageSetting.CARGOTOPTYPE, PackageSetting.QUANTITY,Cargotype.ISTRACK
      from PackageSetting inner join Cargotype on PackageSetting.PackageTypeID = Cargotype.CargoTypeID where 1=1
    </Content>

    <Content Key="SP_Select_PackageStatic" DataBaseType="SqlServer">
      select PackageStatic.PACKAGESTATICID,PackageStatic.PACKAGESTATICNAME,PackageStatic.CARGOTYPEID,PackageStatic.CONTAINERID,c.CARGOTYPENAME from PackageStatic
      left join CargoType c on c.CargoTypeID = PackageStatic.CargoTypeID where 1=1
    </Content>
    <Content Key="SP_Select_PackageStatic" DataBaseType="Oracle">
      select PackageStatic.PACKAGESTATICID,PackageStatic.PACKAGESTATICNAME,PackageStatic.CARGOTYPEID,PackageStatic.CONTAINERID,c.CARGOTYPENAME from PackageStatic
      left join CargoType c on c.CargoTypeID = PackageStatic.CargoTypeID where 1=1
    </Content>

    <Content Key="QueryPackageStatic" DataBaseType="SqlServer">
      select ps.PACKAGESTATICID,ps.PACKAGESTATICNAME,ps.CARGOTYPEID,ps.CONTAINERID,c.CARGOTYPENAME from PackageStatic ps
      left join CargoType c on c.CargoTypeID = ps.CargoTypeID where c.CARGOTYPENAME = @cargoTypeName
    </Content>
    <Content Key="QueryPackageStatic" DataBaseType="Oracle">
      select ps.PACKAGESTATICID,ps.PACKAGESTATICNAME,ps.CARGOTYPEID,ps.CONTAINERID,c.CARGOTYPENAME from PackageStatic ps
      left join CargoType c on c.CargoTypeID = ps.CargoTypeID where c.CARGOTYPENAME = :cargoTypeName
    </Content>

    <Content Key="QueryPackageStaticBarCode" DataBaseType="SqlServer">
      select pss.PACKAGESTATICID,ps.PACKAGESTATICNAME,pss.STORAGEID,c.CARGOTYPENAME,s.BARCODE,t.KINDNAME
      ,c.AMOUNT,c.FDISINFECTPRICE,c.FWASTAGE,(c.amount/c.FWastage) as FWASTAGEPRICE,((c.amount/c.FWastage)+c.FDisinfectPrice) as BORROWPRICE
      from  PackageStaticSetting pss
      left join PackageStatic ps on ps.PackageStaticID = pss.PackageStaticID
      left join StorageList s on s.StorageID = pss.StorageID
      left join CargoType c on c.CargoTypeID = s.CargoTypeID
      left join VIEW_STORAGELIST t  on t.StorageID = s.StorageID
      where pss.PACKAGESTATICID = @packageStaticID
    </Content>
    <Content Key="QueryPackageStaticBarCode" DataBaseType="Oracle">
      select pss.PACKAGESTATICID,ps.PACKAGESTATICNAME,pss.STORAGEID,c.CARGOTYPENAME,s.BARCODE,t.KINDNAME
      ,c.AMOUNT,c.FDISINFECTPRICE,c.FWASTAGE,(c.amount/c.FWastage) as FWASTAGEPRICE,((c.amount/c.FWastage)+c.FDisinfectPrice) as BORROWPRICE
      from  PackageStaticSetting pss
      left join PackageStatic ps on ps.PackageStaticID = pss.PackageStaticID
      left join StorageList s on s.StorageID = pss.StorageID
      left join CargoType c on c.CargoTypeID = s.CargoTypeID
      left join VIEW_STORAGELIST t  on t.StorageID = s.StorageID
      where pss.packagestaticid = :packageStaticID
    </Content>

    <Content Key="GetAllByStorageBarCode" DataBaseType="SqlServer">
      select t.STORAGEID,t.CARGOTYPENAME,t.KINDNAME,t.BARCODE from VIEW_STORAGELIST t where BarCode in ({0})
    </Content>
    <Content Key="GetAllByStorageBarCode" DataBaseType="Oracle">
      select t.STORAGEID,t.CARGOTYPENAME,t.KINDNAME,t.BARCODE from VIEW_STORAGELIST t where BarCode in ({0})
    </Content>

    <Content Key="QueryPackageStaticAll" DataBaseType="SqlServer">
      select distinct c.CARGOTYPENAME from PackageStatic ps
      left join CargoType c on c.CargoTypeID = ps.CargoTypeID
      where 1=1 {0}
    </Content>
    <Content Key="QueryPackageStaticAll" DataBaseType="Oracle">
      select distinct c.CARGOTYPENAME from PackageStatic ps
      left join CargoType c on c.CargoTypeID = ps.CargoTypeID
      where 1=1 {0}
    </Content>

    <Content Key="Query_IsExistPackageStaticByNameIDA" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM PackageStatic WHERE   PackageStaticName=@PackageStaticName and PackageStaticID <> @PackageStaticID     
      ]]>
    </Content>
    <Content Key="Query_IsExistPackageStaticByNameIDA" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM PackageStatic WHERE   PackageStaticName=:PackageStaticName and PackageStaticID <> :PackageStaticID     
      ]]>
    </Content>

    <Content Key="Query_IsExistPackageStaticByNameIDB" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM PackageStatic WHERE   PackageStaticName=@PackageStaticName     
      ]]>
    </Content>
    <Content Key="Query_IsExistPackageStaticByNameIDB" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM PackageStatic WHERE   PackageStaticName=:PackageStaticName 
      ]]>
    </Content>

    <Content Key="Query_IsExistPackageStaticByContainerID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM PackageStatic WHERE   ContainerID=@ContainerID  and PackageStaticID <> @PackageStaticID
      ]]>
    </Content>
    <Content Key="Query_IsExistPackageStaticByContainerID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM PackageStatic WHERE   ContainerID=:ContainerID  and PackageStaticID <> :PackageStaticID
      ]]>
    </Content>

    <Content Key="GetDefaultPackageStaticName" DataBaseType="SqlServer">
      select @CargoTypeName + cast(isnull(max(SUBSTRING(PackageStaticName, LEN(@CargoTypeName)+1,LEN(PackageStaticName) - LEN(@CargoTypeName)))+1,1) as varchar)
      from PackageStatic
      where PackageStaticName like ''+@CargoTypeName+'%'
    </Content>

    <Content Key="GetDefaultPackageStaticName" DataBaseType="Oracle">
      select :CargoTypeName || to_char(nvl(max(SUBSTR(PackageStaticName, length(:CargoTypeName)+1,length(PackageStaticName) - length(:CargoTypeName)))+1,1) )
      from PackageStatic
      where PackageStaticName like ''||:CargoTypeName||'%'
    </Content>

    <Content Key="Query_GetPssAllByStorageBarCodea" DataBaseType="SqlServer">
      select pss.PACKAGESTATICID,pss.STORAGEID,pss.BARCODE from PackageStaticSetting pss where BarCode in ({0})
    </Content>
    <Content Key="Query_GetPssAllByStorageBarCodea" DataBaseType="Oracle">
      select pss.PACKAGESTATICID,pss.STORAGEID,pss.BARCODE from PackageStaticSetting pss where BarCode in ({0})
    </Content>

    <Content Key="Query_PackageType" DataBaseType="SqlServer">
      SELECT PACKAGETYPE.PTYPEID
      ,PACKAGETYPE.PNAME
      ,PACKAGETYPE.PDAYS
      ,PACKAGETYPE.PWDAYS
      ,PACKAGETYPE.NEEDPACK
      ,PACKAGETYPE.ISDISABLED
      ,PACKAGETYPE.CARGOIMAGE
      ,PACKAGETYPE.MODIFIER
      ,PACKAGETYPE.MODIFYTIME
      ,PACKAGETYPE.REMARK
      ,PACKAGETYPE.CODE
      ,PACKAGETYPE.PINYIN
      FROM PACKAGETYPE WITH (NOLOCK) WHERE 1=1
    </Content>
    <Content Key="Query_PackageType" DataBaseType="Oracle">
      SELECT PACKAGETYPE.PTYPEID
      ,PACKAGETYPE.PNAME
      ,PACKAGETYPE.PDAYS
      ,PACKAGETYPE.PWDAYS
      ,PACKAGETYPE.NEEDPACK
      ,PACKAGETYPE.ISDISABLED
      ,PACKAGETYPE.CARGOIMAGE
      ,PACKAGETYPE.MODIFIER
      ,PACKAGETYPE.MODIFYTIME
      ,PACKAGETYPE.REMARK
      ,PACKAGETYPE.CODE
      ,PACKAGETYPE.PINYIN
      FROM PACKAGETYPE  WHERE 1=1
    </Content>

    <Content Key="Query_PackageTypeIsExistByNameID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM PACKAGETYPE WHERE   PNAME=@pName   AND (ISDISABLED=0 OR ISDISABLED IS NULL) and PTypeID <> @PTypeID
      ]]>
    </Content>
    <Content Key="Query_PackageTypeIsExistByNameID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM PACKAGETYPE WHERE   PNAME=:pName   AND (ISDISABLED=0 OR ISDISABLED IS NULL) and PTypeID <> :PTypeID
      ]]>
    </Content>

    <Content Key="Query_GetPackageByNameA" DataBaseType="SqlServer">
      SELECT PTYPEID
      ,PNAME
      ,CARGOIMAGE
      ,PDAYSTYPE
      ,PDAYS
      ,CODE
      ,PWDAYS
      ,ApprovalNum,ApprovalValidDateFrom,ApprovalValidDateTo
      ,NEEDPACK,REMARK,CARGOIMAGE,PINYIN FROM PACKAGETYPE WITH (NOLOCK)  WHERE PNAME LIKE '%'+@PName+'%' AND (ISDISABLED=0 OR ISDISABLED IS NULL)
    </Content>
    <Content Key="Query_GetPackageByNameA" DataBaseType="Oracle">
      SELECT PTYPEID
      ,PNAME
      ,CARGOIMAGE
      ,PDAYSTYPE
      ,PDAYS
      ,CODE
      ,PWDAYS
      ,ApprovalNum,ApprovalValidDateFrom,ApprovalValidDateTo
      ,NEEDPACK,REMARK,CARGOIMAGE,PINYIN FROM PACKAGETYPE   WHERE PNAME LIKE '%'||:PName||'%' AND (ISDISABLED=0 OR ISDISABLED IS NULL)
    </Content>

    <Content Key="Query_GetPackageByNameB" DataBaseType="SqlServer">
      SELECT PTYPEID
      ,PNAME
      ,PDAYSTYPE
      ,PDAYS
      ,PWDAYS
      ,CODE
      ,ApprovalNum,ApprovalValidDateFrom,ApprovalValidDateTo
      ,NEEDPACK,REMARK,CARGOIMAGE,PINYIN FROM PACKAGETYPE  WHERE ISDISABLED=0 OR ISDISABLED IS NULL
    </Content>
    <Content Key="Query_GetPackageByNameB" DataBaseType="Oracle">
      SELECT PTYPEID
      ,PNAME
      ,PDAYSTYPE
      ,PDAYS
      ,PWDAYS
      ,CODE
      ,ApprovalNum,ApprovalValidDateFrom,ApprovalValidDateTo
      ,NEEDPACK,REMARK,CARGOIMAGE,PINYIN FROM PACKAGETYPE  WHERE ISDISABLED=0 OR ISDISABLED IS NULL
    </Content>

    <Content Key="Query_PackageTypeAll" DataBaseType="SqlServer">
      SELECT PTYPEID
      ,PNAME
      ,PDAYSTYPE
      ,PDAYS
      ,PWDAYS
      ,NEEDPACK
      ,ISDISABLED
      ,CARGOIMAGE
      ,MODIFIER
      ,MODIFYTIME
      ,REMARK
      ,PINYIN
      ,CODE FROM PACKAGETYPE WHERE ISDISABLED=0 OR ISDISABLED IS NULL
    </Content>
    <Content Key="Query_PackageTypeAll" DataBaseType="Oracle">
      SELECT PTYPEID
      ,PNAME
      ,PDAYSTYPE
      ,PDAYS
      ,PWDAYS
      ,NEEDPACK
      ,ISDISABLED
      ,CARGOIMAGE
      ,MODIFIER
      ,MODIFYTIME
      ,REMARK
      ,PINYIN
      ,CODE FROM PACKAGETYPE WHERE ISDISABLED=0 OR ISDISABLED IS NULL
    </Content>
    <Content Key="Query_PackageTypeAllForChangeKind" DataBaseType="SqlServer">
      SELECT PTYPEID
      ,PNAME
      ,PDAYSTYPE
      ,case pdaystype when '月' then datediff(day,GETDATE(),dateadd(MONTH,PDAYS,GETDATE()))   else PDAYS end  AS PDAYS
      ,PWDAYS
      ,NEEDPACK
      ,ISDISABLED
      ,CARGOIMAGE
      ,MODIFIER
      ,MODIFYTIME
      ,REMARK
      ,PINYIN
      ,CODE FROM PACKAGETYPE WHERE ISDISABLED=0 OR ISDISABLED IS NULL
    </Content>
    <Content Key="Query_PackageTypeAllForChangeKind" DataBaseType="Oracle">
      SELECT PTYPEID
      ,PNAME
      ,PDAYSTYPE
      ,case pdaystype when '月' then add_months(sysdate,PDAYS)-sysdate   else PDAYS end  AS PDAYS
      ,PWDAYS
      ,NEEDPACK
      ,ISDISABLED
      ,CARGOIMAGE
      ,MODIFIER
      ,MODIFYTIME
      ,REMARK
      ,PINYIN
      ,CODE FROM PACKAGETYPE WHERE ISDISABLED=0 OR ISDISABLED IS NULL
    </Content>
    <Content Key="SP_Select_PermanentSupply" DataBaseType="SqlServer">
      SELECT
      PermanentSupply.PermanentID,
      PermanentSupply.OrgID,
      PermanentSupply.CargoTypeID,
      PermanentSupply.PermanentQty,
      PermanentSupply.StorageQty,
      PermanentSupply.AfterTime,
      PermanentSupply.IsAutoEnable,
      PermanentSupply.ExecuteCount,
      PermanentSupply.CreateDate,
      PermanentSupply.CreateBy,
      AC_Org.name As OrgName,
      CargoType.CargoTypeName AS CargoTypeName,
      CreateName.Name AS CreateByName,
      IsAutoEnable.TypeName AS IsAutoEnableName
      FROM
      PermanentSupply
      LEFT JOIN SystemTypeParameter IsAutoEnable on(IsAutoEnable.TypeKey='PermanentIsAutoEnable' and PermanentSupply.IsAutoEnable=IsAutoEnable.TypeValue)
      LEFT JOIN AC_User CreateName on(CreateName.ID=PermanentSupply.CreateBy)
      LEFT JOIN AC_Org  on (AC_Org.ID=PermanentSupply.OrgID)
      LEFT JOIN CargoType  on(CargoType.CargoTypeID=PermanentSupply.CargoTypeID)
      WHERE
      1 = 1
    </Content>
    <Content Key="SP_Select_PermanentSupply" DataBaseType="Oracle">
      SELECT
      PermanentSupply.PermanentID,
      PermanentSupply.OrgID,
      PermanentSupply.CargoTypeID,
      PermanentSupply.PermanentQty,
      PermanentSupply.StorageQty,
      PermanentSupply.AfterTime,
      PermanentSupply.IsAutoEnable,
      PermanentSupply.ExecuteCount,
      PermanentSupply.CreateDate,
      PermanentSupply.CreateBy,
      AC_Org.name As OrgName,
      CargoType.CargoTypeName AS CargoTypeName,
      CreateName.Name AS CreateByName,
      IsAutoEnable.TypeName AS IsAutoEnableName
      FROM
      PermanentSupply
      LEFT JOIN SystemTypeParameter IsAutoEnable on(IsAutoEnable.TypeKey='PermanentIsAutoEnable' and PermanentSupply.IsAutoEnable=IsAutoEnable.TypeValue)
      LEFT JOIN AC_User CreateName on(CreateName.ID=PermanentSupply.CreateBy)
      LEFT JOIN AC_Org  on (AC_Org.ID=PermanentSupply.OrgID)
      LEFT JOIN CargoType  on(CargoType.CargoTypeID=PermanentSupply.CargoTypeID)
      WHERE
      1 = 1
    </Content>

    <Content Key="SP_Query_PermanentSupply" DataBaseType="SqlServer">
      SELECT
      PermanentSupply.PermanentID,
      PermanentSupply.OrgID,
      PermanentSupply.CargoTypeID,
      PermanentSupply.PermanentQty,
      PermanentSupply.StorageQty,
      PermanentSupply.AfterTime,
      PermanentSupply.IsAutoEnable,
      PermanentSupply.ExecuteCount,
      PermanentSupply.CreateDate,
      PermanentSupply.CreateBy,
      AC_Org.Name AS OrgName,
      CargoType.CargoTypeName AS CargoTypeName,
      IsAutoEnable.TypeName AS IsAutoEnableName,
      AC_User.Name AS CreateByName
      FROM PermanentSupply
      LEFT JOIN AC_Org
      ON PermanentSupply.OrgID = AC_Org.ID
      LEFT JOIN CargoType
      ON PermanentSupply.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter IsAutoEnable on(IsAutoEnable.TypeKey='PermanentIsAutoEnable' and PermanentSupply.IsAutoEnable=IsAutoEnable.TypeValue)
      LEFT JOIN AC_User  on(AC_User.ID=PermanentSupply.CreateBy)
      WHERE 1 = 1
    </Content>
    <Content Key="SP_Query_PermanentSupply" DataBaseType="Oracle">
      SELECT
      PermanentSupply.PermanentID,
      PermanentSupply.OrgID,
      PermanentSupply.CargoTypeID,
      PermanentSupply.PermanentQty,
      PermanentSupply.StorageQty,
      PermanentSupply.AfterTime,
      PermanentSupply.IsAutoEnable,
      PermanentSupply.ExecuteCount,
      PermanentSupply.CreateDate,
      PermanentSupply.CreateBy,
      AC_Org.Name AS OrgName,
      CargoType.CargoTypeName AS CargoTypeName,
      IsAutoEnable.TypeName AS IsAutoEnableName,
      AC_User.Name AS CreateByName
      FROM PermanentSupply
      LEFT JOIN AC_Org
      ON PermanentSupply.OrgID = AC_Org.ID
      LEFT JOIN CargoType
      ON PermanentSupply.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter IsAutoEnable on(IsAutoEnable.TypeKey='PermanentIsAutoEnable' and PermanentSupply.IsAutoEnable=IsAutoEnable.TypeValue)
      LEFT JOIN AC_User  on(AC_User.ID=PermanentSupply.CreateBy)
      WHERE 1 = 1
    </Content>

    <Content Key="Query_GetSuppliers" DataBaseType="SqlServer">
      SELECT SUPPLIERID
      ,NAME
      ,ADDR
      ,POSTCODE
      ,DESCRIPTION
      ,TEL
      ,FAX
      ,LASTMODIFYTIME
      ,LASTMODIFIER
      ,ISDISABLED
      ,CONTACT
      ,CONTACTTEL
      ,CODE
      ,PINYIN
      FROM SUPPLIER  WHERE ISDISABLED=0
    </Content>
    <Content Key="Query_GetSuppliers" DataBaseType="Oracle">
      SELECT SUPPLIERID
      ,NAME
      ,ADDR
      ,POSTCODE
      ,DESCRIPTION
      ,TEL
      ,FAX
      ,LASTMODIFYTIME
      ,LASTMODIFIER
      ,ISDISABLED
      ,CONTACT
      ,CONTACTTEL
      ,CODE
      ,PINYIN
      FROM SUPPLIER  WHERE ISDISABLED=0
    </Content>

    <Content Key="Query_GetSupplierBySql" DataBaseType="SqlServer">
      SELECT SUPPLIERID
      ,CODE
      ,NAME
      ,ADDR
      ,POSTCODE
      ,DESCRIPTION
      ,TEL
      ,FAX
      ,CONTACT
      ,CONTACTTEL
      ,PINYIN
      FROM SUPPLIER WHERE ISDISABLED=0
    </Content>
    <Content Key="Query_GetSupplierBySql" DataBaseType="Oracle">
      SELECT SUPPLIERID
      ,CODE
      ,NAME
      ,ADDR
      ,POSTCODE
      ,DESCRIPTION
      ,TEL
      ,FAX
      ,CONTACT
      ,CONTACTTEL
      ,PINYIN
      FROM SUPPLIER WHERE ISDISABLED=0
    </Content>

    <Content Key="Query_IsExistSupplierBySql" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM SUPPLIER WHERE  ISDISABLED=0 AND   NAME = @name  and ( IsDisabled is null or IsDisabled=0)  and SupplierID <> @SupplierID
      ]]>
    </Content>
    <Content Key="Query_IsExistSupplierBySql" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM SUPPLIER WHERE  ISDISABLED=0 AND   NAME = :name  and ( IsDisabled is null or IsDisabled=0)  and SupplierID <> :SupplierID
      ]]>
    </Content>

    <Content Key="GetSupplierManufacturersBySupplierID" DataBaseType="SqlServer">
      SELECT SUPPLIERMANUFACTURERS.SUPPLIERID
      ,SUPPLIERMANUFACTURERS.MANUFACTURERID,MANUFACTURER.NAME
      FROM SUPPLIERMANUFACTURERS
      INNER JOIN MANUFACTURER  ON SUPPLIERMANUFACTURERS.MANUFACTURERID =MANUFACTURER.MANUFACTURERID
      WHERE SUPPLIERMANUFACTURERS.SUPPLIERID =@supplierID
    </Content>
    <Content Key="GetSupplierManufacturersBySupplierID" DataBaseType="Oracle">
      SELECT SUPPLIERMANUFACTURERS.SUPPLIERID
      ,SUPPLIERMANUFACTURERS.MANUFACTURERID,MANUFACTURER.NAME
      FROM SUPPLIERMANUFACTURERS
      INNER JOIN MANUFACTURER  ON SUPPLIERMANUFACTURERS.MANUFACTURERID =MANUFACTURER.MANUFACTURERID
      WHERE SUPPLIERMANUFACTURERS.SUPPLIERID =:supplierID
    </Content>

    <Content Key="Query_GetSupplierProductsByID" DataBaseType="SqlServer">
      SELECT A.CARGOTYPEID,CARGOTYPENAME as CARGOTOPTYPE,TYPENAME as CARGOTYPENAME ,A.SUPPLIERID,A.SUPPLIERPID FROM SUPPLIERPRODUCTS  A
      INNER JOIN CARGOTYPE  B
      ON
      A.CARGOTYPEID=B.CARGOTYPEID
      INNER JOIN SYSTEMTYPEPARAMETER  C
      ON
      B.CARGOTOPTYPE=C.TYPEVALUE
      WHERE C.TYPEKEY='CargoTopType' AND A.SUPPLIERID = @SupplierID
    </Content>
    <Content Key="Query_GetSupplierProductsByID" DataBaseType="Oracle">
      SELECT A.CARGOTYPEID,CARGOTYPENAME as CARGOTOPTYPE,TYPENAME as CARGOTYPENAME ,A.SUPPLIERID,A.SUPPLIERPID FROM SUPPLIERPRODUCTS  A
      INNER JOIN CARGOTYPE  B
      ON
      A.CARGOTYPEID=B.CARGOTYPEID
      INNER JOIN SYSTEMTYPEPARAMETER  C
      ON
      B.CARGOTOPTYPE=C.TYPEVALUE
      WHERE C.TYPEKEY='CargoTopType' AND A.SUPPLIERID = :SupplierID
    </Content>

    <Content Key="Query_SupplierProductsBySupplierID" DataBaseType="SqlServer">
      SELECT SUPPLIERPID
      , SUPPLIERID
      , CARGOTYPEID, CARGOTYPE.CARGOTYPENAME,CARGOTYPE.CARGOTOPTYPE
      FROM SUPPLIERPRODUCTS
      INNER JOIN CARGOTYPE ON SUPPLIERPRODUCTS.CARGOTYPEID =CARGOTYPE.CARGOTYPEID
      WHERE SUPPLIERID = @SupplierID
    </Content>
    <Content Key="Query_SupplierProductsBySupplierID" DataBaseType="Oracle">
      SELECT SUPPLIERPID
      , SUPPLIERID
      , CARGOTYPEID, CARGOTYPE.CARGOTYPENAME,CARGOTYPE.CARGOTOPTYPE
      FROM SUPPLIERPRODUCTS
      INNER JOIN CARGOTYPE ON SUPPLIERPRODUCTS.CARGOTYPEID =CARGOTYPE.CARGOTYPEID
      WHERE SUPPLIERID = :SupplierID
    </Content>

    <Content Key="Query_GetSysLogBySql" DataBaseType="SqlServer">
      select b.FNames NAME,a.LOGTIME,a.LOGTYPE,a.CONTENT
      from SysLog a   inner join AC_WorkGroup b   on a.Operator=b.FID
      where LogLevel = 1
    </Content>
    <Content Key="Query_GetSysLogBySql" DataBaseType="Oracle">
      select b.FNames NAME,a.LOGTIME,a.LOGTYPE,a.CONTENT
      from SysLog a   inner join AC_WorkGroup b   on a.Operator=b.FID
      where LogLevel = 1
    </Content>

    <Content Key="Query_SysLog" DataBaseType="SqlServer">
      select t2.FNames NAME,t1.LOGTIME,t1.LOGTYPE,t1.CONTENT,t1.KeyID2
      from SysLog t1 with (nolock)
      inner join AC_WorkGroup t2 with (nolock) on t1.Operator=t2.FID
      where  1=1 {0}
    </Content>
    <Content Key="Query_SysLog" DataBaseType="Oracle">
      select t2.FNames NAME,t1.LOGTIME,t1.LOGTYPE,t1.CONTENT,t1.KeyID2
      from SysLog t1
      inner join AC_WorkGroup t2  on t1.Operator=t2.FID
      where  1=1 {0}
    </Content>

    <Content Key="Query_SysLogGetRecoverRecord" DataBaseType="SqlServer">
      <![CDATA[
      select top 1 Content,AC_WorkGroup.FNames Name,SysLog.LogTime from syslog
      inner join AC_WorkGroup on SysLog.Operator=AC_WorkGroup.FID
      inner join FlowRecycle on SysLog.KeyID1=FlowRecycle.FRecycleID
      inner join Container on FlowRecycle.FRecycleID=Container.FRecycleID
      where LogType= 0 and Container.BarCode=@Number and SysLog.LogTime >= DATEADD(day,-1,getdate())
      union all
      select distinct Content,AC_WorkGroup.FNames Name,SysLog.LogTime
      from syslog
      inner join AC_WorkGroup on SysLog.Operator=AC_WorkGroup.FID
      inner join FlowDisinfectContainerList on FlowDisinfectContainerList.DeviceLogID=SysLog.KeyID1
      inner join Container on FlowDisinfectContainerList.ContainerID=Container.ContainerID
      inner join FlowRecycle on FlowRecycle.FRecycleID=FlowDisinfectContainerList.FRecycleID
      where LogType= 1 and Container.BarCode=@Number and SysLog.LogTime >= DATEADD(day,-1,getdate())
      ]]>
    </Content>
    <Content Key="Query_SysLogGetRecoverRecord" DataBaseType="Oracle">
      <![CDATA[
      select  Content,AC_WorkGroup.FNames Name,SysLog.LogTime from syslog
      inner join AC_WorkGroup on SysLog.Operator=AC_WorkGroup.FID
      inner join FlowRecycle on SysLog.KeyID1=FlowRecycle.FRecycleID
      inner join Container on FlowRecycle.FRecycleID=Container.FRecycleID
      where rownum<2 and  LogType= 0 and Container.BarCode=@Number and SysLog.LogTime >= to_date(sysdate)-1
      union all
      select distinct Content,AC_WorkGroup.Name,SysLog.LogTime
      from syslog
      inner join AC_WorkGroup on SysLog.Operator=AC_WorkGroup.FID
      inner join FlowDisinfectContainerList on FlowDisinfectContainerList.DeviceLogID=SysLog.KeyID1
      inner join Container on FlowDisinfectContainerList.ContainerID=Container.ContainerID
      inner join FlowRecycle on FlowRecycle.FRecycleID=FlowDisinfectContainerList.FRecycleID
      where LogType= 1 and Container.BarCode=@Number and SysLog.LogTime >= to_date(sysdate)-1
      ]]>
    </Content>

    <Content Key="Query_SystemSettingBySystemSettingType" DataBaseType="SqlServer">
      Select ID,TYPE,NAME ,VALUE,REMARK from SystemSetting   where Type=@systemSettingType
    </Content>
    <Content Key="Query_SystemSettingBySystemSettingType" DataBaseType="Oracle">
      Select ID,TYPE,NAME ,VALUE,REMARK from SystemSetting   where Type=:systemSettingType
    </Content>

    <Content Key="SP_Query_SystemTypeParameter" DataBaseType="SqlServer">
      SELECT
      SystemTypeParameter.TypeID,
      SystemTypeParameter.TypeKey,
      SystemTypeParameter.TypeValue,
      SystemTypeParameter.TypeName,
      SystemTypeParameter.TypeRemark,
      SystemTypeParameter.OrderBy
      FROM SystemTypeParameter
      WHERE 1 = 1 order by typekey,orderby
    </Content>
    <Content Key="SP_Query_SystemTypeParameter" DataBaseType="Oracle">
		SELECT
		SystemTypeParameter.TypeID,
		SystemTypeParameter.TypeKey,
		SystemTypeParameter.TypeValue,
		SystemTypeParameter.TypeName,
		SystemTypeParameter.TypeRemark,
		SystemTypeParameter.OrderBy
		FROM SystemTypeParameter
		WHERE 1 = 1 order by typekey,orderby
	</Content>

    <Content Key="Query_GetWareHouseByCondition" DataBaseType="SqlServer">
      select WAREHOUSEID
      ,WAREHOUSENAME
      ,ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,STORAGETYPE
      ,WAREHOUSE.CODE
      ,WAREHOUSE.CANOPERATESTORAGEIN
      ,WAREHOUSE.CANOPERATEFLOW
      ,WAREHOUSE.ISDISABLED
      ,NOBACTERIA
      ,MODIFIER
      ,MODIFYTIME
      ,Warehouse.REMARK
      ,Warehouse.PINYIN
      from Warehouse  with (nolock) left join AC_Org with (nolock)  on Warehouse.OrgID = AC_Org.ID
      WHERE  1=1 AND (WAREHOUSE.ISDISABLED=0 OR WAREHOUSE.ISDISABLED IS NULL)
    </Content>
    <Content Key="Query_GetWareHouseByCondition" DataBaseType="Oracle">
      select WAREHOUSEID
      ,WAREHOUSENAME
      ,ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,STORAGETYPE
      ,WAREHOUSE.CODE
      ,WAREHOUSE.CANOPERATESTORAGEIN
      ,WAREHOUSE.CANOPERATEFLOW
      ,WAREHOUSE.ISDISABLED
      ,NOBACTERIA
      ,MODIFIER
      ,MODIFYTIME
      ,Warehouse.REMARK
      ,Warehouse.PINYIN
      from Warehouse  left join AC_Org  on Warehouse.OrgID = AC_Org.ID
      WHERE  1=1 AND (WAREHOUSE.ISDISABLED=0 OR WAREHOUSE.ISDISABLED IS NULL)
    </Content>

    <Content Key="Query_GetWarehouseByBarcode" DataBaseType="SqlServer">
      SELECT *
      FROM WAREHOUSE
      WHERE CODE = @BARCODE
    </Content>
    <Content Key="Query_GetWarehouseByBarcode" DataBaseType="Oracle">
      SELECT *
      FROM WAREHOUSE
      WHERE CODE = :BARCODE
    </Content>
	  <Content Key="Query_GetWarehouseByOrgID" DataBaseType="SqlServer">
		  SELECT *
		  FROM WAREHOUSE
		  WHERE orgid = @orgid
	  </Content>
	  <Content Key="Query_GetWarehouseByOrgID" DataBaseType="Oracle">
		  SELECT *
		  FROM WAREHOUSE
		  WHERE orgid = :orgid
	  </Content>
    <Content Key="Select_WarehouseCnt" DataBaseType="SqlServer">
      select count(1) from Warehouse    where (WAREHOUSE.ISDISABLED=0 OR WAREHOUSE.ISDISABLED IS NULL) and code=@code
    </Content>
    <Content Key="Select_WarehouseCnt" DataBaseType="Oracle">
      select count(1) from Warehouse    where (WAREHOUSE.ISDISABLED=0 OR WAREHOUSE.ISDISABLED IS NULL) and code=:code
    </Content>

    <Content Key="Select_IsExist" DataBaseType="SqlServer">
      <![CDATA[select count(1) from Warehouse with (nolock)  where  (IsDisabled=0 or ISDISABLED IS NULL)  and    WarehouseName=@WarehouseName and OrgID=@orgID  and WarehouseID <> @WarehouseID
      ]]>
    </Content>
    <Content Key="Select_IsExist" DataBaseType="Oracle">
      <![CDATA[
      select count(1) from Warehouse  where  (IsDisabled=0 or ISDISABLED IS NULL)  and    WarehouseName=:WarehouseName and OrgID=:orgID and WarehouseID <> :WarehouseID   
      ]]>
    </Content>

    <Content Key="Select_GetStorageByConditionByName" DataBaseType="SqlServer">
      select WAREHOUSEID
      ,WAREHOUSENAME
      ,ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,STORAGETYPE
      ,Warehouse.CODE
      ,Warehouse.CANOPERATESTORAGEIN
      ,Warehouse.CANOPERATEFLOW
      ,ISDISABLED
      ,NOBACTERIA
      ,MODIFIER
      ,MODIFYTIME
      ,Warehouse.REMARK from Warehouse  with (nolock) left join AC_Org  with (nolock) on Warehouse.OrgID = AC_Org.ID  where  Warehouse.IsDisabled=0 and  ( Warehouse.WarehouseName like '%'+@WarehouseName+'%' or @WarehouseName is null or len(@WarehouseName)=0)
    </Content>
    <Content Key="Select_GetStorageByConditionByName" DataBaseType="Oracle">
      select WAREHOUSEID
      ,WAREHOUSENAME
      ,ORGID
      ,AC_ORG.NAME AS ORGNAME
      ,STORAGETYPE
      ,Warehouse.CODE
      ,Warehouse.CANOPERATESTORAGEIN
      ,Warehouse.CANOPERATEFLOW
      ,ISDISABLED
      ,NOBACTERIA
      ,MODIFIER
      ,MODIFYTIME
      ,Warehouse.REMARK from Warehouse left join AC_Org  on Warehouse.OrgID = AC_Org.ID  where  Warehouse.IsDisabled=0 and  ( Warehouse.WarehouseName like '%'||:WarehouseName||'%' or :WarehouseName is null or len(:WarehouseName)=0)
    </Content>

    <Content Key="Select_DefaultStorage" DataBaseType="SqlServer">
      <![CDATA[
      select WarehouseID from Warehouse    where  IsDisabled=0 and OrgID = @OrgID and  StorageType & @CargoTopType = @CargoTopType and NoBacteria =@NoBacteria
      ]]>
    </Content>
    <Content Key="Select_DefaultStorage" DataBaseType="Oracle">
      select WarehouseID from Warehouse    where  IsDisabled=0 and OrgID = :OrgID and bitand(StorageType, :CargoTopType) = :CargoTopType and NoBacteria =:NoBacteria
    </Content>

    <Content Key="Select_WarehouseGetStorageByOrgID" DataBaseType="SqlServer">
      select WAREHOUSEID
      , WAREHOUSENAME
      , ORGID
      ,AC_Org.Name as ORGNAME
      , STORAGETYPE
      ,Warehouse.CODE
      ,Warehouse.CANOPERATESTORAGEIN
      ,Warehouse.CANOPERATEFLOW
      , Warehouse.ISDISABLED
      ,NOBACTERIA
      , MODIFIER
      , MODIFYTIME
      ,Warehouse.REMARK
      from Warehouse left join AC_Org  on Warehouse.OrgID = AC_Org.ID
      Where (Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null) and  Warehouse.OrgID=@orgID
    </Content>
    <Content Key="Select_WarehouseGetStorageByOrgID" DataBaseType="Oracle">
      select WAREHOUSEID
      , WAREHOUSENAME
      , ORGID
      ,AC_Org.Name as ORGNAME
      , STORAGETYPE
      ,Warehouse.CODE
      ,Warehouse.CANOPERATESTORAGEIN
      ,Warehouse.CANOPERATEFLOW
      , Warehouse.ISDISABLED
      ,NOBACTERIA
      , MODIFIER
      , MODIFYTIME
      ,Warehouse.REMARK
      from Warehouse left join AC_Org  on Warehouse.OrgID = AC_Org.ID
      Where (Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null) and  Warehouse.OrgID=:orgID
    </Content>

    <Content Key="Select_WarehouseGetWarehouseByOrgID" DataBaseType="SqlServer">
      select WAREHOUSEID as Value
      , WAREHOUSENAME as Name
      from Warehouse left join AC_Org   on Warehouse.OrgID = AC_Org.ID
      Where (Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null) and  Warehouse.OrgID=@orgID
    </Content>
    <Content Key="Select_WarehouseGetWarehouseByOrgID" DataBaseType="Oracle">
      select WAREHOUSEID as Value
      , WAREHOUSENAME as Name
      from Warehouse left join AC_Org   on Warehouse.OrgID = AC_Org.ID
      Where (Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null) and  Warehouse.OrgID=:orgID
    </Content>

    <Content Key="Select_WarehouseGetWarehouseByOrgIDs" DataBaseType="SqlServer">
      select  WAREHOUSEID as Value
      , WAREHOUSENAME as Name
      from Warehouse
      Where (Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null) and Warehouse.OrgID=@OrgID
    </Content>

    <Content Key="Select_WarehouseGetWarehouseByOrgIDs" DataBaseType="Oracle">
      select  WAREHOUSEID as Value
      , WAREHOUSENAME as Name
      from Warehouse
      Where (Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null) and Warehouse.OrgID=:OrgID
    </Content>

    <Content Key="Select_WarehouseGetWarehouseByLoginName" DataBaseType="SqlServer">
      select  WAREHOUSEID as Value
      , WAREHOUSENAME as Name
      from Warehouse left join AC_Org   on Warehouse.OrgID = AC_Org.ID
      left join AC_OrgUser  on AC_Org.ID=AC_OrgUser.OrgID
      left join AC_User on AC_OrgUser.UserID=AC_User.ID
      Where (Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null) and AC_User.LoginName=@LoginName
    </Content>

    <Content Key="Select_WarehouseGetWarehouseByLoginName" DataBaseType="Oracle">
      select  WAREHOUSEID as Value
      , WAREHOUSENAME as Name
      from Warehouse left join AC_Org   on Warehouse.OrgID = AC_Org.ID
      left join AC_OrgUser  on AC_Org.ID=AC_OrgUser.OrgID
      left join AC_User on AC_OrgUser.UserID=AC_User.ID
      Where (Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null) and AC_User.LoginName=:LoginName
    </Content>

    <Content Key="Select_WarehouseTreeData" DataBaseType="SqlServer">
      SELECT WarehouseID AS ID
      ,WarehouseName AS NAME
      ,OrgID AS PREVID
      FROM Warehouse  with (nolock)
      INNER JOIN (SELECT ID
      ,NAME
      ,ISNULL(PrevID,'00000000-0000-0000-0000-000000000000') AS PREVID
      FROM AC_Org  with (nolock)
      WHERE CanOperateStorageIn=1 OR CanOperateFlow=1)  Org
      ON Warehouse.OrgID = Org.ID
      WHERE  Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null
      UNION
      SELECT ID
      ,NAME
      ,ISNULL(PrevID,'00000000-0000-0000-0000-000000000000') AS PREVID
      FROM AC_Org with (nolock)
      WHERE (CanOperateStorageIn=1 OR CanOperateFlow=1) AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
      UNION
      SELECT '00000000-0000-0000-0000-000000000000','科室部门',NULL AS PREVID
    </Content>
    <Content Key="Select_WarehouseTreeData" DataBaseType="Oracle">
      SELECT WarehouseID AS ID,to_char(WarehouseName) AS NAME,OrgID AS PREVID
      FROM Warehouse
      INNER JOIN
      (SELECT ID
      ,NAME
      ,nvl(PrevID,'00000000-0000-0000-0000-000000000000') AS PREVID
      FROM AC_Org
      WHERE CanOperateStorageIn=1 OR CanOperateFlow=1) Org
      ON Warehouse.OrgID = Org.ID
      WHERE  Warehouse.IsDisabled=0 or Warehouse.IsDisabled is null
      UNION
      SELECT ID
      ,NAME
      ,nvl(PrevID,'00000000-0000-0000-0000-000000000000') AS PREVID
      FROM AC_Org
      WHERE (CanOperateStorageIn=1 OR CanOperateFlow=1) AND (AC_ORG.ISDISABLED=0 OR AC_ORG.ISDISABLED IS NULL)
      UNION
      SELECT '00000000-0000-0000-0000-000000000000','科室部门','' AS PREVID from dual
    </Content>

    <Content Key="Query_GetSynDataWarehouse" DataBaseType="SqlServer">
      SELECT WAREHOUSEID,WAREHOUSENAME,ORGID,STORAGETYPE,CODE,CANOPERATESTORAGEIN,CANOPERATEFLOW,NOBACTERIA FROM WAREHOUSE WHERE ISDISABLED = 0
    </Content>
    <Content Key="Query_GetSynDataWarehouse" DataBaseType="Oracle">
      SELECT WAREHOUSEID,WAREHOUSENAME,ORGID,STORAGETYPE,CODE,CANOPERATESTORAGEIN,CANOPERATEFLOW,NOBACTERIA FROM WAREHOUSE WHERE ISDISABLED = 0
    </Content>

    <Content Key="Select_GetLocationInfo" DataBaseType="SqlServer">
      Select t1.LocationID,t1.LocationName,t1.BarCode,t1.WarehouseID,t2.WarehouseName,t1.OrgID,t3.Name As FOrgName,t3.Code As FOrgBarcode
      From Location t1
      Inner Join Warehouse t2 On t2.WarehouseID=t1.WarehouseID
      Inner Join AC_Org t3 On t3.ID=t1.OrgID
      Where t1.BarCode=@Barcode
    </Content>
    <Content Key="Select_GetLocationInfo" DataBaseType="Oracle">
      Select t1.LocationID,t1.LocationName,t1.BarCode,t1.WarehouseID,t2.WarehouseName,t1.OrgID,t3.Name As FOrgName,t3.Code As FOrgBarcode
      From Location t1
      Inner Join Warehouse t2 On t2.WarehouseID=t1.WarehouseID
      Inner Join AC_Org t3 On t3.ID=t1.OrgID
      Where t1.BarCode=:Barcode
    </Content>

    <Content Key="Select_prefixCode" DataBaseType="SqlServer">
      select * from autocode where prefixCode=@prefixCode
    </Content>
    <Content Key="Select_prefixCode" DataBaseType="Oracle">
		select * from autocode where prefixCode=:prefixCode for update
	</Content>
    <Content Key="Select_AC_RoleByName" DataBaseType="Oracle">
      SELECT ID
      , NAME
      , REMARK ,PINYIN  FROM AC_ROLE     WHERE (AC_ROLE.ISDISABLED =0 OR AC_ROLE.ISDISABLED IS NULL) {0}
    </Content>
    <Content Key="Select_AC_RoleByName" DataBaseType="SqlServer">
      SELECT ID
      , NAME
      , REMARK,PINYIN   FROM AC_ROLE  WITH (NOLOCK)  WHERE (AC_ROLE.ISDISABLED =0 OR AC_ROLE.ISDISABLED IS NULL) {0}
    </Content>

    <Content Key="Query_PatientListEntityByPatientID" DataBaseType="SqlServer">
      select * from  PatientList where PatientID = @pno or MedicalRecordCode = @pno
    </Content>
    <Content Key="Query_PatientListEntityByPatientID" DataBaseType="Oracle">
      select * from  PatientList where PatientID = :pno or MedicalRecordCode = :pno
    </Content>

    <Content Key="Query_PackageCostLevel" DataBaseType="SqlServer">
      SELECT FID,FNAME,FFACTOR,FNOTE,PINYIN,FDISINFECTPRICE,WDISINFECTPRICE,FSTERILIZEPRICE,WSTERILIZEPRICE,FMANPRICE,WMANPRICE FROM PackageCostLevel Where IsNull(FIsDisable,0)=0
    </Content>
    <Content Key="Query_PackageCostLevel" DataBaseType="Oracle">
      SELECT FID,FNAME,FFACTOR,FNOTE,PINYIN,FDISINFECTPRICE,WDISINFECTPRICE,FSTERILIZEPRICE,WSTERILIZEPRICE,FMANPRICE,WMANPRICE FROM PackageCostLevel Where 1=1
    </Content>

    <Content Key="Query_User" DataBaseType="SqlServer">
		SELECT UserTable.ID
		,UserTable.CODE
		,UserTable.NAME
		,UserTable.LOGINNAME
		,UserTable.PASSWORD
		,UserTable.SEX
		,UserTable.MOBILE
		,UserTable.TEL
		,UserTable.EMAIL
		,UserTable.ADDRESS
		,UserTable.PHOTO
		,UserTable.REMARK
		,UserTable.AVAILABLE
		,UserTable.JOBTITLE
		,UserTable.DATEAVAILABLE
		,UserTable.DATEDUTY
		,UserTable.SYNDATAID,UserTable.SYNDATACODE
		,UserTable.PKey
		,UserTable.FlowOrgID
		,UserTable.PINYIN,UserTable.ScheduleDuty
		,Org.ID AS ORGID
		,Org.Name AS ORGTEXT
		,Sex.TypeName AS SEXTEXT
		,Available.TypeName AS AVAILABLETEXT
		FROM AC_User AS UserTable
		LEFT JOIN AC_OrgUser AS OrgUser
		ON UserTable.ID = OrgUser.UserID
		LEFT JOIN AC_Org AS Org
		ON Org.ID = OrgUser.OrgID
		LEFT JOIN SystemTypeParameter Sex ON (Sex.TypeKey = 'Sex' AND Sex.TypeValue = UserTable.Sex)
		LEFT JOIN SystemTypeParameter Available ON (Available.TypeKey = 'Available' AND Available.TypeValue = UserTable.Available)
		WHERE 1 = 1 AND (UserTable.IsDisabled = 0 OR UserTable.IsDisabled IS NULL)
		{0}
	</Content>
    <Content Key="Query_User" DataBaseType="Oracle">
		SELECT UserTable.ID
		,UserTable.CODE
		,UserTable.NAME
		,UserTable.LOGINNAME
		,UserTable.PASSWORD
		,UserTable.SEX
		,UserTable.MOBILE
		,UserTable.TEL
		,UserTable.EMAIL
		,UserTable.ADDRESS
		,UserTable.PHOTO
		,UserTable.REMARK
		,UserTable.AVAILABLE
		,UserTable.JOBTITLE
		,UserTable.DATEAVAILABLE
		,UserTable.DATEDUTY
		,UserTable.SYNDATAID,UserTable.SYNDATACODE
		,UserTable.PKey
		,UserTable.FlowOrgID
		,UserTable.PINYIN,UserTable.ScheduleDuty
		,Org.ID AS ORGID
		,Org.Name AS ORGTEXT
		,Sex.TypeName AS SEXTEXT
		,Available.TypeName AS AVAILABLETEXT
		FROM AC_User   UserTable
		LEFT JOIN AC_OrgUser  OrgUser
		ON UserTable.ID = OrgUser.UserID
		LEFT JOIN AC_Org   Org
		ON Org.ID = OrgUser.OrgID
		LEFT JOIN SystemTypeParameter Sex ON (Sex.TypeKey = 'Sex' AND Sex.TypeValue = UserTable.Sex)
		LEFT JOIN SystemTypeParameter Available ON (Available.TypeKey = 'Available' AND Available.TypeValue = UserTable.Available)
		WHERE 1 = 1 AND (UserTable.IsDisabled = 0 OR UserTable.IsDisabled IS NULL)
		{0}
	</Content>

    <Content Key="QueryRecycleOrder" DataBaseType="SqlServer">
      delete cargotypeorder
      INSERT INTO CargoTypeOrder
      (CargoTypeID,OrgID,RecycleQty)
      SELECT
      FlowPackageList.CargoTypeID,
      Warehouse.OrgID AS RecycleOrg,
      COUNT(1) AS RecycleQty
      FROM FlowRecycleList
      LEFT JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      LEFT JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      WHERE WAREHOUSE.ORGID IS NOT NULL
      GROUP BY
      FlowPackageList.CargoTypeID,
      Warehouse.OrgID
    </Content>
    <Content Key="QueryRecycleOrder" DataBaseType="Oracle">
      begin
      delete cargotypeorder;
      INSERT INTO CargoTypeOrder
      (CargoTypeID,OrgID,RecycleQty)
      SELECT
      FlowPackageList.CargoTypeID,
      Warehouse.OrgID AS RecycleOrg,
      COUNT(1) AS RecycleQty
      FROM FlowRecycleList
      LEFT JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
      LEFT JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
      LEFT JOIN Warehouse ON StorageList.WarehouseID = Warehouse.WarehouseID
      WHERE WAREHOUSE.ORGID IS NOT NULL
      GROUP BY
      FlowPackageList.CargoTypeID,
      Warehouse.OrgID;
      end;
    </Content>

    <Content Key="QuerySafeStock" DataBaseType="SqlServer">
      select p.OrgID
      ,p.OrgText
      ,p.CargoTopTypeText
      ,p.CargoTypeKindText
      ,p.CargoTypeText
      ,ISNULL(SafeStock.BaseQty,0) AS BaseQty
      ,ISNULL(SafeStock.SafeQty,0) AS SafeQty
      ,p.CargoTypeID
      from
      (select distinct FlowProvide.OrgID,FlowPackageList.CargoTypeID,FlowProvide.FlowOrgID
      ,SystemTypeParameter.TypeName as CargoTopTypeText
      ,AC_Org.Name as OrgText
      ,CargoType.CargoTypeName as CargoTypeText
      ,CargoTypeKind.KindName as CargoTypeKindText
      FROM FlowProvide
      INNER JOIN FlowProvideList ON FlowProvideList.ProvideID = FlowProvide.ProvideID
      INNER JOIN FlowPackageList ON FlowPackageList.PackageID = FlowProvideList.PackageID
      inner JOIN CargoType  ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      left JOIN SystemTypeParameter ON CargoType.CargoTopType = SystemTypeParameter.TypeValue AND SystemTypeParameter.TypeKey = 'CargoTopType'
      inner JOIN AC_Org on FlowProvide.OrgID = AC_Org.ID
      left JOIN CargoTypeKind  ON CargoType.CargoTypeKind = CargoTypeKind.ID
      
      ) as p
      left join safeStock  ON  SafeStock.OrgID = p.OrgID AND SafeStock.CargoTypeID = p.CargoTypeID and SafeStock.FlowOrgID = p.FlowOrgID
      WHERE 1 = 1 {0}
      ORDER BY p.OrgText
      ,p.CargoTopTypeText
      ,p.CargoTypeKindText
      ,p.CargoTypeText
    </Content>
    <Content Key="QuerySafeStock" DataBaseType="Oracle">
      select p.OrgID
      ,p.OrgText
      ,p.CargoTopTypeText
      ,p.CargoTypeKindText
      ,p.CargoTypeText
      ,ISNULL(SafeStock.BaseQty,0) AS BaseQty
      ,ISNULL(SafeStock.SafeQty,0) AS SafeQty
      ,p.CargoTypeID
      from
      (select distinct FlowProvide.OrgID,FlowPackageList.CargoTypeID,FlowProvide.FlowOrgID
      ,SystemTypeParameter.TypeName as CargoTopTypeText
      ,AC_Org.Name as OrgText
      ,CargoType.CargoTypeName as CargoTypeText
      ,CargoTypeKind.KindName as CargoTypeKindText
      FROM FlowProvide
      INNER JOIN FlowProvideList ON FlowProvideList.ProvideID = FlowProvide.ProvideID
      INNER JOIN FlowPackageList ON FlowPackageList.PackageID = FlowProvideList.PackageID
      inner JOIN CargoType  ON FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      left JOIN SystemTypeParameter ON CargoType.CargoTopType = SystemTypeParameter.TypeValue AND SystemTypeParameter.TypeKey = 'CargoTopType'
      inner JOIN AC_Org on FlowProvide.OrgID = AC_Org.ID
      left JOIN CargoTypeKind  ON CargoType.CargoTypeKind = CargoTypeKind.ID
      )   p
      left join safeStock  ON  SafeStock.OrgID = p.OrgID AND SafeStock.CargoTypeID = p.CargoTypeID and SafeStock.FlowOrgID = p.FlowOrgID
      WHERE 1 = 1 {0}
      ORDER BY p.OrgText
      ,p.CargoTopTypeText
      ,p.CargoTypeKindText
      ,p.CargoTypeText
    </Content>

    <Content Key="QueryFlowRecycleLineTime" DataBaseType="SqlServer">
      select max(CutOffTime)
      from FlowRecycleLineTime
      where FlowOrgID = @FlowOrgID
    </Content>
    <Content Key="QueryFlowRecycleLineTime" DataBaseType="Oracle">
      select max(CutOffTime)
      from FlowRecycleLineTime
      where FlowOrgID = :FlowOrgID
    </Content>

    <Content Key="Query_CutOffTime" DataBaseType="SqlServer">
      SELECT TOP 20 FR.CutOffTime CUTOFFTIME,AU.FNames NAME,FR.FlowOrgID FLOWORGID
      FROM FlowRecycleLineTime FR
      INNER JOIN AC_WorkGroup AU ON FR.OpID=AU.FID
      WHERE 1=1 {0} ORDER BY FR.CutOffTime DESC
    </Content>
    <Content Key="Query_CutOffTime" DataBaseType="Oracle">
      <![CDATA[
      SELECT FR.CutOffTime CUTOFFTIME,AU.FNames NAME,FR.FlowOrgID FLOWORGID FROM FlowRecycleLineTime FR
      INNER JOIN AC_WorkGroup AU ON FR.OpID=AU.FID
      WHERE rownum<=20 {0} ORDER BY FR.CutOffTime DESC
       ]]>
    </Content>

    <Content Key="Update_FlowRecycleLineTime" DataBaseType="SqlServer">
      UPDATE FlowRecycleLineTime SET CutOffTime= @CutOffTime,OpID= @OpID,FlowOrgID= @FlowOrgID WHERE CONVERT(varchar,CutOffTime,120) like @CutTime+'%'
    </Content>
    <Content Key="Update_FlowRecycleLineTime" DataBaseType="Oracle">
      UPDATE FlowRecycleLineTime SET CutOffTime= :CutOffTime,OpID= :OpID,FlowOrgID= :FlowOrgID WHERE to_char(CutOffTime,'yyyy-mm-dd hh24:mi') like :CutTime||'%'
    </Content>

    <Content Key="Query_IsExistCutOffTime" DataBaseType="SqlServer">
      SELECT COUNT(*) CountTime FROM FlowRecycleLineTime WHERE CONVERT(varchar,CutOffTime,120) like @CutOffTime+'%'
    </Content>
    <Content Key="Query_IsExistCutOffTime" DataBaseType="Oracle">
      SELECT COUNT(*) CountTime FROM FlowRecycleLineTime WHERE to_char(CutOffTime,'yyyy-mm-dd hh24:mi') like :CutOffTime||'%'
    </Content>


    <Content Key="SP_Create_PermanentSupply" DataBaseType="SqlServer">
      INSERT INTO PermanentSupply
      (
      PermanentID,
      OrgID,
      CargoTypeID,
      PermanentQty,
      StorageQty,
      AfterTime,
      IsAutoEnable,
      ExecuteCount,
      CreateDate,
      CreateBy
      ) VALUES (
      @PermanentID,
      @OrgID,
      @CargoTypeID,
      @PermanentQty,
      @StorageQty,
      @AfterTime,
      @IsAutoEnable,
      @ExecuteCount,
      @CreateDate,
      @CreateBy
      )
    </Content>

    <Content Key="SP_Create_PermanentSupply" DataBaseType="Oracle">

      INSERT INTO PermanentSupply
      (
      PermanentID,
      OrgID,
      CargoTypeID,
      PermanentQty,
      StorageQty,
      AfterTime,
      IsAutoEnable,
      ExecuteCount,
      CreateDate,
      CreateBy
      ) VALUES (
      :PermanentID,
      :OrgID,
      :CargoTypeID,
      :PermanentQty,
      :StorageQty,
      :AfterTime,
      :IsAutoEnable,
      :ExecuteCount,
      :CreateDate,
      :CreateBy
      )
    </Content>

    <Content Key="Delete_UserByUserID" DataBaseType="SqlServer">
      DELETE FROM AC_ORGUSER  WHERE AC_ORGUSER.USERID=@UserID
    </Content>
    <Content Key="Delete_UserByUserID" DataBaseType="Oracle">
      DELETE FROM AC_ORGUSER  WHERE AC_ORGUSER.USERID=:UserID
    </Content>

    <Content Key="Delete_AC_ROLEPRIVILEGEByRoleID" DataBaseType="Oracle">
      DELETE FROM AC_ROLEPRIVILEGE WHERE ROLEID=:RoleID
    </Content>
    <Content Key="Delete_AC_ROLEPRIVILEGEByRoleID" DataBaseType="SqlServer">
      DELETE FROM AC_ROLEPRIVILEGE WHERE ROLEID=@RoleID
    </Content>

    <Content Key="Delete_SafeStock" DataBaseType="SqlServer">
      DELETE FROM SafeStock WHERE 1 = 1 {0}
    </Content>
    <Content Key="Delete_SafeStock" DataBaseType="Oracle">
      DELETE FROM SafeStock WHERE 1 = 1 {0}
    </Content>

    <Content Key="Delete_OrgOneProductsByForeignKey" DataBaseType="SqlServer">
      DELETE FROM AC_ORGONEPRODUCTS WHERE ID=@id
    </Content>
    <Content Key="Delete_OrgOneProductsByForeignKey" DataBaseType="Oracle">
      DELETE FROM AC_ORGONEPRODUCTS WHERE ID=:id
    </Content>

    <!--<Content Key="Delete_ACOrgProductsByForeignKey" DataBaseType="SqlServer">
      delete from AC_OrgProducts where ID=@id
    </Content>
    <Content Key="Delete_ACOrgProductsByForeignKey" DataBaseType="Oracle">
      delete from AC_OrgProducts where ID=:id
    </Content>-->

    <Content Key="Delete_SafeStockByForeignKey" DataBaseType="SqlServer">
      delete from SafeStock where OrgID=@OrgID
    </Content>
    <Content Key="Delete_SafeStockByForeignKey" DataBaseType="Oracle">
      delete from SafeStock where OrgID=:OrgID
    </Content>



    <Content Key="Delete_AC_ROLEPRIVILEGEByRoleIDAndPrivilegeID" DataBaseType="SqlServer">
      DELETE FROM AC_ROLEPRIVILEGE WHERE ROLEID=@RoleID  AND PRIVILEGEID=@PrivilegeID
    </Content>
    <Content Key="Delete_AC_ROLEPRIVILEGEByRoleIDAndPrivilegeID" DataBaseType="Oracle">
      DELETE FROM AC_ROLEPRIVILEGE WHERE ROLEID=:RoleID  AND PRIVILEGEID=:PrivilegeID
    </Content>

    <Content Key="DeleteDataFlieMapingByForeignIDAndDataID" DataBaseType="SqlServer">
      DELETE from DATAFILEMAPING WHERE DATAID = @DATAID AND FOREIGNID =  @FOREIGNID
    </Content>
    <Content Key="DeleteDataFlieMapingByForeignIDAndDataID" DataBaseType="Oracle">
      DELETE from DATAFILEMAPING WHERE DATAID = :DATAID AND FOREIGNID =  :FOREIGNID
    </Content>

    <Content Key="Delete_DevmainLogByDeviceID" DataBaseType="SqlServer">
      delete from DevicesMaintainLog where DeviceID=@DeviceID
    </Content>
    <Content Key="Delete_DevmainLogByDeviceID" DataBaseType="Oracle">
      delete from DevicesMaintainLog where DeviceID=:DeviceID
    </Content>

    <Content Key="Delete_InstrumainLogByStorageID" DataBaseType="SqlServer">
      delete from InstrumentMaintainLog where StorageID=@storageID
    </Content>
    <Content Key="Delete_InstrumainLogByStorageID" DataBaseType="Oracle">
      delete from InstrumentMaintainLog where StorageID=:storageID
    </Content>

    <Content Key="Delete_DeviceUsersByDeviceID" DataBaseType="SqlServer">
      delete from DeviceUsers where DeviceID=@DeviceID
    </Content>
    <Content Key="Delete_DeviceUsersByDeviceID" DataBaseType="Oracle">
      delete from DeviceUsers where DeviceID=:DeviceID
    </Content>

    <Content Key="Delete_ManufacturerProductsByID" DataBaseType="SqlServer">
      DELETE FROM MANUFACTURERPRODUCTS WHERE MANUFACTURERID =@ManufacturerID
    </Content>
    <Content Key="Delete_ManufacturerProductsByID" DataBaseType="Oracle">
      DELETE FROM MANUFACTURERPRODUCTS WHERE MANUFACTURERID =:ManufacturerID
    </Content>

    <Content Key="Delete_OperationSettingByID" DataBaseType="SqlServer">
      DELETE FROM OPERATIONSETTING WHERE OperationID=@id
    </Content>
    <Content Key="Delete_OperationSettingByID" DataBaseType="Oracle">
      DELETE FROM OPERATIONSETTING WHERE OperationID=:id
    </Content>

    <Content Key="Delete_PackageSettingByCargoTypeID" DataBaseType="SqlServer">
      delete from PackageSetting where PackageTypeID=@CargoTypeID
    </Content>
    <Content Key="Delete_PackageSettingByCargoTypeID" DataBaseType="Oracle">
      delete from PackageSetting where PackageTypeID=:CargoTypeID
    </Content>
	  <Content Key="Delete_PackageSettingByPackageTypeIDAndCarGotypeID" DataBaseType="SqlServer">
		  delete from PackageSetting where PackageTypeID=@PackageTypeID and CargoTypeID=@CargoTypeID
	  </Content>
	  <Content Key="Delete_PackageSettingByPackageTypeIDAndCarGotypeID" DataBaseType="Oracle">
		  delete from PackageSetting where PackageTypeID=:PackageTypeID and CargoTypeID=:CargoTypeID
	  </Content>
    <Content Key="Delete_PackageStaticByID" DataBaseType="SqlServer">
      delete from PackageStatic where PackageStaticID=@PackageStaticID
    </Content>
    <Content Key="Delete_PackageStaticByID" DataBaseType="Oracle">
      delete from PackageStatic where PackageStaticID=:PackageStaticID
    </Content>

    <Content Key="Delete_PackageStaticSettingByID" DataBaseType="SqlServer">
      delete from PackageStaticSetting where PackageStaticID=@PackageStaticID
    </Content>
    <Content Key="Delete_PackageStaticSettingByID" DataBaseType="Oracle">
      delete from PackageStaticSetting where PackageStaticID=:PackageStaticID
    </Content>

    <Content Key="Delete_SupplierManufacturersByID" DataBaseType="SqlServer">
      delete from SupplierManufacturers where SupplierID=@id
    </Content>
    <Content Key="Delete_SupplierManufacturersByID" DataBaseType="Oracle">
      delete from SupplierManufacturers where SupplierID=:id
    </Content>

    <Content Key="Delete_SupplierProductsByID" DataBaseType="SqlServer">
      delete from SupplierProducts where SupplierID=@id
    </Content>
    <Content Key="Delete_SupplierProductsByID" DataBaseType="Oracle">
      delete from SupplierProducts where SupplierID=:id
    </Content>

    <Content Key="SP_Update_PermanentSupply" DataBaseType="SqlServer">
      UPDATE PermanentSupply SET
      OrgID = @OrgID,
      CargoTypeID = @CargoTypeID,
      PermanentQty = @PermanentQty,
      StorageQty = @StorageQty,
      AfterTime = @AfterTime,
      IsAutoEnable = @IsAutoEnable,
      ExecuteCount = @ExecuteCount,
      CreateDate = @CreateDate,
      CreateBy = @CreateBy
      WHERE
      PermanentID = @PermanentID
    </Content>
    <Content Key="SP_Update_PermanentSupply" DataBaseType="Oracle">
      UPDATE PermanentSupply SET
      OrgID = :OrgID,
      CargoTypeID = :CargoTypeID,
      PermanentQty = :PermanentQty,
      StorageQty = :StorageQty,
      AfterTime = :AfterTime,
      IsAutoEnable = :IsAutoEnable,
      ExecuteCount = :ExecuteCount,
      CreateDate = :CreateDate,
      CreateBy = :CreateBy
      WHERE
      PermanentID = :PermanentID
    </Content>
    <Content Key="SP_Update_SystemSetting" DataBaseType="SqlServer">
      Update SystemSetting Set Type=@Type,Name=@Name,Value=@Value,Remark=@Remark Where ID=@ID
    </Content>
    <Content Key="SP_Update_SystemSetting" DataBaseType="Oracle">
      Update SystemSetting Set Type=:Type,Name=:Name,Value=:Value,Remark=:Remark Where ID=:ID
    </Content>

    <Content Key="Update_Manufacturer" DataBaseType="Oracle">
      UPDATE MANUFACTURER SET ISDISABLED=1 where  1=1
    </Content>
    <Content Key="Update_Manufacturer" DataBaseType="SqlServer">
      UPDATE MANUFACTURER SET ISDISABLED=1  where  1=1

    </Content>

    <Content Key="Update_GetDevicesUnBindBlackboxID" DataBaseType="SqlServer">
      update Devices
      set SmartNodeID = NULL
      Where SmartNodeID = @BlackBoxID
    </Content>
    <Content Key="Update_GetDevicesUnBindBlackboxID" DataBaseType="Oracle">
      update Devices
      set SmartNodeID = NULL
      Where SmartNodeID = :BlackBoxID
    </Content>

    <Content Key="Update_PackageStaticByContainerID" DataBaseType="SqlServer">
      Update PackageStatic
      set Barcode = @Barcode  where ContainerID = @ContainerID
    </Content>
    <Content Key="Update_PackageStaticByContainerID" DataBaseType="Oracle">
      Update PackageStatic
      set Barcode = :Barcode  where ContainerID = :ContainerID
    </Content>

    <Content Key="Update_WarehouseSetDefaultDisabled" DataBaseType="SqlServer">
      update Warehouse set IsDisabled = 1  where Code = @barcode
    </Content>
    <Content Key="Update_WarehouseSetDefaultDisabled" DataBaseType="Oracle">
      update Warehouse set IsDisabled = 1  where Code = :barcode
    </Content>

    <Content Key="Update_WarehouseSetDefaultEnabled" DataBaseType="SqlServer">
      update Warehouse set IsDisabled = 0,StorageType = 18,NoBacteria = 1   where Code = @barcode
    </Content>
    <Content Key="Update_WarehouseSetDefaultEnabled" DataBaseType="Oracle">
      update Warehouse set IsDisabled = 0,StorageType = 18,NoBacteria = 1   where Code = :barcode
    </Content>

    <Content Key="Update_DevicesUseLogCpImgIDByLogID" DataBaseType="SqlServer">
      Update DevicesUseLog Set CpImgID=@CpImageID Where LogID=@LogID
    </Content>
    <Content Key="Update_DevicesUseLogCpImgIDByLogID" DataBaseType="Oracle">
      Update DevicesUseLog Set CpImgID=:CpImageID Where LogID=:LogID
    </Content>

    <Content Key="Insert_DataFileAndDataFileMaping" DataBaseType="SqlServer">
      Insert Into DataFile(DataID,Data,Type)Values(@DataID,@Data,@Type);
      Insert Into DataFileMaping(DataFileMapingID,DataID,ForeignID)Values(@DataFileMapingID,@DataID,@ForeignID)
    </Content>
    <Content Key="Insert_DataFileAndDataFileMaping" DataBaseType="Oracle">
      begin
      Insert Into DataFile(DataID,Data,Type)Values(:DataID,:Data,:Type);
      Insert Into DataFileMaping(DataFileMapingID,DataID,ForeignID) Values (:DataFileMapingID,:DataID,:ForeignID);
      end;
    </Content>

    <Content Key="Update_DataFileDataByDataID" DataBaseType="SqlServer">
      Update DataFile Set Data=@Data Where DataID=@DataID
    </Content>
    <Content Key="Update_DataFileDataByDataID" DataBaseType="Oracle">
      Update DataFile Set Data=:Data Where DataID=:DataID
    </Content>

    <Content Key="Query_GetOrgByPackageID" DataBaseType="SqlServer">
      <![CDATA[
        Select Distinct o.id,o.name,o.Code
        From CargoType t1
        Inner Join CargoTypeKind t2 on t1.CargoTypeKind = t2.ID
        Inner Join Ac_Org  o  on t2.OrgID = o.ID
        Where t1.CargoTypeID=@PackageID
      ]]>
    </Content>
    <Content Key="Query_GetOrgByPackageID" DataBaseType="Oracle">
      <![CDATA[
        Select Distinct o.id,o.name,o.Code
        From CargoType t1
        Inner Join CargoTypeKind t2 on t1.CargoTypeKind = t2.ID
        Inner Join Ac_Org  o  on t2.OrgID = o.ID
        Where t1.CargoTypeID=:PackageID
      ]]>
    </Content>
    <Content Key="Query_GetSafeStockRow" DataBaseType="SqlServer">
      <![CDATA[
       SELECT (select O.NAME from AC_Org O where ID = @OrgID) AS ORGNAME,C.CARGOTYPENAME,isnull(SS.BASEQTY,0) as BASEQTY,ck.KindName as CARGOTYPEKINDNAME,isnull(c.ISFORORGS,0) ISFORORGS
       from CargoType c left join CargoTypeKind ck on c.CargoTypeKind = ck.ID
				         left join SafeStock ss	on ss.CargoTypeID = c.CargoTypeID and ss.OrgID = @OrgID
        where c.CargoTypeID = @CargoTypeID and (ss.FlowOrgID = @FlowOrgID or ss.FlowOrgID is null)
      ]]>
    </Content>
    <Content Key="Query_GetSafeStockRow" DataBaseType="Oracle">
      <![CDATA[
        SELECT (select O.NAME from AC_Org O where ID = :OrgID) AS ORGNAME,C.CARGOTYPENAME,nvl(SS.BASEQTY,0) as BASEQTY,ck.KindName as CARGOTYPEKINDNAME,nvl(c.ISFORORGS,0) ISFORORGS
       from CargoType c left join CargoTypeKind ck on c.CargoTypeKind = ck.ID
				         left join SafeStock ss	on ss.CargoTypeID = c.CargoTypeID and ss.OrgID = :OrgID
        where c.CargoTypeID = :CargoTypeID and (ss.FlowOrgID = :FlowOrgID or ss.FlowOrgID is null)
      ]]>
    </Content>

    <Content Key="Query_GetSafeStockIsExists" DataBaseType="SqlServer">
      <![CDATA[
       SELECT *
       from SafeStock ss
        where ss.CargoTypeID = @CargoTypeID and ss.FlowOrgID = @FlowOrgID and ss.OrgID = @OrgID
      ]]>
    </Content>
    <Content Key="Query_GetSafeStockIsExists" DataBaseType="Oracle">
      <![CDATA[
        SELECT *
       from SafeStock ss
        where ss.CargoTypeID = :CargoTypeID and ss.FlowOrgID = :FlowOrgID and ss.OrgID = :OrgID
      ]]>
    </Content>

    <Content Key="Query_BaseQty" DataBaseType="SqlServer">
      SELECT BaseQty FROM SafeStock WHERE OrgID=@OrgID AND CargoTypeID=@CargoTypeID
    </Content>
    <Content Key="Query_BaseQty" DataBaseType="Oracle">
      SELECT BaseQty FROM SafeStock WHERE OrgID=:OrgID AND CargoTypeID=:CargoTypeID
    </Content>

    <Content Key="MonitorDevice_Query_GetMonitorDeviceList" DataBaseType="SqlServer">
      <![CDATA[
      SELECT ID
      ,Number
      ,Code
      ,DeviceType
      ,SourceType
      ,TcpAddress
      ,ComPort
      FROM MonitorDevice
      WHERE 1=1{0}
      ]]>
    </Content>
    <Content Key="MonitorDevice_Query_GetMonitorDeviceList" DataBaseType="Oracle">
      <![CDATA[
      SELECT ID
      ,Number
      ,Code
      ,DeviceType
      ,SourceType
      ,TcpAddress
      ,ComPort
      FROM MonitorDevice
      WHERE 1=1{0}
      ]]>
    </Content>
    
    <Content Key="MonitorDevice_Query_GetMonitorDeviceByNumber" DataBaseType="SqlServer">
      <![CDATA[
      SELECT ID
      ,Number
      ,Code
      ,DeviceType
      ,SourceType
      ,TcpAddress
      ,ComPort
      FROM MonitorDevice
      WHERE Number = @Number
      ]]>
    </Content>
    <Content Key="MonitorDevice_Query_GetMonitorDeviceByNumber" DataBaseType="Oracle">
      <![CDATA[
      SELECT ID
      ,Number
      ,Code
      ,DeviceType
      ,SourceType
      ,TcpAddress
      ,ComPort
      FROM MonitorDevice
      WHERE Number = :Number
      ]]>
    </Content>


    <Content Key="SensorDataHead_Query_GetNewestSensorDataHeadBySensorID" DataBaseType="SqlServer">
      <![CDATA[
SELECT TOP 1 SensorDataHeadID
      ,LogID
      ,SensorID
      ,DataKey
      ,BeginDate
      ,EndDate
      ,CustomFlag
      ,IsCompressed
      ,ExtendedInfo
      ,DataVer
  FROM SensorDataHead
 WHERE SensorID = @SensorID
 ORDER BY BeginDate DESC
      ]]>
    </Content>
    <Content Key="SensorDataHead_Query_GetNewestSensorDataHeadBySensorID" DataBaseType="Oracle">
      <![CDATA[
SELECT * FROM
(SELECT SensorDataHeadID
      ,LogID
      ,SensorID
      ,DataKey
      ,BeginDate
      ,EndDate
      ,CustomFlag
      ,IsCompressed
      ,ExtendedInfo
      ,DataVer
  FROM SensorDataHead
 WHERE SensorID = :SensorID
 ORDER BY BeginDate DESC)
 WHERE ROWNUM = 1
      ]]>
    </Content>

    <Content Key="SensorDataHead_Query_GetSensorDataHeadByDataKey" DataBaseType="SqlServer">
      <![CDATA[
SELECT SensorDataHeadID
      ,LogID
      ,SensorID
      ,DataKey
      ,BeginDate
      ,EndDate
      ,CustomFlag
      ,IsCompressed
      ,ExtendedInfo
      ,DataVer
  FROM SensorDataHead
 WHERE DataKey = @DataKey
      ]]>
    </Content>
    <Content Key="SensorDataHead_Query_GetSensorDataHeadByDataKey" DataBaseType="Oracle">
      <![CDATA[
SELECT SensorDataHeadID
      ,LogID
      ,SensorID
      ,DataKey
      ,BeginDate
      ,EndDate
      ,CustomFlag
      ,IsCompressed
      ,ExtendedInfo
      ,DataVer
  FROM SensorDataHead
 WHERE DataKey = :DataKey
      ]]>
    </Content>

    <Content Key="SensorDataHead_Query_GetSensorDataHeadBySensorIDCustomFlag" DataBaseType="SqlServer">
      <![CDATA[
SELECT SensorDataHeadID
      ,LogID
      ,SensorID
      ,DataKey
      ,BeginDate
      ,EndDate
      ,CustomFlag
      ,IsCompressed
      ,ExtendedInfo
      ,DataVer
  FROM SensorDataHead
 WHERE SensorID = @SensorID
   AND CustomFlag = @CustomFlag
 ORDER BY BeginDate DESC
      ]]>
    </Content>
    <Content Key="SensorDataHead_Query_GetSensorDataHeadBySensorIDCustomFlag" DataBaseType="Oracle">
      <![CDATA[
SELECT SensorDataHeadID
      ,LogID
      ,SensorID
      ,DataKey
      ,BeginDate
      ,EndDate
      ,CustomFlag
      ,IsCompressed
      ,ExtendedInfo
      ,DataVer
  FROM SensorDataHead
 WHERE SensorID = :SensorID
   AND CustomFlag = :CustomFlag
 ORDER BY BeginDate DESC
      ]]>
    </Content>

    <Content Key="SensorDataHead_Query_GetSensorDataHeadWithUseLog" DataBaseType="SqlServer">
      <![CDATA[
SELECT SDH.SensorDataHeadID
      ,SDH.SensorID
      ,SDH.LogID
      ,SDH.BeginDate
      ,SDH.EndDate
      ,D.DeviceID
      ,D.DeviceName
      ,DUL.UserID
      ,AU.Name UserName
  FROM SensorDataHead SDH
 INNER JOIN Sensor S ON SDH.SensorID = S.SensorID
 INNER JOIN DeviceSensor DS ON S.SensorID = DS.SensorID
 INNER JOIN Devices D ON DS.DeviceID = D.DeviceID
  LEFT JOIN DevicesUseLog DUL ON SDH.LogID = DUL.LogID
  LEFT JOIN AC_User AU ON AU.ID = DUL.UserID
 WHERE 1=1 {0}
  ORDER BY D.DeviceName, SDH.BeginDate
      ]]>
    </Content>
    <Content Key="SensorDataHead_Query_GetSensorDataHeadWithUseLog" DataBaseType="Oracle">
      <![CDATA[
SELECT SDH.SensorDataHeadID
      ,SDH.SensorID
      ,SDH.LogID
      ,SDH.BeginDate
      ,SDH.EndDate
      ,D.DeviceID
      ,D.DeviceName
      ,DUL.UserID
      ,AU.Name UserName
  FROM SensorDataHead SDH
 INNER JOIN Sensor S ON SDH.SensorID = S.SensorID
 INNER JOIN DeviceSensor DS ON S.SensorID = DS.SensorID
 INNER JOIN Devices D ON DS.DeviceID = D.DeviceID
  LEFT JOIN DevicesUseLog DUL ON SDH.LogID = DUL.LogID
  LEFT JOIN AC_User AU ON AU.ID = DUL.UserID
 WHERE 1=1 {0}
  ORDER BY D.DeviceName, SDH.BeginDate
      ]]>
    </Content>

    <Content Key="SensorDataLine_Query_GetSensorDataLineByHeadID" DataBaseType="SqlServer">
      <![CDATA[
SELECT SensorDataLineID
      ,SensorDataHeadID
      ,SensorDataRawLineID
      ,ReceivedDate
      ,SensorDate
      ,SensorTimeSpan
      ,DataType
      ,ShowLevel
      ,AnalysedData
      ,ValueString1
      ,ValueString2
      ,ValueString3
      ,ValueString4
      ,ValueString5
      ,ValueNumber1
      ,ValueNumber2
      ,ValueNumber3
      ,ValueNumber4
      ,ValueNumber5
      ,ValueDate1
      ,ValueDate2
      ,ValueDate3
      ,ValueDate4
      ,ValueDate5
  FROM SensorDataLine
 WHERE SensorDataHeadID = @SensorDataHeadID
 ORDER BY ReceivedDate
      ]]>
    </Content>
    <Content Key="SensorDataLine_Query_GetSensorDataLineByHeadID" DataBaseType="Oracle">
      <![CDATA[
SELECT SensorDataLineID
      ,SensorDataHeadID
      ,SensorDataRawLineID
      ,ReceivedDate
      ,SensorDate
      ,SensorTimeSpan
      ,DataType
      ,ShowLevel
      ,AnalysedData
      ,ValueString1
      ,ValueString2
      ,ValueString3
      ,ValueString4
      ,ValueString5
      ,ValueNumber1
      ,ValueNumber2
      ,ValueNumber3
      ,ValueNumber4
      ,ValueNumber5
      ,ValueDate1
      ,ValueDate2
      ,ValueDate3
      ,ValueDate4
      ,ValueDate5
  FROM SensorDataLine
 WHERE SensorDataHeadID = :SensorDataHeadID
 ORDER BY ReceivedDate
      ]]>
    </Content>

    <Content Key="SensorDataLine_Query_GetSensorDataLineByDataType" DataBaseType="SqlServer">
      <![CDATA[
SELECT SensorDataLineID
      ,SensorDataHeadID
      ,SensorDataRawLineID
      ,ReceivedDate
      ,SensorDate
      ,SensorTimeSpan
      ,DataType
      ,ShowLevel
      ,AnalysedData
      ,ValueString1
      ,ValueString2
      ,ValueString3
      ,ValueString4
      ,ValueString5
      ,ValueNumber1
      ,ValueNumber2
      ,ValueNumber3
      ,ValueNumber4
      ,ValueNumber5
      ,ValueDate1
      ,ValueDate2
      ,ValueDate3
      ,ValueDate4
      ,ValueDate5
  FROM SensorDataLine
 WHERE SensorDataHeadID = @SensorDataHeadID
   AND DataType = @DataType
 ORDER BY ReceivedDate
      ]]>
    </Content>
    <Content Key="SensorDataLine_Query_GetSensorDataLineByDataType" DataBaseType="Oracle">
      <![CDATA[
SELECT SensorDataLineID
      ,SensorDataHeadID
      ,SensorDataRawLineID
      ,ReceivedDate
      ,SensorDate
      ,SensorTimeSpan
      ,DataType
      ,ShowLevel
      ,AnalysedData
      ,ValueString1
      ,ValueString2
      ,ValueString3
      ,ValueString4
      ,ValueString5
      ,ValueNumber1
      ,ValueNumber2
      ,ValueNumber3
      ,ValueNumber4
      ,ValueNumber5
      ,ValueDate1
      ,ValueDate2
      ,ValueDate3
      ,ValueDate4
      ,ValueDate5
  FROM SensorDataLine
 WHERE SensorDataHeadID = :SensorDataHeadID
   AND DataType = :DataType
 ORDER BY ReceivedDate
      ]]>
    </Content>


    <Content Key="SensorDataLineValue_Query_GetSensorSeriesValues" DataBaseType="SqlServer">
      <![CDATA[
SELECT SDL.SensorDataLineID
      ,SDL.ReceivedDate
      ,SDL.SensorDate
      ,SDL.SensorTimeSpan
      ,SDLV.ValueType
      ,SDLV.ContentNumber
      ,SDLV.ContentString
      ,SDLV.ContentDate
  FROM SensorDataLineValue SDLV WITH(NOLOCK)
 INNER JOIN SensorDataLine SDL WITH(NOLOCK) ON SDLV.SensorDataLineID = SDL.SensorDataLineID
 WHERE SDL.SensorDataHeadID = @SensorDataHeadID
   AND SDLV.ValueType = @ValueType
 ORDER BY SDL.SensorDate, SDL.SensorTimeSpan
      ]]>
    </Content>
    <Content Key="SensorDataLineValue_Query_GetSensorSeriesValues" DataBaseType="Oracle">
      <![CDATA[
SELECT SDL.SensorDataLineID
      ,SDL.ReceivedDate
      ,SDL.SensorDate
      ,SDL.SensorTimeSpan
      ,SDLV.ValueType
      ,SDLV.ContentNumber
      ,SDLV.ContentString
      ,SDLV.ContentDate
  FROM SensorDataLineValue SDLV
 INNER JOIN SensorDataLine SDL ON SDLV.SensorDataLineID = SDL.SensorDataLineID
 WHERE SDL.SensorDataHeadID = :SensorDataHeadID
   AND SDLV.ValueType = :ValueType
 ORDER BY SDL.SensorDate, SDL.SensorTimeSpan
      ]]>
    </Content>

    <Content Key="SensorDataLineValue_Query_GetSensorSeriesValuesInc" DataBaseType="SqlServer">
      <![CDATA[
SELECT SDL.ReceivedDate
      ,SDL.SensorDate
      ,SDL.SensorTimeSpan
      ,SDLV.ValueType
      ,SDLV.ContentNumber
      ,SDLV.ContentString
      ,SDLV.ContentDate
  FROM SensorDataLineValue SDLV WITH(NOLOCK)
 INNER JOIN SensorDataLine SDL WITH(NOLOCK) ON SDLV.SensorDataLineID = SDL.SensorDataLineID
 WHERE SDL.SensorDataHeadID = @SensorDataHeadID
   AND SDLV.ValueType = @ValueType
   AND SDL.ReceivedDate > @ReceivedDate
 ORDER BY SDL.SensorDate, SDL.SensorTimeSpan
      ]]>
    </Content>
    <Content Key="SensorDataLineValue_Query_GetSensorSeriesValuesInc" DataBaseType="Oracle">
      <![CDATA[
SELECT SDL.ReceivedDate
      ,SDL.SensorDate
      ,SDL.SensorTimeSpan
      ,SDLV.ValueType
      ,SDLV.ContentNumber
      ,SDLV.ContentString
      ,SDLV.ContentDate
  FROM SensorDataLineValue SDLV
 INNER JOIN SensorDataLine SDL ON SDLV.SensorDataLineID = SDL.SensorDataLineID
 WHERE SDL.SensorDataHeadID = :SensorDataHeadID
   AND SDLV.ValueType = :ValueType
   AND SDL.ReceivedDate > TO_TIMESTAMP(:ReceivedDate, 'yyyy-mm-dd hh24:mi:ss.ff3')
 ORDER BY SDL.SensorDate, SDL.SensorTimeSpan
      ]]>
    </Content>

    <Content Key="SensorDataLineValue_Query_GetNewestSensorSeriesValuesByDataType" DataBaseType="SqlServer">
      <![CDATA[
SELECT SD.ReceivedDate
      ,SD.SensorDate
      ,SD.SensorTimeSpan
      ,SDLV.ValueType
      ,SDLV.ContentNumber
      ,SDLV.ContentString
      ,SDLV.ContentDate
  FROM SensorDataLineValue SDLV
  INNER JOIN ( SELECT TOP 1 SDL.SensorDataLineID 
                           ,SDL.ReceivedDate
                           ,SDL.SensorDate
                           ,SDL.SensorTimeSpan
                 FROM SensorDataLine SDL
                INNER JOIN SensorDataHead SDH ON SDL.SensorDataHeadID = SDH.SensorDataHeadID
                WHERE SDH.SensorDataHeadID = @SensorDataHeadID
                  AND SDL.DataType = @DataType
                ORDER BY SDL.ReceivedDate DESC) SD ON SDLV.SensorDataLineID = SD.SensorDataLineID
      ]]>
    </Content>
    <Content Key="SensorDataLineValue_Query_GetNewestSensorSeriesValuesByDataType" DataBaseType="Oracle">
      <![CDATA[
SELECT SD.ReceivedDate
      ,SD.SensorDate
      ,SD.SensorTimeSpan
      ,SDLV.ValueType
      ,SDLV.ContentNumber
      ,SDLV.ContentString
      ,SDLV.ContentDate
  FROM SensorDataLineValue SDLV
  INNER JOIN ( SELECT TOP 1 SDL.SensorDataLineID 
                           ,SDL.ReceivedDate
                           ,SDL.SensorDate
                           ,SDL.SensorTimeSpan
                 FROM SensorDataLine SDL
                INNER JOIN SensorDataHead SDH ON SDL.SensorDataHeadID = SDH.SensorDataHeadID
                WHERE SDH.SensorDataHeadID = :SensorDataHeadID
                  AND SDL.DataType = :DataType
                ORDER BY SDL.ReceivedDate DESC) SD ON SDLV.SensorDataLineID = SD.SensorDataLineID
      ]]>
    </Content>

    <Content Key="SensorDataLineValue_Query_GetSensorDataLineValueEntity" DataBaseType="SqlServer">
      <![CDATA[
SELECT SDLV.SensorDataLineValueID
      ,SDLV.SensorDataLineID
      ,SDLV.ValueType
      ,SDLV.ContentNumber
      ,SDLV.ContentString
      ,SDLV.ContentDate
  FROM SensorDataLineValue SDLV
 INNER JOIN SensorDataLine SDL ON SDLV.SensorDataLineID = SDL.SensorDataLineID
 WHERE 1=1 {0}
 ORDER BY SDL.ReceivedDate
      ]]>
    </Content>
    <Content Key="SensorDataLineValue_Query_GetSensorDataLineValueEntity" DataBaseType="Oracle">
      <![CDATA[
SELECT SDLV.SensorDataLineValueID
      ,SDLV.SensorDataLineID
      ,SDLV.ValueType
      ,SDLV.ContentNumber
      ,SDLV.ContentString
      ,SDLV.ContentDate
  FROM SensorDataLineValue SDLV
 INNER JOIN SensorDataLine SDL ON SDLV.SensorDataLineID = SDL.SensorDataLineID
 WHERE 1=1 {0}
 ORDER BY SDL.ReceivedDate
      ]]>
    </Content>

    <Content Key="SensorDataLineValue_Delete_DeleteByHeadID" DataBaseType="SqlServer">
      <![CDATA[
DELETE FROM SensorDataLineValue  
 WHERE SensorDataHeadID = @SensorDataHeadID
      ]]>
    </Content>
    <Content Key="SensorDataLineValue_Delete_DeleteByHeadID" DataBaseType="Oracle">
      <![CDATA[
DELETE FROM SensorDataLineValue  
 WHERE SensorDataHeadID = :SensorDataHeadID
      ]]>
    </Content>

    <Content Key="SensorGroup_Query_GetSensorGroup" DataBaseType="SqlServer">
      <![CDATA[
WITH GroupT AS 
( SELECT SG.GroupID
       , SG.GroupName
       , SG.ParentID
       , SG.OrderNo
       , 1 AS GroupLevel
    FROM SensorGroup SG
   WHERE SG.ParentID = '00000000-0000-0000-0000-000000000000'
   UNION ALL
  SELECT SG.GroupID
       , SG.GroupName
       , SG.ParentID
       , SG.OrderNo
       , GT.GroupLevel + 1
    FROM SensorGroup SG
   INNER JOIN GroupT GT on SG.ParentID = GT.GroupID
)
SELECT GroupID
     , GroupName
     , ParentID
     , OrderNo
     , GroupLevel
  FROM GroupT
 ORDER BY OrderNo
      ]]>
    </Content>
    <Content Key="SensorGroup_Query_GetSensorGroup" DataBaseType="Oracle">
      <![CDATA[
 SELECT SG.GroupID
      , SG.GroupName
      , SG.ParentID
      , SG.OrderNo
      , LEVEL AS GroupLevel FROM SensorGroup SG
  START WITH SG.ParentID = '00000000-0000-0000-0000-000000000000'
CONNECT BY PRIOR SG.GroupID = SG.ParentID
  ORDER BY SG.OrderNo
      ]]>
    </Content>

    <Content Key="SensorGroupMember_Query_GetSensorOfGroup" DataBaseType="SqlServer">
      <![CDATA[
SELECT SG.GroupID
     , SG.GroupName
     , S.SensorID
     , S.SensorGroup
     , S.SensorType
     , S.SensorModel
     , S.SensorKey
     , S.SensorKeyEx
     , S.SensorName
     , SGM.MemberID
     , SGM.OrderNo
  FROM Sensor S
 INNER JOIN SensorGroupMember SGM ON S.SensorID = SGM.SensorID
 INNER JOIN SensorGroup SG ON SGM.GroupID = SG.GroupID
 WHERE 1=1 {0}
 ORDER BY SGM.OrderNo
      ]]>
    </Content>
    <Content Key="SensorGroupMember_Query_GetSensorOfGroup" DataBaseType="Oracle">
      <![CDATA[
SELECT SG.GroupID
     , SG.GroupName
     , S.SensorID
     , S.SensorGroup
     , S.SensorType
     , S.SensorModel
     , S.SensorKey
     , S.SensorKeyEx
     , S.SensorName
     , SGM.MemberID
     , SGM.OrderNo
  FROM Sensor S
 INNER JOIN SensorGroupMember SGM ON S.SensorID = SGM.SensorID
 INNER JOIN SensorGroup SG ON SGM.GroupID = SG.GroupID
 WHERE 1=1 {0}
 ORDER BY SGM.OrderNo
      ]]>
    </Content>

    <Content Key="SensorGroupMember_Delete_DeleteByGroupID" DataBaseType="SqlServer">
      <![CDATA[
DELETE FROM SensorGroupMember  
 WHERE GroupID = @GroupID
      ]]>
    </Content>
    <Content Key="SensorGroupMember_Delete_DeleteByGroupID" DataBaseType="Oracle">
      <![CDATA[
DELETE FROM SensorGroupMember  
 WHERE GroupID = :GroupID
      ]]>
    </Content>

    <Content Key="ManualMatchCSSD_Query_GetCssdRecords" DataBaseType="SqlServer">
      <![CDATA[
SELECT DUL.LogID
      ,DUL.DeviceID
      ,DUL.BeginDate
      ,DUL.EndDate
      ,DUL.UserID
      ,D.DeviceName
      ,AU.Name
      ,SDH.SensorDataHeadID
  FROM DevicesUseLog DUL
 INNER JOIN Devices D ON DUL.DeviceID = D.DeviceID
 INNER JOIN AC_User AU ON DUL.UserID = AU.ID
 LEFT JOIN DeviceSensor DS ON DS.DeviceID = D.DeviceID
 LEFT JOIN SensorDataHead SDH ON SDH.SensorID = DS.SensorID AND SDH.LogID = DUL.LogID
 WHERE 1=1 {0}
 ORDER BY D.DeviceName, DUL.BeginDate
      ]]>
    </Content>
    <Content Key="ManualMatchCSSD_Query_GetCssdRecords" DataBaseType="Oracle">
      <![CDATA[
SELECT DUL.LogID
      ,DUL.DeviceID
      ,DUL.BeginDate
      ,DUL.EndDate
      ,DUL.UserID
      ,D.DeviceName
      ,AU.Name
      ,SDH.SensorDataHeadID
  FROM DevicesUseLog DUL
 INNER JOIN Devices D ON DUL.DeviceID = D.DeviceID
 INNER JOIN AC_User AU ON DUL.UserID = AU.ID
 LEFT JOIN DeviceSensor DS ON DS.DeviceID = D.DeviceID
 LEFT JOIN SensorDataHead SDH ON SDH.SensorID = DS.SensorID AND SDH.LogID = DUL.LogID
 WHERE 1=1 {0}
 ORDER BY D.DeviceName, DUL.BeginDate
      ]]>
    </Content>

    <Content Key="ManualMatchCSSD_Query_GetSensorRecords" DataBaseType="SqlServer">
      <![CDATA[
SELECT SDH.SensorDataHeadID
      ,SDH.LogID
      ,SDH.BeginDate
      ,SDH.EndDate
      ,D.DeviceID
      ,D.DeviceName
 FROM SensorDataHead SDH
INNER JOIN Sensor S ON SDH.SensorID = S.SensorID
INNER JOIN DeviceSensor DS ON S.SensorID = DS.SensorID
INNER JOIN Devices D ON DS.DeviceID = D.DeviceID
WHERE 1=1 {0}
ORDER BY D.DeviceName, SDH.BeginDate
      ]]>
    </Content>
    <Content Key="ManualMatchCSSD_Query_GetSensorRecords" DataBaseType="Oracle">
      <![CDATA[
SELECT SDH.SensorDataHeadID
      ,SDH.LogID
      ,SDH.BeginDate
      ,SDH.EndDate
      ,D.DeviceID
      ,D.DeviceName
 FROM SensorDataHead SDH
INNER JOIN Sensor S ON SDH.SensorID = S.SensorID
INNER JOIN DeviceSensor DS ON S.SensorID = DS.SensorID
INNER JOIN Devices D ON DS.DeviceID = D.DeviceID
WHERE 1=1 {0}
ORDER BY D.DeviceName, SDH.BeginDate
      ]]>
    </Content>


    <Content Key="Sensor_BindSensor" DataBaseType="SqlServer">
      <![CDATA[
       UPDATE SensorNode
SET DeviceUseLog = @DeviceUseLog,DeviceID = @DeviceID,DeviceBarCode = @DeviceBarCode
WHERE SensorID = @SensorID
      ]]>
    </Content>
    <Content Key="Sensor_BindSensor" DataBaseType="Oracle">
      <![CDATA[
       UPDATE SensorNode
SET DeviceUseLog = :DeviceUseLog,DeviceID = :DeviceID,DeviceBarCode = :DeviceBarCode
WHERE SensorID = :SensorID
      ]]>
    </Content>
    <Content Key="Sensor_SensorMonitorDataSync" DataBaseType="SqlServer">
      <![CDATA[
        DECLARE @FParentID INT
        DECLARE @FLogID UNIQUEIDENTIFIER
        DECLARE @DeviceUseLog UNIQUEIDENTIFIER
        SET @FParentID = 0
        SELECT TOP 1 @FParentID = FID,@DeviceUseLog = DeviceUseLog,@FLogID = FLogID 
        FROM MonitorCollectData
        INNER JOIN SensorNode
        ON MonitorCollectData.FDeviceID = SensorNode.DeviceBarCode
        WHERE SensorNode.SensorID = @SensorID
        ORDER BY FBeginDate DESC
        IF @FParentID <> 0
        BEGIN
        INSERT INTO MonitorCollectDataEntry
        (FParentID,FDate,FValue1,FValue2,FValue3)
        VALUES
        (@FParentID,@FDate,@FValue1,@FValue2,@FValue3)
        UPDATE DevicesUseLog
        SET MonitorDataID = @FParentID
        WHERE LogID = @DeviceUseLog
        END
      ]]>
    </Content>
    <Content Key="Sensor_SensorMonitorDataSync" DataBaseType="Oracle">
      <![CDATA[
        DECLARE 
          vFParentID number;
          vFLogID varchar2(36);
          vDeviceUseLog varchar2(36);
        begin
            vFParentID := 0;
            begin 
               SELECT  FID,DeviceUseLog,FLogID  into vFParentID,vDeviceUseLog,vFLogID
			   from
			   (
			    select FID,DeviceUseLog,FLogID 
                FROM MonitorCollectData
                INNER JOIN SensorNode
                ON MonitorCollectData.FDeviceID = SensorNode.DeviceBarCode
                WHERE SensorNode.SensorID = :SensorID 
				order by  FBeginDate DESC
				) where rownum=1;
            exception
            when NO_DATA_FOUND
                 then  
                    vFParentID :=0; 
            end;   
                
            IF vFParentID <> 0 then        
              INSERT INTO MonitorCollectDataEntry
              (FParentID,FDate,FValue1,FValue2,FValue3)
              VALUES
              (vFParentID,:FDate,:FValue1,:FValue2,:FValue3);
              UPDATE DevicesUseLog
              SET MonitorDataID = vFParentID
              WHERE LogID = vDeviceUseLog;
            end if;
        end;
      ]]>
    </Content>
    <Content Key="Sensor_CompleteSensor" DataBaseType="SqlServer">
      <![CDATA[
    DECLARE @FID INT
    DECLARE @FLogID UNIQUEIDENTIFIER
    --DECLARE @DeviceUseLog UNIQUEIDENTIFIER
    --DECLARE @SensorID varchar(50)

    SET @FID = NULL    
    SET @FLogID = NULL
    --SET @SensorID = NULL
    --SET @DeviceUseLog = NULL
    --通过DeviceUseLog来判断
    IF (@DeviceUseLog IS NOT NULL)
    BEGIN
		SELECT @FID = MonitorDataID,@FLogID = FLogID,@SensorID = SensorNode.SensorID
		FROM DevicesUseLog
		INNER JOIN MonitorCollectData
		ON DevicesUseLog.LogID = MonitorCollectData.FLogID
		INNER JOIN SensorNode
		ON MonitorCollectData.FDeviceID = SensorNode.DeviceBarCode
		WHERE LogID = @DeviceUseLog
    END
    --通过传感器ID来判断
    IF (@SensorID IS NOT NULL)
    BEGIN
		SELECT @FID = MonitorDataID,@FLogID = FLogID
		FROM DevicesUseLog
		INNER JOIN MonitorCollectData
		ON DevicesUseLog.LogID = MonitorCollectData.FLogID
		INNER JOIN SensorNode
		ON MonitorCollectData.FDeviceID = SensorNode.DeviceBarCode
		WHERE SensorNode.SensorID = @SensorID
    END
    
    IF (@FID IS NOT NULL)
      BEGIN
      UPDATE MonitorCollectData
      SET FEndDate = GETDATE()
      WHERE FID = @FID     
    END
    
    IF (@FLogID IS NOT NULL)
    BEGIN
      DELETE MonitorDeviceQueue WHERE FLogID = @FLogID
    END    

    IF (@SensorID IS NOT NULL)
    BEGIN
      UPDATE SensorNode
      SET DeviceBarCode = NULL,DeviceUseLog = NULL,DeviceID = NULL,MonitorStatus=0
      WHERE SensorID = @SensorID
    END
     ]]>
    </Content>
    <Content Key="Sensor_CompleteSensor" DataBaseType="Oracle">
      <![CDATA[
    DECLARE 
      vFID number;
      vFLogID varchar2(36);  
      --vSensorID varchar2(50);
    begin
        vFID := null;
        --vSensorID := :SensorID;
        vFLogID := null;  
        
        IF (:DeviceUseLog IS NOT NULL) then
          BEGIN 
            SELECT   MonitorDataID, FLogID, SensorNode.SensorID into vFID,vFLogID,:SensorID
            FROM DevicesUseLog
            INNER JOIN MonitorCollectData
            ON DevicesUseLog.LogID = MonitorCollectData.FLogID
            INNER JOIN SensorNode
            ON MonitorCollectData.FDeviceID = SensorNode.DeviceBarCode
            WHERE LogID = :DeviceUseLog;
            exception
          when NO_DATA_FOUND
               then  
                  vFID := null; 
                  vFLogID := null; 
          end; 
        end if;
        
        IF (:SensorID IS NOT NULL) then
          begin
            SELECT   MonitorDataID, FLogID  into vFID,vFLogID  
            FROM DevicesUseLog
            INNER JOIN MonitorCollectData
            ON DevicesUseLog.LogID = MonitorCollectData.FLogID
            INNER JOIN SensorNode
            ON MonitorCollectData.FDeviceID = SensorNode.DeviceBarCode
            WHERE SensorNode.SensorID = :SensorID;
          exception
          when NO_DATA_FOUND
               then  
                  vFID := null; 
                  vFLogID := null; 
          end;
        end if; 
        
        
        IF (vFID IS NOT NULL) then 
          UPDATE MonitorCollectData  SET FEndDate = sysdate      WHERE FID = vFID;
        END if; 
        
        IF (vFLogID IS NOT NULL) then
          DELETE MonitorDeviceQueue WHERE FLogID = vFLogID;
        END  if;

        IF (:SensorID IS NOT NULL) then 
          UPDATE SensorNode   SET DeviceBarCode = NULL,DeviceUseLog = NULL,DeviceID = NULL    WHERE SensorID = :SensorID;
        END if;
     end;
     ]]>
    </Content>
    <Content Key="Sensor_GetSensorNodes" DataBaseType="SqlServer">
      <![CDATA[
      SELECT 
      *
      FROM SensorNode 
      WHERE 1 = 1 {0}
    ]]>
    </Content>
    <Content Key="Sensor_GetSensorNodes" DataBaseType="Oracle">
      <![CDATA[
      SELECT 
      *
      FROM SensorNode 
      WHERE 1 = 1 {0}
    ]]>
    </Content>
    <Content Key="Sensor_SensorNodeDataSync" DataBaseType="SqlServer">
      <![CDATA[
      UPDATE SensorNode
    SET T = @T ,H =@H ,P = @P ,V = @V,ReceiveTime=@ReceiveTime
    WHERE SensorID = @SensorID
    ]]>
    </Content>
    <Content Key="Sensor_SensorNodeDataSync" DataBaseType="Oracle">
      <![CDATA[
      UPDATE SensorNode
    SET T = :T ,H =:H ,P = :P ,V = :V,ReceiveTime=:ReceiveTime
    WHERE SensorID = :SensorID
    ]]>
    </Content>
    <Content Key="Sensor_GetSensorDatas" DataBaseType="SqlServer">
      <![CDATA[
      SELECT 
      *
      FROM SensorData 
      WHERE 1 = 1 {0}
      ORDER BY ReceiveTime ASC
    ]]>
    </Content>
    <Content Key="Sensor_GetSensorDatas" DataBaseType="Oracle">
      <![CDATA[
      SELECT 
      *
      FROM SensorData 
      WHERE 1 = 1 {0}
      ORDER BY ReceiveTime ASC
    ]]>
    </Content>
    <Content Key="Update_SensorNode" DataBaseType="SqlServer">
      UPDATE SensorNode SET SensorName= @SensorName,SensorBarCode= @SensorBarCode,
      SensorType= @SensorType,TAlarmUpper= @TAlarmUpper,TAlarmLower= @TAlarmLower
      ,HAlarmUpper= @HAlarmUpper,HAlarmLower= @HAlarmLower,PAlarmUpper= @PAlarmUpper,PAlarmLower= @PAlarmLower
      WHERE SensorID= @SensorID
    </Content>
    <Content Key="Update_SensorNode" DataBaseType="Oracle">
      UPDATE SensorNode SET SensorName= :SensorName,SensorBarCode= :SensorBarCode,
      SensorType= :SensorType,TAlarmUpper= :TAlarmUpper,TAlarmLower= :TAlarmLower
      ,HAlarmUpper= :HAlarmUpper,HAlarmLower= :HAlarmLower,PAlarmUpper= :PAlarmUpper,PAlarmLower= :PAlarmLower
      WHERE SensorID= :SensorID
    </Content>

    <Content Key="Delete_SensorNode" DataBaseType="SqlServer">
      DELETE FROM SensorNode WHERE SensorID= @SensorID
    </Content>
    <Content Key="Delete_SensorNode" DataBaseType="Oracle">
      DELETE FROM SensorNode WHERE SensorID= :SensorID
    </Content>

    <Content Key="QuerySensorNode" DataBaseType="SqlServer">
      SELECT * FROM SensorNode WHERE 1 = 1 {0}
      ORDER BY SensorName ASC
    </Content>
    <Content Key="QuerySensorNode" DataBaseType="Oracle">
      SELECT * FROM SensorNode WHERE 1 = 1 {0}
      ORDER BY SensorName ASC
    </Content>
    <Content Key="Query_GetSensorTree" DataBaseType="SqlServer">
      SELECT [SensorTreeID] AS VALUE
      ,[SensorTreeName] AS NAME
      ,[SensorTreeName] AS DISPLAYNAME
      ,[SensorTreeType]
      ,[ParentSensorTreeID]
      ,[OrderID]
      FROM [SensorTree]
      ORDER BY [OrderID]
    </Content>
    <Content Key="Query_GetSensorTree" DataBaseType="Oracle">
      SELECT SensorTreeID AS VALUE
      ,SensorTreeName AS NAME
      ,SensorTreeName AS DISPLAYNAME
      ,SensorTreeType
      ,ParentSensorTreeID
      ,OrderID
      FROM SensorTree
      ORDER BY OrderID
    </Content>

    <Content Key="Delete_OperationHISByTime" DataBaseType="SqlServer">
      delete from OperationHIS where SysDataTime = @time
    </Content>
    <Content Key="Delete_OperationHISByTime" DataBaseType="Oracle">
      delete from OperationHIS where SysDataTime =:time
    </Content>

    <Content Key="DeleteOperationHISBySql" DataBaseType="SqlServer">
      delete from OperationHIS where 1=1
    </Content>
    <Content Key="DeleteOperationHISBySql" DataBaseType="Oracle">
      delete from OperationHIS where 1=1
    </Content>

    <Content Key="Delete_OperationHISSettingByTime" DataBaseType="SqlServer">
      delete from OperationHISSetting where 1=1
    </Content>
    <Content Key="Delete_OperationHISSettingByTime" DataBaseType="Oracle">
      delete from OperationHISSetting where 1=1
    </Content>

    <Content Key="GetSensorTreeData" DataBaseType="SqlServer">
      SELECT
      SensorTreeID
      ,SensorTreeName
      ,SensorTreeType
      ,ParentSensorTreeID
      ,OrderID
      ,(SELECT SensorTreeName FROM SensorTree B WHERE B.SensorTreeID = SensorTree.ParentSensorTreeID) AS ParentSensorTreeName
      FROM SensorTree
      WHERE 1 = 1
    </Content>
    <Content Key="GetSensorTreeData" DataBaseType="Oracle">
      SELECT
      SensorTreeID
      ,SensorTreeName
      ,SensorTreeType
      ,ParentSensorTreeID
      ,OrderID
      ,(SELECT SensorTreeName FROM SensorTree B WHERE B.SensorTreeID = SensorTree.ParentSensorTreeID) AS ParentSensorTreeName
      FROM SensorTree
      WHERE 1 = 1
    </Content>
    <Content Key="GetSensorTreeDatas" DataBaseType="SqlServer">
      SELECT
      SensorTreeID
      ,SensorTreeName
      ,SensorTreeType
      ,ParentSensorTreeID
      ,OrderID
      ,(SELECT SensorTreeName FROM SensorTree B WHERE B.SensorTreeID = SensorTree.ParentSensorTreeID) AS ParentSensorTreeName
      FROM SensorTree
      WHERE 1 = 1 {0}
      ORDER BY ORDERID
    </Content>
    <Content Key="GetSensorTreeDatas" DataBaseType="Oracle">
      SELECT
      SensorTreeID
      ,SensorTreeName
      ,SensorTreeType
      ,ParentSensorTreeID
      ,OrderID
      ,(SELECT SensorTreeName FROM SensorTree B WHERE B.SensorTreeID = SensorTree.ParentSensorTreeID) AS ParentSensorTreeName
      FROM SensorTree
      WHERE 1 = 1 {0}
      ORDER BY ORDERID
    </Content>

    <Content Key="Query_FlowFetchByBarCode" DataBaseType="SqlServer">
      SELECT COUNT(*) FROM FlowFetch FF
      LEFT JOIN FlowFetchList FL ON FF.FetchID=FL.FetchID
      LEFT JOIN FlowPackageList FP ON FL.PackageID=FP.PackageID
      LEFT JOIN STORAGELIST SL  ON FP.StorageID = SL.StorageID
      WHERE SL.Barcode=@Barcode
    </Content>
    <Content Key="Query_FlowFetchByBarCode" DataBaseType="Oracle">
      SELECT COUNT(*) FROM FlowFetch FF
      LEFT JOIN FlowFetchList FL ON FF.FetchID=FL.FetchID
      LEFT JOIN FlowPackageList FP ON FL.PackageID=FP.PackageID
      LEFT JOIN STORAGELIST SL  ON FP.StorageID = SL.StorageID
      WHERE SL.Barcode=:Barcode
    </Content>

    <Content Key="User_GetUserByBarcodes" DataBaseType="SqlServer">
      SELECT ID AS FID,CODE AS FBARCODE,NAME AS FNAME FROM AC_USER WHERE CODE IN({0})
    </Content>
    <Content Key="User_GetUserByBarcodes" DataBaseType="Oracle">
      SELECT ID AS FID,CODE AS FBARCODE,NAME AS FNAME  FROM AC_USER WHERE CODE IN({0})
    </Content>


    <Content Key="Query_Weight" DataBaseType="SqlServer">
      SELECT W.WID,W.WEIGHTTYPEID,(SELECT S.TypeName FROM SystemTypeParameter S WHERE S.TypeKey='WeightType' AND S.TypeValue=W.WeightTypeID) WEIGHTNAME,W.FLOWORGID,W.WEIGHTVALUE,A.Name ORGNAME FROM Weight W
      LEFT JOIN AC_Org A ON A.ID=W.FlowOrgID
      WHERE  1=1
    </Content>
    <Content Key="Query_Weight" DataBaseType="Oracle">
      SELECT W.WID,W.WEIGHTTYPEID,(SELECT S.TypeName FROM SystemTypeParameter S WHERE S.TypeKey='WeightType' AND S.TypeValue=W.WeightTypeID) WEIGHTNAME,W.FLOWORGID,W.WEIGHTVALUE,A.Name ORGNAME FROM Weight W
      LEFT JOIN AC_Org A ON A.ID=W.FlowOrgID
      WHERE  1=1
    </Content>

    <Content Key="Query_IsExistWeightByNameID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM Weight WHERE WeightTypeID=@WeightTypeID  and FlowOrgID=@FlowOrgID and WID <> @WID      
      ]]>
    </Content>
    <Content Key="Query_IsExistWeightByNameID" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM Weight WHERE WeightTypeID=:WeightTypeID  and FlowOrgID=:FlowOrgID  and WID <> :WID
      ]]>
    </Content>

	  <Content Key="Query_UserLoginNameIsExist" DataBaseType="SqlServer">
		  <![CDATA[
      SELECT COUNT(*) FROM ac_user WHERE loginName=@loginname   and ID <> @key and IsDisabled=0     
      ]]>
	  </Content>
	  <Content Key="Query_UserLoginNameIsExist" DataBaseType="Oracle">
		  <![CDATA[
      SELECT COUNT(*) FROM ac_user WHERE loginName=:loginname  and ID <> :key   and IsDisabled=0    
      ]]>
	  </Content>
    <Content Key="Query_UserLoginNameIsExistUser" Desc="查询用户是否存在" DataBaseType="SqlServer">
      <![CDATA[
      SELECT COUNT(*) FROM ac_user WHERE loginName=@loginname   and ID = @key and IsDisabled=0     
      ]]>
    </Content>
    <Content Key="Query_UserLoginNameIsExistUser" Desc="查询用户是否存在" DataBaseType="Oracle">
      <![CDATA[
      SELECT COUNT(*) FROM ac_user WHERE loginName=:loginname   and ID = :key and IsDisabled=0     
      ]]>
    </Content>

    <Content Key="GetTraceInstrumentByCargoType" DataBaseType="SqlServer">
      <![CDATA[
      select sl.STORAGEID,sl.BARCODE,tstatus.TypeName as STATUSNAME,psl.Barcode as PACKAGEBARCODE,tpstatus.TypeName as PACKAGESTATUSNAME
	        ,pl.ValidDate AS VALIDDATE --可用效期
            ,AC_Org.Name as FLOWPROVIDEPORGNAME --领用科室
            ,psl.STERILIZEDATE --灭菌日期
            ,psl.EXPDate as EXPDATE -- 失效日期
            ,pl.UseDate as USEDATE --使用日期
            ,PatientList.PATIENTNAME
            ,isnull(PatientList.Isaffected,0) as ISAFFECTED
      from StorageList sl with (nolock) inner join SystemTypeParameter tstatus with (nolock) on sl.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
					inner join FlowPackageList pl with (nolock) on pl.packageid = 
					(select top 1 FlowPackageList.packageid 
					 from FlowPackageList with (nolock) inner join FlowPackageDetailList pdl with (nolock) on sl.StorageID = pdl.StorageID and pdl.PackageID = FlowPackageList.PackageID
										  inner join FlowPackage with (nolock) on FlowPackageList.FPackageID = FlowPackage.FPackageID
					 order by FlowPackage.PackageDate desc
					 )
					 inner join StorageList psl with (nolock) on pl.StorageID = psl.StorageID
					 inner join SystemTypeParameter tpstatus with (nolock) on psl.Status = tpstatus.TypeValue and tpstatus.TypeKey =  'StorageStatus'
					 left join FlowProvideList with (nolock) on pl.PackageID = FlowProvideList.PackageID
					  left join FlowProvide with (nolock) on FlowProvideList.ProvideID = FlowProvide.ProvideID
					  left join AC_Org with (nolock) on FlowProvide.OrgID = AC_Org.ID
					   left join PatientList with (nolock) on pl.PatientID = PatientList.PatientID
      where sl.CargoTypeID = @CargoTypeID AND SL.Barcode LIKE  '68%'
      ]]>
    </Content>
    <Content Key="GetTraceInstrumentByCargoType" DataBaseType="Oracle">
      <![CDATA[
      select sl.STORAGEID,sl.BARCODE,tstatus.TypeName as STATUSNAME,psl.Barcode as PACKAGEBARCODE,tpstatus.TypeName as PACKAGESTATUSNAME
	        ,pl.ValidDate AS VALIDDATE --可用效期
            ,AC_Org.Name as FLOWPROVIDEPORGNAME --领用科室
            ,psl.STERILIZEDATE --灭菌日期
            ,psl.EXPDate as EXPDATE -- 失效日期
            ,pl.UseDate as USEDATE --使用日期
            ,PatientList.PATIENTNAME
            ,nvl(PatientList.Isaffected,0) as ISAFFECTED
      from StorageList sl inner join SystemTypeParameter tstatus on sl.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
					inner join FlowPackageList pl on pl.packageid =
					 (select  FlowPackageList.packageid 
           from FlowPackageList inner join FlowPackageDetailList pdl on pdl.PackageID = FlowPackageList.PackageID    
                      inner join (select * from  FlowPackage order by FlowPackage.PackageDate desc) FlowPackage  on FlowPackageList.FPackageID = FlowPackage.FPackageID
             where    pdl.StorageID=SL.StorageID and rownum=1             
           )
					 inner join StorageList psl on pl.StorageID = psl.StorageID
					 inner join SystemTypeParameter tpstatus on psl.Status = tpstatus.TypeValue and tpstatus.TypeKey =  'StorageStatus'
					 left join FlowProvideList on pl.PackageID = FlowProvideList.PackageID
					  left join FlowProvide on FlowProvideList.ProvideID = FlowProvide.ProvideID
					  left join AC_Org on FlowProvide.OrgID = AC_Org.ID
					   left join PatientList on pl.PatientID = PatientList.PatientID
      where sl.CargoTypeID = :CargoTypeID AND SL.Barcode LIKE  '68%'
      ]]>
    </Content>

    <Content Key="Get_ComboDataClearOperator" DataBaseType="SqlServer">
      <![CDATA[
      SELECT OperatorNo AS VALUE,OperatorName AS DISPLAY FROM ClearOperator
      ]]>
    </Content>
    <Content Key="Get_ComboDataClearOperator" DataBaseType="Oracle">
      <![CDATA[
      SELECT OperatorNo AS VALUE,OperatorName AS DISPLAY FROM ClearOperator
      ]]>
    </Content>
    <Content Key="Get_ComboDataClearEndoscopeType" DataBaseType="SqlServer">
      <![CDATA[
      SELECT EndoscopeType AS VALUE,EndoscopeType AS DISPLAY  FROM ClearEndoscope GROUP BY EndoscopeType ORDER BY EndoscopeType
      ]]>
    </Content>
    <Content Key="Get_ComboDataClearEndoscopeType" DataBaseType="Oracle">
      <![CDATA[
      SELECT EndoscopeType AS VALUE,EndoscopeType AS DISPLAY  FROM ClearEndoscope GROUP BY EndoscopeType ORDER BY EndoscopeType
      ]]>
    </Content>

    <Content Key="Get_ComboDataClearEndoscopeNo" DataBaseType="SqlServer">
      <![CDATA[
      SELECT EndoscopeNo AS VALUE,EndoscopeNo AS DISPLAY FROM ClearEndoscope
      ]]>
    </Content>
    <Content Key="Get_ComboDataClearEndoscopeNo" DataBaseType="Oracle">
      <![CDATA[
      SELECT EndoscopeNo AS VALUE,EndoscopeNo AS DISPLAY FROM ClearEndoscope
      ]]>
    </Content>

    <Content Key="User_GetCssdListByUser" DataBaseType="SqlServer">
      <![CDATA[
        select cu.FUserID,cu.FCssdID,o.Name FCssdName,u.Name FUserName from AC_CssdUser cu
        inner join (Select * from AC_Org where IsDisabled=0 and CanOperateFlow=1) o on o.ID=cu.FCssdID
        inner join AC_User u on u.ID=cu.FUserID {0}
      ]]>
    </Content>
    <Content Key="User_GetCssdListByUser" DataBaseType="Oracle">
      <![CDATA[
        select cu.FUserID,cu.FCssdID,o.Name FCssdName,u.Name FUserName from AC_CssdUser cu
        inner join (Select * from AC_Org where IsDisabled=0 and CanOperateFlow=1) o on o.ID=cu.FCssdID
        inner join AC_User u on u.ID=cu.FUserID {0}
      ]]>
    </Content>

    <Content Key="User_GetOrgListByUser" DataBaseType="SqlServer">
      <![CDATA[
      select ou.OrgID,ou.UserID,o.Name FOrgName,u.Name FUserName from AC_OrgUser ou
      inner join AC_Org o on o.ID=ou.OrgID
      inner join AC_User u on u.ID=ou.UserID {0}
      ]]>
    </Content>
    <Content Key="User_GetOrgListByUser" DataBaseType="Oracle">
      <![CDATA[
      select ou.OrgID,ou.UserID,o.Name FOrgName,u.Name FUserName from AC_OrgUser ou
      inner join AC_Org o on o.ID=ou.OrgID
      inner join AC_User u on u.ID=ou.UserID {0}
      ]]>
    </Content>

    <Content Key="Query_CargoListByBarcode" DataBaseType="SqlServer">
      SELECT C.CARGOTYPENAME,FPCL.QUANTITY / FP.QUANTITY AS QUANTITY,FPCL.QUANTITY / FP.QUANTITY AS FRECYCLEQTY,FPCL.QUANTITY / FP.QUANTITY AS FRETURNQTY
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join FlowPackageCargoList fpcl on fpcl.FPackageID = pl.FPackageID
      inner join FlowPackage fp on fpcl.FPackageID = fp.FPackageID
      inner join CargoType c on fpcl.CargoTypeID = c.CargoTypeID
      where fpcl.CargoTopType = 1 and sl.Barcode = @Barcode
      union all
      select c.CargoTypeName,fpcl.Quantity  as Quantity,fpcl.FRecycleQty,fpcl.FReturnQty
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join FlowPackageInCargoList fpcl on fpcl.FPackageID = pl.FPackageID
      inner join FlowPackageIn fp on fpcl.FPackageID = fp.FPackageID
      inner join CargoType c on fpcl.CargoTypeID = c.CargoTypeID
      where fpcl.CargoTopType = 1 and sl.Barcode = @Barcode

    </Content>
    <Content Key="Query_CargoListByBarcode" DataBaseType="Oracle">
      SELECT C.CARGOTYPENAME,FPCL.QUANTITY / FP.QUANTITY AS QUANTITY,FPCL.QUANTITY / FP.QUANTITY AS FRECYCLEQTY,FPCL.QUANTITY / FP.QUANTITY AS FRETURNQTY
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join FlowPackageCargoList fpcl on fpcl.FPackageID = pl.FPackageID
      inner join FlowPackage fp on fpcl.FPackageID = fp.FPackageID
      inner join CargoType c on fpcl.CargoTypeID = c.CargoTypeID
      where fpcl.CargoTopType = 1 and sl.Barcode = :Barcode
      union all
      select c.CargoTypeName,fpcl.Quantity  as Quantity,fpcl.FRecycleQty,fpcl.FReturnQty
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join FlowPackageInCargoList fpcl on fpcl.FPackageID = pl.FPackageID
      inner join FlowPackageIn fp on fpcl.FPackageID = fp.FPackageID
      inner join CargoType c on fpcl.CargoTypeID = c.CargoTypeID
      where fpcl.CargoTopType = 1 and sl.Barcode = :Barcode

    </Content>
    <Content Key="Query_DevicePart" DataBaseType="SqlServer">
      SELECT FID,FNUMBER,FNAME,FDESCRIPTION,FDEVICETYPE,FPINYIN FROM DevicePart Where IsNull(FIsDisabled,0)=0
    </Content>
    <Content Key="Query_DevicePart" DataBaseType="Oracle">
      SELECT FID,FNUMBER,FNAME,FDESCRIPTION,FDEVICETYPE,FPINYIN FROM DevicePart Where nvl(FIsDisabled,0)=0
    </Content>

    <Content Key="Query_DeviceLocation" DataBaseType="SqlServer">
      SELECT DEVICELOCATIONID,DEVICEID,DEVICELOCATIONNAME,DEVICELOCATIONBARCODE,MODIFIER,MODIFYTIME,DELETED,DEVICELOCATIONSORT FROM DeviceLocation where 1=1
    </Content>
    <Content Key="Query_DeviceLocation" DataBaseType="Oracle">
      SELECT DEVICELOCATIONID,DEVICEID,DEVICELOCATIONNAME,DEVICELOCATIONBARCODE,MODIFIER,MODIFYTIME,DELETED,DEVICELOCATIONSORT FROM DeviceLocation where 1=1
    </Content>

    <Content Key="Delete_DeviceLocationByDeviceID" DataBaseType="SqlServer">
      delete from DeviceLocation where DEVICEID=@DeviceID
    </Content>
    <Content Key="Delete_DeviceLocationByDeviceID" DataBaseType="Oracle">
      delete from DeviceLocation where DEVICEID=:DeviceID
    </Content>
    
    <Content Key="Delete_DeviceLocationByLocationID" DataBaseType="SqlServer">
      update DeviceLocation set DELETED=1 where DEVICELOCATIONID=@DeviceLocationID
    </Content>
    <Content Key="Delete_DeviceLocationByLocationID" DataBaseType="Oracle">
     update DeviceLocation set Deleted=1 where DeviceLocationID=:DeviceLocationID
    </Content>
    <Content Key="Query_DeviceLocationUsed" DataBaseType="SqlServer">
      select * from FlowContainerPackage where DEVICELOCATIONID=@DeviceLocationID
    </Content>
    <Content Key="Query_DeviceLocationUsed" DataBaseType="Oracle">
      select * from FlowContainerPackage where DEVICELOCATIONID=:DeviceLocationID
    </Content>

    <Content Key="Query_DeviceLocationExists" DataBaseType="SqlServer">
      SELECT DEVICELOCATIONID FROM DEVICELOCATION WHERE DEVICELOCATIONID=@DeviceLocationID
    </Content>
    <Content Key="Query_DeviceLocationExists" DataBaseType="Oracle">
      select DEVICELOCATIONID from DeviceLocation where DEVICELOCATIONID=:DeviceLocationID
    </Content>
    
    <Content Key="Query_GetDevicePartDetailByDevIdb" DataBaseType="SqlServer">
      SELECT d.FID
      ,d.FPartID
      ,d.FDEVICEID
      ,d.FQTY
      ,d.FDAYS
      ,d.FUSECOUNT
      ,d.FBEGINUSEDATE
      ,d.FUPKEEPDATE
      ,dp.FName FPARTNAME
      ,de.DEVICENAME
      FROM DevicePartDetail d
      left join DevicePart dp on d.FPartID=dp.FID
      LEFT JOIN DEVICES de ON  de.DeviceID=d.FDeviceID
      WHERE d.FDeviceID = @devId
    </Content>

    <Content Key="Query_GetDevicePartDetailByDevIdb" DataBaseType="Oracle">
      SELECT d.FID
      ,d.FPartID
      ,d.FDEVICEID
      ,d.FQTY
      ,d.FDAYS
      ,d.FUSECOUNT
      ,d.FBEGINUSEDATE
      ,d.FUPKEEPDATE
      ,dp.FName FPARTNAME
      ,de.DEVICENAME
      FROM DevicePartDetail d
      left join DevicePart dp on d.FPartID=dp.FID
      LEFT JOIN DEVICES de ON  de.DeviceID=d.FDeviceID
      WHERE d.FDeviceID = :devId
    </Content>

    <Content Key="Delete_DevicePartDetailByDeviceID" DataBaseType="SqlServer">
      delete from DevicePartDetail where FDeviceID=@DeviceID
    </Content>
    <Content Key="Delete_DevicePartDetailByDeviceID" DataBaseType="Oracle">
      delete from DevicePartDetail where FDeviceID=:DeviceID
    </Content>

    

    <Content Key="Query_WebserviceLog" DataBaseType="SqlServer">
      SELECT
	      wl.LogID,
	      wl.WebserviceName,
	      wl.InterfaceName,
	      wl.IOMode,
	      wl.IODate,
	      wl.Context,
	      wl.Memo
      FROM
	      Webservice_Log wl
      WHERE 
	      1=1
    </Content>
    <Content Key="Query_WebserviceLog" DataBaseType="Oracle">
      SELECT
	      wl.LogID,
	      wl.WebserviceName,
	      wl.InterfaceName,
	      wl.IOMode,
	      wl.IODate,
	      wl.Context,
	      wl.Memo
      FROM
	      Webservice_Log wl
      WHERE 
	      1=1
    </Content>

    <Content Key="Update_CargoTypePrice" Desc="根据等级\产品ID修改产品价格" DataBaseType="SqlServer">
      update CargoType set FDisinfectPrice=@FDisinfectPrice,WDisinfectPrice=@WDisinfectPrice,FSterilizePrice=@FSterilizePrice,WSterilizePrice=@WSterilizePrice,FManPrice=@FManPrice,WManPrice=@WManPrice
      ,FBorrowBagPrice=@FBorrowBagPrice,WBorrowBagPrice=@WBorrowBagPrice,FReturnBagPrice=@FReturnBagPrice,WReturnBagPrice=@WReturnBagPrice
      where FLevel=@FLevel and CargoTypeID=@CargoTypeID
    </Content>
    <Content Key="Update_CargoTypePrice" Desc="根据等级\产品ID修改产品价格" DataBaseType="Oracle">
      update CargoType set FDisinfectPrice=:FDisinfectPrice,WDisinfectPrice=:WDisinfectPrice,FSterilizePrice=:FSterilizePrice,WSterilizePrice=:WSterilizePrice,FManPrice=:FManPrice,WManPrice=:WManPrice
      ,FBorrowBagPrice=:FBorrowBagPrice,WBorrowBagPrice=:WBorrowBagPrice,FReturnBagPrice=:FReturnBagPrice,WReturnBagPrice=:WReturnBagPrice
      where FLevel=:FLevel and CargoTypeID=:CargoTypeID
    </Content>
    <Content Key="Update_CarogTypePackageSettingReplace" Desc="" DataBaseType="SqlServer">
      delete from packagesetting where packagetypeid=@replaceCargotypeid;
      update cargotype set instrumentsnumber=(select instrumentsnumber from cargotype where cargotypeid=@modelCargotypeid) where cargotypeid=@replaceCargotypeid;
      insert into packagesetting(PackageSettingID,PackageTypeID,CargoTypeID,CargoTypeName,
      CargoTopType,Quantity,IsTrack ,IsDynamic ,IsRecycleDynamic ,IsCSSDProvide ,
      FOrder ,IsDoctorOwn ,usetimes ,	IsLightChecks)
      select NEWID(),@replaceCargotypeid,CargoTypeID,CargoTypeName,
      CargoTopType,Quantity,IsTrack ,IsDynamic ,IsRecycleDynamic ,IsCSSDProvide ,
      FOrder ,IsDoctorOwn ,usetimes ,	IsLightChecks
      from packagesetting where PackageTypeID=@modelCargotypeid;
    </Content>
    <Content Key="Update_CarogTypePackageSettingReplace" Desc="" DataBaseType="Oracle">
      begin
      delete from packagesetting where packagetypeid=:replaceCargotypeid;
      update cargotype set instrumentsnumber=(select instrumentsnumber from cargotype where cargotypeid=:modelCargotypeid) where cargotypeid=:replaceCargotypeid;
      insert into packagesetting(PackageSettingID,PackageTypeID,CargoTypeID,CargoTypeName,
      CargoTopType,Quantity,IsTrack ,IsDynamic ,IsRecycleDynamic ,IsCSSDProvide ,
      FOrder ,IsDoctorOwn ,usetimes ,	IsLightChecks)
      select fun_NEWGUID,:replaceCargotypeid,CargoTypeID,CargoTypeName,
      CargoTopType,Quantity,IsTrack ,IsDynamic ,IsRecycleDynamic ,IsCSSDProvide ,
      FOrder ,IsDoctorOwn ,usetimes ,	IsLightChecks
      from packagesetting where PackageTypeID=:modelCargotypeid;
      end;
    </Content>

    <Content Key="Query_SchedulerStationClass" DataBaseType="SqlServer">
      SELECT STATIONID,STATIONCLASSID,STATIONCLASSNAME,STATIONCLASSDESC,USEDSTATUS,STATIONCLASSSORT,ORGID FROM SchedulerStationClass Where 1=1
    </Content>
    <Content Key="Query_SchedulerStationClass" DataBaseType="Oracle">
      SELECT STATIONID,STATIONCLASSID,STATIONCLASSNAME,STATIONCLASSDESC,USEDSTATUS,STATIONCLASSSORT,ORGID FROM SchedulerStationClass Where 1=1
    </Content>

    <Content Key="Query_ExistsSchedulerStationClass" DataBaseType="SqlServer">
      SELECT STATIONID,STATIONCLASSID,STATIONCLASSNAME,STATIONCLASSDESC,USEDSTATUS,STATIONCLASSSORT,ORGID  FROM SchedulerStationClass Where STATIONCLASSID=@STATIONCLASSID
    </Content>
    <Content Key="Query_ExistsSchedulerStationClass" DataBaseType="Oracle">
      SELECT STATIONID,STATIONCLASSID,STATIONCLASSNAME,STATIONCLASSDESC,USEDSTATUS,STATIONCLASSSORT,ORGID  FROM SchedulerStationClass Where  STATIONCLASSID=:STATIONCLASSID
    </Content>

    <Content Key="Delete_SchedulerStationClass" DataBaseType="SqlServer">
      DELETE FROM SchedulerStationClass Where STATIONCLASSID=@STATIONCLASSID
    </Content>
    <Content Key="Delete_SchedulerStationClass" DataBaseType="Oracle">
      DELETE FROM SchedulerStationClass Where  STATIONCLASSID=:STATIONCLASSID
    </Content>
 
    <Content Key="Query_SchedulerStationClassTime" DataBaseType="SqlServer">
      SELECT CLASSTIMEID,CLASSID,CLASSSTARTTIME,CLASSENDTIME FROM SchedulerStationClassTime Where CLASSID=@CLASSID
    </Content>
    <Content Key="Query_SchedulerStationClassTime" DataBaseType="Oracle">
      SELECT CLASSTIMEID,CLASSID,CLASSSTARTTIME,CLASSENDTIME FROM SchedulerStationClassTime Where CLASSID=:CLASSID
    </Content>

    <Content Key="Query_ExistsSchedulerStationClassTime" DataBaseType="SqlServer">
      SELECT CLASSTIMEID,CLASSID,CLASSSTARTTIME,CLASSENDTIME FROM SchedulerStationClassTime Where CLASSTIMEID=@CLASSTIMEID
    </Content>
    <Content Key="Query_ExistsSchedulerStationClassTime" DataBaseType="Oracle">
      SELECT CLASSTIMEID,CLASSID,CLASSSTARTTIME,CLASSENDTIME FROM SchedulerStationClassTime Where  CLASSTIMEID=:CLASSTIMEID
    </Content>

    <Content Key="Delete_SchedulerStationClassTime" DataBaseType="SqlServer">
      DELETE FROM SchedulerStationClassTime Where CLASSTIMEID=@CLASSTIMEID
    </Content>
    <Content Key="Delete_SchedulerStationClassTime" DataBaseType="Oracle">
      DELETE FROM SchedulerStationClassTime Where CLASSTIMEID=:CLASSTIMEID
    </Content>
 
    <Content Key="Query_SchedulerWork" DataBaseType="SqlServer">
      SELECT SCID,USERID,STATIONID,STATIONCLASSID,SCHEDULERDATE,SCHEDULERWEEK,SCHEDULERWEEKDAY,CREATOR,CREATEDATE,ORGID FROM SchedulerWork Where 1=1
    </Content>
    <Content Key="Query_SchedulerWork" DataBaseType="Oracle">
      SELECT SCID,USERID,STATIONID,STATIONCLASSID,SCHEDULERDATE,SCHEDULERWEEK,SCHEDULERWEEKDAY,CREATOR,CREATEDATE,ORGID FROM SchedulerWork Where 1=1
    </Content>

    <Content Key="Query_ExistsSchedulerWork" DataBaseType="SqlServer">
      SELECT SCID,USERID,STATIONID,STATIONCLASSID,SCHEDULERDATE,SCHEDULERWEEK,SCHEDULERWEEKDAY,CREATOR,CREATEDATE,ORGID FROM SchedulerWork Where SCID=@SCID
    </Content>
    <Content Key="Query_ExistsSchedulerWork" DataBaseType="Oracle">
      SELECT SCID,USERID,STATIONID,STATIONCLASSID,SCHEDULERDATE,SCHEDULERWEEK,SCHEDULERWEEKDAY,CREATOR,CREATEDATE,ORGID FROM SchedulerWork Where  SCID=:SCID
    </Content>

    <Content Key="Query_ExistsSchedulerWorkByUserID" DataBaseType="SqlServer">
      SELECT SCID,USERID,STATIONID,STATIONCLASSID,SCHEDULERDATE,SCHEDULERWEEK,SCHEDULERWEEKDAY,CREATOR,CREATEDATE,ORGID FROM SchedulerWork
      Where ORGID=@ORGID and USERID=@USERID and STATIONCLASSID=@STATIONCLASSID and SCHEDULERDATE=@SCHEDULERDATE
    </Content>
    <Content Key="Query_ExistsSchedulerWorkByUserID" DataBaseType="Oracle">
      SELECT SCID,USERID,STATIONID,STATIONCLASSID,SCHEDULERDATE,SCHEDULERWEEK,SCHEDULERWEEKDAY,CREATOR,CREATEDATE,ORGID FROM SchedulerWork
      Where  ORGID=:ORGID and USERID=:USERID and STATIONCLASSID=:STATIONCLASSID and SCHEDULERDATE=:SCHEDULERDATE
    </Content>
    

    <Content Key="Delete_SchedulerWork" DataBaseType="SqlServer">
      DELETE FROM SchedulerWork Where SCID=@SCID
    </Content>
    <Content Key="Delete_SchedulerWork" DataBaseType="Oracle">
      DELETE FROM SchedulerWork Where SCID=:SCID
    </Content>

    <Content Key="Query_SchedulerWorkTime" DataBaseType="SqlServer">
      SELECT SCWORKTIMEID,SCID,STARTTIME,ENDTIME FROM SchedulerWorkTime Where 1=1
    </Content>
    <Content Key="Query_SchedulerWorkTime" DataBaseType="Oracle">
      SELECT SCWORKTIMEID,SCID,STARTTIME,ENDTIME FROM SchedulerWorkTime Where 1=1
    </Content>

    <Content Key="Query_ExistsSchedulerWorkTime" DataBaseType="SqlServer">
      SELECT SCWORKTIMEID,SCID,STARTTIME,ENDTIME FROM SchedulerWorkTime Where SCWORKTIMEID=@SCWORKTIMEID
    </Content>
    <Content Key="Query_ExistsSchedulerWorkTime" DataBaseType="Oracle">
      SELECT SCWORKTIMEID,SCID,STARTTIME,ENDTIME FROM SchedulerWorkTime Where SCWORKTIMEID=:SCWORKTIMEID
    </Content>

    <Content Key="Delete_SchedulerWorkTimeBySCID" DataBaseType="SqlServer">
      DELETE FROM SchedulerWorkTime Where SCID=@SCID
    </Content>
    <Content Key="Delete_SchedulerWorkTimeBySCID" DataBaseType="Oracle">
      DELETE FROM SchedulerWorkTime Where SCID=:SCID
    </Content>
 
    <Content Key="Delete_SchedulerWorkTimeByTimeID" DataBaseType="SqlServer">
      DELETE FROM SchedulerWorkTime Where SCWORKTIMEID=@SCWORKTIMEID
    </Content>
    <Content Key="Delete_SchedulerWorkTimeByTimeID" DataBaseType="Oracle">
      DELETE FROM SchedulerWorkTime Where SCWORKTIMEID=:SCWORKTIMEID
    </Content>

    <Content Key="Delete_FetchListByPackageID" DataBaseType="SqlServer">
      delete from FlowFetchList where PackageID=@PackageID
    </Content>
    <Content Key="Delete_FetchListByPackageID" DataBaseType="Oracle">
      delete from FlowFetchList where PackageID=:PackageID
    </Content>

    <Content Key="GetCargoTypeBath" DataBaseType="SqlServer">
      select * from CargoTypeBath where 1=1 {0}
    </Content>
    <Content Key="GetCargoTypeBath" DataBaseType="Oracle">
      select * from CargoTypeBath where 1=1 {0}
    </Content>
    <Content Key="GetCargoTypeBathDetail" DataBaseType="SqlServer">
      select * from CargoTypeBathDetail where 1=1 {0} order by CreateDate desc
    </Content>
    <Content Key="GetCargoTypeBathDetail" DataBaseType="Oracle">
      select * from CargoTypeBathDetail where 1=1 {0} order by CreateDate desc
    </Content>
    <Content Key="GetCargoTypeName" DataBaseType="SqlServer">
      select CargoTypeName from CargoType   where 1=1 {0}
    </Content>
    <Content Key="GetCargoTypeName" DataBaseType="Oracle">
      select CargoTypeName from CargoType   where 1=1 {0}
    </Content>
    <Content Key="GetCargoTypeBathName" DataBaseType="SqlServer">
      select * from CargoTypeBath
    </Content>
    <Content Key="GetCargoTypeBathName" DataBaseType="Oracle">
      select * from CargoTypeBath
    </Content>
    <Content Key="GetCargoTypeBathDetilBarcode" DataBaseType="SqlServer">
      select max(DetailBarCode)  from CargoTypeBathDetail where BithID=@BithID
    </Content>
    <Content Key="GetCargoTypeBathDetilBarcode" DataBaseType="Oracle">
      select max(DetailBarCode)  from CargoTypeBathDetail where BithID=:BithID
    </Content>
    <Content Key="GetPackageSetting" DataBaseType="SqlServer">
      select * from PackageSetting where 1=1 {0}
    </Content>
    <Content Key="GetPackageSetting" DataBaseType="Oracle">
      select * from PackageSetting where 1=1 {0}
    </Content>
    <Content Key="GetContainerBath" DataBaseType="SqlServer">
      select ct.*,ctb.* from Container ct join CargoTypeBathDetail ctb on ct.ContainerID=ctb.ContainerID
      join CargoTypeBath ctbh on ctbh.BithID=ctb.BithID where 1=1 {0} order by ctb.DetailBarCode desc
    </Content>
    <Content Key="GetContainerBath" DataBaseType="Oracle">
      select ct.*,ctb.* from Container ct join CargoTypeBathDetail ctb on ct.ContainerID=ctb.ContainerID
      join CargoTypeBath ctbh on ctbh.BithID=ctb.BithID where 1=1 {0} order by ctb.DetailBarCode desc
    </Content>

    <Content Key="Query_OperationSettingStockData" DataBaseType="SqlServer">
      select sl.Quantity from Cargotype ct
      inner join StorageList sl on ct.CargotypeID=sl.CargotypeID
      where 1=1 {0}
    </Content>
    <Content Key="Query_OperationSettingStockData" DataBaseType="Oracle">
      select sl.Quantity from Cargotype ct
      inner join StorageList sl on ct.CargotypeID=sl.CargotypeID
      where 1=1 {0}
    </Content>

    <Content Key="Query_TypeCargoTypeTreeData" DataBaseType="SqlServer">


      SELECT CONVERT(INT,(ROW_NUMBER() OVER (ORDER BY CARGOTOPTYPE ASC))+9999) AS TYPEVALUE, CARGOTOPTYPE,9999 AS ORDERBY,CONVERT(VARCHAR(36),ID) AS ID,KINDNAME AS NAME FROM CARGOTYPEKIND
      WITH (NOLOCK) LEFT JOIN SYSTEMTYPEPARAMETER WITH (NOLOCK)
      ON CARGOTYPEKIND.CARGOTOPTYPE = SYSTEMTYPEPARAMETER.TYPEVALUE
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType'AND (CARGOTYPEKIND.ISDELETE =0 OR CARGOTYPEKIND.ISDELETE IS NULL)  AND  SYSTEMTYPEPARAMETER.TypeValue='16'
      UNION
      SELECT TYPEVALUE,NULL AS CARGOTOPTYPE,1 AS ORDERBY,CONVERT(VARCHAR(36),TYPEVALUE) AS ID,TYPENAME AS NAME FROM SYSTEMTYPEPARAMETER
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType' AND SYSTEMTYPEPARAMETER.TypeValue='16'
      ORDER BY CARGOTOPTYPE,ORDERBY,NAME
    </Content>
    <Content Key="Query_TypeCargoTypeTreeData" DataBaseType="Oracle">

      SELECT TO_NUMBER(ROW_NUMBER() OVER (ORDER BY CARGOTOPTYPE ASC)||9999) AS TYPEVALUE, CARGOTOPTYPE,9999 AS ORDERBY,ID,KINDNAME AS NAME FROM CARGOTYPEKIND
      LEFT JOIN SYSTEMTYPEPARAMETER
      ON CARGOTYPEKIND.CARGOTOPTYPE = SYSTEMTYPEPARAMETER.TYPEVALUE
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType' AND (CARGOTYPEKIND.ISDELETE =0 OR CARGOTYPEKIND.ISDELETE IS NULL)  AND  SYSTEMTYPEPARAMETER.TypeValue='16'
      UNION
      SELECT TYPEVALUE,NULL AS CARGOTOPTYPE,1 AS ORDERBY,to_char(TYPEVALUE) AS ID,TYPENAME AS NAME FROM SYSTEMTYPEPARAMETER
      WHERE SYSTEMTYPEPARAMETER.TYPEKEY = 'CargoTopType'  AND SYSTEMTYPEPARAMETER.TypeValue='16'
      ORDER BY CARGOTOPTYPE,ORDERBY,NAME
    </Content>

    <Content Key="Query_CargoTypeBatchByCondition" DataBaseType="SqlServer">
      SELECT
      CARGOTYPE.CargoTypeID
      ,CARGOTYPE.CARGOTYPENAME
      ,CARGOTYPE.CargoTopType
      ,CARGOTYPE.IsTrack
      ,CARGOTYPE.IsDisabled
      ,CARGOTYPE.IsValidDate
      ,CARGOTYPE.VALIDDATEDAYS
      ,CARGOTYPE.Modifier
      ,CARGOTYPE.ModifyTime
      ,CARGOTYPE.SAFEQUANTITY
      ,CARGOTYPE.WarningDays
      ,CARGOTYPE.NeedMaintainTimes
      ,CARGOTYPE.ScrapeTimes
      ,CARGOTYPE.CargoImage
      ,CARGOTYPE.WashType
      ,CARGOTYPE.MinNumberPerPackage
      ,CARGOTYPE.BarCode
      ,CARGOTYPE.ManufacturerID
      ,CARGOTYPE.PackageTypeID
      ,CARGOTYPE.Pinyin
      ,CARGOTYPE.CargoTypeKind
      ,CARGOTYPE.Remark
      ,CARGOTYPE.TimesOrDays
      ,CARGOTYPE.amount
      ,CARGOTYPE.pertype
      ,CARGOTYPE.NeedMaintainDays
      ,CARGOTYPE.ScrapeDays
      ,CARGOTYPE.PackageNotAllContainer
      ,CARGOTYPE.PackageCheckMode
      ,CARGOTYPE.IsPrintContents
      ,CARGOTYPE.IsRecycleAlone
      ,CARGOTYPE.IsNeedBCP
      ,CARGOTYPE.IsVirtualPackage
      ,CARGOTYPE.Model
      ,CARGOTYPE.IsNormal
      ,CARGOTYPE.OfficialName
      ,CARGOTYPE.IsRecycleDynamic
      ,CARGOTYPE.IsIn
      ,CARGOTYPE.IsDisinfectOnly
      ,CARGOTYPE.IsDynamic
      ,CARGOTYPE.Specification
      ,CARGOTYPE.NumPerContainer
      ,CARGOTYPE.CheckerDefaultPackager
      ,CARGOTYPE.MinUnit
      ,CARGOTYPE.FWastage
      ,CARGOTYPE.FCostPrice
      ,CARGOTYPE.FLevel
      ,CARGOTYPE.PrintStyle
      ,CARGOTYPE.IsOEM
      ,CARGOTYPE.SynDataID
      ,CARGOTYPE.IsForOrgs
      ,CARGOTYPE.InstrumentsNumber
      ,CARGOTYPE.IsRecycleCheck
      ,CARGOTYPE.SupplierID
      ,CARGOTYPE.IsInstrumentPackage
      ,CARGOTYPE.FDynamicBinding
      ,CARGOTYPE.FFixedBinding
      ,CARGOTYPE.Unit
      ,CARGOTYPE.IsAutoPrintAllBarcode
      ,SYSTEMTYPEPARAMETER.TYPENAME
      ,PACKAGETYPE.PNAME AS OutPacking
      ,ISTRACKYESNO.TYPENAME AS ISTRACK_NAME
      ,ISVALIDDATEYESNO.TYPENAME  AS ISVALIDDATE_NAME
      ,view_CargoType.CargoTypeKindText AS CARGOTYPEKINDNAME
      ,view_CargoType.CargoTypeKindText
      ,view_CargoType.CargoTopTypeText

      ,PACKAGETYPE.PNAME as PACKAGETYPENAME
      ,case when CARGOTYPE.IsNormal=0 then '是' else '否' end as ISNORMALS
      ,o.Name as SUPPLYROOMNAME
      ,CARGOTYPE.InstrumentsNumber as INSTRUMENTSNUMBERS
      ,case when CARGOTYPE.IsNeedBCP=0 then '否' else '是' end as ISNEEDBCPS
      ,CARGOTYPE.amount as AMOUNTS
      FROM CARGOTYPE  WITH (NOLOCK)  LEFT JOIN PACKAGETYPE  WITH (NOLOCK)  ON CARGOTYPE.PACKAGETYPEID =PACKAGETYPE.PTYPEID
      LEFT JOIN view_CargoType WITH (NOLOCK) ON CARGOTYPE.CargoTypeID = view_CargoType.CargoTypeID
      --LEFT JOIN CARGOTYPEKIND WITH (NOLOCK) ON CARGOTYPE.CARGOTYPEKIND = CARGOTYPEKIND.ID
      LEFT JOIN SYSTEMTYPEPARAMETER WITH (NOLOCK)  ON  (CARGOTYPE.WASHTYPE=SYSTEMTYPEPARAMETER.TYPEVALUE AND  SYSTEMTYPEPARAMETER.TYPEKEY='WashType')
      LEFT JOIN SYSTEMTYPEPARAMETER ISTRACKYESNO  WITH (NOLOCK) ON ( CARGOTYPE.ISTRACK = ISTRACKYESNO.TYPEVALUE AND ISTRACKYESNO.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER ISVALIDDATEYESNO WITH (NOLOCK)  ON ( CARGOTYPE.ISVALIDDATE = ISVALIDDATEYESNO.TYPEVALUE AND ISVALIDDATEYESNO.TYPEKEY = 'YesOrNo')
      left join AC_Org o on CARGOTYPE.SupplyRoom=o.ID
      WHERE  1=1 AND CARGOTYPE.ISDISABLED !=1 AND CARGOTYPE.IsPackageKindType=1 {0}

    </Content>

    <Content Key="Query_CargoTypeBatchByCondition" DataBaseType="Oracle">
      SELECT
      CARGOTYPE.CargoTypeID
      ,CARGOTYPE.CARGOTYPENAME
      ,CARGOTYPE.CargoTopType
      ,CARGOTYPE.IsTrack
      ,CARGOTYPE.IsDisabled
      ,CARGOTYPE.IsValidDate
      ,CARGOTYPE.VALIDDATEDAYS
      ,CARGOTYPE.Modifier
      ,CARGOTYPE.ModifyTime
      ,CARGOTYPE.SAFEQUANTITY
      ,CARGOTYPE.WarningDays
      ,CARGOTYPE.NeedMaintainTimes
      ,CARGOTYPE.ScrapeTimes
      ,CARGOTYPE.CargoImage
      ,CARGOTYPE.WashType
      ,CARGOTYPE.MinNumberPerPackage
      ,CARGOTYPE.BarCode
      ,CARGOTYPE.ManufacturerID
      ,CARGOTYPE.PackageTypeID
      ,CARGOTYPE.Pinyin
      ,CARGOTYPE.CargoTypeKind
      ,CARGOTYPE.Remark
      ,CARGOTYPE.TimesOrDays
      ,CARGOTYPE.amount
      ,CARGOTYPE.pertype
      ,CARGOTYPE.NeedMaintainDays
      ,CARGOTYPE.ScrapeDays
      ,CARGOTYPE.PackageNotAllContainer
      ,CARGOTYPE.PackageCheckMode
      ,CARGOTYPE.IsPrintContents
      ,CARGOTYPE.IsRecycleAlone
      ,CARGOTYPE.IsNeedBCP
      ,CARGOTYPE.IsVirtualPackage
      ,CARGOTYPE.Model
      ,CARGOTYPE.IsNormal
      ,CARGOTYPE.OfficialName
      ,CARGOTYPE.IsRecycleDynamic
      ,CARGOTYPE.IsIn
      ,CARGOTYPE.IsDisinfectOnly
      ,CARGOTYPE.IsDynamic
      ,CARGOTYPE.Specification
      ,CARGOTYPE.NumPerContainer
      ,CARGOTYPE.CheckerDefaultPackager
      ,CARGOTYPE.MinUnit
      ,CARGOTYPE.FWastage
      ,CARGOTYPE.FCostPrice
      ,CARGOTYPE.FLevel
      ,CARGOTYPE.PrintStyle
      ,CARGOTYPE.IsOEM
      ,CARGOTYPE.SynDataID
      ,CARGOTYPE.IsForOrgs
      ,CARGOTYPE.InstrumentsNumber
      ,CARGOTYPE.IsRecycleCheck
      ,CARGOTYPE.SupplierID
      ,CARGOTYPE.IsInstrumentPackage
      ,CARGOTYPE.FDynamicBinding
      ,CARGOTYPE.FFixedBinding
      ,CARGOTYPE.Unit
      ,CARGOTYPE.IsAutoPrintAllBarcode
      ,SYSTEMTYPEPARAMETER.TYPENAME
      ,PACKAGETYPE.PNAME AS OutPacking
      ,ISTRACKYESNO.TYPENAME AS ISTRACK_NAME
      ,ISVALIDDATEYESNO.TYPENAME  AS ISVALIDDATE_NAME
      ,view_CargoType.CargoTypeKindText AS CARGOTYPEKINDNAME
      ,view_CargoType.CargoTypeKindText
      ,view_CargoType.CargoTopTypeText

      ,PACKAGETYPE.PNAME as PACKAGETYPENAME
      ,case when CARGOTYPE.IsNormal=0 then '是' else '否' end as ISNORMALS
      ,o.Name as SUPPLYROOMNAME
      ,CARGOTYPE.InstrumentsNumber as INSTRUMENTSNUMBERS
      ,case when CARGOTYPE.IsNeedBCP=0 then '否' else '是' end as ISNEEDBCPS
      ,CARGOTYPE.amount as AMOUNTS
      FROM CARGOTYPE  WITH (NOLOCK)  LEFT JOIN PACKAGETYPE  WITH (NOLOCK)  ON CARGOTYPE.PACKAGETYPEID =PACKAGETYPE.PTYPEID
      LEFT JOIN view_CargoType WITH (NOLOCK) ON CARGOTYPE.CargoTypeID = view_CargoType.CargoTypeID
      --LEFT JOIN CARGOTYPEKIND WITH (NOLOCK) ON CARGOTYPE.CARGOTYPEKIND = CARGOTYPEKIND.ID
      LEFT JOIN SYSTEMTYPEPARAMETER WITH (NOLOCK)  ON  (CARGOTYPE.WASHTYPE=SYSTEMTYPEPARAMETER.TYPEVALUE AND  SYSTEMTYPEPARAMETER.TYPEKEY='WashType')
      LEFT JOIN SYSTEMTYPEPARAMETER ISTRACKYESNO  WITH (NOLOCK) ON ( CARGOTYPE.ISTRACK = ISTRACKYESNO.TYPEVALUE AND ISTRACKYESNO.TYPEKEY = 'YesOrNo')
      LEFT JOIN SYSTEMTYPEPARAMETER ISVALIDDATEYESNO WITH (NOLOCK)  ON ( CARGOTYPE.ISVALIDDATE = ISVALIDDATEYESNO.TYPEVALUE AND ISVALIDDATEYESNO.TYPEKEY = 'YesOrNo')
      left join AC_Org o on CARGOTYPE.SupplyRoom=o.ID
      WHERE  1=1 AND CARGOTYPE.ISDISABLED !=1 AND CARGOTYPE.IsPackageKindType=1 {0}
      
    </Content>
    <Content Key="GetCargoTopTypeBath" DataBaseType="SqlServer">
      SELECT ID,CARGOTYPEKIND.CARGOTOPTYPE,KINDNAME ,PREVID ,CODE ,ISDELETE,CARGOTYPENAME,CARGOTYPEID  FROM CARGOTYPEKIND JOIN CargoType ct ON CARGOTYPEKIND.ID=ct.CargoTypeKind WHERE ct.CargoTypeID=@treeCargoTopType  AND (CARGOTYPEKIND.ISDELETE=0 OR CARGOTYPEKIND.ISDELETE IS NULL)
    </Content>
    <Content Key="GetCargoTopTypeBath" DataBaseType="Oracle">
      SELECT ID,CARGOTYPEKIND.CARGOTOPTYPE,KINDNAME ,PREVID ,CODE ,ISDELETE,CARGOTYPENAME,CARGOTYPEID  FROM CARGOTYPEKIND
      JOIN CargoType ct ON CARGOTYPEKIND.ID=ct.CargoTypeKind
      WHERE ct.CargoTypeID=@treeCargoTopType  AND (CARGOTYPEKIND.ISDELETE=0 OR CARGOTYPEKIND.ISDELETE IS NULL)
    </Content>
    <Content Key="GetPackageKind" DataBaseType="SqlServer">
      select ctb.* from  CargoTypeBathDetail ctbd
      join CargoTypeBath ctb on ctbd.BithID=ctb.BithID where 1=1 {0}
    </Content>
    <Content Key="GetPackageKind" DataBaseType="Oracle">
      select ctb.* from  CargoTypeBathDetail ctbd
      join CargoTypeBath ctb on ctbd.BithID=ctb.BithID where 1=1 {0}
    </Content>

    <Content Key="Sensor_Query_GetSensorListByGroup1" DataBaseType="SqlServer">
SELECT SensorID
      ,SensorGroup
      ,SensorType
      ,SensorModel
      ,SensorKey
      ,SensorKeyEx
      ,SensorName
      ,Connection
      ,PositionMark
      ,SensorShowType
      ,Remarks
  FROM Sensor
 WHERE SensorGroup = @SensorGroup
 ORDER BY SensorKey
    </Content>
    <Content Key="Sensor_Query_GetSensorListByGroup1" DataBaseType="Oracle">
      <![CDATA[
SELECT SensorID
      ,SensorGroup
      ,SensorType
      ,SensorModel
      ,SensorKey
      ,SensorKeyEx
      ,SensorName
      ,Connection
      ,PositionMark
      ,SensorShowType
      ,Remarks
  FROM Sensor
 WHERE SensorGroup = :SensorGroup
 ORDER BY SensorKey
      ]]>
    </Content>
  </Contents>
</SqlConfig>
