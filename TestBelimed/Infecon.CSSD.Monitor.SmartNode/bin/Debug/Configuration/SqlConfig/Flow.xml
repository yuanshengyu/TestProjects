<?xml version="1.0" encoding="utf-8" ?>
<SqlConfig>
  <Contents>
    <Content Key="Query_FlowFetchInfo" DataBaseType="SqlServer">
      <![CDATA[	  
      select a.FETCHID,b.FNames as NAME,a.FETCHDATE,c.FNames as RNAME ,org.Name  ORGNAME,a.FISPDADATA,l.LOCATIONNAME,COUNT(1) as FQTY,
      Case when a.FISPDADATA = 0 then '否' when a.FISPDADATA = 1 then '是' end as PDA from FlowFetch a
      inner join FlowFetchList t2 on t2.FetchID=a.FetchID      
      inner join AC_WorkGroup b  on a.OPID = b.FID      
      left join AC_WorkGroup c   on a.RECIPIENTID = c.FID
      left join Location l  on a.Locationid = l.Locationid
      left join AC_User au on au.ID=c.FID 
      left join AC_OrgUser ou  on ou.UserID =au.ID 
      left join AC_Org org on  org.ID =ou.OrgID
      where 1=1  {0}
      group by a.FETCHID,b.FNames,a.FETCHDATE,c.FNames ,a.FISPDADATA,l.LOCATIONNAME ,org.Name
      ]]>
    </Content>
    <Content Key="Query_FlowFetchInfo" DataBaseType="Oracle">
      <![CDATA[
      select a.FETCHID,b.FNames as NAME,a.FETCHDATE,c.FNames as RNAME ,org.Name  ORGNAME,a.FISPDADATA,l.LOCATIONNAME,COUNT(1) as FQTY,
      Case when a.FISPDADATA = 0 then '否' when a.FISPDADATA = 1 then '是' end as PDA from FlowFetch a
      inner join FlowFetchList t2 on t2.FetchID=a.FetchID      
      inner join AC_WorkGroup b  on a.OPID = b.FID      
      left join AC_WorkGroup c   on a.RECIPIENTID = c.FID
      left join Location l  on a.Locationid = l.Locationid
      left join AC_User au on au.ID=c.FID 
      left join AC_OrgUser ou  on ou.UserID =au.ID 
      left join AC_Org org on  org.ID =ou.OrgID
      where 1=1  {0}
      group by a.FETCHID,b.FNames,a.FETCHDATE,c.FNames ,a.FISPDADATA,l.LOCATIONNAME ,org.Name
      ]]>
    </Content>
    <Content Key="Query_PackageUseDetail" DataBaseType="SqlServer">
      SELECT DISTINCT
      view_CargoType.CargoTopTypeText,
      view_CargoType.CargoTypeKindText,
      view_CargoType.CargoTypeText,
      StorageList.Barcode,
      FlowUseList.QUANTITY AS UseQty
      FROM FlowUseList
      INNER JOIN StorageList ON StorageList.StorageID = FlowUseList.StorageID
      left JOIN view_CargoType ON view_CargoType.CargoTypeID = StorageList.CargoTypeID
      WHERE 1=1 {0}
      Order By
      view_CargoType.CargoTopTypeText,
      view_CargoType.CargoTypeKindText,
      view_CargoType.CargoTypeText
    </Content>
    <Content Key="Query_PackageUseDetail" DataBaseType="SqlServer">
      SELECT DISTINCT
      view_CargoType.CargoTopTypeText,
      view_CargoType.CargoTypeKindText,
      view_CargoType.CargoTypeText,
      StorageList.Barcode,
      FlowUseList.QUANTITY AS UseQty
      FROM FlowUseList
      INNER JOIN StorageList ON StorageList.StorageID = FlowUseList.StorageID
      left JOIN view_CargoType ON view_CargoType.CargoTypeID = StorageList.CargoTypeID
      WHERE 1=1 {0}
      Order By
      view_CargoType.CargoTopTypeText,
      view_CargoType.CargoTypeKindText,
      view_CargoType.CargoTypeText
    </Content>
    <Content Key="Update_FlowProvideList_Confirm" DataBaseType="SqlServer">
      UPDATE FlowProvideList
      SET ProvideConfirmID = @ProvideConfirmID
      WHERE 1 = 1 {0}
    </Content>
    <Content Key="Update_FlowProvideList_Confirm" DataBaseType="Oracle">
      UPDATE FlowProvideList
      SET ProvideConfirmID = :ProvideConfirmID
      WHERE 1 = 1 {0}
    </Content>
    <Content Key="Query_FlowProvideList" DataBaseType="SqlServer">
      SELECT
      FlowProvideList.PackageID
      ,StorageList.BarCode
      ,StorageList.StorageID
      ,FlowProvideList.ProvideConfirmID
      ,Case when FlowProvideList.ProvideConfirmID = '00000000-0000-0000-0000-000000000000' THEN '未接收' ELSE '已接收' END as ConfirmText
      ,Case when FlowProvideList.ProvideConfirmID = '00000000-0000-0000-0000-000000000000' THEN 0 ELSE 1 END as ConfirmStatus
      ,view_CargoType.CargoTopTypeText
      ,view_CargoType.CargoTypeKindText AS CargoKindText
      ,view_CargoType.CargoTypeText
      FROM FlowProvideList
      INNER JOIN FlowProvide
      ON FlowProvide.ProvideID = FlowProvideList.ProvideID
      INNER JOIN FlowPackageList
      ON FlowPackageList.PackageID = FlowProvideList.PackageID
      INNER JOIN StorageList
      ON StorageList.StorageID = FlowPackageList.StorageID
      INNER JOIN view_CargoType
      ON view_CargoType.CargoTypeID = StorageList.CargoTypeID
      WHERE 1 = 1 {0}
      ORDER BY view_CargoType.CargoTopTypeText,view_CargoType.CargoTypeKindText
      ,view_CargoType.CargoTypeText,StorageList.BarCode
    </Content>

    <Content Key="Query_FlowPackageListStoragelistInfo" DataBaseType="SqlServer">
      <![CDATA[
    select a.FETCHID,c.CARGOTYPENAME,d.BARCODE from FlowFetchList a
    left join FlowPackageList b  on a.PackageID = b.PackageID
    left join CargoType c  on b.CargoTypeID = c.CargoTypeID
    left join  Storagelist d  on d.StorageID = b.StorageID
    where 1=1 {0}
      ]]>
    </Content>
    <Content Key="Query_FlowPackageListStoragelistInfo" DataBaseType="Oracle">
      <![CDATA[
    select a.FETCHID,c.CARGOTYPENAME,d.BARCODE from FlowFetchList a
    left join FlowPackageList b  on a.PackageID = b.PackageID
    left join CargoType c  on b.CargoTypeID = c.CargoTypeID
    left join  Storagelist d  on d.StorageID = b.StorageID
    where 1=1 {0}
      ]]>
    </Content>


    <Content Key="Query_FlowPackageInCargoListInfoByFPackageID" DataBaseType="SqlServer">
      Select * From FlowPackageInCargoList Where FPackageID=@FPackageID
    </Content>
    <Content Key="Query_FlowPackageInCargoListInfoByFPackageID" DataBaseType="Oracle">
      Select * From FlowPackageInCargoList Where FPackageID=:FPackageID
    </Content>
    <Content Key="Query_FlowProvideViewList" DataBaseType="SqlServer">
      select (Select COUNT(*) FROM FlowProvideList fpl where fpl.ProvideID = p.ProvideID) as QUANTITY,p.PROVIDEDATE,u.fNames as OPIDNAME,o.Name as ORGNAME,p.BARCODE,p.PROVIDEID,case when RECIPIENT = '' then US.FNames else  RECIPIENT end as RECIPIENT,RECIPIENTID,p.FISPDADATA,
      Case when p.FISPDADATA = 0 then '否' when p.FISPDADATA = 1 then '是' end as PDA,Case when p.SureStatus = 0 then '否' when p.SureStatus = 1 then '是' end as SURESTATUS
      from FlowProvide p  inner join AC_WorkGroup u  on p.OPID = u.FID
      inner join AC_Org o  on p.OrgID = o.ID
      --Left JOIN AC_USER US  ON p.RecipientID = US.ID
      Left JOIN AC_WorkGroup US  ON p.RecipientID = US.FID
      where 1= 1 {0}
      group by p.ProvideDate,u.fNames,o.Name,p.BarCode,p.ProvideID,case when RECIPIENT = '' then US.FNames else  RECIPIENT end,RECIPIENTID,p.FISPDADATA,p.SureStatus
    </Content>
    <Content Key="Query_FlowProvideViewList" DataBaseType="Oracle">
      select (Select COUNT(*) FROM FlowProvideList fpl where fpl.ProvideID = p.ProvideID) as QUANTITY,p.PROVIDEDATE,u.fNames as OPIDNAME,o.Name as ORGNAME,p.BARCODE,p.PROVIDEID,case when RECIPIENT = '' then US.FNames else  RECIPIENT end as RECIPIENT,RECIPIENTID,p.FISPDADATA,
      Case when p.FISPDADATA = 0 then '否' when p.FISPDADATA = 1 then '是' end as PDA,Case when p.SureStatus = 0 then '否' when p.SureStatus = 1 then '是' end as SURESTATUS
      from FlowProvide p  inner join AC_WorkGroup u  on p.OPID = u.FID
      inner join AC_Org o  on p.OrgID = o.ID
      Left JOIN AC_WorkGroup US  ON p.RecipientID = US.FID
      where 1= 1 {0}
      group by p.ProvideDate,u.fNames,o.Name,p.BarCode,p.ProvideID,case when RECIPIENT = '' then US.FNames else  RECIPIENT end,RECIPIENTID,p.FISPDADATA,p.SureStatus
    </Content>

    <Content Key="Query_FlowProvideViewDetail" DataBaseType="SqlServer">
      select t.CARGOTYPENAME,sum(d.Quantity) as QUANTITY
      from FlowProvideList a   inner join StorageList d  on a.PackageID=d.StorageID
      inner join CargoType t  on d.CargoTypeid = t.CargoTypeid
      where 1=1 {0}
      group by t.CargoTypeName
      order by t.CargoTypeName
    </Content>
    <Content Key="Query_FlowProvideViewDetail" DataBaseType="Oracle">
      select t.CARGOTYPENAME,sum(d.Quantity) as QUANTITY
      from FlowProvideList a   inner join StorageList d  on a.PackageID=d.StorageID
      inner join CargoType t  on d.CargoTypeid = t.CargoTypeid
      where 1=1 {0}
      group by t.CargoTypeName
      order by t.CargoTypeName
    </Content>

    <Content Key="Delete_FlowProvideNoProvideID" DataBaseType="SqlServer">
      delete from FlowProvide where ProvideID not in (select ProvideID from FlowProvideList)
    </Content>
    <Content Key="Delete_FlowProvideNoProvideID" DataBaseType="Oracle">
      delete from FlowProvide where ProvideID not in (select ProvideID from FlowProvideList)
    </Content>


    <Content Key="Query_FlowProvideViewDetailInfo" DataBaseType="SqlServer">
      select t.CARGOTYPENAME,d.Quantity as QUANTITY,d.BARCODE,a.ProvideID
      from FlowProvideList a  inner join FlowPackageList c  on a.PackageID=c.PackageID
      left join StorageList d  on c.StorageID=d.StorageID
      inner join CargoType t  on d.CargoTypeid = t.CargoTypeid
      where 1=1 {0}
      order by t.CargoTypeName
    </Content>
    <Content Key="Query_FlowProvideViewDetailInfo" DataBaseType="Oracle">
      select t.CARGOTYPENAME,d.Quantity as QUANTITY,d.BARCODE,a.ProvideID
      from FlowProvideList a  inner join FlowPackageList c  on a.PackageID=c.PackageID
      left join StorageList d  on c.StorageID=d.StorageID
      inner join CargoType t  on d.CargoTypeid = t.CargoTypeid
      where 1=1 {0}
      order by t.CargoTypeName
    </Content>

    <Content Key="Query_FlowProvideProvideReport" DataBaseType="SqlServer">
      select au.LOGINNAME,g.NAME,
      case ISNULL(fpi.FPackageName,'') when '' then e.CARGOTYPENAME else fpi.FPackageName end as CARGOTYPENAME
      ,d.Quantity as QUANTITYSUM,a.PROVIDEDATE,p.NAME AS PARENTORGNAME
      from FlowProvide a  inner join FlowProvideList b  on a.ProvideID=b.ProvideID
      inner join FlowPackageList c  on b.PackageID=c.PackageID
      left join FlowPackageIn fpi on c.FPackageID=fpi.FPackageID
      inner join  StorageList d  on c.StorageID=d.StorageID
      inner join CargoType e  on d.CargoTypeID=e.CargoTypeID
      inner join AC_Org g  on a.OrgID=g.ID
      --inner join AC_User h   on a.OPID=h.ID
      inner join AC_WorkGroup h   on a.OPID=h.FID
      inner join AC_UserWorkGroup wg on h.FID=wg.FGroupID
      inner join AC_User au on wg.FUserID=au.ID
      left join AC_Org p on g.previd = p.ID
      where  a.ProvideDate between @time1   and @time2  and a.FlowOrgID =@flowOrgID
    </Content>
    <Content Key="Query_FlowProvideProvideReport" DataBaseType="Oracle">
      select au.LOGINNAME,g.NAME,
      case when fpi.FPackageName is null then e.CARGOTYPENAME else fpi.FPackageName end as CARGOTYPENAME
      ,d.Quantity as QUANTITYSUM,a.PROVIDEDATE,p.NAME AS PARENTORGNAME
      from FlowProvide a  inner join FlowProvideList b  on a.ProvideID=b.ProvideID
      inner join FlowPackageList c  on b.PackageID=c.PackageID
      left join FlowPackageIn fpi on c.FPackageID=fpi.FPackageID
      inner join  StorageList d  on c.StorageID=d.StorageID
      inner join CargoType e  on d.CargoTypeID=e.CargoTypeID
      inner join AC_Org g  on a.OrgID=g.ID
      --inner join AC_User h   on a.OPID=h.ID
      inner join AC_WorkGroup h   on a.OPID=h.FID
      inner join AC_UserWorkGroup wg on h.FID=wg.FGroupID
      inner join AC_User au on wg.FUserID=au.ID
      left join AC_Org p on g.previd = p.ID
      where  a.ProvideDate between :time1   and :time2  and a.FlowOrgID =:flowOrgID
    </Content>

    <Content Key="Query_FlowProvideProvideReportWithOpid" DataBaseType="SqlServer">
      select au.LOGINNAME,g.NAME,
      case ISNULL(fpi.FPackageName,'') when '' then e.CARGOTYPENAME else fpi.FPackageName end as CARGOTYPENAME
      ,d.Quantity as QUANTITYSUM,a.PROVIDEDATE,p.NAME AS PARENTORGNAME
      from FlowProvide a  inner join FlowProvideList b  on a.ProvideID=b.ProvideID
      inner join FlowPackageList c  on b.PackageID=c.PackageID
      left join FlowPackageIn fpi on c.FPackageID=fpi.FPackageID
      inner join  StorageList d  on c.StorageID=d.StorageID
      inner join CargoType e  on d.CargoTypeID=e.CargoTypeID
      inner join AC_Org g  on a.OrgID=g.ID
      --inner join AC_User h   on a.OPID=h.ID
      inner join AC_WorkGroup h   on a.OPID=h.FID
      inner join AC_UserWorkGroup wg on h.FID=wg.FGroupID
      inner join AC_User au on wg.FUserID=au.ID
      left join AC_Org p on g.previd = p.ID
      where  a.ProvideDate between @time1   and @time2  and a.FlowOrgID =@flowOrgID
      and a.OPID=@id
    </Content>
    <Content Key="Query_FlowProvideProvideReportWithOpid" DataBaseType="Oracle">
      select au.LOGINNAME,g.NAME,
      case when fpi.FPackageName is null then e.CARGOTYPENAME else fpi.FPackageName end as CARGOTYPENAME
      ,d.Quantity as QUANTITYSUM,a.PROVIDEDATE,p.NAME AS PARENTORGNAME
      from FlowProvide a  inner join FlowProvideList b  on a.ProvideID=b.ProvideID
      inner join FlowPackageList c  on b.PackageID=c.PackageID
      left join FlowPackageIn fpi on c.FPackageID=fpi.FPackageID
      inner join  StorageList d  on c.StorageID=d.StorageID
      inner join CargoType e  on d.CargoTypeID=e.CargoTypeID
      inner join AC_Org g  on a.OrgID=g.ID
      --inner join AC_User h   on a.OPID=h.ID
      inner join AC_WorkGroup h   on a.OPID=h.FID
      inner join AC_UserWorkGroup wg on h.FID=wg.FGroupID
      inner join AC_User au on wg.FUserID=au.ID
      left join AC_Org p on g.previd = p.ID
      where  a.ProvideDate between :time1   and :time2  and a.FlowOrgID =:flowOrgID
      and a.OPID=:id
    </Content>


    <Content Key="Query_FlowPackageInInfoByFPackageID" DataBaseType="SqlServer">
      Select * From FlowPackageIn Where FPackageID=@FPackageID
    </Content>
    <Content Key="Query_FlowPackageInInfoByFPackageID" DataBaseType="Oracle">
      Select * From FlowPackageIn Where FPackageID=:FPackageID
    </Content>

    <Content Key="Query_FlowTaskByFRecycleID" DataBaseType="SqlServer">
      Select * From FlowTask Where FRecycleID=@FRecycleID
    </Content>
    <Content Key="Query_FlowTaskByFRecycleID" DataBaseType="Oracle">
      Select * From FlowTask Where FRecycleID=:FRecycleID
    </Content>

    <Content Key="Query_AgainFlowTaskByFRecycleID" DataBaseType="SqlServer">
      Select * From FlowTask Where FRecycleID=@FRecycleID and FinishFlag=0
    </Content>
    <Content Key="Query_AgainFlowTaskByFRecycleID" DataBaseType="Oracle">
      Select * From FlowTask Where FRecycleID=:FRecycleID and FinishFlag=0
    </Content>

    <Content Key="Query_FlowPackageInList_Bak" DataBaseType="SqlServer">
      Select t1.FPACKAGEID,t1.PACKAGEINDATE,t1.OPID,t1.SENDER,t1.BARCODE,t1.MEMO,t1.CARGOTOPTYPE,t1.CARGOTYPEID,t2.CARGOTYPENAME,
      t1.QUANTITY,t1.FLOWORGID,t1.FLOWTYPE,t1.SENDTEXT,t1.RETURNDATE,t1.RETURNOPID,t1.RETURNRECEIVERID,
      t1.RETURNMEMO,o.Name as ORGNAME,u.FNames as OPNAME,t1.RETURNRECEIVER
      From  FlowPackageIn t1
      Inner Join CargoType t2 On t2.CargoTypeID=t1.CargoTypeID
      left join AC_Org o on t1.Sender = o.ID
      --inner join AC_User u on t1.OPID = u.ID
      inner join AC_WorkGroup u on t1.OPID = u.FID
      Where 1=1 {0}
    </Content>
    <Content Key="Query_FlowPackageInList_Bak" DataBaseType="Oracle">
      Select t1.FPACKAGEID,t1.PACKAGEINDATE,t1.OPID,t1.SENDER,t1.BARCODE,t1.MEMO,t1.CARGOTOPTYPE,t1.CARGOTYPEID,t2.CARGOTYPENAME,
      t1.QUANTITY,t1.FLOWORGID,t1.FLOWTYPE,t1.SENDTEXT,t1.RETURNDATE,t1.RETURNOPID,t1.RETURNRECEIVERID,
      t1.RETURNMEMO,o.Name as ORGNAME,u.FNames as OPNAME,t1.RETURNRECEIVER
      From  FlowPackageIn t1
      Inner Join CargoType t2 On t2.CargoTypeID=t1.CargoTypeID
      left join AC_Org o on t1.Sender = o.ID
      --inner join AC_User u on t1.OPID = u.ID
      inner join AC_WorkGroup u on t1.OPID = u.FID
      Where 1=1 {0}
    </Content>

    <Content Key="Query_FlowPackageInList" DataBaseType="SqlServer">
     <![CDATA[
         SELECT  T1.FPACKAGEID,T1.PACKAGEINDATE,T1.OPID,T1.SENDER,T1.BARCODE,T1.MEMO,T1.CARGOTOPTYPE,T1.CARGOTYPEID,
      count(distinct T2.packageid) QUANTITY,T1.FLOWORGID,T1.FLOWTYPE,T1.SENDTEXT,T1.RETURNDATE,T1.RETURNOPID,T1.RETURNRECEIVERID,
      T1.RETURNMEMO,O.NAME AS ORGNAME,U.FNames AS OPNAME,T1.RETURNRECEIVER,T1.FPATIENT,T1.FDOCTOR,T1.FSURGERYPART,T1.FSURGERYROOM,T1.FMEASUREMENTS,T1.FINPATIENTAREA,T1.FBEDNO,T1.FHOSPITALIZEDNO
      --,T3.BARCODE,T3.STATUS FRECYCLESTATUS
      ,T5.OPID,T6.FNames FRECYCLER
      ,T7.CARGOTYPENAME
      --,T8.LASTFDISINFECTID
      --,T10.USERID FSTERILIZEID
      ,T14.FNames FSTERILIZER
      ,T10.TODAYUSETIMES,T10.CHECKDATE,T10.CHECKID
      ,T10.BEGINDATE FSTERILIZEDATE
      ,T15.FNames FSCHECKER
      --,T10.LOGID
      ,T16.TYPENAME FSTERILIZERESULT
      ,CASE ISNULL(FSTERILIZETYPE,0) WHEN 4 THEN '压力蒸汽灭菌' WHEN 5 THEN '等离子灭菌' WHEN 6 THEN '环氧乙烷灭菌' ELSE '' END FSTERILIZETYPE
      ,T12.OPID FPROVIDEID,T17.FNames FPROVIDER,T12.PROVIDEDATE,T12.ORGID FPROVIDERORGID,T18.NAME FPROVIDERORG
      ,D.DEVICENAME,FR.OPID ,AWR.FNAMES FRECYCLER,awp.FNames FPACKAGER,awC.FNames FCHECKER,T1.FPACKAGENAME
      ,BTP.TypeName as IsBPCDOK
      ,T1.FPatient
      ,T1.InDisinfectPrice as INDISINFECTPRICE
      ,isnull(T1.IsChecked,0) as ISCHECKED
      ,T1.PackageInCode as PACKAGEINCODE
      ,T2.SubPackageQty as SUBPACKAGEQTY
      ,T1.DisabledReason
      
      ,T5.RecycleDate --回收时间
      ,Disinfect.FNames as DisinfectName --清洗人
      ,fd.DisinfectDate --清洗时间
      ,DisinfectDevices.DeviceName as DisinfectDeviceName --清洗设备
      ,dul.TODAYUSETIMES as DisinfectToDayUseTimes --清洗锅次
      ,T3.Barcode as PackageBarcode --条码
      ,againRecycleName.FNames as AgainRecycleName --再次回收人
      ,T1.AgainRecycleDate --再次回收时间
      ,againDisinfectName.FNames as AgainDisinfectName --再次清洗人
      ,T1.AgainDisinfectDate --再次清洗时间
      ,T1.AgainBarcode --新条码
      ,returnName.FNames as ReturnName --归还人
      ,(CASE WHEN T10.IsBDTest <> 1 THEN CTP.TYPENAME END) AS ISCPCDOK
     ,case when  T7.IsNeedBCP=0 then case when BTP.TYPENAME is null then '未涉及' else BTP.TYPENAME end  else BTP.TYPENAME  end  AS ISBPCDOKs
      
      FROM FLOWPACKAGEIN T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.FPACKAGEID=T1.FPACKAGEID
      LEFT JOIN STORAGELIST T3 ON T3.STORAGEID=T2.STORAGEID
      LEFT JOIN FLOWRECYCLELIST T4 ON T4.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWRECYCLE T5 ON T5.FRECYCLEID=T4.FRECYCLEID
      
      /*----*/
      left join FlowDisinfectContainerList fdc on T5.FRecycleID=fdc.FRecycleID
      left join FlowDisinfect fd on fdc.FDisinfectID=fd.FDisinfectID
      left join DevicesUseLog dul on fd.LogID=dul.LogID
      left join Devices DisinfectDevices on dul.DeviceID=DisinfectDevices.DeviceID
      left join AC_WorkGroup Disinfect on dul.UserID=Disinfect.FID
      left join AC_WorkGroup againRecycleName on T1.AgainRecycleID=againRecycleName.FID
      left join AC_WorkGroup againDisinfectName  on T1.AgainDisinfectID=againDisinfectName.FID
      left join AC_WorkGroup returnName on T1.ReturnOPID=returnName.FID
      /*----*/
      
      LEFT JOIN AC_WorkGroup T6 ON T6.FID=T5.OPID
      LEFT JOIN CARGOTYPE T7 ON T7.CARGOTYPEID=T1.CARGOTYPEID
      --LEFT JOIN FLOWRECYCLECONTAINER T8 ON T8.FRECYCLEID=T5.FRECYCLEID
      LEFT JOIN FLOWSTERILIZATIONLIST T9 ON T9.PACKAGEID=T2.PACKAGEID
      LEFT JOIN DEVICESUSELOG T10 ON T10.LOGID=T9.STERILIZATIONLOGID
      LEFT JOIN SYSTEMTYPEPARAMETER CTP ON ( T10.IsCPCDOK =  CTP.TYPEVALUE AND CTP.TYPEKEY = 'IsOK')
      LEFT JOIN FLOWPROVIDELIST T11 ON T11.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWPROVIDE T12 ON T12.PROVIDEID=T11.PROVIDEID
      LEFT JOIN AC_WorkGroup T14 ON T14.FID=T10.USERID
      LEFT JOIN AC_WorkGroup T15 ON T15.FID=T10.CHECKID
      LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY='QualifiedNO') T16 ON T16.TYPEVALUE=T2.BADFLAG
      LEFT JOIN AC_WorkGroup T17 ON T17.FID=T12.OPID
      LEFT JOIN AC_ORG T18 ON T18.ID=T12.ORGID
      LEFT JOIN AC_ORG O ON T1.SENDER = O.ID
      INNER JOIN AC_WorkGroup U ON T1.OPID = U.FID
      Left join Devices d on d.DeviceID=t10.DeviceID
      left join FlowRecycleList frl on frl.PackageID =t2.PackageID
      left join FlowRecycle fr on fr.FRecycleID=frl.FRecycleID
      left join AC_WorkGroup awR on awr.FID=fr.OPID
      left join AC_WorkGroup awP on awp.FID=t1.packagerID
      left join AC_WorkGroup awC on awc.FID=t2.CheckID
      LEFT JOIN SYSTEMTYPEPARAMETER BTP ON ( T10.IsBPCDOK =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'IsOK')
      WHERE 1=1  {0}
      GROUP by T1.FPACKAGEID,T1.PACKAGEINDATE,T1.OPID,T1.SENDER,T1.BARCODE,T1.MEMO,T1.CARGOTOPTYPE,T1.CARGOTYPEID,
      T1.FLOWORGID,T1.FLOWTYPE,T1.SENDTEXT,T1.RETURNDATE,T1.RETURNOPID,T1.RETURNRECEIVERID,
      T1.RETURNMEMO,O.NAME  ,U.FNames ,T1.RETURNRECEIVER,T1.FPATIENT,T1.FDOCTOR,T1.FSURGERYPART,T1.FSURGERYROOM,T1.FMEASUREMENTS,T1.FINPATIENTAREA,T1.FBEDNO,T1.FHOSPITALIZEDNO
      --,T3.BARCODE,T3.STATUS FRECYCLESTATUS
      ,T5.OPID,T6.FNames
      ,T7.CARGOTYPENAME
      --,T8.LASTFDISINFECTID
      --,T10.USERID FSTERILIZEID
      ,T14.FNames
      ,T10.TODAYUSETIMES,T10.CHECKDATE,T10.CHECKID
      ,T10.BEGINDATE
      ,T15.FNames
      --,T10.LOGID
      ,T16.TYPENAME
      ,CASE ISNULL(FSTERILIZETYPE,0) WHEN 4 THEN '压力蒸汽灭菌' WHEN 5 THEN '等离子灭菌' WHEN 6 THEN '环氧乙烷灭菌' ELSE '' END
      ,T12.OPID  ,T17.FNames ,T12.PROVIDEDATE,T12.ORGID  ,T18.NAME
      ,D.DEVICENAME,FR.OPID ,AWR.FNAMES  ,awp.FNames  ,awC.FNames  ,T1.FPACKAGENAME
      ,BTP.TypeName
      ,T1.FPatient
      ,T1.InDisinfectPrice
      ,T1.IsChecked
      ,T1.PackageInCode
      ,T2.SubPackageQty
      ,T1.DisabledReason
      
      ,T5.RecycleDate
      ,Disinfect.FNames
      ,fd.DisinfectDate
      ,againRecycleName.FNames 
      ,T1.AgainRecycleDate
      ,T3.Barcode
      ,T1.AgainBarcode
      ,againDisinfectName.FNames
      ,T1.AgainDisinfectDate
      ,returnName.FNames
      ,DisinfectDevices.DeviceName
      ,dul.TODAYUSETIMES
      ,T10.IsBDTest
      ,CTP.TYPENAME
      ,T9.SterilizationLogID
      ,T7.IsNeedBCP
     ]]>
    </Content>
    <Content Key="Query_FlowPackageInList" DataBaseType="Oracle">
     <![CDATA[
        SELECT  T1.FPACKAGEID,T1.PACKAGEINDATE,T1.OPID,T1.SENDER,T1.BARCODE,T1.MEMO,T1.CARGOTOPTYPE,T1.CARGOTYPEID,
      count(distinct T2.packageid) QUANTITY,T1.FLOWORGID,T1.FLOWTYPE,T1.SENDTEXT,T1.RETURNDATE,T1.RETURNOPID,T1.RETURNRECEIVERID,
      T1.RETURNMEMO,O.NAME AS ORGNAME,U.FNames AS OPNAME,T1.RETURNRECEIVER,T1.FPATIENT,T1.FDOCTOR,T1.FSURGERYPART,T1.FSURGERYROOM,T1.FMEASUREMENTS,T1.FINPATIENTAREA,T1.FBEDNO,T1.FHOSPITALIZEDNO
      --,T3.BARCODE,T3.STATUS FRECYCLESTATUS
      ,T5.OPID,T6.FNames FRECYCLER
      ,T7.CARGOTYPENAME
      --,T8.LASTFDISINFECTID
      --,T10.USERID FSTERILIZEID
      ,T14.FNames FSTERILIZER
      ,T10.TODAYUSETIMES,T10.CHECKDATE,T10.CHECKID
      ,T10.BEGINDATE FSTERILIZEDATE
      ,T15.FNames FSCHECKER
      --,T10.LOGID
      ,T16.TYPENAME FSTERILIZERESULT
      ,CASE nvl(FSTERILIZETYPE,0) WHEN 4 THEN '压力蒸汽灭菌' WHEN 5 THEN '等离子灭菌' WHEN 6 THEN '环氧乙烷灭菌' ELSE '' END FSTERILIZETYPE
      ,T12.OPID FPROVIDEID,T17.FNames FPROVIDER,T12.PROVIDEDATE,T12.ORGID FPROVIDERORGID,T18.NAME FPROVIDERORG
      ,D.DEVICENAME,FR.OPID ,AWR.FNAMES FRECYCLER,awp.FNames FPACKAGER,awC.FNames FCHECKER,T1.FPACKAGENAME
      ,BTP.TypeName as IsBPCDOK
      ,T1.FPatient
      ,T1.InDisinfectPrice as INDISINFECTPRICE
      ,nvl(T1.IsChecked,0) as ISCHECKED
      ,T1.PackageInCode as PACKAGEINCODE
      ,T2.SubPackageQty as SUBPACKAGEQTY
      ,T1.DisabledReason
      
      ,T5.RecycleDate --回收时间
      ,Disinfect.FNames as DisinfectName --清洗人
      ,fd.DisinfectDate --清洗时间
      ,DisinfectDevices.DeviceName as DisinfectDeviceName --清洗设备
      ,dul.TODAYUSETIMES as DisinfectToDayUseTimes --清洗锅次
      ,T3.Barcode as PackageBarcode --条码
      ,againRecycleName.FNames as AgainRecycleName --再次回收人
      ,T1.AgainRecycleDate --再次回收时间
      ,againDisinfectName.FNames as AgainDisinfectName --再次清洗人
      ,T1.AgainDisinfectDate --再次清洗时间
      ,T1.AgainBarcode --新条码
      ,returnName.FNames as ReturnName --归还人
      ,(CASE WHEN T10.IsBDTest <> 1 THEN CTP.TYPENAME END) AS ISCPCDOK
      ,case when  T7.IsNeedBCP=0 then case when BTP.TYPENAME is null then '未涉及' else BTP.TYPENAME end  else BTP.TYPENAME  end  AS ISBPCDOKs
      
      FROM FLOWPACKAGEIN T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.FPACKAGEID=T1.FPACKAGEID
      LEFT JOIN STORAGELIST T3 ON T3.STORAGEID=T2.STORAGEID
      LEFT JOIN FLOWRECYCLELIST T4 ON T4.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWRECYCLE T5 ON T5.FRECYCLEID=T4.FRECYCLEID
      
      /*----*/
      left join FlowDisinfectContainerList fdc on T5.FRecycleID=fdc.FRecycleID
      left join FlowDisinfect fd on fdc.FDisinfectID=fd.FDisinfectID
      left join DevicesUseLog dul on fd.LogID=dul.LogID
      left join Devices DisinfectDevices on dul.DeviceID=DisinfectDevices.DeviceID
      left join AC_WorkGroup Disinfect on dul.UserID=Disinfect.FID
      left join AC_WorkGroup againRecycleName on T1.AgainRecycleID=againRecycleName.FID
      left join AC_WorkGroup againDisinfectName  on T1.AgainDisinfectID=againDisinfectName.FID
      left join AC_WorkGroup returnName on T1.ReturnOPID=returnName.FID
      /*----*/
      
      LEFT JOIN AC_WorkGroup T6 ON T6.FID=T5.OPID
      LEFT JOIN CARGOTYPE T7 ON T7.CARGOTYPEID=T1.CARGOTYPEID
      --LEFT JOIN FLOWRECYCLECONTAINER T8 ON T8.FRECYCLEID=T5.FRECYCLEID
      LEFT JOIN FLOWSTERILIZATIONLIST T9 ON T9.PACKAGEID=T2.PACKAGEID
      LEFT JOIN DEVICESUSELOG T10 ON T10.LOGID=T9.STERILIZATIONLOGID
      LEFT JOIN SYSTEMTYPEPARAMETER CTP ON ( T10.IsCPCDOK =  CTP.TYPEVALUE AND CTP.TYPEKEY = 'IsOK')
      LEFT JOIN FLOWPROVIDELIST T11 ON T11.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWPROVIDE T12 ON T12.PROVIDEID=T11.PROVIDEID
      LEFT JOIN AC_WorkGroup T14 ON T14.FID=T10.USERID
      LEFT JOIN AC_WorkGroup T15 ON T15.FID=T10.CHECKID
      LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY='QualifiedNO') T16 ON T16.TYPEVALUE=T2.BADFLAG
      LEFT JOIN AC_WorkGroup T17 ON T17.FID=T12.OPID
      LEFT JOIN AC_ORG T18 ON T18.ID=T12.ORGID
      LEFT JOIN AC_ORG O ON T1.SENDER = O.ID
      INNER JOIN AC_WorkGroup U ON T1.OPID = U.FID
      Left join Devices d on d.DeviceID=t10.DeviceID
      left join FlowRecycleList frl on frl.PackageID =t2.PackageID
      left join FlowRecycle fr on fr.FRecycleID=frl.FRecycleID
      left join AC_WorkGroup awR on awr.FID=fr.OPID
      left join AC_WorkGroup awP on awp.FID=t1.packagerID
      left join AC_WorkGroup awC on awc.FID=t2.CheckID
      LEFT JOIN SYSTEMTYPEPARAMETER BTP ON ( T10.IsBPCDOK =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'IsOK')
      WHERE 1=1  {0}
      GROUP by T1.FPACKAGEID,T1.PACKAGEINDATE,T1.OPID,T1.SENDER,T1.BARCODE,T1.MEMO,T1.CARGOTOPTYPE,T1.CARGOTYPEID,
      T1.FLOWORGID,T1.FLOWTYPE,T1.SENDTEXT,T1.RETURNDATE,T1.RETURNOPID,T1.RETURNRECEIVERID,
      T1.RETURNMEMO,O.NAME  ,U.FNames ,T1.RETURNRECEIVER,T1.FPATIENT,T1.FDOCTOR,T1.FSURGERYPART,T1.FSURGERYROOM,T1.FMEASUREMENTS,T1.FINPATIENTAREA,T1.FBEDNO,T1.FHOSPITALIZEDNO
      --,T3.BARCODE,T3.STATUS FRECYCLESTATUS
      ,T5.OPID,T6.FNames
      ,T7.CARGOTYPENAME
      --,T8.LASTFDISINFECTID
      --,T10.USERID FSTERILIZEID
      ,T14.FNames
      ,T10.TODAYUSETIMES,T10.CHECKDATE,T10.CHECKID
      ,T10.BEGINDATE
      ,T15.FNames
      --,T10.LOGID
      ,T16.TYPENAME
      ,CASE nvl(FSTERILIZETYPE,0) WHEN 4 THEN '压力蒸汽灭菌' WHEN 5 THEN '等离子灭菌' WHEN 6 THEN '环氧乙烷灭菌' ELSE '' END
      ,T12.OPID  ,T17.FNames ,T12.PROVIDEDATE,T12.ORGID  ,T18.NAME
      ,D.DEVICENAME,FR.OPID ,AWR.FNAMES  ,awp.FNames  ,awC.FNames  ,T1.FPACKAGENAME
      ,BTP.TypeName
      ,T1.FPatient
      ,T1.InDisinfectPrice
      ,T1.IsChecked
      ,T1.PackageInCode
      ,T2.SubPackageQty
      ,T1.DisabledReason
      
      ,T5.RecycleDate
      ,Disinfect.FNames
      ,fd.DisinfectDate
      ,againRecycleName.FNames 
      ,T1.AgainRecycleDate
      ,T3.Barcode
      ,T1.AgainBarcode
      ,againDisinfectName.FNames
      ,T1.AgainDisinfectDate
      ,returnName.FNames
      ,DisinfectDevices.DeviceName
      ,dul.TODAYUSETIMES
      ,T10.IsBDTest
      ,CTP.TYPENAME
      ,T9.SterilizationLogID
      ,T7.IsNeedBCP
     ]]>
    </Content>

    <Content Key="Query_FlowPackageInListOEM" Desc="代消包" DataBaseType="SqlServer">
      <![CDATA[
         SELECT  T1.FPACKAGEID,T1.PACKAGEINDATE,T1.OPID,T1.SENDER,T1.BARCODE,T1.MEMO,T1.CARGOTOPTYPE,T1.CARGOTYPEID,
      count(1) QUANTITY,T1.FLOWORGID,T1.FLOWTYPE,T1.SENDTEXT,T1.RETURNDATE,T1.RETURNOPID,T1.RETURNRECEIVERID,
      T1.RETURNMEMO,O.NAME AS ORGNAME,U.FNames AS OPNAME,T1.RETURNRECEIVER,T1.FPATIENT,T1.FDOCTOR,T1.FSURGERYPART,T1.FSURGERYROOM,T1.FMEASUREMENTS,T1.FINPATIENTAREA,T1.FBEDNO,T1.FHOSPITALIZEDNO
      --,T3.BARCODE,T3.STATUS FRECYCLESTATUS
      ,T5.OPID,T6.FNames FRECYCLER
      ,T7.CARGOTYPENAME
      --,T8.LASTFDISINFECTID
      --,T10.USERID FSTERILIZEID
      ,T14.FNames FSTERILIZER
      ,T10.TODAYUSETIMES,T10.CHECKDATE,T10.CHECKID
      ,T10.BEGINDATE FSTERILIZEDATE
      ,T15.FNames FSCHECKER
      --,T10.LOGID
      ,T16.TYPENAME FSTERILIZERESULT
      ,CASE ISNULL(FSTERILIZETYPE,0) WHEN 4 THEN '压力蒸汽灭菌' WHEN 5 THEN '等离子灭菌' WHEN 6 THEN '环氧乙烷灭菌' ELSE '' END FSTERILIZETYPE
      ,T12.OPID FPROVIDEID,T17.FNames FPROVIDER,T12.PROVIDEDATE,T12.ORGID FPROVIDERORGID,T18.NAME FPROVIDERORG
      ,D.DEVICENAME,FR.OPID ,AWR.FNAMES FRECYCLER,awp.FNames FPACKAGER,awC.FNames FCHECKER,T1.FPACKAGENAME
      ,BTP.TypeName as IsBPCDOK
      ,T1.FPatient
      ,T1.InDisinfectPrice as INDISINFECTPRICE
      ,isnull(T1.IsChecked,0) as ISCHECKED
      ,T1.PackageInCode as PACKAGEINCODE
      ,T2.SubPackageQty as SUBPACKAGEQTY
      ,T1.DisabledReason
      FROM FLOWPACKAGEIN T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.FPACKAGEID=T1.FPACKAGEID
      LEFT JOIN STORAGELIST T3 ON T3.STORAGEID=T2.STORAGEID
      LEFT JOIN FLOWRECYCLELIST T4 ON T4.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWRECYCLE T5 ON T5.FRECYCLEID=T4.FRECYCLEID
      LEFT JOIN AC_WorkGroup T6 ON T6.FID=T5.OPID
      LEFT JOIN CARGOTYPE T7 ON T7.CARGOTYPEID=T1.CARGOTYPEID
      --LEFT JOIN FLOWRECYCLECONTAINER T8 ON T8.FRECYCLEID=T5.FRECYCLEID
      LEFT JOIN FLOWSTERILIZATIONLIST T9 ON T9.PACKAGEID=T2.PACKAGEID
      LEFT JOIN DEVICESUSELOG T10 ON T10.LOGID=T9.STERILIZATIONLOGID
      LEFT JOIN FLOWPROVIDELIST T11 ON T11.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWPROVIDE T12 ON T12.PROVIDEID=T11.PROVIDEID
      LEFT JOIN AC_WorkGroup T14 ON T14.FID=T10.USERID
      LEFT JOIN AC_WorkGroup T15 ON T15.FID=T10.CHECKID
      LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY='QualifiedNO') T16 ON T16.TYPEVALUE=T2.BADFLAG
      LEFT JOIN AC_WorkGroup T17 ON T17.FID=T12.OPID
      LEFT JOIN AC_ORG T18 ON T18.ID=T12.ORGID
      LEFT JOIN AC_ORG O ON T1.SENDER = O.ID
      INNER JOIN AC_WorkGroup U ON T1.OPID = U.FID
      Left join Devices d on d.DeviceID=t10.DeviceID
      left join FlowRecycleList frl on frl.PackageID =t2.PackageID
      left join FlowRecycle fr on fr.FRecycleID=frl.FRecycleID
      left join AC_WorkGroup awR on awr.FID=fr.OPID
      left join AC_WorkGroup awP on awp.FID=t1.packagerID
      left join AC_WorkGroup awC on awc.FID=t2.CheckID
      LEFT JOIN SYSTEMTYPEPARAMETER BTP ON ( T10.IsBPCDOK =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'IsOK')
      WHERE 1=1  {0}
      GROUP by T1.FPACKAGEID,T1.PACKAGEINDATE,T1.OPID,T1.SENDER,T1.BARCODE,T1.MEMO,T1.CARGOTOPTYPE,T1.CARGOTYPEID,
      T1.FLOWORGID,T1.FLOWTYPE,T1.SENDTEXT,T1.RETURNDATE,T1.RETURNOPID,T1.RETURNRECEIVERID,
      T1.RETURNMEMO,O.NAME  ,U.FNames ,T1.RETURNRECEIVER,T1.FPATIENT,T1.FDOCTOR,T1.FSURGERYPART,T1.FSURGERYROOM,T1.FMEASUREMENTS,T1.FINPATIENTAREA,T1.FBEDNO,T1.FHOSPITALIZEDNO
      --,T3.BARCODE,T3.STATUS FRECYCLESTATUS
      ,T5.OPID,T6.FNames
      ,T7.CARGOTYPENAME
      --,T8.LASTFDISINFECTID
      --,T10.USERID FSTERILIZEID
      ,T14.FNames
      ,T10.TODAYUSETIMES,T10.CHECKDATE,T10.CHECKID
      ,T10.BEGINDATE
      ,T15.FNames
      --,T10.LOGID
      ,T16.TYPENAME
      ,CASE ISNULL(FSTERILIZETYPE,0) WHEN 4 THEN '压力蒸汽灭菌' WHEN 5 THEN '等离子灭菌' WHEN 6 THEN '环氧乙烷灭菌' ELSE '' END
      ,T12.OPID  ,T17.FNames ,T12.PROVIDEDATE,T12.ORGID  ,T18.NAME
      ,D.DEVICENAME,FR.OPID ,AWR.FNAMES  ,awp.FNames  ,awC.FNames  ,T1.FPACKAGENAME
      ,BTP.TypeName
      ,T1.FPatient
      ,T1.InDisinfectPrice
      ,T1.IsChecked
      ,T1.PackageInCode
      ,T2.SubPackageQty
      ,T1.DisabledReason
      ORDER BY T1.PACKAGEINDATE DESC
     ]]>
    </Content>
    <Content Key="Query_FlowPackageInListOEM" Desc="代消包" DataBaseType="Oracle">
      <![CDATA[
       SELECT   T1.FPACKAGEID,T1.PACKAGEINDATE,T1.OPID,T1.SENDER,T1.BARCODE,T1.MEMO,T1.CARGOTOPTYPE,T1.CARGOTYPEID,
      count(1)  QUANTITY,T1.FLOWORGID,T1.FLOWTYPE,T1.SENDTEXT,T1.RETURNDATE,T1.RETURNOPID,T1.RETURNRECEIVERID,
      T1.RETURNMEMO,O.NAME AS ORGNAME,U.FNames AS OPNAME,T1.RETURNRECEIVER,T1.FPATIENT,T1.FDOCTOR,T1.FSURGERYPART,T1.FSURGERYROOM,T1.FMEASUREMENTS,T1.FINPATIENTAREA,T1.FBEDNO,T1.FHOSPITALIZEDNO
      --,T3.BARCODE,T3.STATUS FRECYCLESTATUS
      ,T5.OPID,T6.FNames FRECYCLER
      ,T7.CARGOTYPENAME
      --,T8.LASTFDISINFECTID
      --,T10.USERID FSTERILIZEID
      ,T14.FNames FSTERILIZER
      ,T10.TODAYUSETIMES,T10.CHECKDATE,T10.CHECKID
      ,T10.BEGINDATE FSTERILIZEDATE
      ,T15.FNames FSCHECKER
      --,T10.LOGID
      ,T16.TYPENAME FSTERILIZERESULT
      ,CASE nvl(FSTERILIZETYPE,0) WHEN 4 THEN '压力蒸汽灭菌' WHEN 5 THEN '等离子灭菌' WHEN 6 THEN '环氧乙烷灭菌' ELSE '' END FSTERILIZETYPE
      ,T12.OPID FPROVIDEID,T17.FNames FPROVIDER,T12.PROVIDEDATE,T12.ORGID FPROVIDERORGID,T18.NAME FPROVIDERORG
      ,D.DEVICENAME,FR.OPID ,AWR.FNAMES FRECYCLER,awp.FNames FPACKAGER,awC.FNames FCHECKER,T1.FPACKAGENAME
      ,BTP.TypeName as IsBPCDOK
      ,T1.FPatient
      ,T1.InDisinfectPrice as INDISINFECTPRICE
      ,nvl(T1.IsChecked,0) as ISCHECKED
      ,T1.PackageInCode as PACKAGEINCODE
      ,T2.SubPackageQty as SUBPACKAGEQTY
      ,T1.DisabledReason
      FROM FLOWPACKAGEIN T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.FPACKAGEID=T1.FPACKAGEID
      LEFT JOIN STORAGELIST T3 ON T3.STORAGEID=T2.STORAGEID
      LEFT JOIN FLOWRECYCLELIST T4 ON T4.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWRECYCLE T5 ON T5.FRECYCLEID=T4.FRECYCLEID
      LEFT JOIN AC_WorkGroup T6 ON T6.FID=T5.OPID
      LEFT JOIN CARGOTYPE T7 ON T7.CARGOTYPEID=T1.CARGOTYPEID
      --LEFT JOIN FLOWRECYCLECONTAINER T8 ON T8.FRECYCLEID=T5.FRECYCLEID
      LEFT JOIN FLOWSTERILIZATIONLIST T9 ON T9.PACKAGEID=T2.PACKAGEID
      LEFT JOIN DEVICESUSELOG T10 ON T10.LOGID=T9.STERILIZATIONLOGID
      LEFT JOIN FLOWPROVIDELIST T11 ON T11.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWPROVIDE T12 ON T12.PROVIDEID=T11.PROVIDEID
      LEFT JOIN AC_WorkGroup T14 ON T14.FID=T10.USERID
      LEFT JOIN AC_WorkGroup T15 ON T15.FID=T10.CHECKID
      LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY='QualifiedNO') T16 ON T16.TYPEVALUE=T2.BADFLAG
      LEFT JOIN AC_WorkGroup T17 ON T17.FID=T12.OPID
      LEFT JOIN AC_ORG T18 ON T18.ID=T12.ORGID
      LEFT JOIN AC_ORG O ON T1.SENDER = O.ID
      INNER JOIN AC_WorkGroup U ON T1.OPID = U.FID
      Left join Devices d on d.DeviceID=t10.DeviceID
      left join FlowRecycleList frl on frl.PackageID =t2.PackageID
      left join FlowRecycle fr on fr.FRecycleID=frl.FRecycleID
      left join AC_WorkGroup awR on awr.FID=fr.OPID
      left join AC_WorkGroup awP on awp.FID=t1.packagerID
      left join AC_WorkGroup awC on awc.FID=t2.CheckID
      LEFT JOIN SYSTEMTYPEPARAMETER BTP ON ( T10.IsBPCDOK =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'IsOK')
      WHERE 1=1 {0}
      GROUP by T1.FPACKAGEID,T1.PACKAGEINDATE,T1.OPID,T1.SENDER,T1.BARCODE,T1.MEMO,T1.CARGOTOPTYPE,T1.CARGOTYPEID,
      T1.FLOWORGID,T1.FLOWTYPE,T1.SENDTEXT,T1.RETURNDATE,T1.RETURNOPID,T1.RETURNRECEIVERID,
      T1.RETURNMEMO,O.NAME  ,U.FNames ,T1.RETURNRECEIVER,T1.FPATIENT,T1.FDOCTOR,T1.FSURGERYPART,T1.FSURGERYROOM,T1.FMEASUREMENTS,T1.FINPATIENTAREA,T1.FBEDNO,T1.FHOSPITALIZEDNO
      --,T3.BARCODE,T3.STATUS FRECYCLESTATUS
      ,T5.OPID,T6.FNames
      ,T7.CARGOTYPENAME
      --,T8.LASTFDISINFECTID
      --,T10.USERID FSTERILIZEID
      ,T14.FNames
      ,T10.TODAYUSETIMES,T10.CHECKDATE,T10.CHECKID
      ,T10.BEGINDATE
      ,T15.FNames
      --,T10.LOGID
      ,T16.TYPENAME
      ,CASE nvl(FSTERILIZETYPE,0) WHEN 4 THEN '压力蒸汽灭菌' WHEN 5 THEN '等离子灭菌' WHEN 6 THEN '环氧乙烷灭菌' ELSE '' END
      ,T12.OPID  ,T17.FNames ,T12.PROVIDEDATE,T12.ORGID  ,T18.NAME
      ,D.DEVICENAME,FR.OPID ,AWR.FNAMES  ,awp.FNames  ,awC.FNames  ,T1.FPACKAGENAME
      ,BTP.TypeName
      ,T1.FPatient
      ,T1.InDisinfectPrice
      ,T1.IsChecked
      ,T1.PackageInCode
      ,T2.SubPackageQty
      ,T1.DisabledReason
      ORDER BY T1.PACKAGEINDATE DESC
     ]]>
    </Content>

    <Content Key="Query_FlowPackageInPackageSettingByFPackageIDANDPackageTypeID" DataBaseType="SqlServer">
      Select P.PACKAGESETTINGID,t3.FPackageID
      ,P.PACKAGETYPEID
      ,P.CARGOTYPEID
      ,C.CARGOTYPENAME
      ,P.CARGOTOPTYPE
      ,P.QUANTITY
      ,P.ISTRACK,P.ISCSSDPROVIDE,
      p.ISDYNAMIC,t3.FRETURNQTY,t3.FLOWPACKAGEINCARGOLISTID,(P.QUANTITY-t3.FRETURNQTY) As FINPUTQTY
      ,CASE WHEN P.ISTRACK = 1 THEN 0 ELSE IsNull(t3.QUANTITY,P.QUANTITY) END AS COUNTER
      FROM PACKAGESETTING P    INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID
      Left Join (Select FlowPackageInCargoListID,FPackageID,Quantity,CargoTypeID,ISNULL(FReturnQty,0) FReturnQty
      From FlowPackageInCargoList Where FPackageID=@FPackageID) t3 on t3.CargoTypeID=C.CargoTypeID WHERE P.PACKAGETYPEID=@PackageID
    </Content>
    <Content Key="Query_FlowPackageInPackageSettingByFPackageIDANDPackageTypeID" DataBaseType="Oracle">
      Select P.PACKAGESETTINGID,t3.FPackageID
      ,P.PACKAGETYPEID
      ,P.CARGOTYPEID
      ,C.CARGOTYPENAME
      ,P.CARGOTOPTYPE
      ,P.QUANTITY
      ,P.ISTRACK,P.IsCSSDProvide,
      p.ISDYNAMIC,t3.FRETURNQTY,t3.FLOWPACKAGEINCARGOLISTID,(P.QUANTITY-t3.FRETURNQTY) As FINPUTQTY
      ,CASE WHEN P.ISTRACK = 1 THEN 0 ELSE nvl(t3.QUANTITY,P.QUANTITY) END AS COUNTER
      FROM PACKAGESETTING P    INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID
      Left Join (Select FlowPackageInCargoListID,FPackageID,Quantity,CargoTypeID,nvl(FReturnQty,0) FReturnQty
      From FlowPackageInCargoList Where FPackageID=:FPackageID) t3 on t3.CargoTypeID=C.CargoTypeID WHERE P.PACKAGETYPEID=:PackageID
    </Content>


    <Content Key="Query_PackageInCargoListData" DataBaseType="SqlServer">
      Select  fl.FPackageID,fl.Quantity,fl.QUANTITY AS COUNTER,fl.FReturnQty FReturnQty,
      (fl.QUANTITY-FRETURNQTY) As FINPUTQTY,fl.CargoTypeID,C.CARGOTYPENAME
      From FlowPackageInCargoList  fl
      inner join CargoType c on fl.Cargotypeid=c.cargotypeid where FPackageID=@FPackageID
    </Content>
    <Content Key="Query_PackageInCargoListData" DataBaseType="Oracle">
      Select  fl.FPackageID,fl.Quantity,fl.QUANTITY AS COUNTER,nvl(fl.FReturnQty,0) FReturnQty,
      (fl.QUANTITY-FRETURNQTY) As FINPUTQTY,fl.CargoTypeID,C.CARGOTYPENAME
      From FlowPackageInCargoList  fl
      inner join CargoType c on fl.Cargotypeid=c.cargotypeid where FPackageID=:FPackageID
    </Content>

    <Content Key="Query_PackageByFPackageID" DataBaseType="SqlServer">
      SELECT X2.BARCODE,X1.FPACKAGEID,X1.CARGOTYPEID,X4.CARGOTYPETEXT CARGOTYPENAME,X4.CARGOTYPEKINDTEXT CARGOTYPEKIND,X1.RETURNDATE,X1.RETURNMEMO
      ,X1.RETURNOPID,X3.FNames AS FRETURNER,X1.RETURNRECEIVER,X1.RETURNRECEIVERID,X1.QUANTITY
      ,X1.FLOWTYPE,X1.FPACKAGENAME,X1.FORGID,X1.FORGNAME,X1.FPATIENT,X1.FDOCTOR,X1.FSURGERYPART,X1.OPID,X5.FNames FOPNAME,X1.FSURGERYROOM,X1.FMEASUREMENTS
      ,X1.FINPATIENTAREA,X1.FBEDNO,X1.FHOSPITALIZEDNO,X1.FISIMPLANT,X1.FHASIMPLANT,X1.FOUTPATIENT,X1.FOUTPATIENTCAPTION
      ,X1.OPERATIONDATE,X1.ISSPARE,X1.APPLIANCEQTY,x1.MEMO,X1.PACKAGETYPEID,X1.PNAME
      ,X1.SENDER,X1.FSENDERNAME,X1.FSENDERNAME ORGNAME,X1.STERILIZE,X1.SENDTEXT,X1.IMPLANTNUMBER
      ,X1.INDISINFECTPRICE,X1.SUBPACKAGEQTY
      ,X1.PACKAGEINCODE
      ,X1.ISSYSTEM,X1.SYSTEMNAME
      ,X1.PHONE,X1.ISOUTPATIENTEMERGENCY
      From (
      Select t2.StorageID,t1.FPackageID,t1.CargoTypeID,t1.ReturnDate,t1.ReturnMemo,t1.ReturnOPID
      ,t1.ReturnReceiver,t1.ReturnReceiverID,t1.Quantity,t1.FlowType,t1.FPackageName,t1.FOrgID
      ,t3.Name As FOrgName,t1.FPatient,t1.FDoctor,t1.FSurgeryPart,t1.OPID,t1.FSurgeryRoom,t1.FMeasureMents
      ,t1.FInpatientArea,t1.FBedNo,t1.FHospitalizedNo,t1.FIsImplant,case when t1.FIsImplant=0 then '无植入物' else '有植入物' end FHasImplant,t1.ImplantNumber
      ,t1.FOutPatient,asd.FCaption FOutPatientCaption,t1.OperationDate,t1.IsSpare,isnull(t1.ApplianceQty,0) ApplianceQty,t1.MEMO,t2.PackageTypeID,pkt.PName,t1.Sender,aosender.Name FSenderName,STERILIZETYPE.STERILIZE,t1.SendText
      ,t1.InDisinfectPrice as INDISINFECTPRICE,t2.SubPackageQty as SUBPACKAGEQTY
      ,t1.PackageInCode as PACKAGEINCODE
      ,t1.IsSystem as ISSYSTEM,t1.SystemName as SYSTEMNAME
      ,t1.Phone as PHONE,t1.IsOutPatientEmergency as ISOUTPATIENTEMERGENCY
      From FlowPackageIn t1
      Left Join FLOWPACKAGELIST t2 On t2.FPackageID=t1.FPackageID
      Left Join AC_Org t3 On t3.ID=t1.FOrgID
      Left Join PackageType pkt on pkt.PTypeID=t2.PackageTypeID
      left join (select FID,FKey,FCaption from AssistData where FParentID=(select FID from AssistData where FKey='OUTPATIENT' and FIsDeleted=0)) asd on asd.FKey=cast(t1.FOUTPATIENT as varchar(5))
      left join AC_Org aosender on aosender.ID=t1.Sender
      left join (select replace(typename,'器','') STERILIZE,TypeValue from SystemTypeParameter where TypeKey='DeviceType')  STERILIZETYPE
      on t1.FSterilizeType=STERILIZETYPE.TypeValue
      Where t1.FPackageID=@FPackageID
      ) x1
      Left join STORAGELIST x2 on x2.StorageID=x1.StorageID
      Left Join AC_WorkGroup x3 On x3.FID=x1.ReturnOPID
      Inner Join View_CargoType x4 on x4.CargoTypeID=x1.CargoTypeID
      Inner Join AC_WorkGroup x5 On x5.FID=x1.OPID
    </Content>
    <Content Key="Query_PackageByFPackageID" DataBaseType="Oracle">
      SELECT X2.BARCODE,X1.FPACKAGEID,X1.CARGOTYPEID,X4.CARGOTYPETEXT CARGOTYPENAME,X4.CARGOTYPEKINDTEXT CARGOTYPEKIND,X1.RETURNDATE,X1.RETURNMEMO
      ,X1.RETURNOPID,X3.FNames AS FRETURNER,X1.RETURNRECEIVER,X1.RETURNRECEIVERID,X1.QUANTITY
      ,X1.FLOWTYPE,X1.FPACKAGENAME,X1.FORGID,X1.FORGNAME,X1.FPATIENT,X1.FDOCTOR,X1.FSURGERYPART,X1.OPID,X5.FNames FOPNAME,X1.FSURGERYROOM,X1.FMEASUREMENTS
      ,X1.FINPATIENTAREA,X1.FBEDNO,X1.FHOSPITALIZEDNO,X1.FISIMPLANT,X1.FHASIMPLANT,X1.FOUTPATIENT,X1.FOUTPATIENTCAPTION
      ,X1.OPERATIONDATE,X1.ISSPARE,X1.APPLIANCEQTY,x1.MEMO,X1.PACKAGETYPEID,X1.PNAME
      ,X1.SENDER,X1.FSENDERNAME,X1.FSENDERNAME ORGNAME,X1.STERILIZE,X1.SENDTEXT,x1.IMPLANTNUMBER
      ,X1.INDISINFECTPRICE,X1.SUBPACKAGEQTY
      ,X1.PACKAGEINCODE
      ,X1.ISSYSTEM,X1.SYSTEMNAME
      ,X1.PHONE,X1.ISOUTPATIENTEMERGENCY
      From (
      Select t2.StorageID,t1.FPackageID,t1.CargoTypeID,t1.ReturnDate,t1.ReturnMemo,t1.ReturnOPID
      ,t1.ReturnReceiver,t1.ReturnReceiverID,t1.Quantity,t1.FlowType,t1.FPackageName,t1.FOrgID
      ,t3.Name As FOrgName,t1.FPatient,t1.FDoctor,t1.FSurgeryPart,t1.OPID,t1.FSurgeryRoom,t1.FMeasureMents
      ,t1.FInpatientArea,t1.FBedNo,t1.FHospitalizedNo,t1.FIsImplant,case when t1.FIsImplant=0 then '无植入物' else '有植入物' end FHasImplant,t1.ImplantNumber
      ,t1.FOutPatient,asd.FCaption FOutPatientCaption,t1.OperationDate,t1.IsSpare,nvl(t1.ApplianceQty,0) ApplianceQty,t1.MEMO,t2.PackageTypeID,pkt.PName,t1.Sender,aosender.Name FSenderName,STERILIZETYPE.STERILIZE,t1.SendText
      ,t1.InDisinfectPrice as INDISINFECTPRICE,t2.SubPackageQty as SUBPACKAGEQTY
      ,t1.PackageInCode as PACKAGEINCODE
      ,t1.IsSystem as ISSYSTEM,t1.SystemName as SYSTEMNAME
      ,t1.Phone as PHONE,t1.IsOutPatientEmergency as ISOUTPATIENTEMERGENCY
      From FlowPackageIn t1
      Left Join FLOWPACKAGELIST t2 On t2.FPackageID=t1.FPackageID
      Left Join AC_Org t3 On t3.ID=t1.FOrgID
      Left Join PackageType pkt on pkt.PTypeID=t2.PackageTypeID
      left join (select FID,FKey,FCaption from AssistData where FParentID=(select FID from AssistData where FKey='OUTPATIENT' and FIsDeleted=0)) asd on asd.FKey=cast(t1.FOUTPATIENT as varchar(5))
      left join AC_Org aosender on aosender.ID=t1.Sender
      left join (select replace(typename,'器','') STERILIZE,TypeValue from SystemTypeParameter where TypeKey='DeviceType')  STERILIZETYPE
      on t1.FSterilizeType=STERILIZETYPE.TypeValue
      Where t1.FPackageID=:FPackageID
      ) x1
      Left join STORAGELIST x2 on x2.StorageID=x1.StorageID
      Left Join AC_WorkGroup x3 On x3.FID=x1.ReturnOPID
      Inner Join View_CargoType x4 on x4.CargoTypeID=x1.CargoTypeID
      Inner Join AC_WorkGroup x5 On x5.FID=x1.OPID
    </Content>


    <Content Key="Query_StorageListByPackageTypeIDANDWarehouseID" DataBaseType="SqlServer">
      Select t1.PackageTypeID,t1.CargoTypeID,t1.CargoTypeName,t2.Quantity From PackageSetting t1
      Left Join StorageList t2 on t2.CargoTypeID=t1.CargoTypeID
      Where t1.PackageTypeID=@PackageTypeID
      And t2.WarehouseID=@WarehouseID
      And t2.Status=20
    </Content>
    <Content Key="Query_StorageListByPackageTypeIDANDWarehouseID" DataBaseType="Oracle">
      Select t1.PackageTypeID,t1.CargoTypeID,t1.CargoTypeName,t2.Quantity From PackageSetting t1
      Left Join StorageList t2 on t2.CargoTypeID=t1.CargoTypeID
      Where t1.PackageTypeID=:PackageTypeID
      And t2.WarehouseID=:WarehouseID
      And t2.Status=20
    </Content>

    <Content Key="Query_CountOfFlowPackageInCargoListByFPackageID" DataBaseType="SqlServer">
      Select COUNT(1) from FlowPackageInCargoList
      Where FPackageID=@FPackageID And Quantity>FReturnQty
    </Content>
    <Content Key="Query_CountOfFlowPackageInCargoListByFPackageID" DataBaseType="Oracle">
      Select COUNT(1) from FlowPackageInCargoList
      Where FPackageID=:FPackageID And Quantity>FReturnQty
    </Content>

    UpdateStorage
    <Content Key="Update_StoragelistQuantityByPackageTypeIDWarehouseIDCargoTypeID" DataBaseType="SqlServer">
      Update t2 Set t2.Quantity=t2.Quantity-@Qty From PackageSetting t1
      Left Join StorageList t2 on t2.CargoTypeID=t1.CargoTypeID
      Where t1.PackageTypeID=@PackageTypeID
      And t2.WarehouseID=@WarehouseID
      And t2.CargoTypeID=@CargoTypeID
      And t2.Status=20
    </Content>
    <Content Key="Update_StoragelistQuantityByPackageTypeIDWarehouseIDCargoTypeID" DataBaseType="Oracle">
      Update StorageList Set Quantity= Quantity-:Qty
      where storagelist.storageid in
      (
      select t2.storageid
      From PackageSetting t1
      Left Join StorageList t2 on t2.CargoTypeID=t1.CargoTypeID
      Where t1.PackageTypeID=:PackageTypeID
      And t2.WarehouseID=:WarehouseID
      And t2.CargoTypeID=:CargoTypeID
      And t2.Status=20
      )
    </Content>
    <Content Key="Flow_PreOrderAutoTask" DataBaseType="SqlServer">
      INSERT INTO FlowTask(TaskID, CargoTopType, CargoTypeID,TaskNum,DoingNum,FinishNum,FinishFlag,CreateTime,FlowOrgID)
      SELECT NEWID() AS TaskID,CargoTopType,CargoTypeID,PreOrderQty AS TaskNum,
      0 AS DoingNum,0 AS FinishNum,0 AS FinishFlag,GETDATE(),'9488FD1D-5CDC-41E7-9342-CDF184FE06B9'
      FROM FlowPreOrderDetail
      WHERE CargoTopType = 16 {0}
      --AND PreOrderID = '5c1a5ec9-fef1-474e-9bf4-f8b48aae0385'
    </Content>
    <Content Key="Flow_PreOrderAutoTask" DataBaseType="Oracle">
      INSERT INTO FlowTask(TaskID, CargoTopType, CargoTypeID,TaskNum,DoingNum,FinishNum,FinishFlag,CreateTime,FlowOrgID)
      SELECT fun_newguid() AS TaskID,CargoTopType,CargoTypeID,PreOrderQty AS TaskNum,
      0 AS DoingNum,0 AS FinishNum,0 AS FinishFlag,sysdate,'9488FD1D-5CDC-41E7-9342-CDF184FE06B9'
      FROM FlowPreOrderDetail
      WHERE CargoTopType = 16 {0}
      --AND PreOrderID = '5c1a5ec9-fef1-474e-9bf4-f8b48aae0385'
    </Content>
    <Content Key="Query_GetPackageByPreOrderRecycleOrg" DataBaseType="SqlServer">
      SELECT  StorageList.BARCODE,
      view_CargoType.CARGOTYPEID
      , view_CargoType.CARGOTYPETEXT as CARGOTYPENAME
      , view_CargoType.CARGOTYPEKINDTEXT as KINDNAME
      ,cargotype.Pinyin as PYCODE
      FROM  StorageList
      inner join    FlowPackageList on StorageList.StorageID=FlowPackageList.StorageID
      inner join view_CargoType   on StorageList.CargoTypeID=view_CargoType.CargoTypeID
      inner join  CARGOTYPE    ON CARGOTYPE.cargotypeid = view_CargoType.cargotypeid
      left join  FlowRecycleList on StorageList.StorageID=FlowRecycleList.PackageID
      inner join AC_OrgUser on storagelist.Modifier=AC_OrgUser.UserID
      where StorageList.CargoTopType=16 and LotNumber='丢失条码' and FlowRecycleList.PackageID is null  and AC_OrgUser.orgid=@orgid
      and StorageList.EXPDate>='2012-6-19'
      order by cargotypeid, Barcode asc
    </Content>
    <Content Key="Query_GetPackageByPreOrderRecycleOrg" DataBaseType="Oracle">
      SELECT  StorageList.BARCODE,
      view_CargoType.CARGOTYPEID
      , view_CargoType.CARGOTYPETEXT as CARGOTYPENAME
      , view_CargoType.CARGOTYPEKINDTEXT as KINDNAME
      ,cargotype.Pinyin as PYCODE
      FROM  StorageList
      inner join    FlowPackageList on StorageList.StorageID=FlowPackageList.StorageID
      inner join view_CargoType   on StorageList.CargoTypeID=view_CargoType.CargoTypeID
      inner join  CARGOTYPE    ON CARGOTYPE.cargotypeid = view_CargoType.cargotypeid
      left join  FlowRecycleList on StorageList.StorageID=FlowRecycleList.PackageID
      inner join AC_OrgUser on storagelist.Modifier=AC_OrgUser.UserID
      where StorageList.CargoTopType=16 and LotNumber='丢失条码' and FlowRecycleList.PackageID is null and AC_OrgUser.orgid=:orgid
      order by cargotypeid, Barcode asc
    </Content>
    <Content Key="Query_GetPackageByPreOrderRecycleOrgFlowOrgID" DataBaseType="SqlServer">
      SELECT  StorageList.BARCODE,
      view_CargoType.CARGOTYPEID
      , view_CargoType.CARGOTYPETEXT as CARGOTYPENAME
      , view_CargoType.CARGOTYPEKINDTEXT as KINDNAME
      ,cargotype.Pinyin as PYCODE
      FROM  StorageList
      inner join    FlowPackageList on StorageList.StorageID=FlowPackageList.StorageID
      inner join view_CargoType   on StorageList.CargoTypeID=view_CargoType.CargoTypeID
      inner join  CARGOTYPE    ON CARGOTYPE.cargotypeid = view_CargoType.cargotypeid
      left join  FlowRecycleList on StorageList.StorageID=FlowRecycleList.PackageID
      inner join AC_OrgUser on storagelist.Modifier=AC_OrgUser.UserID
      where StorageList.CargoTopType=16 and LotNumber='丢失条码' and FlowRecycleList.PackageID is null  and AC_OrgUser.orgid=@orgid
      and StorageList.EXPDate>='2012-6-19'
      and FlowPackageList.floworgid=@floworgid
      order by cargotypeid, Barcode asc
    </Content>
    <Content Key="Query_GetPackageByPreOrderRecycleOrgFlowOrgID" DataBaseType="Oracle">
      SELECT  StorageList.BARCODE,
      view_CargoType.CARGOTYPEID
      , view_CargoType.CARGOTYPETEXT as CARGOTYPENAME
      , view_CargoType.CARGOTYPEKINDTEXT as KINDNAME
      ,cargotype.Pinyin as PYCODE
      FROM  StorageList
      inner join    FlowPackageList on StorageList.StorageID=FlowPackageList.StorageID
      inner join view_CargoType   on StorageList.CargoTypeID=view_CargoType.CargoTypeID
      inner join  CARGOTYPE    ON CARGOTYPE.cargotypeid = view_CargoType.cargotypeid
      left join  FlowRecycleList on StorageList.StorageID=FlowRecycleList.PackageID
      inner join AC_OrgUser on storagelist.Modifier=AC_OrgUser.UserID
      where StorageList.CargoTopType=16 and LotNumber='丢失条码' and FlowRecycleList.PackageID is null and AC_OrgUser.orgid=:orgid
      and FlowPackageList.floworgid=:floworgid
      order by cargotypeid, Barcode asc
    </Content>
    <Content Key="Update_FlowPreOrderDetailDeleteLostPackageBarcodeInfo" DataBaseType="SqlServer">
      <![CDATA[
      update storagelist set LotNumber='丢失条码-预订审核终止'
      where storageid in (
        SELECT top(@num)  StorageList.storageid
        FROM  StorageList  
        inner join AC_OrgUser on storagelist.Modifier=AC_OrgUser.UserID
        where    cargotypeid=@cargotypeid
        and AC_OrgUser.orgid=@orgid  
         and StorageList.EXPDate>='2012-6-19'  
          and LotNumber='丢失条码'
         and Status=70        
        order by  Barcode asc
        )
      ]]>
    </Content>
    <Content Key="Update_FlowPreOrderDetailDeleteLostPackageBarcodeInfo" DataBaseType="Oracle">
      <![CDATA[ 
      update storagelist set LotNumber='丢失条码-预订审核终止'
      where storageid in ( select storageid from (
      SELECT  StorageList.storageid
      FROM  StorageList
      inner join AC_OrgUser on storagelist.Modifier=AC_OrgUser.UserID
      where    cargotypeid=:cargotypeid
      and AC_OrgUser.orgid=:orgid     
      and LotNumber='丢失条码'
      and Status=70
      order by  Barcode asc ) where rownum<=:num
      )
      ]]>
    </Content>
    <Content Key="Query_FlowPreorderInfoOrderByReqDateDesc" DataBaseType="SqlServer">
      <![CDATA[
    SELECT DISTINCT A.PREORDERID,
		A.ORGID,
		O.NAME AS ORGNAME,
		A.ORDERDATE,
		A.REQUIREDDATE,
		A.PREORDERTYPE,
		STYPE.TYPENAME AS PREORDERTYPENAME,
		A.PREORDERSTATUS,
		SSTATUS.TYPENAME AS PREORDERSTATUSNAME,
		A.PREORDERCODE,
		A.REMARK,
		A.FINISHDATE,
		A.CHECKSTATUS, 
    CHECKSTATUS.TYPENAME AS CHECKSTATUSNAME,
		A.CREATEBY,
		U.FNames AS CREATEBYNAME,
    A.PRINTSTATUS,
		PRINTSTATUS.TYPENAME AS PRINTSTATUSNAME
		FROM FLOWPREORDER A
		INNER JOIN FLOWPREORDERDETAIL  AD ON A.PREORDERID = AD.PREORDERID 
		INNER JOIN AC_ORG O  ON A.ORGID = O.ID
		LEFT JOIN AC_ORG P ON O.PREVID = P.ID
		INNER JOIN SYSTEMTYPEPARAMETER STYPE  ON A.PREORDERTYPE = STYPE.TYPEVALUE AND STYPE.TYPEKEY='PreOrderType'
		INNER JOIN SYSTEMTYPEPARAMETER SSTATUS  ON A.PREORDERSTATUS = SSTATUS.TYPEVALUE AND SSTATUS.TYPEKEY = 'PreOrderStatus' 
    INNER JOIN SYSTEMTYPEPARAMETER CHECKSTATUS ON CHECKSTATUS.TYPEKEY='PreOrderCheck' AND A.CHECKSTATUS=CHECKSTATUS.TYPEVALUE
    LEFT JOIN SYSTEMTYPEPARAMETER PRINTSTATUS ON PRINTSTATUS.TYPEKEY='PreOrderPrint' AND A.PRINTSTATUS=PRINTSTATUS.TYPEVALUE
		left JOIN AC_WorkGroup U  ON A.CREATEBY = U.FID
		WHERE 1 = 1  {0} Order By A.REQUIREDDATE DESC
      ]]>
    </Content>
    <Content Key="Query_FlowPreorderInfoOrderByReqDateDesc" DataBaseType="Oracle">
      <![CDATA[
		SELECT DISTINCT A.PREORDERID,
		A.ORGID,
		O.NAME AS ORGNAME,
		A.ORDERDATE,
		A.REQUIREDDATE,
		A.PREORDERTYPE,
		STYPE.TYPENAME AS PREORDERTYPENAME,
		A.PREORDERSTATUS,
		SSTATUS.TYPENAME AS PREORDERSTATUSNAME,
		A.PREORDERCODE,
		A.REMARK,
		A.FINISHDATE,
		A.CHECKSTATUS, 
    CHECKSTATUS.TYPENAME AS CHECKSTATUSNAME,
		A.CREATEBY,
		U.FNames AS CREATEBYNAME,
    A.PRINTSTATUS,
		PRINTSTATUS.TYPENAME AS PRINTSTATUSNAME
		FROM FLOWPREORDER A
		INNER JOIN FLOWPREORDERDETAIL  AD ON A.PREORDERID = AD.PREORDERID 
		INNER JOIN AC_ORG O  ON A.ORGID = O.ID
		LEFT JOIN AC_ORG P ON O.PREVID = P.ID
		INNER JOIN SYSTEMTYPEPARAMETER STYPE  ON A.PREORDERTYPE = STYPE.TYPEVALUE AND STYPE.TYPEKEY='PreOrderType'
		INNER JOIN SYSTEMTYPEPARAMETER SSTATUS  ON A.PREORDERSTATUS = SSTATUS.TYPEVALUE AND SSTATUS.TYPEKEY = 'PreOrderStatus' 
    INNER JOIN SYSTEMTYPEPARAMETER CHECKSTATUS ON CHECKSTATUS.TYPEKEY='PreOrderCheck' AND A.CHECKSTATUS=CHECKSTATUS.TYPEVALUE
    LEFT JOIN SYSTEMTYPEPARAMETER PRINTSTATUS ON PRINTSTATUS.TYPEKEY='PreOrderPrint' AND A.PRINTSTATUS=PRINTSTATUS.TYPEVALUE
		left JOIN AC_WorkGroup U  ON A.CREATEBY = U.FID
		WHERE 1 = 1  {0} Order By A.REQUIREDDATE DESC
      ]]>
    </Content>


    <Content Key="Query_FlowPreorderDetailInfoByOrgBarcode" DataBaseType="SqlServer">
      <![CDATA[
     SELECT FPOD.PREORDERDETAILID,C.CARGOTYPEID,C.CARGOTYPENAME,(FPOD.PREORDERQTY - FPOD.PROVIDEDQTY) AS QUANTITY,O.CODE,FPO.ORDERDATE,FPOD.PREORDERQTY,FPOD.PROVIDEDQTY,PreOrderType.TypeName  as PREORDERTYPE
    FROM FLOWPREORDERDETAIL FPOD  INNER JOIN
    CARGOTYPE C  ON FPOD.CARGOTYPEID = C.CARGOTYPEID INNER JOIN
    FLOWPREORDER FPO   ON FPOD.PREORDERID = FPO.PREORDERID INNER JOIN
    AC_ORG O   ON FPO.ORGID = O.ID
	LEFT JOIN SystemTypeParameter PreOrderType on (PreOrderType.TypeKey='PreOrderType' and FPO.PreOrderType=PreOrderType.TypeValue)
    where fpod.PreOrderQty <> fpod.ProvidedQty and c.CargoTopType=16 and fpod.CheckStatus in (1,4)  and o.Code =@OrgBarcode
      ]]>
    </Content>
    <Content Key="Query_FlowPreorderDetailInfoByOrgBarcode" DataBaseType="Oracle">
      <![CDATA[
    SELECT FPOD.PREORDERDETAILID,C.CARGOTYPEID,C.CARGOTYPENAME,(FPOD.PREORDERQTY - FPOD.PROVIDEDQTY) AS QUANTITY,O.CODE,FPO.ORDERDATE,FPOD.PREORDERQTY,FPOD.PROVIDEDQTY,PreOrderType.TypeName  as PREORDERTYPE
    FROM FLOWPREORDERDETAIL FPOD  INNER JOIN
    CARGOTYPE C  ON FPOD.CARGOTYPEID = C.CARGOTYPEID INNER JOIN
    FLOWPREORDER FPO   ON FPOD.PREORDERID = FPO.PREORDERID INNER JOIN
    AC_ORG O   ON FPO.ORGID = O.ID
	LEFT JOIN SystemTypeParameter PreOrderType on (PreOrderType.TypeKey='PreOrderType' and FPO.PreOrderType=PreOrderType.TypeValue)
    where fpod.PreOrderQty <> fpod.ProvidedQty and c.CargoTopType=16 and fpod.CheckStatus in (1,4)  and o.Code =:OrgBarcode

      ]]>
    </Content>

    <Content Key="Query_FlowPreorderDetailInfoByOrgBarcodeCutOffDate" DataBaseType="SqlServer">
      <![CDATA[
     SELECT FPOD.PREORDERDETAILID,C.CARGOTYPEID,C.CARGOTYPENAME,(FPOD.PREORDERQTY - FPOD.PROVIDEDQTY) AS QUANTITY,O.CODE,FPO.ORDERDATE,FPOD.PREORDERQTY,FPOD.PROVIDEDQTY,PreOrderType.TypeName  as PREORDERTYPE
    FROM FLOWPREORDERDETAIL FPOD  INNER JOIN
    CARGOTYPE C  ON FPOD.CARGOTYPEID = C.CARGOTYPEID INNER JOIN
    FLOWPREORDER FPO   ON FPOD.PREORDERID = FPO.PREORDERID INNER JOIN
    AC_ORG O   ON FPO.ORGID = O.ID
	LEFT JOIN SystemTypeParameter PreOrderType on (PreOrderType.TypeKey='PreOrderType' and FPO.PreOrderType=PreOrderType.TypeValue)
    where fpod.PreOrderQty <> fpod.ProvidedQty and c.CargoTopType=16 and  fpod.CheckStatus in (1,4)  and o.Code =@OrgBarcode and fpo.OrderDate <=@CutOffDate
      ]]>
    </Content>
    <Content Key="Query_FlowPreorderDetailInfoByOrgBarcodeCutOffDate" DataBaseType="Oracle">
      <![CDATA[
    SELECT FPOD.PREORDERDETAILID,C.CARGOTYPEID,C.CARGOTYPENAME,(FPOD.PREORDERQTY - FPOD.PROVIDEDQTY) AS QUANTITY,O.CODE,FPO.ORDERDATE,FPOD.PREORDERQTY,FPOD.PROVIDEDQTY,PreOrderType.TypeName  as PREORDERTYPE
    FROM FLOWPREORDERDETAIL FPOD  INNER JOIN
    CARGOTYPE C  ON FPOD.CARGOTYPEID = C.CARGOTYPEID INNER JOIN
    FLOWPREORDER FPO   ON FPOD.PREORDERID = FPO.PREORDERID INNER JOIN
    AC_ORG O   ON FPO.ORGID = O.ID
	LEFT JOIN SystemTypeParameter PreOrderType on (PreOrderType.TypeKey='PreOrderType' and FPO.PreOrderType=PreOrderType.TypeValue)
    where fpod.PreOrderQty <> fpod.ProvidedQty and c.CargoTopType=16 and fpod.CheckStatus in (1,4)  and o.Code =:OrgBarcode and fpo.OrderDate <=:CutOffDate

      ]]>
    </Content>


    <Content Key="Query_FlowPreorderDetailInfoByOrgID" DataBaseType="SqlServer">
      <![CDATA[
     SELECT FPOD.PREORDERDETAILID,C.CARGOTYPEID,C.CARGOTYPENAME,(FPOD.PREORDERQTY - FPOD.PROVIDEDQTY) AS QUANTITY,O.CODE,FPO.ORDERDATE,FPOD.PREORDERQTY,FPOD.PROVIDEDQTY,PreOrderType.TypeName  as PREORDERTYPE
          ,C.ISNORMAL                  
     FROM FLOWPREORDERDETAIL FPOD  
     INNER JOIN CARGOTYPE C  ON FPOD.CARGOTYPEID = C.CARGOTYPEID 
     inner join CargoTypeKind ctk on c.CargoTypeKind=ctk.ID 
        INNER JOIN FLOWPREORDER FPO   ON FPOD.PREORDERID = FPO.PREORDERID 
        INNER JOIN AC_ORG O   ON FPO.ORGID = O.ID
        LEFT JOIN FLOWRECYCLE R ON FPO.FRECYCLEID = R.FRECYCLEID
		LEFT JOIN SystemTypeParameter PreOrderType on (PreOrderType.TypeKey='PreOrderType' and FPO.PreOrderType=PreOrderType.TypeValue)
     where FPOD.CargoTopType = 16 and fpod.PreOrderQty > fpod.ProvidedQty and fpod.CheckStatus in (1,4) and o.ID = @OrgID and FPO.FlowOrgID=@FlowOrgID {0}
     order by C.CARGOTYPENAME asc,FPO.ORDERDATE asc
      ]]>
    </Content>
    <Content Key="Query_FlowPreorderDetailInfoByOrgID" DataBaseType="Oracle">
      <![CDATA[
      SELECT FPOD.PREORDERDETAILID,C.CARGOTYPEID,C.CARGOTYPENAME,(FPOD.PREORDERQTY - FPOD.PROVIDEDQTY) AS QUANTITY,O.CODE,FPO.ORDERDATE,FPOD.PREORDERQTY,FPOD.PROVIDEDQTY,PreOrderType.TypeName  as PREORDERTYPE
        ,C.ISNORMAL  
      FROM FLOWPREORDERDETAIL FPOD  
      INNER JOIN CARGOTYPE C  ON FPOD.CARGOTYPEID = C.CARGOTYPEID 
      inner join CargoTypeKind ctk on c.CargoTypeKind=ctk.ID 
      INNER JOIN FLOWPREORDER FPO   ON FPOD.PREORDERID = FPO.PREORDERID 
      INNER JOIN AC_ORG O   ON FPO.ORGID = O.ID
        LEFT JOIN FLOWRECYCLE R ON FPO.FRECYCLEID = R.FRECYCLEID
		LEFT JOIN SystemTypeParameter PreOrderType on (PreOrderType.TypeKey='PreOrderType' and FPO.PreOrderType=PreOrderType.TypeValue)
      where FPOD.CargoTopType = 16 and  fpod.PreOrderQty > fpod.ProvidedQty and fpod.CheckStatus in (1,4) and o.ID = :OrgID and FPO.FlowOrgID=:FlowOrgID {0}
      order by C.CARGOTYPENAME asc,FPO.ORDERDATE asc

      ]]>
    </Content>

    <Content Key="Query_FlowPreorderDetailInfoByOrgIDCutOffDate" DataBaseType="SqlServer">
      <![CDATA[
      SELECT FPOD.PREORDERDETAILID,C.CARGOTYPEID,C.CARGOTYPENAME,(FPOD.PREORDERQTY - FPOD.PROVIDEDQTY) AS QUANTITY,O.CODE,FPO.ORDERDATE,FPOD.PREORDERQTY,FPOD.PROVIDEDQTY,PreOrderType.TypeName  as PREORDERTYPE
                             ,C.ISNORMAL  
                           FROM FLOWPREORDERDETAIL FPOD  INNER JOIN 
	                            CARGOTYPE C  ON FPOD.CARGOTYPEID = C.CARGOTYPEID INNER JOIN
	                            FLOWPREORDER FPO   ON FPOD.PREORDERID = FPO.PREORDERID INNER JOIN
	                            AC_ORG O   ON FPO.ORGID = O.ID
                              LEFT JOIN FLOWRECYCLE R ON FPO.FRECYCLEID = R.FRECYCLEID
							  LEFT JOIN SystemTypeParameter PreOrderType on (PreOrderType.TypeKey='PreOrderType' and FPO.PreOrderType=PreOrderType.TypeValue)
                           where FPOD.CargoTopType = 16 and fpod.PreOrderQty > fpod.ProvidedQty and fpod.CheckStatus in (1,4) and o.ID = @OrgID  and fpo.OrderDate <=@CutOffDate {0}
      ]]>
    </Content>
    <Content Key="Query_FlowPreorderDetailInfoByOrgIDCutOffDate" DataBaseType="Oracle">
      <![CDATA[
    SELECT FPOD.PREORDERDETAILID,C.CARGOTYPEID,C.CARGOTYPENAME,(FPOD.PREORDERQTY - FPOD.PROVIDEDQTY) AS QUANTITY,O.CODE,FPO.ORDERDATE,FPOD.PREORDERQTY,FPOD.PROVIDEDQTY,PreOrderType.TypeName  as PREORDERTYPE
                             ,C.ISNORMAL  
                           FROM FLOWPREORDERDETAIL FPOD  INNER JOIN 
	                            CARGOTYPE C  ON FPOD.CARGOTYPEID = C.CARGOTYPEID INNER JOIN
	                            FLOWPREORDER FPO   ON FPOD.PREORDERID = FPO.PREORDERID INNER JOIN
	                            AC_ORG O   ON FPO.ORGID = O.ID
                              LEFT JOIN FLOWRECYCLE R ON FPO.FRECYCLEID = R.FRECYCLEID
							  LEFT JOIN SystemTypeParameter PreOrderType on (PreOrderType.TypeKey='PreOrderType' and FPO.PreOrderType=PreOrderType.TypeValue)
                           where FPOD.CargoTopType = 16 and fpod.PreOrderQty > fpod.ProvidedQty and fpod.CheckStatus in(1,4) and o.ID = @OrgID and fpo.OrderDate <=:CutOffDate {0}

      ]]>
    </Content>

    <Content Key="Update_PreOrderStatus" Desc="发放时更新预订完成状态" DataBaseType="SqlServer">
      <![CDATA[
      --DECLARE @OrgID uniqueidentifier
      --DECLARE @ProvideDate  Varchar(10)

      --DECLARE @ProvideQty int
      DECLARE @PreOrderDone int

      ----------
      SET @PreOrderDone = 1

      --SET @OrgID = '9488FD1D-5CDC-41E7-9342-CDF184FE06B9'
      --SET @ProvideDate = '2011-08-23'

      --------------------------------------------------------------------------
      -- 当前科室 指定日期 所有的CargoTypeID
      CREATE Table #TableCargoType
      (
      CargoTypeID uniqueidentifier NOT NULL
      );
      -- 当前科室 指定日期 所有的CargoTypeID
      INSERT #TableCargoType

      --SELECT CargoTypeID FROM
      SELECT Distinct CargoTypeID
      FROM
      (SELECT dbo.fun_get_Date(FP.ProvideDate,'Daily') AS ProvideDate,FP.OrgID,SL.CargoTypeID,COUNT(FPL.PackageID) AS ProvideQty
      FROM FlowProvideList FPL
      LEFT JOIN FlowProvide FP
      ON FP.ProvideID = FPL.ProvideID
      INNER JOIN FlowPackageList PL
      ON FPL.PackageID = PL.PackageID
      INNER JOIN StorageList SL
      ON PL.StorageID = SL.StorageID
      WHERE dbo.fun_get_Date(FP.ProvideDate,'Daily') = @ProvideDate

      GROUP BY dbo.fun_get_Date(FP.ProvideDate,'Daily'),FP.OrgID,SL.CargoTypeID
      ) AS Provide
      WHERE ProvideDate = @ProvideDate AND OrgID = @OrgID

      UNION
      SELECT CargoTypeID FROM
      (SELECT dbo.fun_get_Date(FPO.RequiredDate,'Daily') AS RequiredDate,FPO.OrgID,FPOD.CargoTypeID,SUM(ISNULL(PreOrderQty,0)) AS PreOrderQty
      FROM FlowPreOrderDetail FPOD
      LEFT JOIN FlowPreOrder FPO
      ON FPO.PreOrderID = FPOD.PreOrderID
      INNER JOIN view_CargoType AS CargoType
      ON FPOD.CargoTypeID = CargoType.CargoTypeID AND CargoType.CargoTopType = 16
      GROUP BY dbo.fun_get_Date(FPO.RequiredDate,'Daily'),FPO.OrgID,FPOD.CargoTypeID
      ) AS PreOrder
      WHERE RequiredDate = @ProvideDate AND OrgID = @OrgID

      -----------------------------------------------------------
      -----------------------------------------------------------
      -- 获取 指定日期 指定科室 的 所有包的 当前发放数量,已发放数量,预订数量
      SELECT @PreOrderDone = COUNT(*) --TheDate,OrgID,CargoTypeID,ProvideQty,PreOrderQty
      FROM
      (
      SELECT @ProvideDate AS TheDate,@OrgID AS OrgID
      ,#TableCargoType.CargoTypeID
      ,ISNULL(ProvideList.ProvideQty,0) AS ProvideQty
      ,ISNULL(PreOrderList.PreOrderQty,0) AS PreOrderQty
      ,CargoType.CargoTopType
      ,CargoType.CargoTopTypeText
      ,CargoType.CargoTypeKind
      ,CargoType.CargoTypeKindText
      ,CargoType.CargoTypeText

      FROM #TableCargoType
      LEFT JOIN
      (-- 发放表
      SELECT ProvideDate,OrgID,CargoTypeID,ProvideQty FROM
      (SELECT dbo.fun_get_Date(FP.ProvideDate,'Daily') AS ProvideDate,FP.OrgID,SL.CargoTypeID,COUNT(FPL.PackageID) AS ProvideQty
      FROM FlowProvideList FPL
      LEFT JOIN FlowProvide FP
      ON FP.ProvideID = FPL.ProvideID
      INNER JOIN FlowPackageList PL
      ON FPL.PackageID = PL.PackageID
      INNER JOIN StorageList SL
      ON PL.StorageID = SL.StorageID
      GROUP BY dbo.fun_get_Date(FP.ProvideDate,'Daily'),FP.OrgID,SL.CargoTypeID
      ) AS Provide
      WHERE ProvideDate = @ProvideDate AND OrgID = @OrgID) AS ProvideList
      ON #TableCargoType.CargoTypeID = ProvideList.CargoTypeID

      LEFT JOIN
      -- 预订表
      (SELECT RequiredDate,OrgID,CargoTypeID,PreOrderQty FROM
      (SELECT dbo.fun_get_Date(FPO.RequiredDate,'Daily') AS RequiredDate,FPO.OrgID,FPOD.CargoTypeID,SUM(ISNULL(PreOrderQty,0)) AS PreOrderQty
      FROM FlowPreOrderDetail FPOD
      LEFT JOIN FlowPreOrder FPO
      ON FPO.PreOrderID = FPOD.PreOrderID
      WHERE   fpod.CheckStatus in (1,4)
      GROUP BY dbo.fun_get_Date(FPO.RequiredDate,'Daily'),FPO.OrgID,FPOD.CargoTypeID
      ) AS PreOrder
      WHERE RequiredDate = @ProvideDate AND OrgID = @OrgID) AS PreOrderList
      ON #TableCargoType.CargoTypeID = PreOrderList.CargoTypeID

      LEFT JOIN view_CargoType AS CargoType
      ON #TableCargoType.CargoTypeID = CargoType.CargoTypeID
      ) AS TotalProvide
      WHERE ProvideQty < PreOrderQty
      
      IF @PreOrderDone = 0
      BEGIN
         UPDATE FlowPreOrder 
         SET PreOrderStatus = 1
         WHERE OrgID = @OrgID AND dbo.fun_get_Date(RequiredDate,'Daily') = @ProvideDate
      END
      ELSE
      BEGIN
         UPDATE FlowPreOrder 
         SET PreOrderStatus = 0
         WHERE OrgID = @OrgID AND dbo.fun_get_Date(RequiredDate,'Daily') = @ProvideDate
      END

      If object_id('tempdb..#TablePackageList') is not null
      Begin
      Drop Table #TablePackageList
      End
      
      If object_id('tempdb..#TableLendPackageList') is not null
      Begin
      Drop Table #TableLendPackageList
      End
      
      If object_id('tempdb..#TableCargoType') is not null
      Begin
      Drop Table #TableCargoType
      End
      ]]>
    </Content>
    <Content Key="Update_PreOrderStatus" Desc="发放时更新预订完成状态" DataBaseType="Oracle">
      <![CDATA[
      DECLARE vPreOrderDone:=1 number;      
      begin  
      -- 获取 指定日期 指定科室 的 所有包的 当前发放数量,已发放数量,预订数量
      SELECT  COUNT(*)  into vPreOrderDone
      FROM
      (
          SELECT :ProvideDate AS TheDate,:OrgID AS OrgID
          ,TableCargoType.CargoTypeID
          ,nvl(ProvideList.ProvideQty,0) AS ProvideQty
          ,nvl(PreOrderList.PreOrderQty,0) AS PreOrderQty
          ,CargoType.CargoTopType
          ,CargoType.CargoTopTypeText
          ,CargoType.CargoTypeKind
          ,CargoType.CargoTypeKindText
          ,CargoType.CargoTypeText
          FROM 
          (
               SELECT Distinct CargoTypeID
              FROM
              (SELECT fun_get_Date(FP.ProvideDate,'Daily') AS ProvideDate,FP.OrgID,SL.CargoTypeID,COUNT(FPL.PackageID) AS ProvideQty
              FROM FlowProvideList FPL
              LEFT JOIN FlowProvide FP
              ON FP.ProvideID = FPL.ProvideID
              INNER JOIN FlowPackageList PL
              ON FPL.PackageID = PL.PackageID
              INNER JOIN StorageList SL
              ON PL.StorageID = SL.StorageID
              WHERE  fun_get_Date(FP.ProvideDate,'Daily') = :ProvideDate

              GROUP BY fun_get_Date(FP.ProvideDate,'Daily'),FP.OrgID,SL.CargoTypeID
              )  Provide
              WHERE ProvideDate = :ProvideDate AND OrgID = :OrgID

              UNION
              SELECT CargoTypeID FROM
              (SELECT  fun_get_Date(FPO.RequiredDate,'Daily') AS RequiredDate,FPO.OrgID,FPOD.CargoTypeID,SUM(nvl(PreOrderQty,0)) AS PreOrderQty
              FROM FlowPreOrderDetail FPOD
              LEFT JOIN FlowPreOrder FPO
              ON FPO.PreOrderID = FPOD.PreOrderID
              INNER JOIN view_CargoType  CargoType
              ON FPOD.CargoTypeID = CargoType.CargoTypeID AND CargoType.CargoTopType = 16
              GROUP BY fun_get_Date(FPO.RequiredDate,'Daily'),FPO.OrgID,FPOD.CargoTypeID
              )  PreOrder
              WHERE RequiredDate = :ProvideDate AND OrgID = :OrgID
          )
          TableCargoType
          LEFT JOIN
          (-- 发放表
          SELECT ProvideDate,OrgID,CargoTypeID,ProvideQty FROM
          (SELECT  fun_get_Date(FP.ProvideDate,'Daily') AS ProvideDate,FP.OrgID,SL.CargoTypeID,COUNT(FPL.PackageID) AS ProvideQty
          FROM FlowProvideList FPL
          LEFT JOIN FlowProvide FP
          ON FP.ProvideID = FPL.ProvideID
          INNER JOIN FlowPackageList PL
          ON FPL.PackageID = PL.PackageID
          INNER JOIN StorageList SL
          ON PL.StorageID = SL.StorageID
          GROUP BY fun_get_Date(FP.ProvideDate,'Daily'),FP.OrgID,SL.CargoTypeID
          )   Provide
          WHERE ProvideDate = :ProvideDate AND OrgID = :OrgID)  ProvideList
          ON TableCargoType.CargoTypeID = ProvideList.CargoTypeID

          LEFT JOIN
          -- 预订表
          (SELECT RequiredDate,OrgID,CargoTypeID,PreOrderQty FROM
          (SELECT  fun_get_Date(FPO.RequiredDate,'Daily') AS RequiredDate,FPO.OrgID,FPOD.CargoTypeID,SUM(nvl(PreOrderQty,0)) AS PreOrderQty
          FROM FlowPreOrderDetail FPOD
          LEFT JOIN FlowPreOrder FPO
          ON FPO.PreOrderID = FPOD.PreOrderID
          WHERE   fpod.CheckStatus in(1,4)
          GROUP BY  fun_get_Date(FPO.RequiredDate,'Daily'),FPO.OrgID,FPOD.CargoTypeID
          )   PreOrder
          WHERE RequiredDate = :ProvideDate AND OrgID = :OrgID)   PreOrderList
          ON TableCargoType.CargoTypeID = PreOrderList.CargoTypeID

          LEFT JOIN view_CargoType  CargoType
          ON TableCargoType.CargoTypeID = CargoType.CargoTypeID
      )   TotalProvide
      WHERE ProvideQty < PreOrderQty;
      
      IF vPreOrderDone = 0 then 
         UPDATE FlowPreOrder 
         SET PreOrderStatus = 1
         WHERE OrgID = :OrgID AND  fun_get_Date(RequiredDate,'Daily') = :ProvideDate; 
      ELSE 
         UPDATE FlowPreOrder 
         SET PreOrderStatus = 0
         WHERE OrgID = :OrgID AND fun_get_Date(RequiredDate,'Daily') = :ProvideDate;
      END if; 
      end;
      ]]>
    </Content>
    <Content Key="GetPreOrderMaterialsOrginfo"   DataBaseType="SqlServer">
      <![CDATA[
		  SELECT distinct  ac_org.NAME ,ac_org.CODE
      FROM  FlowPreOrderDetail
      LEFT JOIN FlowPreOrder
      ON FlowPreOrderDetail.PreOrderID = FlowPreOrder.PreOrderID
      left join ac_org 
      on ac_org.id=FlowPreOrder.OrgID 
      WHERE FlowPreOrderDetail.CargoTopType = 2 
      AND FlowPreOrderDetail.CheckStatus in (1,4) 
      AND FlowPreOrderDetail.PreOrderQty - FlowPreOrderDetail.ProvidedQty > 0 
      and flowpreorder.floworgid=@supplyRoomID and flowpreorder.RequiredDate>=@RequiredDate
	  order by ac_org.name
		  ]]>
    </Content>
    <Content Key="GetPreOrderMaterialsOrginfo"   DataBaseType="Oracle">
      <![CDATA[
		  SELECT distinct  ac_org.name,ac_org.code
      FROM  FlowPreOrderDetail
      LEFT JOIN FlowPreOrder
      ON FlowPreOrderDetail.PreOrderID = FlowPreOrder.PreOrderID
      left join ac_org 
      on ac_org.id=FlowPreOrder.OrgID 
      WHERE FlowPreOrderDetail.CargoTopType = 2 
      AND FlowPreOrderDetail.CheckStatus in (1,4) 
      AND FlowPreOrderDetail.PreOrderQty - FlowPreOrderDetail.ProvidedQty > 0 
      and flowpreorder.floworgid=:supplyRoomID  and flowpreorder.RequiredDate>=:RequiredDate
	  order by ac_org.name
		  ]]>
    </Content>
    <Content Key="GetPreOrderMaterialsOrginfoByDate"   DataBaseType="SqlServer">
      <![CDATA[
		  SELECT distinct  ac_org.NAME ,ac_org.CODE
      FROM  FlowPreOrderDetail
      LEFT JOIN FlowPreOrder
      ON FlowPreOrderDetail.PreOrderID = FlowPreOrder.PreOrderID
      left join ac_org 
      on ac_org.id=FlowPreOrder.OrgID 
      WHERE FlowPreOrderDetail.CargoTopType = 2 
      AND FlowPreOrderDetail.CheckStatus in (1,4) 
      AND FlowPreOrderDetail.PreOrderQty - FlowPreOrderDetail.ProvidedQty > 0 
      and flowpreorder.floworgid=@supplyRoomID and flowpreorder.RequiredDate>=@RequiredDateBegin and flowpreorder.RequiredDate<=@RequiredDateEnd
	  order by ac_org.name
		  ]]>
    </Content>
    <Content Key="GetPreOrderMaterialsOrginfoByDate"   DataBaseType="Oracle">
      <![CDATA[
		  SELECT distinct  ac_org.name,ac_org.code
      FROM  FlowPreOrderDetail
      LEFT JOIN FlowPreOrder
      ON FlowPreOrderDetail.PreOrderID = FlowPreOrder.PreOrderID
      left join ac_org 
      on ac_org.id=FlowPreOrder.OrgID 
      WHERE FlowPreOrderDetail.CargoTopType = 2 
      AND FlowPreOrderDetail.CheckStatus in (1,4) 
      AND FlowPreOrderDetail.PreOrderQty - FlowPreOrderDetail.ProvidedQty > 0 
      and flowpreorder.floworgid=:supplyRoomID  and flowpreorder.RequiredDate>=:RequiredDateBegin and flowpreorder.RequiredDate<=:RequiredDateEnd
	  order by ac_org.name
		  ]]>
    </Content>
    <Content Key="GetPreOrderPackagesOrginfo"   DataBaseType="SqlServer">
      <![CDATA[
		  SELECT distinct  ac_org.NAME ,ac_org.CODE,ac_org.PINYIN
      FROM  FlowPreOrderDetail
      LEFT JOIN FlowPreOrder
      ON FlowPreOrderDetail.PreOrderID = FlowPreOrder.PreOrderID
      left join ac_org 
      on ac_org.id=FlowPreOrder.OrgID 
      WHERE FlowPreOrderDetail.CargoTopType = 16 
      AND FlowPreOrderDetail.CheckStatus in (1,4) 
      AND FlowPreOrderDetail.PreOrderQty - FlowPreOrderDetail.ProvidedQty > 0 
      and flowpreorder.floworgid=@supplyRoomID and flowpreorder.RequiredDate>=@RequiredDate 
      and flowpreorder.RequiredDate<=@RequiredEndDate
	  order by ac_org.name
		  ]]>
    </Content>
    <Content Key="GetPreOrderPackagesOrginfo"   DataBaseType="Oracle">
      <![CDATA[
		  SELECT distinct  ac_org.name,ac_org.code,ac_org.PINYIN
      FROM  FlowPreOrderDetail
      LEFT JOIN FlowPreOrder
      ON FlowPreOrderDetail.PreOrderID = FlowPreOrder.PreOrderID
      left join ac_org 
      on ac_org.id=FlowPreOrder.OrgID 
      WHERE FlowPreOrderDetail.CargoTopType = 16
      AND FlowPreOrderDetail.CheckStatus in (1,4)
      AND FlowPreOrderDetail.PreOrderQty - FlowPreOrderDetail.ProvidedQty > 0 
      and flowpreorder.floworgid=:supplyRoomID  and flowpreorder.RequiredDate>=:RequiredDate
      and flowpreorder.RequiredDate<=:RequiredEndDate
	  order by ac_org.name
		  ]]>
    </Content>

    <Content Key="GetPreOrderPackagesOrginfoByFlowOrg"   DataBaseType="SqlServer">
      <![CDATA[
		  SELECT distinct  ac_org.NAME ,ac_org.CODE,ac_org.PINYIN
      FROM  FlowPreOrderDetail
      LEFT JOIN FlowPreOrder
      ON FlowPreOrderDetail.PreOrderID = FlowPreOrder.PreOrderID
      left join ac_org 
      on ac_org.id=FlowPreOrder.OrgID 
      WHERE FlowPreOrderDetail.CargoTopType = 16 
      AND FlowPreOrderDetail.CheckStatus in (1,4) 
      AND FlowPreOrderDetail.PreOrderQty - FlowPreOrderDetail.ProvidedQty > 0 
      and flowpreorder.floworgid=@supplyRoomID and flowpreorder.RequiredDate>=@RequiredDate 
      and flowpreorder.RequiredDate<=@RequiredEndDate 
      and ac_org.id in   (select keyid from floworgbasedata where type = 'org' and floworgid =@supplyRoomID)
	  order by ac_org.name
		  ]]>
    </Content>
    <Content Key="GetPreOrderPackagesOrginfoByFlowOrg"   DataBaseType="Oracle">
      <![CDATA[
		  SELECT distinct  ac_org.name,ac_org.code,ac_org.PINYIN
      FROM  FlowPreOrderDetail
      LEFT JOIN FlowPreOrder
      ON FlowPreOrderDetail.PreOrderID = FlowPreOrder.PreOrderID
      left join ac_org 
      on ac_org.id=FlowPreOrder.OrgID 
      WHERE FlowPreOrderDetail.CargoTopType = 16
      AND FlowPreOrderDetail.CheckStatus in (1,4)
      AND FlowPreOrderDetail.PreOrderQty - FlowPreOrderDetail.ProvidedQty > 0 
      and flowpreorder.floworgid=:supplyRoomID  and flowpreorder.RequiredDate>=:RequiredDate
      and flowpreorder.RequiredDate<=:RequiredEndDate
      and ac_org.id in   (select keyid from floworgbasedata where type = 'org' and floworgid =:supplyRoomID)
	  order by ac_org.name
		  ]]>
    </Content>
    <Content Key="Query_SynDataFlowPreOrderDetail" DataBaseType="SqlServer">
      <![CDATA[
       select fpod.PreOrderDetailID,c.CargoTypeID,c.CargoTypeName,fpod.PreOrderQty as Quantity,o.Code,fpo.OrderDate,fpod.ProvidedQty,isnull(r.FIsPdaData,0) as FIsPdaData,u.FUsers as OPCode
    from FlowPreOrderDetail fpod with (nolock)  
		inner join CargoType c with (nolock)  on fpod.CargoTypeID = c.CargoTypeID 
		inner join FlowPreOrder fpo with (nolock)  on fpod.PreOrderID = fpo.PreOrderID 
		inner join AC_Org o with (nolock)  on fpo.OrgID = o.ID
    --inner join AC_User u with (nolock) on fpod.CreateBy = u.ID
    inner join AC_WorkGroup u with (nolock) on fpod.CreateBy = u.FID
		left join FlowRecycle r with (nolock) on fpo.FRecycleID = r.FRecycleID
    where fpod.PreOrderQty <> fpod.ProvidedQty  and fpod.CheckStatus in (1,4) and ( r.FIsPdaData = 1 or fpo.Remark = '系统依据外来代灭菌包登记情况自动生成')
      ]]>
    </Content>
    <Content Key="Query_SynDataFlowPreOrderDetail" DataBaseType="Oracle">
      <![CDATA[
       select fpod.PreOrderDetailID,c.CargoTypeID,c.CargoTypeName,fpod.PreOrderQty as Quantity,o.Code,fpo.OrderDate,fpod.ProvidedQty,nvl(r.FIsPdaData,0) as FIsPdaData,u.FUsers as OPCode
    from FlowPreOrderDetail fpod  
		inner join CargoType c  on fpod.CargoTypeID = c.CargoTypeID 
		inner join FlowPreOrder fpo  on fpod.PreOrderID = fpo.PreOrderID 
		inner join AC_Org o  on fpo.OrgID = o.ID
    --inner join AC_User u on fpod.CreateBy = u.ID
    inner join AC_WorkGroup u on fpod.CreateBy = u.FID
		left join FlowRecycle r on fpo.FRecycleID = r.FRecycleID
    where fpod.PreOrderQty <> fpod.ProvidedQty  and fpod.CheckStatus in (1,4) and (r.FIsPdaData = 1  or fpo.Remark = '系统依据外来代灭菌包登记情况自动生成')
      ]]>
    </Content>

    <Content Key="Query_FlowUserListStorageListCargotypeInfoByFilter" DataBaseType="SqlServer">
      select b.CARGOTYPENAME,c.BARCODE,a.QUANTITY,L.LOCATIONNAME,aw.FNAMES from FlowUseList a
      left join CargoType b   on a.CargoTypeID = b.CargoTypeID
      left join StorageList c   on a.StorageID = c.StorageID
      left join Location L on c.LocationID =L.LocationID
      inner join FlowUse fu on fu.UseID=a.UseID
      inner join AC_WorkGroup aw  on aw.FID=fu.OPID
      where 1=1 {0}
    </Content>
    <Content Key="Query_FlowUserListStorageListCargotypeInfoByFilter" DataBaseType="Oracle">
      select b.CARGOTYPENAME,c.BARCODE,a.QUANTITY ,L.LOCATIONNAME,aw.FNAMES from FlowUseList a
      left join CargoType b   on a.CargoTypeID = b.CargoTypeID
      left join StorageList c   on a.StorageID = c.StorageID
      left join Location L on c.LocationID =L.LocationID
      inner join FlowUse fu on fu.UseID=a.UseID
      inner join AC_WorkGroup aw  on aw.FID=fu.OPID
      where 1=1 {0}

    </Content>

    <Content Key="Query_FlowUserPatientInfoByFilterOrderByUseDateDesc" DataBaseType="SqlServer">
      select distinct a.USEID,d.ID ORGID,f.PATIENTID,d.NAME ORGNAME1,a.USEDATE,b.FNames USERNAME,f.PATIENTNAME
      ,f.MedicalRecordCode,l.LocationName,o.NAME ORGNAME,
      case when sq1.FNames is not null and sq2.FNames is not null
      then sq1.FNames+','+sq2.FNames
      else
      case when sq1.FNames is not null then sq1.FNames else sq2.FNames end end as BeforeOperationCheckUserName
      /*--end--*/
      /*--术中--*/
      ,case when sz1.FNames is not null and sz1.FNames is not null
      then sz1.FNames+','+sz2.FNames
      else
      case when sz1.FNames is not null then sz1.FNames else sz2.FNames end end as PatientOperationingUserName
      /*--end--*/
      /*--术后--*/
      ,case when sh1.FNames is not null and sh2.FNames is not null
      then sh2.FNames+','+sh2.FNames
      else
      case when sh1.FNames is not null then sh1.FNames else sh2.FNames end end as PatientOperationFinishUserName
      /*--end--*/
      from FlowUse a
      inner join AC_WorkGroup b  on a.OPID = b.FID
      inner join AC_OrgUser c  on c.UserID = b.FID
      inner join AC_Org d  on d.ID = c.OrgID
      inner join Ac_Org o on a.OrgID=o.ID
      inner join PatientList f  on f.PatientID = a.PatientID
      inner join FlowUseList u on a.UseID = u.UseID
      inner join CargoType t on u.CargoTypeID = t.CargoTypeID
      inner join StorageList s on u.StorageID=s.StorageID
      left join Location l on  a.OperationRoom=l.LocationID
      left join AC_WorkGroup sq1 on a.BeforeOperationCheckUserID=sq1.FID
      left join AC_WorkGroup sq2 on a.BeforeOperationCheck2UserID=sq2.FID
      left join AC_WorkGroup sz1 on a.PatientOperationingUserID=sz1.FID
      left join AC_WorkGroup sz2 on a.PatientOperationing2UserID=sz2.FID
      left join AC_WorkGroup sh1 on a.PatientOperationFinishUserID=sh1.FID
      left join AC_WorkGroup sh2 on a.PatientOperationFinish2UserID=sh2.FID
      where 1=1 {0} Order By a.USEDATE DESC
    </Content>
    <Content Key="Query_FlowUserPatientInfoByFilterOrderByUseDateDesc" DataBaseType="Oracle">
      select distinct a.USEID,d.ID ORGID,f.PATIENTID,d.NAME ORGNAME,a.USEDATE,b.FNames USERNAME,f.PATIENTNAME
      ,f.MedicalRecordCode,
      case when sq1.FNames is not null and sq2.FNames is not null
      then sq1.FNames||','||sq2.FNames
      else
      case when sq1.FNames is not null then sq1.FNames else sq2.FNames end end as BeforeOperationCheckUserName
      /*--end--*/
      /*--术中--*/
      ,case when sz1.FNames is not null and sz1.FNames is not null
      then sz1.FNames||','||sz2.FNames
      else
      case when sz1.FNames is not null then sz1.FNames else sz2.FNames end end as PatientOperationingUserName
      /*--end--*/
      /*--术后--*/
      ,case when sh1.FNames is not null and sh2.FNames is not null
      then sh2.FNames||','||sh2.FNames
      else
      case when sh1.FNames is not null then sh1.FNames else sh2.FNames end end as PatientOperationFinishUserName
      /*--end--*/
      from FlowUse a
      inner join AC_WorkGroup b  on a.OPID = b.FID
      inner join AC_OrgUser c  on c.UserID = b.FID
      inner join AC_Org d  on d.ID = c.OrgID
      inner join PatientList f  on f.PatientID = a.PatientID
      inner join FlowUseList u on a.UseID = u.UseID
      inner join CargoType t on u.CargoTypeID = t.CargoTypeID
      inner join StorageList s on u.StorageID=s.StorageID
      left join AC_WorkGroup sq1 on a.BeforeOperationCheckUserID=sq1.FID
      left join AC_WorkGroup sq2 on a.BeforeOperationCheck2UserID=sq2.FID
      left join AC_WorkGroup sz1 on a.PatientOperationingUserID=sz1.FID
      left join AC_WorkGroup sz2 on a.PatientOperationing2UserID=sz2.FID
      left join AC_WorkGroup sh1 on a.PatientOperationFinishUserID=sh1.FID
      left join AC_WorkGroup sh2 on a.PatientOperationFinish2UserID=sh2.FID
      where 1=1 {0} Order By a.USEDATE DESC
    </Content>
    <Content Key="Query_FlowUseListPatientInfoByPatientID" DataBaseType="SqlServer">
      SELECT S.TYPENAME AS CARGOTOPTYPENAME,SL.BARCODE,C.CARGOTYPENAME,fp.USEDATE,AU.FNames AS OPNAME
      FROM FLOWUSE U  INNER JOIN FLOWUSELIST UL  ON U.USEID = UL.USEID
      INNER JOIN STORAGELIST SL  ON UL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C  ON UL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN SYSTEMTYPEPARAMETER S  ON UL.CARGOTOPTYPE = S.TYPEVALUE AND S.TYPEKEY = 'CargoTopType'
      --INNER JOIN AC_USER AU  ON U.OPID = AU.ID
      INNER JOIN AC_WorkGroup AU  ON U.OPID = AU.FID
      INNER JOIN  FlowPackageList fp on fp.StorageID=sl.StorageID
      WHERE u.PatientID=@patientID
    </Content>
    <Content Key="Query_FlowUseListPatientInfoByPatientID" DataBaseType="Oracle">
      SELECT S.TYPENAME AS CARGOTOPTYPENAME,SL.BARCODE,C.CARGOTYPENAME,fp.USEDATE,AU.FNames AS OPNAME
      FROM FLOWUSE U  INNER JOIN FLOWUSELIST UL  ON U.USEID = UL.USEID
      INNER JOIN STORAGELIST SL  ON UL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C  ON UL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN SYSTEMTYPEPARAMETER S  ON UL.CARGOTOPTYPE = S.TYPEVALUE AND S.TYPEKEY = 'CargoTopType'
      --INNER JOIN AC_USER AU  ON U.OPID = AU.ID
      INNER JOIN AC_WorkGroup AU  ON U.OPID = AU.FID
      INNER JOIN  FlowPackageList fp on fp.StorageID=sl.StorageID
      WHERE u.PatientID=:patientID
    </Content>

    <Content Key="Delete_FlowUseListPatientInfoByPatientID" DataBaseType="SqlServer">
      delete from syslog where logtype=8 and keyid1 in (select ful.storageid from   FLOWUSELIST ful inner join flowuse fu  on ful.useid=fu.useid   where fu.patientid=@patientID)
      delete from FLOWUSELIST where useid in (select useid from flowuse where PatientID=@patientID)
    </Content>
    <Content Key="Delete_FlowUseListPatientInfoByPatientID" DataBaseType="Oracle">
      <![CDATA[
		begin
		delete from syslog log where logtype=8 and keyid1 in (select ful.storageid from   FLOWUSELIST ful inner join flowuse fu  on ful.useid=fu.useid   where fu.patientid=:patientID);
		delete from FLOWUSELIST ful where useid in (select useid from flowuse where PatientID=:patientID);
		end;
		]]>
    </Content>
    <Content Key="Delete_FlowUseListPatientInfoByUseID" DataBaseType="SqlServer">
      delete from syslog where logtype=8 and keyid1 in (select ful.storageid from   FLOWUSELIST ful inner join flowuse fu  on ful.useid=fu.useid   where fu.useid=@useID)
      delete from FLOWUSELIST where useid=@useID
    </Content>
    <Content Key="Delete_FlowUseListPatientInfoByUseID" DataBaseType="Oracle">
      <![CDATA[
		begin		
		delete from syslog  log where logtype=8 and keyid1 in (select ful.storageid from   FLOWUSELIST ful inner join flowuse fu  on ful.useid=fu.useid   where fu.useid=:useID);
		delete from FLOWUSELIST where useid=:UseID;
		end;
		]]>
    </Content>

    <Content Key="Delete_FlowUseInfoByUseID" DataBaseType="SqlServer">
      delete from syslog where logtype=8 and keyid1 in (select ful.storageid from   FLOWUSELIST ful   where ful.useid=@UseID)
      delete from FLOWUSELIST where useid=@UseID
      delete from flowuse where useid=@UseID
    </Content>
    <Content Key="Delete_FlowUseInfoByUseID" DataBaseType="Oracle">
      begin
      delete from syslog  log where logtype=8 and keyid1 in (select ful.storageid from   FLOWUSELIST ful   where ful.useid=:UseID);
      delete from FLOWUSELIST where useid=:UseID;
      delete from flowuse where useid=:UseID;
      end;
    </Content>
    <Content Key="Update_ProvideLendReturnQtyByProvideID" DataBaseType="SqlServer">
      Update FlowProvideLend Set ReturnQuantity=IsNull(ReturnQuantity,0)+@ReturnQty,FLoseQty=IsNull(FLoseQty,0)+@LoseQty  Where ProvideID=@ProvideID and CargoTypeID = @CargoTypeID
    </Content>
    <Content Key="Update_ProvideLendReturnQtyByProvideID" DataBaseType="Oracle">
      Update FlowProvideLend Set ReturnQuantity=nvl(ReturnQuantity,0)+:ReturnQty,FLoseQty=nvl(FLoseQty,0)+:LoseQty  Where ProvideID=:ProvideID and CargoTypeID = :CargoTypeID
    </Content>



    <Content Key="Query_PackageReturnData" DataBaseType="SqlServer">
      <![CDATA[
      Select fpl.PROVIDEID,fp.PROVIDEDATE,c.CARGOTYPENAME,c.CARGOTYPEID,(fpl.Quantity-fpl.ReturnQuantity-fpl.FLoseQty) As QUANTITY,0 As RETURNQUANTITY,0 As FLOSEQTY,fp.RECIPIENT
      From FlowProvideLend fpl Inner Join FlowProvide fp On fp.ProvideID = fpl.ProvideID
      Inner Join CargoType c On fpl.CargoTypeID = c.CargoTypeID
      Where fpl.Quantity > fpl.ReturnQuantity+fpl.FLoseQty and fp.OrgID = @OrgID
      ]]>
    </Content>
    <Content Key="Query_PackageReturnData" DataBaseType="Oracle">
      <![CDATA[
      Select fpl.PROVIDEID,fp.PROVIDEDATE,c.CARGOTYPENAME,c.CARGOTYPEID,(fpl.Quantity-fpl.ReturnQuantity-fpl.FLoseQty) As QUANTITY,0 As RETURNQUANTITY,0 As FLOSEQTY,fp.RECIPIENT
      From FlowProvideLend fpl Inner Join FlowProvide fp On fp.ProvideID = fpl.ProvideID
      Inner Join CargoType c On fpl.CargoTypeID = c.CargoTypeID
      Where fpl.Quantity > fpl.ReturnQuantity+fpl.FLoseQty and fp.OrgID = :OrgID
      ]]>
    </Content>

    <Content Key="Query_FlowProvideListStorageListCargotypeInfoByFilter" DataBaseType="SqlServer">
      select c.CARGOTYPENAME,1 as QUANTITY,b.LENDFLAG from FlowProvideList a
      left join FlowPackageList b on a.PackageID = b.PackageID
      left join CargoType c on b.CargoTypeID = c.CargoTypeID
      where 1=1 {0}
    </Content>
    <Content Key="Query_FlowProvideListStorageListCargotypeInfoByFilter" DataBaseType="Oracle">
      select c.CARGOTYPENAME,1 as QUANTITY,b.LENDFLAG from FlowProvideList a
      left join FlowPackageList b on a.PackageID = b.PackageID
      left join CargoType c on b.CargoTypeID = c.CargoTypeID
      where 1=1 {0}
    </Content> 
	  <Content Key="Query_FlowProvideConfirmInfo" DataBaseType="SqlServer">
		  SELECT S.BARCODE,VC.CARGOTYPETEXT,FPC.CONFIRMDATE  FROM FlowProvideConfirm FPC
		  INNER JOIN FLOWPROVIDELIST FPV on FPV.ProvideConfirmID=FPC.ProvideConfirmID
		  INNER JOIN STORAGELIST S ON S.STORAGEID=FPV.PACKAGEID
		  INNER JOIN FlowPackageList fpl on s.StorageID=fpl.PackageID
		  inner join view_CargoType VC on vc.CargoTypeID=fpl.CargoTypeID
		  WHERE 1=1 {0} order by FPC.CONFIRMDATE desc
	  </Content>
	  <Content Key="Query_FlowProvideConfirmInfo" DataBaseType="Oracle">
		  SELECT S.BARCODE,VC.CARGOTYPETEXT,FPC.CONFIRMDATE  FROM FlowProvideConfirm FPC
		  INNER JOIN FLOWPROVIDELIST FPV on FPV.ProvideConfirmID=FPC.ProvideConfirmID
		  INNER JOIN STORAGELIST S ON S.STORAGEID=FPV.PACKAGEID
		  INNER JOIN FlowPackageList fpl on s.StorageID=fpl.PackageID
		  inner join view_CargoType VC on vc.CargoTypeID=fpl.CargoTypeID
		  WHERE 1=1 {0}
		  order by FPC.CONFIRMDATE desc
	  </Content>
    <Content Key="Query_FlowProvideConfirmUserInfoByFilter" DataBaseType="SqlServer">
      select a.PROVIDECONFIRMID ,b.FNames UNAME,a.CONFIRMDATE,c.Name ONAME,acw.FNames SNAME
      from FlowProvideConfirm a
      --left join AC_User b  on a.OPID = b.ID
      left join AC_WorkGroup b  on a.OPID = b.FID
      left join AC_Org c  on a.OrgID = c.ID
      left join AC_WorkGroup acw  on a.recipientid = acw.FID
      where 1=1 {0}
      group by a.PROVIDECONFIRMID,a.ConfirmDate,b.FNames,c.Name,acw.Fnames
    </Content>
    <Content Key="Query_FlowProvideConfirmUserInfoByFilter" DataBaseType="Oracle">
      select a.PROVIDECONFIRMID ,b.FNames UNAME,a.CONFIRMDATE,c.Name ONAME,acw.FNames SNAME
      from FlowProvideConfirm a
      --left join AC_User b  on a.OPID = b.ID
      left join AC_WorkGroup b  on a.OPID = b.FID
      left join AC_Org c  on a.OrgID = c.ID
      left join AC_WorkGroup acw  on a.recipientid = acw.FID
      where 1=1 {0}
      group by a.PROVIDECONFIRMID,a.ConfirmDate,b.FNames,c.Name,acw.FNames
    </Content>

    <Content Key="Query_FlowProvidePackageInfoByOrgBarcode" DataBaseType="SqlServer">
      SELECT distinct c.CARGOTYPENAME,C.CARGOTYPEID,SL.BARCODE,FL.LENDFLAG,SL.EXPDATE,
      FP.PROVIDEDATE,FPL.STATUS,sl.status as STORAGESTATUS,FL.PACKAGEID,FP.PROVIDEID,O.CODE AS ORGCODE,FL.BADFLAG,FL.VALIDDATE
      FROM	FLOWPROVIDE FP
      INNER JOIN FLOWPROVIDELIST FPL   ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST FL  ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FPL.PACKAGEID = SL.STORAGEID
      INNER JOIN AC_ORG O  ON FP.ORGID = O.ID
      INNER JOIN CARGOTYPE C  ON FL.CARGOTYPEID = C.CARGOTYPEID
      WHERE O.CODE = @orgBarcode AND FPL.STATUS = 0  ORDER BY SL.BARCODE DESC
    </Content>
    <Content Key="Query_FlowProvidePackageInfoByOrgBarcode" DataBaseType="Oracle">
      SELECT distinct c.CARGOTYPENAME,C.CARGOTYPEID,SL.BARCODE,FL.LENDFLAG,SL.EXPDATE,
      FP.PROVIDEDATE,FPL.STATUS,sl.status as STORAGESTATUS,FL.PACKAGEID,FP.PROVIDEID,O.CODE AS ORGCODE,FL.BADFLAG,FL.VALIDDATE
      FROM	FLOWPROVIDE FP
      INNER JOIN FLOWPROVIDELIST FPL   ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST FL  ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FPL.PACKAGEID = SL.STORAGEID
      INNER JOIN AC_ORG O  ON FP.ORGID = O.ID
      INNER JOIN CARGOTYPE C  ON FL.CARGOTYPEID = C.CARGOTYPEID
      WHERE O.CODE = :orgBarcode AND FPL.STATUS = 0  ORDER BY SL.BARCODE DESC
    </Content>

    <Content Key="Query_FlowRecycleFetchPackageNotConfirmInfoBySender" DataBaseType="SqlServer">
      SELECT distinct c.CARGOTYPENAME,C.CARGOTYPEID,SL.BARCODE
      FROM	FlowRecycleFetch fr
      INNER JOIN FlowRecycleFetchList ffl   ON fr.FRecycleFetchID= ffl.FRecycleFetchID and fr.FetchType=1
      INNER JOIN FLOWPACKAGELIST FL  ON FL.PACKAGEID = ffl.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_User U  ON u.ID=fr.SenderID
      INNER JOIN CARGOTYPE C  ON FL.CARGOTYPEID = C.CARGOTYPEID
      WHERE u.id = @uid and SL.BARCODE is not null  AND ffl.STATUS = 0  ORDER BY SL.BARCODE DESC
    </Content>
    <Content Key="Query_FlowRecycleFetchPackageNotConfirmInfoBySender" DataBaseType="SqlServer">
      SELECT distinct c.CARGOTYPENAME,C.CARGOTYPEID,SL.BARCODE
      FROM	FlowRecycleFetch fr
      INNER JOIN FlowRecycleFetchList ffl   ON fr.FRecycleFetchID= ffl.FRecycleFetchID and fr.FetchType=1
      INNER JOIN FLOWPACKAGELIST FL  ON FL.PACKAGEID = ffl.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_User U  ON u.ID=fr.SenderID
      INNER JOIN CARGOTYPE C  ON FL.CARGOTYPEID = C.CARGOTYPEID
      WHERE u.id = :uid and SL.BARCODE is not null  AND ffl.STATUS = 0  ORDER BY SL.BARCODE DESC
    </Content>
    <Content Key="UpdateFlowRecycleFetchNotConfirmInfoByPackageID" DataBaseType="SqlServer">
      update FlowRecycleFetchList  set status=1  from FlowRecycleFetchList,flowrecyclefetch where FlowRecycleFetchList.frecyclefetchid=flowrecyclefetch.frecyclefetchid and  flowrecyclefetch.fetchtype=1 and packageid=@packageid
    </Content>
    <Content Key="UpdateFlowRecycleFetchNotConfirmInfoByPackageID" DataBaseType="Oracle">
      update FlowRecycleFetchList set status=1 where  packageid=:packageid and frecyclefetchid in (select frecyclefetchid from flowrecyclefetch where fetchtype=1 )
    </Content>
    <Content Key="UpdateFlowRecycleFetchListLostBarcodeNotConfirmInfo" DataBaseType="SqlServer">
      <![CDATA[
		  update FlowRecycleFetchList set status=1 from FlowRecycleFetchList,(
		  select top {0} FlowRecycleFetchList.FRecycleFetchID,FlowRecycleFetchList.packageid from FlowRecycleFetchList inner join flowrecyclefetch
		  on FlowRecycleFetchList.frecyclefetchid=flowrecyclefetch.frecyclefetchid and flowrecyclefetch.fetchtype=1 and flowrecyclefetch.senderid=@uid
		  inner join flowpackagelist on FlowRecycleFetchList.PackageID=flowpackagelist.PackageID and flowpackagelist.IsTemp=99
		  and flowpackagelist.cargotypeid=@cargotypeid) aa
		  where FlowRecycleFetchList.FRecycleFetchID=aa.FRecycleFetchID and FlowRecycleFetchList.PackageID=aa.PackageID
		   ]]>
    </Content>
    <Content Key="UpdateFlowRecycleFetchListLostBarcodeNotConfirmInfo" DataBaseType="Oracle">
      <![CDATA[
		  update FlowRecycleFetchList set status=1 from FlowRecycleFetchList
		  where Frecyclefetchid||packageid in
		  (
		  select  FlowRecycleFetchList.FRecycleFetchID||FlowRecycleFetchList.packageid from FlowRecycleFetchList inner join flowrecyclefetch
		  on FlowRecycleFetchList.frecyclefetchid=flowrecyclefetch.frecyclefetchid and flowrecyclefetch.fetchtype=1 and flowrecyclefetch.senderid=:uid
		  inner join flowpackagelist on FlowRecycleFetchList.PackageID=flowpackagelist.PackageID and flowpackagelist.IsTemp=99 
		  and flowpackagelist.cargotypeid=:cargotypeid and rownum<={0}) aa
		  where FlowRecycleFetchList.FRecycleFetchID=aa.FRecycleFetchID and FlowRecycleFetchList.PackageID=aa.PackageID
		  )		   
		  ]]>
    </Content>
    <Content Key="Query_SynDataFlowProvideList" DataBaseType="SqlServer">
      SELECT FPL.PROVIDEID,FPL.PACKAGEID,FPL.STATUS,FP.ORGID
      FROM	FLOWPROVIDE FP
      INNER JOIN FLOWPROVIDELIST FPL   ON FP.PROVIDEID = FPL.PROVIDEID
      WHERE STATUS = 0 and ProvideDate > dateadd(day,-10,GETDATE())
    </Content>
    <Content Key="Query_SynDataFlowProvideList" DataBaseType="Oracle">
      SELECT FPL.PROVIDEID,FPL.PACKAGEID,FPL.STATUS,FP.ORGID
      FROM	FLOWPROVIDE FP
      INNER JOIN FLOWPROVIDELIST FPL   ON FP.PROVIDEID = FPL.PROVIDEID
      WHERE STATUS = 0 and ProvideDate >   to_date(sysdate)-10
    </Content>

    <Content Key="Delete_FlowRecycleContainerByFRecycleIDBarcode" DataBaseType="SqlServer">
      DELETE FlowRecycleContainer
      FROM Container
      WHERE FlowRecycleContainer.ContainerID = Container.ContainerID AND
      FlowRecycleContainer.FRecycleID = @FRecycleID  and
      Container.ContainerID = @BarCode
    </Content>
    <Content Key="Delete_FlowRecycleContainerByFRecycleIDBarcode" DataBaseType="Oracle">
      DELETE from FlowRecycleContainer
      where FlowRecycleContainer.FRecycleID=:FRecycleID
      and FlowRecycleContainer.ContainerID=:BarCode
    </Content>

    <Content Key="Query_FlowProvideLendReturnDetailViewList" DataBaseType="SqlServer">
      select (Select sum(fpl.returnquantity) FROM FlowProvideLendReturnDetail fpl where fpl.ProvideLendReturnID = p.ProvideLendReturnID) as QUANTITY,p.RETURNDATE,u.FNames as OPIDNAME,o.Name as ORGNAME,p.PROVIDELENDRETURNID,p.Recipient as RECIPIENTID
      from FlowProvideLendReturn p
      --inner join AC_User u  on p.OPID = u.ID
      inner join AC_WorkGroup u  on p.OPID = u.FID
      inner join AC_Org o  on p.OrgID = o.ID
      where 1= 1 {0}
      group by p.ReturnDate,u.FNames,o.Name,p.ProvideLendReturnID,p.Recipient
    </Content>
    <Content Key="Query_FlowProvideLendReturnDetailViewList" DataBaseType="Oracle">
      select (Select sum(fpl.returnquantity) FROM FlowProvideLendReturnDetail fpl where fpl.ProvideLendReturnID = p.ProvideLendReturnID) as QUANTITY,p.RETURNDATE,u.FNames as OPIDNAME,o.Name as ORGNAME,p.PROVIDELENDRETURNID,p.Recipient as RECIPIENTID
      from FlowProvideLendReturn p
      --inner join AC_User u  on p.OPID = u.ID
      inner join AC_WorkGroup u  on p.OPID = u.FID
      inner join AC_Org o  on p.OrgID = o.ID
      where 1= 1 {0}
      group by p.ReturnDate,u.FNames,o.Name,p.ProvideLendReturnID,p.Recipient
    </Content>

    <Content Key="Query_FlowProvideLendReturnDetailViewDetail" DataBaseType="SqlServer">
      select c.CARGOTYPENAME,sum(a.ReturnQuantity) as QUANTITY
      from FlowProvideLendReturnDetail a  inner join CargoType c on a.CargoTypeid = c.CargoTypeid
      where 1=1 {0}
      group by c.CargoTypeName
      order by c.CargoTypeName
    </Content>
    <Content Key="Query_FlowProvideLendReturnDetailViewDetail" DataBaseType="Oracle">
      select c.CARGOTYPENAME,sum(a.ReturnQuantity) as QUANTITY
      from FlowProvideLendReturnDetail a  inner join CargoType c on a.CargoTypeid = c.CargoTypeid
      where 1=1 {0}
      group by c.CargoTypeName
      order by c.CargoTypeName
    </Content>
    <Content Key="Query_FlowProvideLendReturnPrintInfo" DataBaseType="SqlServer">
      select  o.NAME,acc.FNAMES,Ct.CARGOTYPEID,ct.CARGOTYPENAME,
      case when RECIPIENT = '' then acr.FNames else  RECIPIENT end as RECIPIENT ,
      sum(fplrd.returnquantity) RETURNQUANTITY
      from FlowProvideLendReturn fplr
      inner join FlowProvideLendReturnDetail fplrd
      on fplr.ProvideLendReturnID=fplrd.ProvideLendReturnID
      left join CargoType CT on  ct.CargoTypeID=fplrd.CargoTypeID
      left join AC_Org o on o.ID=fplr.OrgID
      left join AC_WorkGroup acc on acc.FID=fplr.OPID
      left join AC_WorkGroup acr on acc.FID=fplr.RecipientID
      where 1=1 {0}
      group by o.Name,acc.FNames,Ct.CargoTypeID,ct.cargotypename,case when RECIPIENT = '' then acr.FNames else  RECIPIENT end
    </Content>
    <Content Key="Query_FlowProvideLendReturnPrintInfo" DataBaseType="Oracle">
      select  o.NAME,acc.FNAMES,Ct.CARGOTYPEID,ct.CARGOTYPENAME,
      case when RECIPIENT = '' then acr.FNames else  RECIPIENT end as RECIPIENT ,
      sum(fplrd.returnquantity) RETURNQUANTITY
      from FlowProvideLendReturn fplr
      inner join FlowProvideLendReturnDetail fplrd
      on fplr.ProvideLendReturnID=fplrd.ProvideLendReturnID
      left join CargoType CT on  ct.CargoTypeID=fplrd.CargoTypeID
      left join AC_Org o on o.ID=fplr.OrgID
      left join AC_WorkGroup acc on acc.FID=fplr.OPID
      left join AC_WorkGroup acr on acc.FID=fplr.RecipientID
      where 1=1 {0}
      group by o.Name,acc.FNames,Ct.CargoTypeID,ct.cargotypename,case when RECIPIENT = '' then acr.FNames else  RECIPIENT end
    </Content>
    <Content Key="Query_FlowRecycleOrderPackageInfoByRecycleOrderID" DataBaseType="SqlServer">
      SELECT  dbo.FlowRecycleOrderPackage.*, FlowPackageList.CargoTypeID,CargoTypeName as CargoTypeText,CargoTypeKind.KindName from FlowRecycleOrderPackage
      left outer join  FlowPackageList on FlowPackageList.PackageID=FlowRecycleOrderPackage.PackageID
      LEFT OUTER JOIN CargoType on CargoType.CargoTypeID= FlowPackageList.CargoTypeID left outer join
      dbo.CargoTypeKind ON dbo.CargoTypeKind.ID = dbo.CargoType.CargoTypeKind  where FlowRecycleOrderPackage.PackageID in
      (select FlowRecycleOrderPackage.packageid from FlowRecycleOrderPackage where FlowRecycleOrderPackage.RecycleOrderID=@RecycleOrderID)
    </Content>
    <Content Key="Query_FlowRecycleOrderPackageInfoByRecycleOrderID" DataBaseType="Oracle">
      SELECT  FlowRecycleOrderPackage.*, FlowPackageList.CargoTypeID,CargoTypeName as CargoTypeText,CargoTypeKind.KindName from FlowRecycleOrderPackage
      left outer join  FlowPackageList on FlowPackageList.PackageID=FlowRecycleOrderPackage.PackageID
      LEFT OUTER JOIN CargoType on CargoType.CargoTypeID= FlowPackageList.CargoTypeID left outer join
      CargoTypeKind ON CargoTypeKind.ID = CargoType.CargoTypeKind  where FlowRecycleOrderPackage.PackageID in
      (select FlowRecycleOrderPackage.packageid from FlowRecycleOrderPackage where FlowRecycleOrderPackage.RecycleOrderID=:RecycleOrderID)
    </Content>

    <Content Key="Query_FlowRecycleLostInfoByRecycleOrderID" DataBaseType="SqlServer">
      SELECT  dbo.FlowRecycleLostList.* ,0 as LostQty ,CargoType.CargoTypeName as CargoTypeText from FlowRecycleLostList left outer join CargoType on FlowRecycleLostList.CargoTypeID=CargoType.CargoTypeID where FlowRecycleLostList.RecycleOrderID=@RecycleOrderID
    </Content>
    <Content Key="Query_FlowRecycleLostInfoByRecycleOrderID" DataBaseType="Oracle">
      SELECT   FlowRecycleLostList.* ,0 as LostQty ,CargoType.CargoTypeName as CargoTypeText from FlowRecycleLostList left outer join CargoType on FlowRecycleLostList.CargoTypeID=CargoType.CargoTypeID where FlowRecycleLostList.RecycleOrderID=:RecycleOrderID
    </Content>

    <Content Key="SP_Select_GetCollectByPackages" DataBaseType="SqlServer">
      select PackageSetting.CargoTopType,CargoType.CargoTypeName as CargoTypeText,PackageSetting.CargoTypeID ,
      Sum(PackageSetting.Quantity) as Qty,0 as LostQty from FlowPackageList left join PackageSetting
      on PackageSetting.PackageTypeID=FlowPackageList.CargoTypeID
      left join CargoType on PackageSetting.CargoTypeID = CargoType.CargoTypeID
      where dbo.PackageSetting.CargoTopType=1 and FlowPackageList.PackageID in ({0}) GROUP BY CargoType.CargoTypeName ,PackageSetting.CargoTypeID,PackageSetting.CargoTopType
    </Content>
    <Content Key="SP_Select_GetCollectByPackages" DataBaseType="Oracle">
      select PackageSetting.CargoTopType,CargoType.CargoTypeName as CargoTypeText,PackageSetting.CargoTypeID ,
      Sum(PackageSetting.Quantity) as Qty,0 as LostQty from FlowPackageList left join PackageSetting
      on PackageSetting.PackageTypeID=FlowPackageList.CargoTypeID
      left join CargoType on PackageSetting.CargoTypeID = CargoType.CargoTypeID
      where  PackageSetting.CargoTopType=1 and FlowPackageList.PackageID in ({0}) GROUP BY CargoType.CargoTypeName ,PackageSetting.CargoTypeID,PackageSetting.CargoTopType
    </Content>

    <Content Key="SP_Query_Package" DataBaseType="SqlServer">
      SELECT  dbo.FlowProvide.OrgID AS OrgID, dbo.StorageList.Status,FlowPackageList.PackageID,
      dbo.StorageList.CargoTopType, dbo.StorageList.CargoTypeID,
      dbo.StorageList.EXPDate,AC_Org.Name AS OrgID_Name, ParStatus.TypeName AS Status_Name,
      ParCargoTopType.TypeName AS CargoTopTypeText,
      CargoType.CargoTypeName AS CargoTypeText,
      dbo.CargoTypeKind.ID,
      dbo.CargoTypeKind.KindName
      FROM         dbo.FlowPackageList INNER JOIN
      dbo.StorageList ON dbo.StorageList.StorageID = dbo.FlowPackageList.StorageID LEFT OUTER JOIN
      dbo.FlowProvideList ON dbo.FlowProvideList.PackageID = dbo.FlowPackageList.PackageID LEFT OUTER JOIN
      dbo.FlowProvide ON dbo.FlowProvide.ProvideID = dbo.FlowProvideList.ProvideID left outer join
      dbo.CargoType ON dbo.StorageList.CargoTypeID = dbo.CargoType.CargoTypeID LEFT OUTER JOIN
      dbo.CargoTypeKind ON dbo.CargoTypeKind.ID = dbo.CargoType.CargoTypeKind
      left outer join dbo.AC_Org on dbo.FlowProvide.OrgID=AC_Org.ID
      left outer join dbo.SystemTypeParameter ParStatus on (ParStatus.TypeValue= dbo.StorageList.Status and ParStatus.TypeKey='StorageStatus')
      left outer join SystemTypeParameter ParCargoTopType on(ParCargoTopType.TypeValue=StorageList.CargoTopType and ParCargoTopType.TypeKey='CargoTopType')
      where FlowPackageList.PackageID  not in (select FlowRecycleOrderPackage.packageid from FlowRecycleOrderPackage)
      and 1=1
    </Content>
    <Content Key="SP_Query_Package" DataBaseType="Oracle">
      SELECT   FlowProvide.OrgID AS OrgID,  StorageList.Status,FlowPackageList.PackageID,
      StorageList.CargoTopType,  StorageList.CargoTypeID,
      StorageList.EXPDate,AC_Org.Name AS OrgID_Name, ParStatus.TypeName AS Status_Name,
      ParCargoTopType.TypeName AS CargoTopTypeText,
      CargoType.CargoTypeName AS CargoTypeText,
      CargoTypeKind.ID,
      CargoTypeKind.KindName
      FROM         FlowPackageList INNER JOIN
      StorageList ON StorageList.StorageID = FlowPackageList.StorageID LEFT OUTER JOIN
      FlowProvideList ON FlowProvideList.PackageID = FlowPackageList.PackageID LEFT OUTER JOIN
      FlowProvide ON FlowProvide.ProvideID = FlowProvideList.ProvideID left outer join
      CargoType ON StorageList.CargoTypeID = CargoType.CargoTypeID LEFT OUTER JOIN
      CargoTypeKind ON CargoTypeKind.ID = CargoType.CargoTypeKind
      left outer join AC_Org on FlowProvide.OrgID=AC_Org.ID
      left outer join SystemTypeParameter ParStatus on (ParStatus.TypeValue= StorageList.Status and ParStatus.TypeKey='StorageStatus')
      left outer join SystemTypeParameter ParCargoTopType on(ParCargoTopType.TypeValue=StorageList.CargoTopType and ParCargoTopType.TypeKey='CargoTopType')
      where FlowPackageList.PackageID  not in (select FlowRecycleOrderPackage.packageid from FlowRecycleOrderPackage)
      and 1=1
    </Content>

    <Content Key="Select_GetLostApplianceList" DataBaseType="SqlServer">
      select FlowRecycleLostList.*,CargoType.CargoTypeName as CargoTypeText,CargoTypeKind.KindName as CargotypeKindID_Name,
      SystemTypeParameter.TypeName AS CargoTopTypeText
      FROM dbo.FlowRecycleLostList
      left JOIN dbo.CargoType
      ON  FlowRecycleLostList.CargoTypeID=CargoType.CargoTypeID  left  join dbo.CargoTypeKind  on CargoTypeKind.id=CargoType.CargoTypeKind
      left outer join  dbo.SystemTypeParameter  on (FlowRecycleLostList.CargoTopType=SystemTypeParameter.TypeValue and SystemTypeParameter.TypeKey='CargoTopType')
      where 1=1
    </Content>
    <Content Key="Select_GetLostApplianceList" DataBaseType="Oracle">
      select FlowRecycleLostList.*,CargoType.CargoTypeName as CargoTypeText,CargoTypeKind.KindName as CargotypeKindID_Name,
      SystemTypeParameter.TypeName AS CargoTopTypeText
      FROM  FlowRecycleLostList
      left JOIN CargoType
      ON  FlowRecycleLostList.CargoTypeID=CargoType.CargoTypeID  left  join  CargoTypeKind  on CargoTypeKind.id=CargoType.CargoTypeKind
      left outer join   SystemTypeParameter  on (FlowRecycleLostList.CargoTopType=SystemTypeParameter.TypeValue and SystemTypeParameter.TypeKey='CargoTopType')
      where 1=1
    </Content>

    <Content Key="Select_PreOrderDetail" DataBaseType="SqlServer">
      SELECT
      FLOWPREORDERDETAIL.*
      , CargoType.CargoTopTypeText
      , CargoType.CARGOTYPEText
      , CargoType.CARGOTYPEKindText
      , CargoType.MINUNIT
      , CargoType.UNIT
      ,ISNULL(CargoType.AMOUNT,0) AMOUNT,ISNULL(CargoType.AMOUNT*PreOrderQty,0) GroupPrice
      ,CheckStatus.TypeName  CheckStatusName
      , st.DisposableCargoStockQty
      FROM FLOWPREORDERDETAIL  WITH (NOLOCK)
      LEFT JOIN view_CargoType AS CargoType
      ON FLOWPREORDERDETAIL.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CheckStatus on(CheckStatus.TypeKey='PreOrderCheck' and FLOWPREORDERDETAIL.CheckStatus=CheckStatus.TypeValue)
      LEFT JOIN (
      SELECT
      fpod.PreOrderDetailID
      , fpod.CargoTypeID
      , ISNULL(SUM(sl.Quantity), 0) AS DisposableCargoStockQty
      FROM   FlowPreOrderDetail fpod
      left JOIN CargoType ct/*找到产品发放科室*/
      ON ct.CargoTypeID = fpod.CargoTypeID
      left JOIN Warehouse w /*根据发放科室找到下辖的仓库*/
      ON w.OrgID = isnull(ct.SupplyRoom,'9488FD1D-5CDC-41E7-9342-CDF184FE06B9')
      left JOIN StorageList sl
      ON sl.WarehouseID = w.WarehouseID
      AND sl.CargoTypeID = fpod.CargoTypeID
      AND sl.CargoTopType = 2
      AND sl.Quantity > 0
      AND sl.EXPDate > CONVERT(VARCHAR(10), GETDATE(), 120)
      {0}
      GROUP BY
      fpod.PreOrderDetailID
      ,  fpod.CargoTypeID
      )  st
      ON st.PreOrderDetailID = FLOWPREORDERDETAIL.PreOrderDetailID
      AND st.CargoTypeID = CargoType.CargoTypeID
      WHERE 1=1 {0}
      ORDER BY CargoTopTypeText,CARGOTYPEKindText,CARGOTYPEText
    </Content>
    <Content Key="Select_PreOrderDetail" DataBaseType="Oracle">
		SELECT
		fpod.*
		, CargoType.CargoTopTypeText
		, CargoType.CARGOTYPEText
		, CargoType.CARGOTYPEKindText
		, CargoType.MINUNIT
		, CargoType.UNIT
		,nvl(CargoType.AMOUNT,0) AMOUNT,nvl(CargoType.AMOUNT*PreOrderQty,0) GroupPrice
		,CheckStatus.TypeName  CheckStatusName
		, case fpod.cargotoptype when 2 then  (
		SELECT
		NVL(SUM(sl.Quantity), 0)
		FROM  CargoType ct/*找到产品发放科室*/
		inner JOIN Warehouse w /*根据发放科室找到下辖的仓库*/
		ON w.OrgID = nvl(ct.SupplyRoom,'9488FD1D-5CDC-41E7-9342-CDF184FE06B9')
		inner JOIN StorageList sl
		ON sl.WarehouseID = w.WarehouseID
		AND sl.Quantity > 0
		AND TO_CHAR(sl.EXPDate,'yyyy-mm-dd')>TO_CHAR(sysdate,'yyyy-mm-dd')
		AND sl.CargoTypeID = ct.CargoTypeID
		AND sl.CargoTopType = 2
		where ct.CargoTypeID = fpod.CargoTypeID
		) else 0 end  DisposableCargoStockQty
		FROM FLOWPREORDERDETAIL fpod
		LEFT JOIN view_CargoType  CargoType
		ON fpod.CargoTypeID = CargoType.CargoTypeID
		LEFT JOIN SystemTypeParameter CheckStatus on(CheckStatus.TypeKey='PreOrderCheck' and fpod.CheckStatus=CheckStatus.TypeValue)
		WHERE 1=1 {0}
		ORDER BY CargoTopTypeText,CARGOTYPEKindText,CARGOTYPEText
	</Content>

    <Content Key="Check_PreOrderDetailQty" DataBaseType="SqlServer">
      SELECT
      FLOWPREORDERDETAIL.*
      , CargoType.CargoTopTypeText
      , CargoType.CARGOTYPEText
      , CargoType.CARGOTYPEKindText
      , CargoType.MINUNIT
      , CargoType.UNIT
      ,ISNULL(CargoType.AMOUNT,0) AMOUNT,ISNULL(CargoType.AMOUNT*PreOrderQty,0) GroupPrice
      ,CheckStatus.TypeName  CheckStatusName
      , st.DisposableCargoStockQty
      FROM FLOWPREORDERDETAIL  WITH (NOLOCK)
      LEFT JOIN view_CargoType AS CargoType
      ON FLOWPREORDERDETAIL.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CheckStatus on(CheckStatus.TypeKey='PreOrderCheck' and FLOWPREORDERDETAIL.CheckStatus=CheckStatus.TypeValue)
      LEFT JOIN (
      SELECT
      fpod.PreOrderDetailID
      , fpod.CargoTypeID
      , ISNULL(SUM(sl.Quantity), 0) AS DisposableCargoStockQty
      FROM   FlowPreOrderDetail fpod
      LEFT OUTER JOIN CargoType ct/*找到产品发放科室*/
      ON ct.CargoTypeID = fpod.CargoTypeID
      LEFT OUTER JOIN Warehouse w /*根据发放科室找到下辖的仓库*/
      ON w.OrgID = ct.SupplyRoom
      LEFT OUTER JOIN StorageList sl
      ON sl.WarehouseID = w.WarehouseID
      AND sl.CargoTypeID = fpod.CargoTypeID
      AND sl.CargoTopType = 2
      AND sl.Quantity > 0
      AND sl.EXPDate > CONVERT(VARCHAR(10), GETDATE(), 120)
      GROUP BY
      fpod.PreOrderDetailID
      ,  fpod.CargoTypeID
      )  st
      ON st.PreOrderDetailID = FLOWPREORDERDETAIL.PreOrderDetailID
      AND st.CargoTypeID = CargoType.CargoTypeID
      WHERE 1=1 AND FLOWPREORDERDETAIL.PreOrderOriQty > st.DisposableCargoStockQty {0}
      ORDER BY CargoTopTypeText,CARGOTYPEKindText,CARGOTYPEText
    </Content>
    <Content Key="Check_PreOrderDetailQty" DataBaseType="Oracle">
      SELECT
      FLOWPREORDERDETAIL.*
      , CargoType.CargoTopTypeText
      , CargoType.CARGOTYPEText
      , CargoType.CARGOTYPEKindText
      , CargoType.MINUNIT
      , CargoType.UNIT
      ,nvl(CargoType.AMOUNT,0) AMOUNT,nvl(CargoType.AMOUNT*PreOrderQty,0) GroupPrice
      ,CheckStatus.TypeName  CheckStatusName
      , st.DisposableCargoStockQty
      FROM FLOWPREORDERDETAIL
      LEFT JOIN view_CargoType  CargoType
      ON FLOWPREORDERDETAIL.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CheckStatus on(CheckStatus.TypeKey='PreOrderCheck' and FLOWPREORDERDETAIL.CheckStatus=CheckStatus.TypeValue)
      LEFT JOIN (
      SELECT
      fpod.PreOrderDetailID
      , fpod.CargoTypeID
      , NVL(SUM(sl.Quantity), 0) AS DisposableCargoStockQty
      FROM   FlowPreOrderDetail fpod
      LEFT OUTER JOIN CargoType ct/*找到产品发放科室*/
      ON ct.CargoTypeID = fpod.CargoTypeID
      LEFT OUTER JOIN Warehouse w /*根据发放科室找到下辖的仓库*/
      ON w.OrgID = ct.SupplyRoom
      LEFT OUTER JOIN StorageList sl
      ON sl.WarehouseID = w.WarehouseID
      AND sl.CargoTypeID = fpod.CargoTypeID
      AND sl.CargoTopType = 2
      AND sl.Quantity > 0
      AND TO_CHAR(sl.EXPDate,'yyyy-mm-dd')>TO_CHAR(sysdate,'yyyy-mm-dd')
      GROUP BY
      fpod.PreOrderDetailID
      ,  fpod.CargoTypeID
      )  st
      ON st.PreOrderDetailID = FLOWPREORDERDETAIL.PreOrderDetailID
      AND st.CargoTypeID = CargoType.CargoTypeID
      WHERE 1=1 AND FLOWPREORDERDETAIL.PreOrderOriQty > st.DisposableCargoStockQty {0}
      ORDER BY CargoTopTypeText,CARGOTYPEKindText,CARGOTYPEText
    </Content>

    <Content Key="Select_PackageNumOrderDetail" DataBaseType="SqlServer">
      SELECT
      FlowPackageNumOrderDetail.*
      , CargoType.CargoTopTypeText
      , CargoType.CARGOTYPEText
      , CargoType.CARGOTYPEKindText
      ,ac_org.name as orgname
      FROM  FlowPackageNumOrderDetail   WITH (NOLOCK)
      LEFT JOIN view_CargoType AS CargoType
      ON FlowPackageNumOrderDetail.CargoTypeID = CargoType.CargoTypeID
      left join ac_org on ac_org.id=FlowPackageNumOrderDetail.orgid
      WHERE 1=1  {0}
      ORDER BY CargoTopTypeText,CARGOTYPEKindText,CARGOTYPEText
    </Content>
    <Content Key="Select_PackageNumOrderDetail" DataBaseType="Oracle">
      SELECT
      FlowPackageNumOrderDetail.*
      , CargoType.CargoTopTypeText
      , CargoType.CARGOTYPEText
      , CargoType.CARGOTYPEKindText
      ,ac_org.name as orgname
      FROM  FlowPackageNumOrderDetail
      LEFT JOIN view_CargoType AS CargoType
      ON FlowPackageNumOrderDetail.CargoTypeID = CargoType.CargoTypeID
      left join ac_org on ac_org.id=FlowPackageNumOrderDetail.orgid
      WHERE 1=1  {0}
      ORDER BY CargoTopTypeText,CARGOTYPEKindText,CARGOTYPEText
    </Content>
    <Content Key="Select_BadEquipmentListDetail" DataBaseType="SqlServer">
      SELECT
      BadEquipmentList.*
      , CargoType.CargoTopTypeText
      , CargoType.CARGOTYPEText
      , CargoType.CARGOTYPEKindText
      FROM  BadEquipmentList
      LEFT JOIN view_CargoType AS CargoType
      ON BadEquipmentList.CargoTypeID = CargoType.CargoTypeID
      WHERE 1=1  {0}
      ORDER BY CargoTopTypeText,CARGOTYPEKindText,CARGOTYPEText
    </Content>
    <Content Key="Select_BadEquipmentListDetail" DataBaseType="Oracle">
      SELECT
      BadEquipmentList.*
      , CargoType.CargoTopTypeText
      , CargoType.CARGOTYPEText
      , CargoType.CARGOTYPEKindText
      FROM  BadEquipmentList
      LEFT JOIN view_CargoType AS CargoType
      ON BadEquipmentList.CargoTypeID = CargoType.CargoTypeID
      WHERE 1=1  {0}
      ORDER BY CargoTopTypeText,CARGOTYPEKindText,CARGOTYPEText
    </Content>
    <Content Key="SP_Select_FlowTask" DataBaseType="SqlServer">
      SELECT
      FlowTask.TaskID,
      FlowTask.CargoTopType,
      FlowTask.CargoTypeID,
      FlowTask.TaskNum,
      FlowTask.DoingNum,
      FlowTask.FinishNum,
      FlowTask.FinishFlag,
      FlowTask.CreateBy,
      FlowTask.CreateTime,
      FlowTask.FinishTime,
      FlowTask.FRecycleID,
      FlowTask.PreOrderID,
      FlowTask.FlowOrgID,
      FlowTask.FReason,
      CargoTypeName.TypeName as CargoTopTypeName,
      AC_WorkGroup.FNames AS CreateByName,
      CargoType.CargoTypeName AS CargoTypeIDName,
      FlowTaskStatus.TypeName AS FinishFlagName,
      kind.KindName as CargoTypeKindName
      FROM FlowTask
      LEFT JOIN SystemTypeParameter CargoTypeName on(CargoTypeName.TypeKey='CargoTopType' and FlowTask.CargoTopType=CargoTypeName.TypeValue)
      --LEFT JOIN AC_User  on(AC_User.ID=FlowTask.CreateBy)
      LEFT JOIN AC_WorkGroup  on(AC_WorkGroup.FID=FlowTask.CreateBy)
      LEFT JOIN CargoType  on(CargoType.CargoTypeID=FlowTask.CargoTypeID)
      left join CargoTypeKind kind on CargoType.CargoTypeKind=kind.ID
      LEFT JOIN SystemTypeParameter FlowTaskStatus on(FlowTaskStatus.TypeKey='FlowTaskStatus' and FlowTask.FinishFlag=FlowTaskStatus.TypeValue)
      WHERE 1 = 1
    </Content>
    <Content Key="SP_Select_FlowTask" DataBaseType="Oracle">
      SELECT
      FlowTask.TaskID,
      FlowTask.CargoTopType,
      FlowTask.CargoTypeID,
      FlowTask.TaskNum,
      FlowTask.DoingNum,
      FlowTask.FinishNum,
      FlowTask.FinishFlag,
      FlowTask.CreateBy,
      FlowTask.CreateTime,
      FlowTask.FinishTime,
      FlowTask.FRecycleID,
      FlowTask.PreOrderID,
      FlowTask.FlowOrgID,
      CargoTypeName.TypeName as CargoTopTypeName,
      AC_WorkGroup.FNames AS CreateByName,
      CargoType.CargoTypeName AS CargoTypeIDName,
      FlowTaskStatus.TypeName AS FinishFlagName,
      kind.KindName as CargoTypeKindName
      FROM FlowTask
      LEFT JOIN SystemTypeParameter CargoTypeName on(CargoTypeName.TypeKey='CargoTopType' and FlowTask.CargoTopType=CargoTypeName.TypeValue)
      --LEFT JOIN AC_User  on(AC_User.ID=FlowTask.CreateBy)
      LEFT JOIN AC_WorkGroup  on(AC_WorkGroup.FID=FlowTask.CreateBy)
      LEFT JOIN CargoType  on(CargoType.CargoTypeID=FlowTask.CargoTypeID)
      left join CargoTypeKind kind on CargoType.CargoTypeKind=kind.ID
      LEFT JOIN SystemTypeParameter FlowTaskStatus on(FlowTaskStatus.TypeKey='FlowTaskStatus' and FlowTask.FinishFlag=FlowTaskStatus.TypeValue)
      WHERE 1 = 1
    </Content>

    <Content Key="Select_NeedReprintPackageList" DataBaseType="SqlServer">
      <![CDATA[
      select sl.BARCODE
      from FlowSterilizationList fs inner join FlowPackageList fl on fs.PackageID = fl.PackageID
      inner join StorageList sl on fl.StorageID = sl.StorageID
      where fs.SterilizationLogID = @LogId and  datediff(day,maedate,sterilizedate) <> 0
      ]]>
    </Content>
    <Content Key="Select_NeedReprintPackageList" DataBaseType="Oracle">
      <![CDATA[
      select sl.BARCODE
      from FlowSterilizationList fs inner join FlowPackageList fl on fs.PackageID = fl.PackageID
      inner join StorageList sl on fl.StorageID = sl.StorageID
      where fs.SterilizationLogID = :LogId and  datediff('D',maedate,sterilizedate) <> 0
      ]]>
    </Content>

    <Content Key="Select_PackageBarcodesByContainerPackageID" DataBaseType="SqlServer">
      select SL.BARCODE,C.CARGOTYPENAME,pl.PACKAGEID,SL.MAEDATE,W.WAREHOUSENAME,SL.EXPDATE,pl.ISTEMP,pl.STORAGEID,pl.VALIDDATE
      ,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE,C.CARGOTYPEID,pl.FLOWORGID
      from FlowContainerPackagelist cpl    inner join FlowPackageList pl  on cpl.PackageID = pl.packageid
      inner join StorageList sl  on pl.storageid = sl.storageid
      inner join CargoType c  on pl.CargoTypeID = c.cargotypeid
      inner join FlowContainerPackage cp   on cpl.ContainerPackageID = cp.ContainerPackageID
      LEFT JOIN WAREHOUSE W  ON pl.LASTWAREHOUSEID = W.WAREHOUSEID
      where cpl.ContainerPackageID =@ContainerPackageID and cp.ReadyStatus = 0
    </Content>
    <Content Key="Select_PackageBarcodesByContainerPackageID" DataBaseType="Oracle">
      select SL.BARCODE,C.CARGOTYPENAME,pl.PACKAGEID,SL.MAEDATE,W.WAREHOUSENAME,SL.EXPDATE,pl.ISTEMP,pl.STORAGEID,pl.VALIDDATE
      ,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE,C.CARGOTYPEID,pl.FLOWORGID
      from FlowContainerPackagelist cpl    inner join FlowPackageList pl  on cpl.PackageID = pl.packageid
      inner join StorageList sl  on pl.storageid = sl.storageid
      inner join CargoType c  on pl.CargoTypeID = c.cargotypeid
      inner join FlowContainerPackage cp   on cpl.ContainerPackageID = cp.ContainerPackageID
      LEFT JOIN WAREHOUSE W  ON pl.LASTWAREHOUSEID = W.WAREHOUSEID
      where  cp.ReadyStatus = 0 and cpl.ContainerPackageID =:ContainerPackageID
    </Content>

    <Content Key="SELECT_FlowPreOrder" DataBaseType="SqlServer">
      SELECT
      PREORDERID,PREORDERCODE,ORGID,ORDERDATE,REQUIREDDATE,PREORDERSTATUS,
      FlowPreOrder.REMARK,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,FINISHDATE,CHECKSTATUS,PRINTSTATUS,
      PREORDERTYPE,FlowPreOrder.FLOWORGID, PreOrderOrg.Name AS OrgName,createuser.name as CreateName
      FROM FlowPreOrder left join ac_user createuser on flowpreorder.createby=createuser.id
      LEFT JOIN AC_Org AS PreOrderOrg ON FlowPreOrder.OrgID = PreOrderOrg.ID
      WHERE 1 = 1
    </Content>
    <Content Key="SELECT_FlowPreOrder" DataBaseType="Oracle">
      SELECT
      PREORDERID,PREORDERCODE,ORGID,ORDERDATE,REQUIREDDATE,PREORDERSTATUS,
      FlowPreOrder.REMARK,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,FINISHDATE,CHECKSTATUS,PRINTSTATUS,
      PREORDERTYPE,FlowPreOrder.FLOWORGID, PreOrderOrg.Name AS OrgName,createuser.name as CreateName
      FROM FlowPreOrder left join ac_user createuser on flowpreorder.createby=createuser.id
      LEFT JOIN AC_Org  PreOrderOrg ON FlowPreOrder.OrgID = PreOrderOrg.ID
      WHERE 1 = 1
    </Content>
    <!--<Content Key="Select_FlowPreOrderDetailEntityByOrgID" DataBaseType="SqlServer">
      SELECT * FROM (
      SELECT A.ID ORGID,C.CARGOTYPEID,C.CARGOTOPTYPE,C.CARGOTOPTYPETEXT,C.CARGOTYPEKINDTEXT,C.CARGOTYPETEXT
      FROM AC_Org A
      INNER JOIN AC_OrgProducts B ON B.ID=A.ID
      INNER JOIN view_CargoType C ON C.CargoTypeID=B.CargoTypeID
      WHERE  A.ISDISABLED=0
      UNION ALL
      SELECT A.ID ORGID,C.CARGOTYPEID,C.CARGOTOPTYPE,C.CARGOTOPTYPETEXT,C.CARGOTYPEKINDTEXT,C.CARGOTYPETEXT
      FROM AC_Org A
      INNER JOIN AC_OrgOneProducts B ON B.ID=A.ID
      INNER JOIN view_CargoType C ON C.CargoTypeID=B.CargoTypeID
      WHERE  A.ISDISABLED=0
      ) FlowProducts WHERE ORGID=@ID
    </Content>
    <Content Key="Select_FlowPreOrderDetailEntityByOrgID" DataBaseType="Oracle">
      SELECT * FROM (
      SELECT A.ID ORGID,C.CARGOTYPEID,C.CARGOTOPTYPE,C.CARGOTOPTYPETEXT,C.CARGOTYPEKINDTEXT,C.CARGOTYPETEXT
      FROM AC_Org A
      INNER JOIN AC_OrgProducts B ON B.ID=A.ID
      INNER JOIN view_CargoType C ON C.CargoTypeID=B.CargoTypeID
      WHERE  A.ISDISABLED=0
      UNION ALL
      SELECT A.ID ORGID,C.CARGOTYPEID,C.CARGOTOPTYPE,C.CARGOTOPTYPETEXT,C.CARGOTYPEKINDTEXT,C.CARGOTYPETEXT
      FROM AC_Org A
      INNER JOIN AC_OrgOneProducts B ON B.ID=A.ID
      INNER JOIN view_CargoType C ON C.CargoTypeID=B.CargoTypeID
      WHERE  A.ISDISABLED=0
      ) FlowProducts WHERE ORGID=:ID
    </Content>-->

    <Content Key="Query_CONTAINERPACKAGEID" DataBaseType="SqlServer">
      SELECT CONTAINERPACKAGEID from FlowContainerPackage  where  ContainerID =@ContainerID and ReadyStatus = 0
    </Content>
    <Content Key="Query_CONTAINERPACKAGEID" DataBaseType="Oracle">
      SELECT CONTAINERPACKAGEID from FlowContainerPackage  where  ContainerID =:ContainerID and ReadyStatus = 0
    </Content>
    
    <Content Key="Query_FlowOrgServiceOrgInfo" DataBaseType="SqlServer">
      <![CDATA[
      select ID ORGID,Name ORGNAME,case isnull(fbd.keyid,'00000000-0000-0000-0000-000000000000')  when '00000000-0000-0000-0000-000000000000' then 0 else 1 end as ISSERVICE from AC_Org  left join floworgbasedata fbd
      on ac_org.ID=fbd.keyid and fbd.floworgid =@floworgid   and type='org'
      where ac_org.IsDisabled=0
      order by ac_org.name 
      ]]>
    </Content>
    <Content Key="Query_FlowOrgServiceOrgInfo" DataBaseType="Oracle">
      <![CDATA[
      select ID ORGID,Name ORGNAME,case nvl(fbd.keyid,'00000000-0000-0000-0000-000000000000')  when '00000000-0000-0000-0000-000000000000' then '0' else '1' end as ISSERVICE from AC_Org  left join floworgbasedata fbd
      on ac_org.ID=fbd.keyid and fbd.floworgid =:floworgid    and type='org'
      where ac_org.IsDisabled=0
      order by ac_org.name 
      ]]>
    </Content>
    
       <Content Key="Query_FlowOrgServiceCargotypeInfo" DataBaseType="SqlServer">
      <![CDATA[
      SELECT B.CARGOTYPEID,CargoTopType.TypeName CARGOTOPTYPETEXT, CargoTypeKind.KindName CARGOTYPEKINDTEXT,B.CARGOTYPENAME CARGOTYPETEXT,case isnull(fbd.keyid,'00000000-0000-0000-0000-000000000000')  when '00000000-0000-0000-0000-000000000000' then '0' else '1' end as ISSERVICE 
FROM  CargoType B INNER JOIN  CargoTypeKind ON B.CargoTypeKind = CargoTypeKind.ID INNER JOIN
SystemTypeParameter  CargoTopType ON CargoTopType.TypeKey = 'CargoTopType' AND
B.CargoTopType = CargoTopType.TypeValue  left join floworgbasedata fbd
on B.cargotypeid=fbd.keyid and fbd.floworgid =@floworgid  and type='cargotype'
where B.IsDisabled=0  
order by B.cargotoptype, CargoTypeKind.KindName,B.CARGOTYPENAME 
      ]]>
    </Content>
    <Content Key="Query_FlowOrgServiceCargotypeInfo" DataBaseType="Oracle">
      <![CDATA[
   SELECT B.CARGOTYPEID,CargoTopType.TypeName CARGOTOPTYPETEXT, CargoTypeKind.KindName CARGOTYPEKINDTEXT,B.CARGOTYPENAME CARGOTYPETEXT,case nvl(fbd.keyid,'00000000-0000-0000-0000-000000000000')  when '00000000-0000-0000-0000-000000000000' then '0' else '1' end as ISSERVICE 
FROM  CargoType B INNER JOIN  CargoTypeKind ON B.CargoTypeKind = CargoTypeKind.ID INNER JOIN
SystemTypeParameter  CargoTopType ON CargoTopType.TypeKey = 'CargoTopType' AND
B.CargoTopType = CargoTopType.TypeValue  left join floworgbasedata fbd
on B.cargotypeid=fbd.keyid and fbd.floworgid =:floworgid  and type='cargotype'
where B.IsDisabled=0  
order by B.cargotoptype, CargoTypeKind.KindName,B.CARGOTYPENAME 
      ]]>
    </Content>

    <Content Key="Delete_FlowOrgBaseData" DataBaseType="SqlServer">
      <![CDATA[
      delete from floworgbasedata  where floworgid =@floworgid and   type=@type 
      ]]>
    </Content>
    <Content Key="Delete_FlowOrgBaseData" DataBaseType="Oracle">
      <![CDATA[
     delete from floworgbasedata  where floworgid =:floworgid and type=:type 
      ]]>
    </Content>
    
    <Content Key="Query_FlowDisinfectViewList" DataBaseType="SqlServer">
      <![CDATA[
      Select dl.BEGINDATE,d.DEVICEID,d.DEVICENAME,dl.TODAYUSETIMES,ou.FNames NAME ,tp.TYPENAME ISOK,fd.FDISINFECTID
      ,dl.MONITORDATAID
      ,dl.SensorDataHeadID
      ,CASE ISNULL(Convert(nvarchar(50),dl.MONITORDATAID),ISNULL(CONVERT(NVARCHAR(50), dl.SensorDataHeadID), ''))
      WHEN '' THEN '无记录' ELSE '查看监控数据' END AS MONITORLOG
      ,isnull(prule.RULENAME,'') as RULENAME
      ,fd.FISPDADATA,
      Case when fd.FISPDADATA = 0 then '否' when fd.FISPDADATA = 1 then '是' end as PDA,dl.LOGID,D.BARCODE as DEVICEBARCODE,D.DEVICETYPE
      From FlowDisinfect fd
      inner join DevicesUseLog dl  on fd. LogID = dl.Logid
      inner join Devices d  on dl.DeviceID = d.deviceid
      inner join AC_WorkGroup ou  on dl.UserID= ou.FID
      inner join SystemTypeParameter tp  on ( dl.isok = tp.TypeValue and tp.TypeKey = 'ContainerStatus')
      left join DeviceProcessRule prule  on dl.DeviceProcessRuleID = prule.RuleID
      Where d.DeviceType <= 3 ]]>
    </Content>
    <Content Key="Query_FlowDisinfectViewList" DataBaseType="Oracle">
      <![CDATA[
      Select dl.BEGINDATE,d.DEVICEID,d.DEVICENAME,dl.TODAYUSETIMES,ou.FNames NAME ,tp.TYPENAME ISOK,fd.FDISINFECTID
      ,dl.MONITORDATAID
      ,dl.sensordataheadid
      ,CASE nvl(dl.MONITORDATAID,nvl(dl.sensordataheadid, -1)) 
      WHEN -1 THEN '无记录' ELSE '查看监控数据' END AS MONITORLOG
      ,prule.RULENAME as RULENAME
      ,fd.FISPDADATA,
      Case when fd.FISPDADATA = 0 then '否' when fd.FISPDADATA = 1 then '是' end as PDA,dl.LOGID,D.BARCODE as DEVICEBARCODE,D.DEVICETYPE
      From FlowDisinfect fd
      inner join DevicesUseLog dl  on fd. LogID = dl.Logid
      inner join Devices d  on dl.DeviceID = d.deviceid
      inner join AC_WorkGroup ou  on dl.UserID= ou.FID
      inner join SystemTypeParameter tp  on ( dl.isok = tp.TypeValue and tp.TypeKey = 'ContainerStatus')
      left join DeviceProcessRule prule  on dl.DeviceProcessRuleID = prule.RuleID
      Where d.DeviceType <= 3 ]]>
    </Content>

    <Content Key="Query_FlowDisinfectViewDetail" DataBaseType="SqlServer">
      select distinct c.BARCODE,c.CONTAINERNAME, fdl.Status ,st.TypeName as STATUSNAME
      from FlowDisinfectContainerList fdl  inner join  Container c  on fdl. ContainerID = c. ContainerID
      inner join  SystemTypeParameter st  on fdl.Status = st.TypeValue and st.TypeKey = 'ContainerStatus'
      where 1= 1
    </Content>
    <Content Key="Query_FlowDisinfectViewDetail" DataBaseType="Oracle">
      select distinct c.BARCODE,c.CONTAINERNAME, fdl.Status ,st.TypeName as STATUSNAME
      from FlowDisinfectContainerList fdl  inner join  Container c  on fdl. ContainerID = c. ContainerID
      inner join  SystemTypeParameter st  on fdl.Status = st.TypeValue and st.TypeKey = 'ContainerStatus'
      where 1= 1
    </Content>

    <Content Key="Query_GetFlowDisinfectReportByTimeId" DataBaseType="SqlServer">
      select u.FID,dv.DEVICENAME,COUNT(1) as CONTAINERNUM, du.todayusetimes as USETIMES
      from FlowDisinfect d  inner join FlowDisinfectContainerList dl  on d.FDisinfectID = dl.FDisinfectID
      inner join DevicesUseLog du  on d.LogID = du.LogID
      --inner join AC_User u  on du.UserID = u.ID
      inner join AC_WorkGroup u  on du.UserID = u.FID
      inner join Devices dv  on du.DeviceID = dv.DeviceID
      where 1=1 {0} group by u.FID,dv.DeviceName,d.FDisinfectID, du.todayusetimes
    </Content>
    <Content Key="Query_GetFlowDisinfectReportByTimeId" DataBaseType="Oracle">
      select u.FID,dv.DEVICENAME,COUNT(1) as CONTAINERNUM, du.todayusetimes as USETIMES
      from FlowDisinfect d  inner join FlowDisinfectContainerList dl  on d.FDisinfectID = dl.FDisinfectID
      inner join DevicesUseLog du  on d.LogID = du.LogID
      --inner join AC_User u  on du.UserID = u.ID
      inner join AC_WorkGroup u  on du.UserID = u.FID
      inner join Devices dv  on du.DeviceID = dv.DeviceID
      where 1=1 {0} group by u.FID,dv.DeviceName,d.FDisinfectID, du.todayusetimes
    </Content>

    <Content Key="Query_GetFlowDisinfectReportByTimeIdFlowOrgID" DataBaseType="SqlServer">
      select u.FID,dv.DEVICENAME,COUNT(1) as CONTAINERNUM, du.todayusetimes as USETIMES
      from FlowDisinfect d  inner join FlowDisinfectContainerList dl  on d.FDisinfectID = dl.FDisinfectID
      inner join DevicesUseLog du  on d.LogID = du.LogID
      --inner join AC_User u  on du.UserID = u.ID
      inner join AC_WorkGroup u  on du.UserID = u.FID
      inner join Devices dv  on du.DeviceID = dv.DeviceID
      where 1=1 {0} group by u.FID,dv.DeviceName,d.FDisinfectID, du.todayusetimes
    </Content>
    <Content Key="Query_GetFlowDisinfectReportByTimeIdFlowOrgID" DataBaseType="Oracle">
      select u.FID,dv.DEVICENAME,COUNT(1) as CONTAINERNUM, du.todayusetimes as USETIMES
      from FlowDisinfect d  inner join FlowDisinfectContainerList dl  on d.FDisinfectID = dl.FDisinfectID
      inner join DevicesUseLog du  on d.LogID = du.LogID
      --inner join AC_User u  on du.UserID = u.ID
      inner join AC_WorkGroup u  on du.UserID = u.FID
      inner join Devices dv  on du.DeviceID = dv.DeviceID
      where 1=1 {0} group by u.FID,dv.DeviceName,d.FDisinfectID, du.todayusetimes
    </Content>
	  <Content Key="Query_FlowPackageDetailList" DataBaseType="SqlServer">
      SELECT c.CARGOTYPENAME,fpc.QUANTITY / fp.QUANTITY as QUANTITY,'' as BARCODE,c.ISTRACK,fl.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,fpc.STORAGEID as ID,fpc.QUANTITY / fp.QUANTITY as NEEDQUANTITY
      ,ps.ISDYNAMIC,fpc.FlowPackageCargoListid as LISTID,ps.ISRECYCLEDYNAMIC,ps.FORDER,ct.CargoTypeName as ORGNAME
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,fpr.Remark as REMARK
      from FlowPackage fp  inner join FlowPackageCargoList fpc  on fp.FPackageID = fpc.FPackageID
      inner join CargoType c  on fpc.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on fpc.FPackageID = fl.FPackageID
      inner join StorageList sl on fl.StorageID=sl.StorageID
      inner join CargoType ct on sl.CargoTypeID=ct.CargoTypeID
      inner join PackageSetting ps  on fl.CargoTypeID  = ps.PackageTypeID and ps.CargoTypeID=fpc.CargoTypeID
      left join flowpackageRemark fpr on fpr.fpackageid=fp.fpackageid and fpr.cargotypeid=ps.cargotypeid
      where c.CargoTopType = 1 and fl.packageid = @packageid
      union all
      SELECT c.CARGOTYPENAME,fpd.QUANTITY,sl.BARCODE,c.ISTRACK,fpd.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,sl.STORAGEID as ID,fpd.QUANTITY as NEEDQUANTITY
      ,0 as ISDYNAMIC,null as LISTID,0 as ISRECYCLEDYNAMIC,0 AS FORDER,c.CargoTypeName as ORGNAME
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      from FlowPackageDetailList fpd
      inner join StorageList sl  on fpd.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      where fpd.packageid =@packageid
      ORDER BY FOrder ASC
    </Content>
	  <Content Key="Query_FlowPackageDetailList" DataBaseType="Oracle">
      SELECT c.CARGOTYPENAME,fpc.QUANTITY / fp.QUANTITY as QUANTITY,'' as BARCODE,c.ISTRACK,fl.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,fpc.STORAGEID as ID,fpc.QUANTITY / fp.QUANTITY as NEEDQUANTITY
      ,ps.ISDYNAMIC,fpc.FlowPackageCargoListid as LISTID,ps.ISRECYCLEDYNAMIC,ps.FORDER,ct.CargoTypeName as ORGNAME
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,fpr.Remark as REMARK
      from FlowPackage fp  inner join FlowPackageCargoList fpc  on fp.FPackageID = fpc.FPackageID
      inner join CargoType c  on fpc.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on fpc.FPackageID = fl.FPackageID
      inner join StorageList sl on fl.StorageID=sl.StorageID
      inner join CargoType ct on sl.CargoTypeID=ct.CargoTypeID
      inner join PackageSetting ps  on fl.CargoTypeID  = ps.PackageTypeID and ps.CargoTypeID=fpc.CargoTypeID
      left join flowpackageRemark fpr on fpr.fpackageid=fp.fpackageid and fpr.cargotypeid=ps.cargotypeid
      where c.CargoTopType = 1 and fl.packageid = :packageid
      union all
      SELECT c.CARGOTYPENAME,fpd.QUANTITY,sl.BARCODE,c.ISTRACK,fpd.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,sl.STORAGEID as ID,fpd.QUANTITY as NEEDQUANTITY
      ,0 as ISDYNAMIC,'' as LISTID,0 as ISRECYCLEDYNAMIC,0 AS FORDER,c.CargoTypeName as ORGNAME
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      from FlowPackageDetailList fpd
      inner join StorageList sl  on fpd.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      where fpd.packageid =:packageid
      ORDER BY FOrder ASC
    </Content>
    <Content Key="Query_FlowPackageDetailLostBarcodeList" DataBaseType="SqlServer">
      SELECT 0 as CHECKED,c.CARGOTYPENAME,fpc.QUANTITY / fp.QUANTITY as QUANTITY,'' as BARCODE,c.ISTRACK,fl.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,fpc.STORAGEID as ID,fpc.QUANTITY / fp.QUANTITY as NEEDQUANTITY
      ,ps.ISDYNAMIC,fpc.FlowPackageLostBarcodeCListID as LISTID,ps.ISRECYCLEDYNAMIC,ps.FORDER,ct.CargoTypeName as ORGNAME
      from FlowPackageLostBarcode fp  inner join FlowPackageLostBarcodeCList fpc  on fp.FPackageID = fpc.FPackageID
      inner join CargoType c  on fpc.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on fpc.FPackageID = fl.FPackageID
      inner join StorageList sl on fl.StorageID=sl.StorageID
      inner join CargoType ct on sl.CargoTypeID=ct.CargoTypeID
      inner join PackageSetting ps  on fl.CargoTypeID  = ps.PackageTypeID and ps.CargoTypeID=fpc.CargoTypeID
      where c.CargoTopType = 1 and fl.packageid = @packageid
    </Content>
    <Content Key="Query_FlowPackageDetailLostBarcodeList" DataBaseType="Oracle">
      SELECT 0 as CHECKED,c.CARGOTYPENAME,fpc.QUANTITY / fp.QUANTITY as QUANTITY,'' as BARCODE,c.ISTRACK,fl.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,fpc.STORAGEID as ID,fpc.QUANTITY / fp.QUANTITY as NEEDQUANTITY
      ,ps.ISDYNAMIC,fpc.FlowPackageLostBarcodeCListID as LISTID,ps.ISRECYCLEDYNAMIC,ps.FORDER,ct.CargoTypeName as ORGNAME
      from FlowPackageLostBarcode fp  inner join FlowPackageLostBarcodeCList fpc  on fp.FPackageID = fpc.FPackageID
      inner join CargoType c  on fpc.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on fpc.FPackageID = fl.FPackageID
      inner join StorageList sl on fl.StorageID=sl.StorageID
      inner join CargoType ct on sl.CargoTypeID=ct.CargoTypeID
      inner join PackageSetting ps  on fl.CargoTypeID  = ps.PackageTypeID and ps.CargoTypeID=fpc.CargoTypeID
      where c.CargoTopType = 1 and fl.packageid = :packageid
    </Content>

    <Content Key="Query_FlowPackageInDetailList" DataBaseType="SqlServer">
      SELECT c.CARGOTYPENAME,fpc.QUANTITY / fp.QUANTITY as QUANTITY,'' as BARCODE,c.ISTRACK,fl.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,fpc.STORAGEID as ID,fpc.QUANTITY / fp.QUANTITY as NEEDQUANTITY
      ,ps.ISDYNAMIC,fpc.FlowPackageInCargoListid as LISTID,ps.ISRECYCLEDYNAMIC
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      from FlowPackageIn fp  inner join FlowPackageInCargoList fpc  on fp.FPackageID = fpc.FPackageID
      inner join CargoType c  on fpc.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on fpc.FPackageID = fl.FPackageID
      left join PackageSetting ps  on fl.CargoTypeID  = ps.PackageTypeID and ps.CargoTypeID=fpc.CargoTypeID
      where c.CargoTopType = 1 and fl.packageid = @packageid
      union all
      SELECT c.CARGOTYPENAME,fpd.QUANTITY,sl.BARCODE,c.ISTRACK,fpd.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,sl.STORAGEID as ID,fpd.QUANTITY as NEEDQUANTITY
      ,0 as ISDYNAMIC,null as LISTID,0 as ISRECYCLEDYNAMIC
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      from FlowPackageDetailList fpd
      inner join StorageList sl  on fpd.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      where fpd.packageid =@packageid
    </Content>
    <Content Key="Query_FlowPackageInDetailList" DataBaseType="Oracle">
      SELECT c.CARGOTYPENAME,fpc.QUANTITY / fp.QUANTITY as QUANTITY,'' as BARCODE,c.ISTRACK,fl.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,fpc.STORAGEID as ID,fpc.QUANTITY / fp.QUANTITY as NEEDQUANTITY
      ,ps.ISDYNAMIC,fpc.FlowPackageInCargoListid as LISTID,ps.ISRECYCLEDYNAMIC
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      from FlowPackageIn fp  inner join FlowPackageInCargoList fpc  on fp.FPackageID = fpc.FPackageID
      inner join CargoType c  on fpc.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on fpc.FPackageID = fl.FPackageID
      left join PackageSetting ps  on fl.CargoTypeID  = ps.PackageTypeID and ps.CargoTypeID=fpc.CargoTypeID
      where c.CargoTopType = 1 and fl.packageid = :packageid
      union all
      SELECT c.CARGOTYPENAME,fpd.QUANTITY,sl.BARCODE,c.ISTRACK,fpd.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,sl.STORAGEID as ID,fpd.QUANTITY as NEEDQUANTITY
      ,0 as ISDYNAMIC,'' as LISTID,0 as ISRECYCLEDYNAMIC
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      from FlowPackageDetailList fpd
      inner join StorageList sl  on fpd.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      where fpd.packageid =:packageid
    </Content>
	  <Content Key="Query_FlowPackageInDetailListByFpackageID" DataBaseType="SqlServer">
      SELECT '' PACKAGESETTINGID,fp.CargoTypeID as PACKAGETYPEID,C.CARGOTOPTYPE,C.CARGOTYPEID,c.CARGOTYPENAME,
      sum(fpc.QUANTITY)   as QUANTITY,sum(fpc.QUANTITY)   AS COUNTER,0 as ISDYNAMIC
      ,c.ISTRACK,'' PACKAGEID,sum(fpc.QUANTITY)  as NEEDQUANTITY
      ,c.CargoTopType FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,Model as MODEL
      from FlowPackageIn fp  inner join FlowPackageInCargoList fpc  on fp.FPackageID = fpc.FPackageID
      inner join CargoType c  on fpc.CargoTypeID = c.CargoTypeID
      where  fp.fpackageid = @fpackageid
      group by fp.CargoTypeID,C.CARGOTOPTYPE,C.CARGOTYPEID,c.CARGOTYPENAME,c.ISTRACK
      ,c.OfficialName,c.Specification,c.Model
    </Content>
	  <Content Key="Query_FlowPackageInDetailListByFpackageID" DataBaseType="Oracle">
      SELECT '' PACKAGESETTINGID,fp.CargoTypeID as PACKAGETYPEID,C.CARGOTOPTYPE,C.CARGOTYPEID,c.CARGOTYPENAME,
      sum(fpc.QUANTITY)   as QUANTITY,sum(fpc.QUANTITY)   AS COUNTER,0 as ISDYNAMIC
      ,c.ISTRACK,'' PACKAGEID,sum(fpc.QUANTITY)  as NEEDQUANTITY
      ,c.CargoTopType FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,Model as MODEL
      from FlowPackageIn fp  inner join FlowPackageInCargoList fpc  on fp.FPackageID = fpc.FPackageID
      inner join CargoType c  on fpc.CargoTypeID = c.CargoTypeID
      where  fp.fpackageid = :fpackageid
      group by fp.CargoTypeID,C.CARGOTOPTYPE,C.CARGOTYPEID,c.CARGOTYPENAME,c.ISTRACK
      ,c.OfficialName,c.Specification,c.Model
    </Content>
    <Content Key="Query_PackageSettingsDetailsByPackageID" DataBaseType="SqlServer">
      Select c.CARGOTYPENAME,ps.QUANTITY,'' as BARCODE,c.ISTRACK,pl.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,ps.PACKAGESETTINGID as ID,ps.Quantity as NEEDQUANTITY
      ,ps.ISDYNAMIC,'' as LISTID,ps.ISRECYCLEDYNAMIC,ps.FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      from FlowPackageList pl  inner join StorageList sl  on pl.StorageID = sl.StorageID
      inner join PackageSetting ps  on sl.CargoTypeID  = ps.PackageTypeID
      inner join CargoType c  on ps.CargoTypeID = c.CargoTypeID
      where c.CargoTopType = 1 and pl.packageid=@packageid
      order by ps.FORDER asc
    </Content>
    <Content Key="Query_PackageSettingsDetailsByPackageID" DataBaseType="Oracle">
      Select c.CARGOTYPENAME,ps.QUANTITY,'' as BARCODE,c.ISTRACK,pl.PACKAGEID,c.CARGOTYPEID,c.CARGOTOPTYPE,ps.PACKAGESETTINGID as ID,ps.Quantity as NEEDQUANTITY
      ,ps.ISDYNAMIC,'' as LISTID,ps.ISRECYCLEDYNAMIC,ps.FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      from FlowPackageList pl  inner join StorageList sl  on pl.StorageID = sl.StorageID
      inner join PackageSetting ps  on sl.CargoTypeID  = ps.PackageTypeID
      inner join CargoType c  on ps.CargoTypeID = c.CargoTypeID
      where c.CargoTopType = 1 and pl.packageid=:packageid
      order by ps.FORDER asc
    </Content>

    <Content Key="Query_GetPackageBarcodesByRecycleCode" DataBaseType="SqlServer">
      select sl.BARCODE,ro.RECYCLEORDERID
      from flowrecycleorder ro   inner join FlowRecycleOrderPackage rop   on ro.recycleorderid = rop.RecycleOrderID
      inner join FlowPackageList pl  on rop.PackageID = pl.packageid
      inner join StorageList sl   on pl.storageid = sl.storageid
      where ro.RecycleCode = @RecycleCode
    </Content>
    <Content Key="Query_GetPackageBarcodesByRecycleCode" DataBaseType="Oracle">
      select sl.BARCODE,ro.RECYCLEORDERID
      from flowrecycleorder ro   inner join FlowRecycleOrderPackage rop   on ro.recycleorderid = rop.RecycleOrderID
      inner join FlowPackageList pl  on rop.PackageID = pl.packageid
      inner join StorageList sl   on pl.storageid = sl.storageid
      where ro.RecycleCode = :RecycleCode
    </Content>

    <Content Key="Query_GetRecycleLostReportByTimeUserId" DataBaseType="SqlServer">
      select c.CARGOTYPENAME,frl.QUANTITY,w.WAREHOUSENAME
      from FlowRecycleLostList frl  inner join CargoType c  on frl.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on frl.PackageID = fl.PackageID
      left join Warehouse w  on fl.LastWarehouseID = w.WarehouseID
      inner join FlowRecycle fr  on frl.FRecycleID = fr.FRecycleID
      where 1=1
    </Content>
    <Content Key="Query_GetRecycleLostReportByTimeUserId" DataBaseType="Oracle">
      select c.CARGOTYPENAME,frl.QUANTITY,w.WAREHOUSENAME
      from FlowRecycleLostList frl  inner join CargoType c  on frl.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on frl.PackageID = fl.PackageID
      left join Warehouse w  on fl.LastWarehouseID = w.WarehouseID
      inner join FlowRecycle fr  on frl.FRecycleID = fr.FRecycleID
      where 1=1
    </Content>
    <Content Key="Query_GetRecycleFetchLostReportByTimeUserId" DataBaseType="SqlServer">
      select c.CARGOTYPENAME,frl.QUANTITY,w.WAREHOUSENAME
      from FlowRecycleFetchLostList frl  inner join CargoType c  on frl.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on frl.PackageID = fl.PackageID
      left join Warehouse w  on fl.LastWarehouseID = w.WarehouseID
      inner join FlowRecycleFetch fr  on frl.FRecycleFetchID = fr.FRecycleFetchID
      where 1=1
    </Content>
    <Content Key="Query_GetRecycleFetchLostReportByTimeUserId" DataBaseType="Oracle">
      select c.CARGOTYPENAME,frl.QUANTITY,w.WAREHOUSENAME
      from FlowRecycleFetchLostList frl  inner join CargoType c  on frl.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on frl.PackageID = fl.PackageID
      left join Warehouse w  on fl.LastWarehouseID = w.WarehouseID
      inner join FlowRecycleFetch fr  on frl.FRecycleFetchID = fr.FRecycleFetchID
      where 1=1
    </Content>
    <Content Key="Query_FlowRecycleLostListBysql" DataBaseType="SqlServer">
      select c.CARGOTYPENAME,sum(frl.Quantity) as QUANTITY,w.WAREHOUSENAME
      from FlowRecycleLostList frl  inner join CargoType c  on frl.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on frl.PackageID = fl.PackageID
      left join Warehouse w  on fl.LastWarehouseID = w.WarehouseID
      inner join FlowRecycle fr  on frl.FRecycleID = fr.FRecycleID
      where 1=1 {0} group by w.WarehouseName,c.CargoTypeName
      order by w.WarehouseName,c.CargoTypeName
    </Content>
    <Content Key="Query_FlowRecycleLostListBysql" DataBaseType="Oracle">
      select c.CARGOTYPENAME,sum(frl.Quantity) as QUANTITY,w.WAREHOUSENAME
      from FlowRecycleLostList frl  inner join CargoType c  on frl.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on frl.PackageID = fl.PackageID
      left join Warehouse w  on fl.LastWarehouseID = w.WarehouseID
      inner join FlowRecycle fr  on frl.FRecycleID = fr.FRecycleID
      where 1=1 {0} group by w.WarehouseName,c.CargoTypeName
      order by w.WarehouseName,c.CargoTypeName
    </Content>
    <Content Key="Query_FlowRecycleFetchLostListBysql" DataBaseType="SqlServer">
      select c.CARGOTYPENAME,sum(frl.Quantity) as QUANTITY,w.WAREHOUSENAME
      from FlowRecycleFetchLostList frl  inner join CargoType c  on frl.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on frl.PackageID = fl.PackageID
      left join Warehouse w  on fl.LastWarehouseID = w.WarehouseID
      inner join FlowRecycleFetch fr  on frl.FRecycleFetchID = fr.FRecycleFetchID
      where 1=1 {0} group by w.WarehouseName,c.CargoTypeName
      order by w.WarehouseName,c.CargoTypeName
    </Content>
    <Content Key="Query_FlowRecycleFetchLostListBysql" DataBaseType="Oracle">
      select c.CARGOTYPENAME,sum(frl.Quantity) as QUANTITY,w.WAREHOUSENAME
      from FlowRecycleFetchLostList frl  inner join CargoType c  on frl.CargoTypeID = c.CargoTypeID
      inner join FlowPackageList fl  on frl.PackageID = fl.PackageID
      left join Warehouse w  on fl.LastWarehouseID = w.WarehouseID
      inner join FlowRecycleFetch fr  on frl.FRecycleFetchID = fr.FRecycleFetchID
      where 1=1 {0} group by w.WarehouseName,c.CargoTypeName
      order by w.WarehouseName,c.CargoTypeName
    </Content>
    <Content Key="Query_GetFlowRecycleReportByTimeID" DataBaseType="SqlServer">
      SELECT U.FNames AS USERNAME,T.CARGOTYPENAME,D.QUANTITY , W.WAREHOUSENAME,D.BARCODE
      FROM FLOWRECYCLE A  INNER JOIN FLOWRECYCLELIST B  ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C  ON B.PACKAGEID=C.PACKAGEID
      LEFT JOIN STORAGELIST D  ON C.STORAGEID=D.STORAGEID
      --INNER JOIN AC_USER U  ON A.OPID = U.ID
      INNER JOIN AC_WorkGroup U  ON A.OPID = U.FID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1
    </Content>
    <Content Key="Query_GetFlowRecycleReportByTimeID" DataBaseType="Oracle">
      SELECT U.FNames AS USERNAME,T.CARGOTYPENAME,D.QUANTITY , W.WAREHOUSENAME,D.BARCODE
      FROM FLOWRECYCLE A  INNER JOIN FLOWRECYCLELIST B  ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C  ON B.PACKAGEID=C.PACKAGEID
      LEFT JOIN STORAGELIST D  ON C.STORAGEID=D.STORAGEID
      --INNER JOIN AC_USER U  ON A.OPID = U.ID
      INNER JOIN AC_WorkGroup U  ON A.OPID = U.FID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1
    </Content>

    <Content Key="Query_GetFlowRecycleReportByTimeIDFlowID" DataBaseType="SqlServer">
      SELECT U.FNames AS USERNAME,T.CARGOTYPENAME,D.QUANTITY , W.WAREHOUSENAME,D.BARCODE
      FROM FLOWRECYCLE A  INNER JOIN FLOWRECYCLELIST B  ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C  ON B.PACKAGEID=C.PACKAGEID
      LEFT JOIN STORAGELIST D  ON C.STORAGEID=D.STORAGEID
      --INNER JOIN AC_USER U  ON A.OPID = U.ID
      INNER JOIN AC_WorkGroup U  ON A.OPID = U.FID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1
    </Content>
    <Content Key="Query_GetFlowRecycleReportByTimeIDFlowID" DataBaseType="Oracle">
      SELECT U.FNames AS USERNAME,T.CARGOTYPENAME,D.QUANTITY , W.WAREHOUSENAME,D.BARCODE
      FROM FLOWRECYCLE A  INNER JOIN FLOWRECYCLELIST B  ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C  ON B.PACKAGEID=C.PACKAGEID
      LEFT JOIN STORAGELIST D  ON C.STORAGEID=D.STORAGEID
      --INNER JOIN AC_USER U  ON A.OPID = U.ID
      INNER JOIN AC_WorkGroup U  ON A.OPID = U.FID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1
    </Content>
    <Content Key="Query_GetFlowRecycleFetchReportByTimeIDFlowID" DataBaseType="SqlServer">
      SELECT U.FNames AS USERNAME,T.CARGOTYPENAME,D.QUANTITY , W.WAREHOUSENAME,D.BARCODE
      FROM FLOWRECYCLEFETCH A  INNER JOIN FLOWRECYCLEFETCHLIST B  ON A.FRECYCLEFETCHID=B.FRECYCLEFETCHID
      INNER JOIN FLOWPACKAGELIST C  ON B.PACKAGEID=C.PACKAGEID
      LEFT JOIN STORAGELIST D  ON C.STORAGEID=D.STORAGEID
      --INNER JOIN AC_USER U  ON A.OPID = U.ID
      INNER JOIN AC_WorkGroup U  ON A.OPID = U.FID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1
    </Content>
    <Content Key="Query_GetFlowRecycleFetchReportByTimeIDFlowID" DataBaseType="Oracle">
      SELECT U.FNames AS USERNAME,T.CARGOTYPENAME,D.QUANTITY , W.WAREHOUSENAME,D.BARCODE
      FROM FLOWRECYCLEFETCH A  INNER JOIN FLOWRECYCLEFETCHLIST B  ON A.FRECYCLEFETCHID=B.FRECYCLEFETCHID
      INNER JOIN FLOWPACKAGELIST C  ON B.PACKAGEID=C.PACKAGEID
      LEFT JOIN STORAGELIST D  ON C.STORAGEID=D.STORAGEID
      --INNER JOIN AC_USER U  ON A.OPID = U.ID
      INNER JOIN AC_WorkGroup U  ON A.OPID = U.FID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1
    </Content>
    <Content Key="Query_GetFlowRecycleViewListBysql" DataBaseType="SqlServer">
     <![CDATA[
         SELECT FR.BARCODE,FR.RECYCLEDATE,U.FNames NAME,FR.FRECYCLEID,US.Name AS SENDERNAME,FR.FISPDADATA,
      Case when FR.FISPDADATA = 0 then '否' when FR.FISPDADATA = 1 then '是' end as PDA,O.Name AS SENDERORG
--      ,c.Status
      FROM FLOWRECYCLE FR
      INNER JOIN AC_WorkGroup U  ON FR.OPID = U.FID
      Left JOIN AC_User US  ON FR.SENDERID = US.ID
      left join AC_OrgUser UsOrg on US.ID = UsOrg.UserID
      left join AC_Org  O on UsOrg.OrgID = O.ID
      --left join Container c on FR.FRecycleID=c.FRecycleID
      left join FlowPackageIn fpi on FR.FRecycleID=fpi.FPackageID
      where 1=1 and ISNULL(fpi.IsDisabled,0)<>1 {0}
     ]]>
    </Content>
    <Content Key="Query_GetFlowRecycleViewListBysql" DataBaseType="Oracle">
     <![CDATA[
       SELECT FR.BARCODE,FR.RECYCLEDATE,U.FNames NAME,FR.FRECYCLEID,US.Name AS SENDERNAME,FR.FISPDADATA,
      Case when FR.FISPDADATA = 0 then '否' when FR.FISPDADATA = 1 then '是' end as PDA,O.Name AS SENDERORG
      --,c.Status
      FROM FLOWRECYCLE FR
      INNER JOIN AC_WorkGroup U  ON FR.OPID = U.FID
      Left JOIN AC_USER US  ON FR.SENDERID = US.ID
      left join AC_OrgUser UsOrg on US.ID = UsOrg.UserID
      left join AC_Org  O on UsOrg.OrgID = O.ID
      --left join Container c on FR.FRecycleID=c.FRecycleID
      left join FlowPackageIn fpi on FR.FRecycleID=fpi.FPackageID
      where 1=1 and nvl(fpi.IsDisabled,0)<>1 {0}
     ]]>
    </Content>
    <Content Key="DeleteRecycleFetchLostByRecycleFetchID" DataBaseType="SqlServer">
      delete from FlowRecycleFetchLostList where frecyclefetchid=@recyclefetchid
    </Content>
    <Content Key="DeleteRecycleFetchLostByRecycleFetchID" DataBaseType="Oracle">
      delete from FlowRecycleFetchLostList where frecyclefetchid=:recyclefetchid
    </Content>
    <Content Key="Query_GetFlowRecycleViewDetailBysql" DataBaseType="SqlServer">
      SELECT T.CARGOTYPENAME,SUM(D.QUANTITY) AS QUANTITY , W.WAREHOUSENAME
      FROM FLOWRECYCLE A   INNER JOIN FLOWRECYCLELIST B  ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C   ON B.PACKAGEID=C.PACKAGEID
      INNER JOIN STORAGELIST D   ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1 {0} GROUP BY W.WAREHOUSENAME,T.CARGOTYPENAME ORDER BY W.WAREHOUSENAME,T.CARGOTYPENAME
    </Content>
    <Content Key="Query_GetFlowRecycleViewDetailBysql" DataBaseType="Oracle">
      SELECT T.CARGOTYPENAME,SUM(D.QUANTITY) AS QUANTITY , W.WAREHOUSENAME
      FROM FLOWRECYCLE A   INNER JOIN FLOWRECYCLELIST B  ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C   ON B.PACKAGEID=C.PACKAGEID
      INNER JOIN STORAGELIST D   ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1 {0} GROUP BY W.WAREHOUSENAME,T.CARGOTYPENAME ORDER BY W.WAREHOUSENAME,T.CARGOTYPENAME
    </Content>
    <Content Key="Query_GetFlowRecycleFetchViewListBysql" DataBaseType="SqlServer">
		SELECT FR.BARCODE,FR.RECYCLEDATE,U.FNames NAME,FR.FRECYCLEFETCHID,US.FNames AS SENDERNAME,FR.FISPDADATA,
		Case when FR.FISPDADATA = 0 then '否' when FR.FISPDADATA = 1 then '是' end as PDA,
		Case when FR.surestatus = 0 then '否' when FR.surestatus = 1 then '是' end as SURESTATUS,
		org.name as ORGNAME
		FROM FLOWRECYCLEFetch FR
		LEFT JOIN AC_WorkGroup U  ON FR.OPID = U.FID
		--Left JOIN AC_USER US  ON FR.SENDERID = US.ID
		Left join AC_Org org on org.ID=fr.OrgID
		Left JOIN AC_WorkGroup US  ON FR.SENDERID = US.FID
		where 1=1
	</Content>
    <Content Key="Query_GetFlowRecycleFetchViewListBysql" DataBaseType="Oracle">
		SELECT FR.BARCODE,FR.RECYCLEDATE,U.FNames NAME,FR.FRECYCLEFETCHID,US.FNames AS SENDERNAME,FR.FISPDADATA,
		Case when FR.FISPDADATA = 0 then '否' when FR.FISPDADATA = 1 then '是' end as PDA,
		Case when FR.surestatus = 0 then '否' when FR.surestatus = 1 then '是' end as SURESTATUS,
		org.name as ORGNAME
		FROM FLOWRECYCLEFetch FR
		LEFT JOIN AC_WorkGroup U  ON FR.OPID = U.FID
		--Left JOIN AC_USER US  ON FR.SENDERID = US.ID
		Left join AC_Org org on org.ID=fr.OrgID
		Left JOIN AC_WorkGroup US  ON FR.SENDERID = US.FID
		where 1=1
	</Content>

    <Content Key="Query_GetRecycleFetchByRecycleContainer" DataBaseType="SqlServer">
      <![CDATA[ 
      
      select fpl.PACKAGEID,sl.BARCODE,c.CARGOTYPENAME,c.CargoTypeID as CARGOTYPEID
      ,frfl.FRecycleFetchID as FRECYCLEFETCHID,fpl.FPACKAGEID
      from FlowPackageList fpl
      left join
      FlowRecycleFetchList frfl on fpl.PackageID=frfl.PackageID
      left join FlowRecycleFetch frf on frf.FRecycleFetchID=frfl.FRecycleFetchID
      and frf.FetchType=2
      inner join CargoType c on c.CargoTypeID=fpl.CargoTypeID
      inner join StorageList sl on sl.StorageID=fpl.PackageID
      where 1=1  and sl.Status<>20  --and frfl.FRecycleFetchID is null
      
      ]]>
    </Content>
    <Content Key="Query_GetRecycleFetchByRecycleContainer" DataBaseType="Oracle">
      <![CDATA[ 
      select fpl.PACKAGEID,sl.BARCODE,c.CARGOTYPENAME,c.CargoTypeID as CARGOTYPEID 
      ,frfl.FRecycleFetchID as FRECYCLEFETCHID,fpl.FPACKAGEID
      from FlowPackageList fpl
      left join
      FlowRecycleFetchList frfl on fpl.PackageID=frfl.PackageID
      left join FlowRecycleFetch frf on frf.FRecycleFetchID=frfl.FRecycleFetchID
      and frf.FetchType=2
      inner join CargoType c on c.CargoTypeID=fpl.CargoTypeID
      inner join StorageList sl on sl.StorageID=fpl.PackageID
      where 1=1  and sl.Status<>20    --and frfl.FRecycleFetchID is null 
      ]]>
    </Content>
    <Content Key="Query_GetRecylePrintByRID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT AC_WorkGroup.FNames NAME,FLOWRECYCLE.RECYCLEDATE,FLOWRECYCLE.BARCODE ,WAREHOUSE.WAREHOUSENAME ,STORAGELIST.PRICE,SUM(STORAGELIST.PRICE) AS  SUMPRICE ,SUM(STORAGELIST.QUANTITY) AS QTY 
                             ,CARGOTYPE.CARGOTYPENAME,SYSTEMTYPEPARAMETER.TYPENAME,SEND.FNAMES AS SENDERNAME 
                             ,AC_Org.Name as ORGNAME,AC_Org.Code as ORGCODE
                             FROM FLOWRECYCLE INNER JOIN FLOWRECYCLELIST 
                            ON
                            FLOWRECYCLE.FRECYCLEID=FLOWRECYCLELIST.FRECYCLEID
                            INNER JOIN FLOWPACKAGELIST ON 
                            FLOWRECYCLELIST.PACKAGEID =FLOWPACKAGELIST.PACKAGEID 
                            LEFT JOIN STORAGELIST 
                            ON
                            FLOWPACKAGELIST.STORAGEID =STORAGELIST.STORAGEID 
                            LEFT JOIN CARGOTYPE 
                            ON
                            STORAGELIST.CARGOTYPEID =CARGOTYPE.CARGOTYPEID 
                            LEFT JOIN WAREHOUSE 
                            ON
                            FLOWPACKAGELIST.LASTWAREHOUSEID=WAREHOUSE.WAREHOUSEID
                            LEFT JOIN SYSTEMTYPEPARAMETER 
                            ON
                            CARGOTYPE.CARGOTOPTYPE =SYSTEMTYPEPARAMETER.TYPEVALUE 
                            LEFT JOIN AC_WorkGroup 
                            ON 
                            FLOWRECYCLE.OPID=AC_WorkGroup.FID 
                            LEFT JOIN AC_WORKGROUP AS SEND
                            ON
                            FLOWRECYCLE.SenderID = SEND.FID
                            left join AC_OrgUser on FlowRecycle.SenderID=AC_OrgUser.UserID
                            left join AC_Org on AC_OrgUser.OrgID=AC_Org.ID
                             WHERE 1=1 AND  SYSTEMTYPEPARAMETER.TYPEKEY ='CargoTopType'
                           and FlowRecycle.FRecycleID = @frecycleid   
                             
                             GROUP BY AC_WorkGroup.FNames,FLOWRECYCLE.BARCODE ,WAREHOUSE.WAREHOUSENAME ,STORAGELIST.PRICE ,CARGOTYPE.CARGOTYPENAME,SYSTEMTYPEPARAMETER.TYPENAME,FLOWRECYCLE.RECYCLEDATE,SEND.FNAMES ,AC_Org.Name,AC_Org.Code
							 order by WAREHOUSE.WAREHOUSENAME
       ]]>
    </Content>
    <Content Key="Query_GetRecylePrintByRID" DataBaseType="Oracle">
      <![CDATA[
      SELECT AC_WorkGroup.FNames AS NAME,FLOWRECYCLE.RECYCLEDATE,FLOWRECYCLE.BARCODE ,WAREHOUSE.WAREHOUSENAME WAREHOUSENAME ,STORAGELIST.PRICE,SUM(STORAGELIST.PRICE) AS  SUMPRICE ,SUM(STORAGELIST.QUANTITY) AS QTY 
                             ,CARGOTYPE.CARGOTYPENAME,SYSTEMTYPEPARAMETER.TYPENAME,SEND.FNAMES AS SENDERNAME    
                             ,AC_Org.Name as ORGNAME,AC_Org.Code as ORGCODE
                             FROM FLOWRECYCLE INNER JOIN FLOWRECYCLELIST 
                            ON
                            FLOWRECYCLE.FRECYCLEID=FLOWRECYCLELIST.FRECYCLEID
                            INNER JOIN FLOWPACKAGELIST ON 
                            FLOWRECYCLELIST.PACKAGEID =FLOWPACKAGELIST.PACKAGEID 
                            LEFT JOIN STORAGELIST 
                            ON
                            FLOWPACKAGELIST.STORAGEID =STORAGELIST.STORAGEID 
                            LEFT JOIN CARGOTYPE 
                            ON
                            STORAGELIST.CARGOTYPEID =CARGOTYPE.CARGOTYPEID 
                            LEFT JOIN WAREHOUSE 
                            ON
                            FLOWPACKAGELIST.LASTWAREHOUSEID=WAREHOUSE.WAREHOUSEID
                            LEFT JOIN SYSTEMTYPEPARAMETER 
                            ON
                            CARGOTYPE.CARGOTOPTYPE =SYSTEMTYPEPARAMETER.TYPEVALUE 
                            LEFT JOIN AC_WorkGroup 
                            ON 
                            FLOWRECYCLE.OPID=AC_WorkGroup.FID 
                             LEFT JOIN AC_WORKGROUP  SEND
                            ON
                            FLOWRECYCLE.SenderID = SEND.FID
                            left join AC_OrgUser on FlowRecycle.SenderID=AC_OrgUser.UserID
                            left join AC_Org on AC_OrgUser.OrgID=AC_Org.ID
                             WHERE 1=1 AND  SYSTEMTYPEPARAMETER.TYPEKEY ='CargoTopType'
                           and FlowRecycle.FRecycleID = :frecycleid   
                             
                             GROUP BY AC_WorkGroup.FNames,FLOWRECYCLE.BARCODE ,WAREHOUSE.WAREHOUSENAME ,STORAGELIST.PRICE ,CARGOTYPE.CARGOTYPENAME,SYSTEMTYPEPARAMETER.TYPENAME,FLOWRECYCLE.RECYCLEDATE,SEND.FNAMES,AC_Org.Name,AC_Org.Code
							 order by WAREHOUSE.WAREHOUSENAME
       ]]>
    </Content>

    <Content Key="Query_GetRecylePrintByRIDANDWID" DataBaseType="SqlServer">
      <![CDATA[
      SELECT AC_WorkGroup.FNames NAME,FLOWRECYCLE.RECYCLEDATE,FLOWRECYCLE.BARCODE ,WAREHOUSE.WAREHOUSENAME ,STORAGELIST.PRICE,SUM(STORAGELIST.PRICE) AS  SUMPRICE ,SUM(STORAGELIST.QUANTITY) AS QTY 
                             ,CARGOTYPE.CARGOTYPENAME,SYSTEMTYPEPARAMETER.TYPENAME,SEND.FNAMES AS SENDERNAME     FROM FLOWRECYCLE INNER JOIN FLOWRECYCLELIST 
                            ON
                            FLOWRECYCLE.FRECYCLEID=FLOWRECYCLELIST.FRECYCLEID
                            INNER JOIN FLOWPACKAGELIST ON 
                            FLOWRECYCLELIST.PACKAGEID =FLOWPACKAGELIST.PACKAGEID 
                            LEFT JOIN STORAGELIST 
                            ON
                            FLOWPACKAGELIST.STORAGEID =STORAGELIST.STORAGEID 
                            LEFT JOIN CARGOTYPE 
                            ON
                            STORAGELIST.CARGOTYPEID =CARGOTYPE.CARGOTYPEID 
                            LEFT JOIN WAREHOUSE 
                            ON
                            FLOWPACKAGELIST.LASTWAREHOUSEID=WAREHOUSE.WAREHOUSEID
                            LEFT JOIN SYSTEMTYPEPARAMETER 
                            ON
                            CARGOTYPE.CARGOTOPTYPE =SYSTEMTYPEPARAMETER.TYPEVALUE 
                            LEFT JOIN AC_WorkGroup 
                            ON 
                            FLOWRECYCLE.OPID=AC_WorkGroup.FID 
                            LEFT JOIN AC_WORKGROUP AS SEND
                            ON
                            FLOWRECYCLE.SenderID = SEND.FID
                             WHERE 1=1 AND  SYSTEMTYPEPARAMETER.TYPEKEY ='CargoTopType'
                           and FlowRecycle.FRecycleID = @frecycleid  and Warehouse.WarehouseID=@warehouseid
                             
                             GROUP BY AC_WorkGroup.FNames,FLOWRECYCLE.BARCODE ,WAREHOUSE.WAREHOUSENAME ,STORAGELIST.PRICE ,CARGOTYPE.CARGOTYPENAME,SYSTEMTYPEPARAMETER.TYPENAME,FLOWRECYCLE.RECYCLEDATE,SEND.FNAMES 
							 order by WAREHOUSE.WAREHOUSENAME
       ]]>
    </Content>
    <Content Key="Query_GetRecylePrintByRIDANDWID" DataBaseType="Oracle">
      <![CDATA[
      SELECT AC_WorkGroup.FNames NAME,FLOWRECYCLE.RECYCLEDATE,FLOWRECYCLE.BARCODE ,WAREHOUSE.WAREHOUSENAME ,STORAGELIST.PRICE,SUM(STORAGELIST.PRICE) AS  SUMPRICE ,SUM(STORAGELIST.QUANTITY) AS QTY 
                             ,CARGOTYPE.CARGOTYPENAME,SYSTEMTYPEPARAMETER.TYPENAME,SEND.FNAMES AS SENDERNAME     FROM FLOWRECYCLE INNER JOIN FLOWRECYCLELIST 
                            ON
                            FLOWRECYCLE.FRECYCLEID=FLOWRECYCLELIST.FRECYCLEID
                            INNER JOIN FLOWPACKAGELIST ON 
                            FLOWRECYCLELIST.PACKAGEID =FLOWPACKAGELIST.PACKAGEID 
                            LEFT JOIN STORAGELIST 
                            ON
                            FLOWPACKAGELIST.STORAGEID =STORAGELIST.STORAGEID 
                            LEFT JOIN CARGOTYPE 
                            ON
                            STORAGELIST.CARGOTYPEID =CARGOTYPE.CARGOTYPEID 
                            LEFT JOIN WAREHOUSE 
                            ON
                            FLOWPACKAGELIST.LASTWAREHOUSEID=WAREHOUSE.WAREHOUSEID
                            LEFT JOIN SYSTEMTYPEPARAMETER 
                            ON
                            CARGOTYPE.CARGOTOPTYPE =SYSTEMTYPEPARAMETER.TYPEVALUE 
                            LEFT JOIN AC_WorkGroup 
                            ON 
                            FLOWRECYCLE.OPID=AC_WorkGroup.FID 
                            LEFT JOIN AC_WORKGROUP AS SEND
                            ON
                            FLOWRECYCLE.SenderID = SEND.FID
                             WHERE 1=1 AND  SYSTEMTYPEPARAMETER.TYPEKEY ='CargoTopType'
                           and FlowRecycle.FRecycleID = :frecycleid  and Warehouse.WarehouseID=:warehouseid
                             
                             GROUP BY AC_WorkGroup.FNames,FLOWRECYCLE.BARCODE ,WAREHOUSE.WAREHOUSENAME ,STORAGELIST.PRICE ,CARGOTYPE.CARGOTYPENAME,SYSTEMTYPEPARAMETER.TYPENAME,FLOWRECYCLE.RECYCLEDATE,SEND.FNAMES 
							 order by WAREHOUSE.WAREHOUSENAME
       ]]>
    </Content>

    <Content Key="Query_GetRecylePrintAc_Org" DataBaseType="SqlServer">
      <![CDATA[
      SELECT FLOWRECYCLE.FRECYCLEID,WAREHOUSE.WAREHOUSEID,WAREHOUSE.WAREHOUSENAME,FLOWRECYCLE.RECYCLEDATE,FLOWRECYCLE.BARCODE ,COUNT(*)  
                             FROM FLOWRECYCLE INNER JOIN FLOWRECYCLELIST 
                            ON
                            FLOWRECYCLE.FRECYCLEID=FLOWRECYCLELIST.FRECYCLEID
                            INNER JOIN FLOWPACKAGELIST ON 
                            FLOWRECYCLELIST.PACKAGEID =FLOWPACKAGELIST.PACKAGEID 
                            LEFT JOIN STORAGELIST 
                            ON
                            FLOWPACKAGELIST.STORAGEID =STORAGELIST.STORAGEID 
                            LEFT JOIN CARGOTYPE 
                            ON
                            STORAGELIST.CARGOTYPEID =CARGOTYPE.CARGOTYPEID 
                            LEFT JOIN WAREHOUSE 
                            ON
                            FLOWPACKAGELIST.LASTWAREHOUSEID=WAREHOUSE.WAREHOUSEID
                            LEFT JOIN SYSTEMTYPEPARAMETER 
                            ON
                            CARGOTYPE.CARGOTOPTYPE =SYSTEMTYPEPARAMETER.TYPEVALUE 
                            LEFT JOIN AC_WorkGroup 
                            ON 
                            FLOWRECYCLE.OPID=AC_WorkGroup.FID 
                          
                             WHERE 1=1 AND  SYSTEMTYPEPARAMETER.TYPEKEY ='CargoTopType' 
                             AND FlowRecycle.FRecycleID=@FRecycleID
                           group by FLOWRECYCLE.FRECYCLEID,WAREHOUSE.WarehouseID,WAREHOUSE.WarehouseName ,FLOWRECYCLE.RECYCLEDATE,FLOWRECYCLE.BARCODE
      ]]>
    </Content>
    <Content Key="Query_GetRecylePrintAc_Org" DataBaseType="Oracle">
      <![CDATA[
      SELECT FLOWRECYCLE.FRECYCLEID,WAREHOUSE.WAREHOUSEID,WAREHOUSE.WAREHOUSENAME,FLOWRECYCLE.RECYCLEDATE,FLOWRECYCLE.BARCODE ,COUNT(*)  
                             FROM FLOWRECYCLE INNER JOIN FLOWRECYCLELIST 
                            ON
                            FLOWRECYCLE.FRECYCLEID=FLOWRECYCLELIST.FRECYCLEID
                            INNER JOIN FLOWPACKAGELIST ON 
                            FLOWRECYCLELIST.PACKAGEID =FLOWPACKAGELIST.PACKAGEID 
                            LEFT JOIN STORAGELIST 
                            ON
                            FLOWPACKAGELIST.STORAGEID =STORAGELIST.STORAGEID 
                            LEFT JOIN CARGOTYPE 
                            ON
                            STORAGELIST.CARGOTYPEID =CARGOTYPE.CARGOTYPEID 
                            LEFT JOIN WAREHOUSE 
                            ON
                            FLOWPACKAGELIST.LASTWAREHOUSEID=WAREHOUSE.WAREHOUSEID
                            LEFT JOIN SYSTEMTYPEPARAMETER 
                            ON
                            CARGOTYPE.CARGOTOPTYPE =SYSTEMTYPEPARAMETER.TYPEVALUE 
                            LEFT JOIN AC_WorkGroup 
                            ON 
                            FLOWRECYCLE.OPID=AC_WorkGroup.FID 
                          
                             WHERE 1=1 AND  SYSTEMTYPEPARAMETER.TYPEKEY ='CargoTopType' 
                             AND FlowRecycle.FRecycleID=:FRecycleID
                           group by FLOWRECYCLE.FRECYCLEID,WAREHOUSE.WarehouseID,WAREHOUSE.WarehouseName ,FLOWRECYCLE.RECYCLEDATE,FLOWRECYCLE.BARCODE
      ]]>
    </Content>

    <Content Key="QueryRecycleByContainerBarcode" DataBaseType="SqlServer">
      <![CDATA[
      SELECT TOP 1 FR.FRECYCLEID,U.FUsers CODE,U.FNames NAME,SU.FUsers AS SENDCODE,SU.FNames AS SENDNAME,SU.FID AS SENDID
                            FROM	FLOWRECYCLE FR WITH (NOLOCK) 
		                            INNER JOIN FLOWRECYCLECONTAINER FRC  WITH (NOLOCK) ON FR.FRECYCLEID = FRC.FRECYCLEID
		                            INNER JOIN CONTAINER C WITH (NOLOCK) ON FRC.CONTAINERID = C.CONTAINERID
		                            --INNER JOIN AC_USER U WITH (NOLOCK) ON FR.OPID = U.ID
                                --LEFT JOIN AC_USER SU WITH (NOLOCK) ON FR.SENDERID = SU.ID
                                INNER JOIN AC_WorkGroup U WITH (NOLOCK) ON FR.OPID = U.FID
                                LEFT JOIN AC_WorkGroup SU WITH (NOLOCK) ON FR.SENDERID = SU.FID
                            WHERE C.BARCODE =@barCode  ORDER BY RECYCLEDATE DESC
      ]]>
    </Content>
    <Content Key="QueryRecycleByContainerBarcode" DataBaseType="Oracle">
      <![CDATA[
	  select * from 
	  (
      SELECT FR.FRECYCLEID,U.FUsers CODE,U.FNames NAME,SU.FUsers AS SENDCODE,SU.FNames AS SENDNAME,SU.FID AS SENDID
                            FROM	FLOWRECYCLE FR  
		                            INNER JOIN FLOWRECYCLECONTAINER FRC  ON FR.FRECYCLEID = FRC.FRECYCLEID
		                            INNER JOIN CONTAINER C  ON FRC.CONTAINERID = C.CONTAINERID
		                            --INNER JOIN AC_USER U  ON FR.OPID = U.ID
                                --LEFT JOIN AC_USER SU   ON FR.SENDERID = SU.ID
                                INNER JOIN AC_WorkGroup U  ON FR.OPID = U.FID
                                LEFT JOIN AC_WorkGroup SU  ON FR.SENDERID = SU.FID
                            WHERE C.BARCODE =:barCode   
							order by RECYCLEDATE desc
    ) where rownum=1							
      ]]>
    </Content>
    <Content Key="Query_FlowRecycleFetchEntityByFetchBarcode" DataBaseType="SqlServer">
      <![CDATA[
      SELECT * from  FlowRecycleFetch  WHERE BARCODE =@barCode   
      ]]>
    </Content>
    <Content Key="Query_FlowRecycleFetchEntityByFetchBarcode" DataBaseType="Oracle">
      <![CDATA[
		SELECT * from  FlowRecycleFetch  WHERE BARCODE =:barCode
      ]]>
    </Content>
    <Content Key="QueryRecycleByPackageBarcode" DataBaseType="SqlServer">
      <![CDATA[
      SELECT TOP 1 FR.FRECYCLEID,U.FUsers CODE,U.FNames NAME,SU.FUsers AS SENDCODE,SU.FNames AS SENDNAME,SU.FID AS SENDID,FR.OPID
                            FROM	FLOWRECYCLE FR WITH (NOLOCK) 
                                INNER JOIN FLOWRECYCLELIST FRL WITH (NOLOCK) ON FR.FRECYCLEID = FRL.FRECYCLEID
                                INNER JOIN FLOWPACKAGELIST FPL WITH (NOLOCK) ON FRL.PACKAGEID = FPL.PACKAGEID
                                INNER JOIN STORAGELIST SL WITH (NOLOCK) ON FPL.STORAGEID = SL.STORAGEID
		                            INNER JOIN AC_WorkGroup U WITH (NOLOCK) ON FR.OPID = U.FID
                                LEFT JOIN AC_WorkGroup SU WITH (NOLOCK) ON FR.SENDERID = SU.FID
                            WHERE SL.BARCODE =@barCode  ORDER BY RECYCLEDATE DESC
      ]]>
    </Content>
    <Content Key="QueryRecycleByPackageBarcode" DataBaseType="Oracle">
      <![CDATA[
	  select * from 
	  (
      SELECT  FR.FRECYCLEID,U.FUsers CODE,U.FNames NAME,SU.FUsers AS SENDCODE,SU.FNames AS SENDNAME,SU.FID AS SENDID,FR.OPID
                            FROM	FLOWRECYCLE FR  
                                INNER JOIN FLOWRECYCLELIST FRL   ON FR.FRECYCLEID = FRL.FRECYCLEID
                                INNER JOIN FLOWPACKAGELIST FPL   ON FRL.PACKAGEID = FPL.PACKAGEID
                                INNER JOIN STORAGELIST SL  ON FPL.STORAGEID = SL.STORAGEID
		                            INNER JOIN AC_WorkGroup U   ON FR.OPID = U.FID
                                LEFT JOIN AC_WorkGroup SU   ON FR.SENDERID = SU.FID
                            WHERE  SL.BARCODE =:barCode  
							order by RECYCLEDATE desc 
       ) where rownum=1
      ]]>
    </Content>
    <Content Key="QueryRecycleFetchByPackageBarcode" DataBaseType="SqlServer">
      <![CDATA[
      SELECT TOP 1 FR.FRECYCLEFETCHID,U.FUsers CODE,U.FNames NAME,SU.FUsers AS SENDCODE,SU.FNames AS SENDNAME,SU.FID AS SENDID,FR.OPID
                            FROM	FLOWRECYCLEFETCH FR WITH (NOLOCK) 
                                INNER JOIN FLOWRECYCLEFETCHLIST FRL WITH (NOLOCK) ON FR.FRECYCLEFETCHID = FRL.FRECYCLEFETCHID
                                INNER JOIN FLOWPACKAGELIST FPL WITH (NOLOCK) ON FRL.PACKAGEID = FPL.PACKAGEID
                                INNER JOIN STORAGELIST SL WITH (NOLOCK) ON FPL.STORAGEID = SL.STORAGEID
		                            left JOIN AC_WorkGroup U WITH (NOLOCK) ON FR.OPID = U.FID
                                LEFT JOIN AC_WorkGroup SU WITH (NOLOCK) ON FR.SENDERID = SU.FID
                            WHERE SL.BARCODE =@barCode and FR.FETCHTYPE=@fetchtype  ORDER BY RECYCLEDATE DESC
      ]]>
    </Content>
    <Content Key="QueryRecycleFetchByPackageBarcode" DataBaseType="Oracle">
      <![CDATA[
		  select * from 
		  (
      SELECT  FR.FRECYCLEFETCHID,U.FUsers CODE,U.FNames NAME,SU.FUsers AS SENDCODE,SU.FNames AS SENDNAME,SU.FID AS SENDID,FR.OPID
                            FROM	FLOWRECYCLEFETCH FR  
                                INNER JOIN FLOWRECYCLEFETCHLIST FRL   ON FR.FRECYCLEFETCHID = FRL.FRECYCLEFETCHID
                                INNER JOIN FLOWPACKAGELIST FPL   ON FRL.PACKAGEID = FPL.PACKAGEID
                                INNER JOIN STORAGELIST SL  ON FPL.STORAGEID = SL.STORAGEID
		                            left JOIN AC_WorkGroup U   ON FR.OPID = U.FID
                                LEFT JOIN AC_WorkGroup SU   ON FR.SENDERID = SU.FID
                            WHERE   SL.BARCODE =:barCode  and FR.FETCHTYPE=:fetchtype  
							order by RECYCLEDATE desc
	   ) where rownum=1
      ]]>
    </Content>
    <Content Key="Recycle_GetNormalPackageTask" DataBaseType="SqlServer">
      select TASKID
      from FlowTask inner join CargoType on FlowTask.CargoTypeID = CargoType.CargoTypeID
      WHERE FlowTask.FRecycleID = @FRecycleID and CargoType.IsNormal = 1
    </Content>
    <Content Key="Recycle_GetNormalPackageTask" DataBaseType="Oracle">
      select TASKID
      from FlowTask inner join CargoType on FlowTask.CargoTypeID = CargoType.CargoTypeID
      WHERE FlowTask.FRecycleID = :FRecycleID and CargoType.IsNormal = 1
    </Content>

    <Content Key="QueryByContainer1ByFrecycleID" DataBaseType="SqlServer">
      SELECT C.BARCODE
      FROM  FLOWRECYCLECONTAINER FRC
      INNER JOIN CONTAINER C  ON FRC.CONTAINERID = C.CONTAINERID
      WHERE FRC.FRECYCLEID = @frecycleID
    </Content>
    <Content Key="QueryByContainer1ByFrecycleID" DataBaseType="Oracle">
      SELECT C.BARCODE
      FROM  FLOWRECYCLECONTAINER FRC
      INNER JOIN CONTAINER C  ON FRC.CONTAINERID = C.CONTAINERID
      WHERE FRC.FRECYCLEID = :frecycleID
    </Content>

    <Content Key="QueryByContainer2ByFrecycleID" DataBaseType="SqlServer">
      SELECT SL.BARCODE
      FROM FLOWRECYCLELIST FRL
      INNER JOIN FLOWPACKAGELIST FL  ON FRL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE FRL.FRECYCLEID = @frecycleID
    </Content>
    <Content Key="QueryByContainer2ByFrecycleID" DataBaseType="Oracle">
      SELECT SL.BARCODE
      FROM FLOWRECYCLELIST FRL
      INNER JOIN FLOWPACKAGELIST FL  ON FRL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE FRL.FRECYCLEID = :frecycleID
    </Content>
    <Content Key="QueryByContainer2ByFrecycleFetchID" DataBaseType="SqlServer">
      SELECT SL.BARCODE
      FROM FLOWRECYCLEFETCHLIST FRL
      INNER JOIN FLOWPACKAGELIST FL  ON FRL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE FRL.FRECYCLEFETCHID = @frecycleID
    </Content>
    <Content Key="QueryByContainer2ByFrecycleFetchID" DataBaseType="Oracle">
      SELECT SL.BARCODE
      FROM FLOWRECYCLEFETCHLIST FRL
      INNER JOIN FLOWPACKAGELIST FL  ON FRL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE FRL.FRECYCLEFETCHID = :frecycleID
    </Content>
    <Content Key="Query_FlowPackageContainersByFrecycleIDbarCodes" DataBaseType="SqlServer">
      select c.CONTAINERID ,c.CONTAINERNAME,c.BARCODE,c.WASHTYPE,isnull(c.fpackagetype,PackageStatic.CARGOTYPEID)  CARGOTYPEID,
      isnull(dc.STATUS,10) as STATUS,
      case  when dc.status=-1 then '不合格'
      when dc.status=0 then '未审核'
      when dc.status=1 then '合格'
      when dc.status=2 then '部分合格'
      when dc.status=20 then '清洗中'
      when dc.status=30 then '清洗完成'
      else '待清洗' end as STATUSC,ISNULL(c.DEFAULTCOLOR,16777215) as DEFAULTCOLOR
      from FlowRecycleContainer rc  with (nolock) inner join container c  with (nolock) on  (rc.containerid = c.containerid)
      left join PackageStatic  with (nolock)  on (c.containerid = PackageStatic.containerid)
      left outer join  FlowDisinfectContainerList dc with (nolock) on (  rc.frecycleid = dc.frecycleid and rc.containerid = dc.containerid and rc.LastFDisinfectID = dc.FDisinfectID)
      where rc.frecycleid =@frecycleid
    </Content>
    <Content Key="Query_FlowPackageContainersByFrecycleIDbarCodes" DataBaseType="Oracle">
      select c.CONTAINERID ,c.CONTAINERNAME,c.BARCODE,c.WASHTYPE,nvl(c.fpackagetype,PackageStatic.CARGOTYPEID)  CARGOTYPEID,
      nvl(dc.STATUS,10) as STATUS,
      case  when dc.status=-1 then '不合格'
      when dc.status=0 then '未审核'
      when dc.status=1 then '合格'
      when dc.status=2 then '部分合格'
      when dc.status=20 then '清洗中'
      when dc.status=30 then '清洗完成'
      else '待清洗' end as STATUSC,nvl(c.DEFAULTCOLOR,16777215) as DEFAULTCOLOR
      from FlowRecycleContainer rc  inner join container c    on  (rc.containerid = c.containerid)
      left join PackageStatic   on (c.containerid = PackageStatic.containerid)
      left outer join  FlowDisinfectContainerList dc on (rc.frecycleid = dc.frecycleid and rc.containerid = dc.containerid and rc.LastFDisinfectID = dc.FDisinfectID)
      where rc.frecycleid =:frecycleid
    </Content>

    <Content Key="QueryByContainer3ByFrecycleID" DataBaseType="SqlServer">
      SELECT C.CARGOTYPENAME,C.CARGOTOPTYPE,FRLL.QUANTITY,FRLL.CARGOTYPEID,FRLL.BARCODE,FRLL.PACKAGEID,SL.BARCODE AS PACKAGEBARCODE,CP.CARGOTYPENAME AS PACKAGENAME,FRLL.RECYCLELOSTLISTID AS ID
      ,case when RegisterType=2 then '器械坏埙' else '器械丢失' end REGISTERTYPE
      ,OrgID as ORGID,OrgType as ORGTYPE
      FROM FLOWRECYCLELOSTLIST FRLL
      INNER JOIN CARGOTYPE C  ON FRLL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGELIST FL  ON FRLL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE CP  ON FL.CARGOTYPEID = CP.CARGOTYPEID
      WHERE FRLL.FRECYCLEID = @frecycleID
    </Content>
    <Content Key="QueryByContainer3ByFrecycleID" DataBaseType="Oracle">
      SELECT C.CARGOTYPENAME,C.CARGOTOPTYPE,FRLL.QUANTITY,FRLL.CARGOTYPEID,FRLL.BARCODE,FRLL.PACKAGEID,SL.BARCODE AS PACKAGEBARCODE,CP.CARGOTYPENAME AS PACKAGENAME,FRLL.RECYCLELOSTLISTID AS ID
      ,case when RegisterType=2 then '器械坏埙' else '器械丢失' end REGISTERTYPE
      ,OrgID as ORGID,OrgType as ORGTYPE
      FROM FLOWRECYCLELOSTLIST FRLL
      INNER JOIN CARGOTYPE C  ON FRLL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGELIST FL  ON FRLL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE CP  ON FL.CARGOTYPEID = CP.CARGOTYPEID
      WHERE FRLL.FRECYCLEID = :frecycleID
    </Content>
    <Content Key="QueryLostInstrumentRecycleFetchBybarcode" DataBaseType="SqlServer">
      SELECT C.CARGOTYPENAME,C.CARGOTOPTYPE,FRLL.QUANTITY,FRLL.CARGOTYPEID,FRLL.BARCODE,FRLL.PACKAGEID,SL.BARCODE AS PACKAGEBARCODE,CP.CARGOTYPENAME AS PACKAGENAME,FRLL.RECYCLEFETCHLOSTLISTID AS ID
      FROM FLOWRECYCLEFETCHLOSTLIST FRLL
      inner join FlowRecycleFetch fr on frll.FRecycleFetchID=fr.FRecycleFetchID and fr.FetchType=@fetchtype
      INNER JOIN CARGOTYPE C  ON FRLL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGELIST FL  ON FRLL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE CP  ON FL.CARGOTYPEID = CP.CARGOTYPEID
      WHERE   sl.barcode = @barcode
    </Content>
    <Content Key="QueryLostInstrumentRecycleFetchBybarcode" DataBaseType="Oracle">
      SELECT C.CARGOTYPENAME,C.CARGOTOPTYPE,FRLL.QUANTITY,FRLL.CARGOTYPEID,FRLL.BARCODE,FRLL.PACKAGEID,SL.BARCODE AS PACKAGEBARCODE,CP.CARGOTYPENAME AS PACKAGENAME,FRLL.RECYCLEFETCHLOSTLISTID AS ID
      FROM FLOWRECYCLEFETCHLOSTLIST FRLL
      inner join FlowRecycleFetch fr on frll.FRecycleFetchID=fr.FRecycleFetchID and fr.FetchType=:fetchtype
      INNER JOIN CARGOTYPE C  ON FRLL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGELIST FL  ON FRLL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE CP  ON FL.CARGOTYPEID = CP.CARGOTYPEID
      WHERE sl.barcode = :barcode
    </Content>
    <Content Key="QueryPackageHasRecycleFetched" DataBaseType="SqlServer">
      SELECT isnull(sum(1),0) as num
      FROM FLOWRECYCLEFETCHLIST FRLL
      inner join FlowRecycleFetch frf on frf.FRecycleFetchID=frll.FRecycleFetchID
      INNER JOIN FLOWPACKAGELIST FL  ON FRLL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE sl.barcode = @barcode and  frf.FetchType=@fetchtype
    </Content>
    <Content Key="QueryPackageHasRecycleFetched" DataBaseType="Oracle">
      SELECT nvl(sum(1),0) as num
      FROM FLOWRECYCLEFETCHLIST FRLL
      inner join FlowRecycleFetch frf on frf.FRecycleFetchID=frll.FRecycleFetchID
      INNER JOIN FLOWPACKAGELIST FL  ON FRLL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE sl.barcode = :barcode  and  frf.FetchType=:fetchtype
    </Content>

    <Content Key="QueryPackageHasUseed" DataBaseType="SqlServer">
      SELECT isnull(sum(1),0) as num
      from flowuselist ful inner join storagelist sg
      on ful.storageid=sg.storageid
      where sg.barcode=@barcode
    </Content>
    <Content Key="QueryPackageHasUseed" DataBaseType="Oracle">
      select nvl(sum(1),0) as num from flowuselist ful inner join storagelist sg
      on ful.storageid=sg.storageid
      where sg.barcode=:barcode
    </Content>

    <Content Key="Query_PackageFlowUserBarcode" Desc="查询病人使用记录" DataBaseType="SqlServer">
      SELECT isnull(sum(1),0) as num
      ,ful.storageid,ful.UseID
      from flowuselist ful inner join storagelist sg
      on ful.storageid=sg.storageid
      where sg.barcode=@barcode
      group by ful.storageid,ful.UseID
    </Content>
    <Content Key="Query_PackageFlowUserBarcode" Desc="查询病人使用记录" DataBaseType="Oracle">
      select nvl(sum(1),0) as num
      ,ful.storageid,ful.UseID
      from flowuselist ful inner join storagelist sg
      on ful.storageid=sg.storageid
      where sg.barcode=:barcode
      group by ful.storageid,ful.UseID
    </Content>

    <Content Key="QueryByContainer3ByFrecycleFetchID" DataBaseType="SqlServer">
      SELECT C.CARGOTYPENAME,C.CARGOTOPTYPE,FRLL.QUANTITY,FRLL.CARGOTYPEID,FRLL.BARCODE,FRLL.PACKAGEID,SL.BARCODE AS PACKAGEBARCODE,CP.CARGOTYPENAME AS PACKAGENAME,FRLL.RECYCLEFETCHLOSTLISTID AS ID
      FROM FLOWRECYCLEFETCHLOSTLIST FRLL
      INNER JOIN CARGOTYPE C  ON FRLL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGELIST FL  ON FRLL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE CP  ON FL.CARGOTYPEID = CP.CARGOTYPEID
      WHERE FRLL.FRECYCLEFETCHID = @frecycleID
    </Content>
    <Content Key="QueryByContainer3ByFrecycleFetchID" DataBaseType="Oracle">
      SELECT C.CARGOTYPENAME,C.CARGOTOPTYPE,FRLL.QUANTITY,FRLL.CARGOTYPEID,FRLL.BARCODE,FRLL.PACKAGEID,SL.BARCODE AS PACKAGEBARCODE,CP.CARGOTYPENAME AS PACKAGENAME,FRLL.RECYCLEFETCHLOSTLISTID AS ID
      FROM FLOWRECYCLEFETCHLOSTLIST FRLL
      INNER JOIN CARGOTYPE C  ON FRLL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGELIST FL  ON FRLL.PACKAGEID = FL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE CP  ON FL.CARGOTYPEID = CP.CARGOTYPEID
      WHERE FRLL.FRECYCLEFETCHID = :frecycleID
    </Content>
    <Content Key="QueryByContainer4ByFrecycleID" DataBaseType="SqlServer">
      SELECT C.BARCODE
      FROM  FLOWRECYCLECONTAINER FRC
      INNER JOIN CONTAINER C  ON FRC.CONTAINERID = C.CONTAINERID
      WHERE LastFDisinfectID IS NOT NULL AND FRC.FRECYCLEID =@frecycleID
    </Content>
    <Content Key="QueryByContainer4ByFrecycleID" DataBaseType="Oracle">
      SELECT C.BARCODE
      FROM  FLOWRECYCLECONTAINER FRC
      INNER JOIN CONTAINER C  ON FRC.CONTAINERID = C.CONTAINERID
      WHERE LastFDisinfectID IS NOT NULL AND FRC.FRECYCLEID =:frecycleID
    </Content>

    <Content Key="Query_FlowRecycleViewDetailInfoBysql" DataBaseType="SqlServer">
      SELECT T.CARGOTYPENAME,W.WAREHOUSENAME,D.QUANTITY AS QUANTITY,D.BARCODE
      FROM FLOWRECYCLE A   INNER JOIN FLOWRECYCLELIST B   ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C ON B.PACKAGEID=C.PACKAGEID
      INNER JOIN STORAGELIST D   ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W   ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1 {0} ORDER BY W.WAREHOUSENAME,T.CARGOTYPENAME
    </Content>
    <Content Key="Query_FlowRecycleViewDetailInfoBysql" DataBaseType="Oracle">
      SELECT T.CARGOTYPENAME,W.WAREHOUSENAME,D.QUANTITY AS QUANTITY,D.BARCODE
      FROM FLOWRECYCLE A   INNER JOIN FLOWRECYCLELIST B   ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C ON B.PACKAGEID=C.PACKAGEID
      INNER JOIN STORAGELIST D   ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W   ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1 {0} ORDER BY W.WAREHOUSENAME,T.CARGOTYPENAME
    </Content>
	  <Content Key="QueryRecyclePackageQxNumByFrecycleID" DataBaseType="SqlServer">
		  <![CDATA[
		  select fpcl.CARGOTYPEID,fpcl.QUANTITY from flowrecyclelist frc
		  inner join FlowPackageList fpl on frc.PackageID=fpl.PackageID
		  inner join FlowPackageLostBarcodeCList fpcl on fpcl.FPackageID=fpl.FPackageID
		  where frecycleid=@frecycleid and fpcl.CargoTopType=1
		  and fpcl.Quantity>0]]>
	  </Content>
	  <Content Key="QueryRecyclePackageQxNumByFrecycleID" DataBaseType="Oracle">
		  <![CDATA[
		  select fpcl.CARGOTYPEID,fpcl.QUANTITY from flowrecyclelist frc
		  inner join FlowPackageList fpl on frc.PackageID=fpl.PackageID
		  inner join FlowPackageLostBarcodeCList fpcl on fpcl.FPackageID=fpl.FPackageID
		  where frecycleid=:frecycleid and fpcl.CargoTopType=1
		  and fpcl.Quantity>0
		  ]]>
	  </Content>
    <Content Key="Query_FlowRecycleFetchViewDetailInfoBysql" DataBaseType="SqlServer">
      SELECT T.CARGOTYPENAME,W.WAREHOUSENAME,D.QUANTITY AS QUANTITY,D.BARCODE
      FROM FLOWRECYCLEFETCH A   INNER JOIN FLOWRECYCLEFETCHLIST B   ON A.FRECYCLEFETCHID=B.FRECYCLEFETCHID
      INNER JOIN FLOWPACKAGELIST C ON B.PACKAGEID=C.PACKAGEID
      INNER JOIN STORAGELIST D   ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W   ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1 {0} ORDER BY W.WAREHOUSENAME,T.CARGOTYPENAME
    </Content>
    <Content Key="Query_FlowRecycleFetchViewDetailInfoBysql" DataBaseType="Oracle">
      SELECT T.CARGOTYPENAME,W.WAREHOUSENAME,D.QUANTITY AS QUANTITY,D.BARCODE
      FROM FLOWRECYCLEFETCH A   INNER JOIN FLOWRECYCLEFETCHLIST B   ON A.FRECYCLEFETCHID=B.FRECYCLEFETCHID
      INNER JOIN FLOWPACKAGELIST C ON B.PACKAGEID=C.PACKAGEID
      INNER JOIN STORAGELIST D   ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W   ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE 1=1 {0} ORDER BY W.WAREHOUSENAME,T.CARGOTYPENAME
    </Content>
    <Content Key="Query_FlowRecycleFetchPackageStatusForZJEY" DataBaseType="SqlServer">
      SELECT T.CARGOTYPENAME,W.WAREHOUSENAME,L.Content AS LOGSTATUS
      FROM FLOWRECYCLEFETCH A   INNER JOIN FLOWRECYCLEFETCHLIST B   ON A.FRECYCLEFETCHID=B.FRECYCLEFETCHID
      INNER JOIN FLOWPACKAGELIST C ON B.PACKAGEID=C.PACKAGEID
      INNER JOIN STORAGELIST D   ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W   ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN SysLog L ON L.KeyID1=D.StorageID AND L.LogType=43
      WHERE 1=1 {0} ORDER BY W.WAREHOUSENAME,T.CARGOTYPENAME
    </Content>
    <Content Key="Query_FlowRecycleFetchPackageStatusForZJEY" DataBaseType="Oracle">
      SELECT T.CARGOTYPENAME,W.WAREHOUSENAME,L.Content AS LOGSTATUS
      FROM FLOWRECYCLEFETCH A   INNER JOIN FLOWRECYCLEFETCHLIST B   ON A.FRECYCLEFETCHID=B.FRECYCLEFETCHID
      INNER JOIN FLOWPACKAGELIST C ON B.PACKAGEID=C.PACKAGEID
      INNER JOIN STORAGELIST D   ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W   ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN SysLog L ON L.KeyID1=D.StorageID AND L.LogType=43
      WHERE 1=1 {0} ORDER BY W.WAREHOUSENAME,T.CARGOTYPENAME
    </Content>
    <Content Key="GetPackageImageListByForeignID" DataBaseType="SqlServer">
      Select t1.DataID,t2.Data From DataFileMaping t1 Inner Join DataFile t2 On t2.DataID=t1.DataID
      Where t1.ForeignID=@ForeignID  Order By t2.UploadDateTime
    </Content>
    <Content Key="GetPackageImageListByForeignID" DataBaseType="Oracle">
      Select t1.DataID,t2.Data From DataFileMaping t1 Inner Join DataFile t2 On t2.DataID=t1.DataID
      Where t1.ForeignID=:ForeignID  Order By t2.UploadDateTime
    </Content>

    <Content Key="GetSterilizationImageListByID" DataBaseType="SqlServer">
      Select t1.DataID,t2.Data From DataFileMaping t1 Inner Join DataFile t2 On t2.DataID=t1.DataID
      Where t1.ForeignID=@ForeignID Order By t2.UploadDateTime
    </Content>
    <Content Key="GetSterilizationImageListByID" DataBaseType="Oracle">
      Select t1.DataID,t2.Data From DataFileMaping t1 Inner Join DataFile t2 On t2.DataID=t1.DataID
      Where t1.ForeignID=:ForeignID Order By t2.UploadDateTime
    </Content>

    <Content Key="GetMaxLastBPCDDate" DataBaseType="SqlServer">
      select MAX(LASTBPCDDATE) as LASTBPCDDATE from Devices
    </Content>
    <Content Key="GetMaxLastBPCDDate" DataBaseType="Oracle">
      select MAX(LASTBPCDDATE) as LASTBPCDDATE from Devices
    </Content>

    <Content Key="Query_SterilizedCount" DataBaseType="SqlServer">
      <![CDATA[
      select COUNT(1)
      from FlowSterilizationList sl with (nolock) inner join FlowPackageList p with (nolock) on sl.PackageID = p.PackageID
      inner join DevicesUseLog dl with (nolock) on sl.SterilizationLogID = dl.LogID
      where dl.BeginDate >= @begindate and dl.BeginDate < @enddate and dl.IsOk =@isok
      ]]>
    </Content>
    <Content Key="Query_SterilizedCount" DataBaseType="Oracle">
      <![CDATA[
      select COUNT(1)
      from FlowSterilizationList sl  inner join FlowPackageList p   on sl.PackageID = p.PackageID
      inner join DevicesUseLog dl   on sl.SterilizationLogID = dl.LogID
      where dl.BeginDate >= :begindate and dl.BeginDate < :enddate and dl.IsOk =:isok
      ]]>
    </Content>

    <Content Key="Query_SterilizingCount" DataBaseType="SqlServer">
      <![CDATA[
      select COUNT(1)
      from FlowSterilizationList sl with (nolock) inner join FlowPackageList p with (nolock) on sl.PackageID = p.PackageID      
      inner join DevicesUseLog dl with (nolock) on sl.SterilizationLogID = dl.LogID
      where dl.BeginDate >= @begindate  and dl.BeginDate < @enddate and dl.IsOk = @isok
      ]]>
    </Content>
    <Content Key="Query_SterilizingCount" DataBaseType="Oracle">
      <![CDATA[
      select COUNT(1)
      from FlowSterilizationList sl   inner join FlowPackageList p  on sl.PackageID = p.PackageID      
      inner join DevicesUseLog dl  on sl.SterilizationLogID = dl.LogID
      where dl.BeginDate >= :begindate  and dl.BeginDate < :enddate and dl.IsOk = :isok
      ]]>
    </Content>

    <Content Key="Query_WaitSterilizeCount" DataBaseType="SqlServer">
      <![CDATA[
      select COUNT(1)
      from FlowPackageList fl with (nolock)
      where fl.PackageDate >= @begindate and fl.PackageDate < @enddate and
      not exists (select 1 from FlowSterilizationList sl where sl.PackageID = fl.PackageID)
      ]]>
    </Content>
    <Content Key="Query_WaitSterilizeCount" DataBaseType="Oracle">
      <![CDATA[
      select COUNT(1)
      from FlowPackageList fl 
      where fl.PackageDate >= :begindate and fl.PackageDate < :enddate and
      not exists (select 1 from FlowSterilizationList sl where sl.PackageID = fl.PackageID)
      ]]>
    </Content>

    <Content Key="Query_GetFlowSterilizationReport" DataBaseType="SqlServer">
      select au.LOGINNAME,e.DEVICENAME,e.TODAYUSETIMES,count(1) as QUANTITYSUM,c.BEGINDATE,ct.CARGOTYPENAME
      from  FlowSterilizationList a  inner join  FlowPackageList b  on a.PackageID=b.PackageID
      inner join  DevicesUseLog c  on a.SterilizationLogID=c.LogID
      inner join  AC_WorkGroup d  on c.UserID=d.FID
      inner join AC_UserWorkGroup wg on d.FID=wg.FGroupID
      inner join AC_User au on wg.FUserID=au.ID
      inner join  Devices e  on c.DeviceID=e.DeviceID
      inner join  CargoType ct  on b.CargoTypeID = ct.CargoTypeID
      where e.DeviceType in (4,5,6) {0}  group by au.LOGINNAME,e.DEVICENAME,e.TODAYUSETIMES,c.BEGINDATE,ct.CARGOTYPENAME
    </Content>
    <Content Key="Query_GetFlowSterilizationReport" DataBaseType="Oracle">
      select au.LOGINNAME,e.DEVICENAME,e.TODAYUSETIMES,count(1) as QUANTITYSUM,c.BEGINDATE,ct.CARGOTYPENAME
      from  FlowSterilizationList a  inner join  FlowPackageList b  on a.PackageID=b.PackageID
      inner join  DevicesUseLog c  on a.SterilizationLogID=c.LogID
      inner join  AC_WorkGroup d  on c.UserID=d.FID
      inner join AC_UserWorkGroup wg on d.FID=wg.FGroupID
      inner join AC_User au on wg.FUserID=au.ID
      inner join  Devices e  on c.DeviceID=e.DeviceID
      inner join  CargoType ct  on b.CargoTypeID = ct.CargoTypeID
      where e.DeviceType in (4,5,6) {0}  group by au.LOGINNAME,e.DEVICENAME,e.TODAYUSETIMES,c.BEGINDATE,ct.CARGOTYPENAME
    </Content>

    <Content Key="Query_FlowPackageListGetBarcodesByBarcode" DataBaseType="SqlServer">
      SELECT SL.BARCODE
      FROM FLOWPACKAGELIST FL
      INNER JOIN FlowSterilizationList FSL  on FL.PackageID =FSL.PackageID
      INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN DevicesUseLog DL  on FSL.SterilizationLogID=DL.LogID
      WHERE DL.BARCODE=@barcode
    </Content>
    <Content Key="Query_FlowPackageListGetBarcodesByBarcode" DataBaseType="Oracle">
      SELECT SL.BARCODE
      FROM FLOWPACKAGELIST FL
      INNER JOIN FlowSterilizationList FSL  on FL.PackageID =FSL.PackageID
      INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN DevicesUseLog DL  on FSL.SterilizationLogID=DL.LogID
      WHERE DL.BARCODE=:barcode
    </Content>

    <Content Key="GetSterilizationPackageListByContainer" DataBaseType="SqlServer">
      Select sl.BARCODE,case when o.Name is null then c.CARGOTYPENAME else c.CARGOTYPENAME+'('+o.Name+')' end as CARGOTYPENAME,fp.PACKAGEID,sl.MAEDATE,sl.EXPDATE
      from FlowContainerPackageList cpl
      inner join FlowContainerPackage cp  on cpl.ContainerPackageID = cp.ContainerPackageID
      inner join FlowPackageList fp on cpl.packageid = fp.packageid
      inner join StorageList sl  on fp.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      inner join Container ct  on ct.Containerid = cp.Containerid
      left join AC_Org o on (fp.OwnOrgID = o.ID and c.IsOEM = 1)
      where cp.ReadyStatus = 0 and ct.barcode=@Barcode
    </Content>
    <Content Key="GetSterilizationPackageListByContainer" DataBaseType="Oracle">
      Select sl.BARCODE,case when o.Name is null then c.CARGOTYPENAME else c.CARGOTYPENAME||'('||o.Name||')' end as CARGOTYPENAME,fp.PACKAGEID,sl.MAEDATE,sl.EXPDATE
      from FlowContainerPackageList cpl
      inner join FlowContainerPackage cp  on cpl.ContainerPackageID = cp.ContainerPackageID
      inner join FlowPackageList fp on cpl.packageid = fp.packageid
      inner join StorageList sl  on fp.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      inner join Container ct  on ct.Containerid = cp.Containerid
      left join AC_Org o on  (fp.OwnOrgID = o.ID and c.IsOEM = 1)
      where cp.ReadyStatus = 0 and ct.barcode=:Barcode
    </Content>

    <Content Key="GetSterilizationPackageListByBarcode" DataBaseType="SqlServer">
      Select sl.BARCODE,c.CARGOTYPENAME,fp.PACKAGEID,sl.MAEDATE,sl.EXPDATE
      from FlowPackageList fp  inner join StorageList sl  on fp.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      where sl.barcode =@Barcode
    </Content>
    <Content Key="GetSterilizationPackageListByBarcode" DataBaseType="Oracle">
      Select sl.BARCODE,c.CARGOTYPENAME,fp.PACKAGEID,sl.MAEDATE,sl.EXPDATE
      from FlowPackageList fp  inner join StorageList sl  on fp.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      where sl.barcode =:Barcode
    </Content>

    <Content Key="Query_FlowSterilizationList" DataBaseType="SqlServer">
      <![CDATA[
      SELECT DL.BEGINDATE,d.DEVICEID
      ,dl.MONITORDATAID
      ,dl.SensorDataHeadID
      ,CASE ISNULL(Convert(nvarchar(50),dl.MONITORDATAID),ISNULL(CONVERT(NVARCHAR(50), dl.SensorDataHeadID), ''))  
      WHEN '' THEN '无记录' ELSE '查看监控数据' END AS MONITORLOG
      ,D.DEVICENAME,DL.USETIMES,DL.TODAYUSETIMES,OU.FNames NAME, TP.TYPENAME AS ISOK,DL.LOGID,
      DL.CPIMGID,isnull(prule.RULENAME,'') as RULENAME,
      (CASE WHEN DL.IsBDTest = 1 THEN  CTP.TYPENAME END) AS ISBDOK,
      (CASE WHEN DL.IsBDTest <> 1 THEN CTP.TYPENAME END) AS ISCPCDOK,
      (CASE WHEN DL.IsBDTest <> 1 THEN case when DL.IsBPCDOK<>0  then BTP.TYPENAME else case when  dbo.fun_IsBPCD(ST.SterilizationLogID)=0 then '未涉及' else BTP.TYPENAME end end END) AS ISBPCDOK,
      DL.BDAutoCheckJudgmentValue,
      /*CTP.TYPENAME AS ISCPCDOK,
      BTP.TYPENAME AS ISBPCDOK,*/D.BARCODE as DEVICEBARCODE,D.DEVICETYPE,ST.CNT as STERILIZEPACKAGECOUNT,isnull(DL.CPCDBarcode,'') as  CPCDBARCODE,ISBD.TypeName AS ISBDTEST
      /*--双审核人(生物，BD)--*/
      ,case when dl.IsBDTest=0 then 
      case when wg1.FNames is not null and wg2.FNames is not null
      then wg1.FNames+','+wg2.FNames else 
      case when wg1.FNames is not null 
      then wg1.FNames else wg2.FNames end end
      else   --生物
      case when wg3.FNames is not null and wg2.FNames is not null
      then wg3.FNames+','+wg2.FNames 
      else case when wg3.FNames is not null
      then wg3.FNames else wg2.FNames end end
      end as CHECKNAME
      ,wg4.FNames as CPCDCHECKANEM
      FROM DEVICESUSELOG DL  INNER JOIN DEVICES D  ON DL.DEVICEID = D.DEVICEID
      LEFT JOIN AC_WorkGroup OU  ON DL.USERID= OU.FID
      LEFT JOIN SYSTEMTYPEPARAMETER TP  ON ( DL.ISOK = TP.TYPEVALUE AND TP.TYPEKEY = 'IsOK')
      LEFT JOIN SYSTEMTYPEPARAMETER CTP ON ( DL.IsCPCDOK =  CTP.TYPEVALUE AND CTP.TYPEKEY = 'IsOK')
      LEFT JOIN SYSTEMTYPEPARAMETER BTP ON ( DL.IsBPCDOK =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'IsOK')
      LEFT JOIN SYSTEMTYPEPARAMETER ISBD ON ( DL.IsBDTest = ISBD.TYPEVALUE AND ISBD.TYPEKEY = 'YesOrNo')
      left join (SELECT COUNT(*) as cnt,SterilizationLogID     FROM  FlowSterilizationList   group by SterilizationLogID) ST
      on DL.Logid=ST.SterilizationLogID
      left join DeviceProcessRule prule  on dl.DeviceProcessRuleID = prule.RuleID
      left join AC_WorkGroup wg1 on DL.BCheckID=wg1.FID
      left join AC_WorkGroup wg2 on DL.check1ID=wg2.FID
      left join AC_WorkGroup wg3 on DL.CheckID=wg3.FID
      left join AC_WorkGroup wg4 on DL.CheckID=wg4.FID
      WHERE D.DEVICETYPE >= 4 {0}
      ]]>
    </Content>
    <Content Key="Query_FlowSterilizationList" DataBaseType="Oracle">
      <![CDATA[
      SELECT DL.BEGINDATE,d.DEVICEID
      ,dl.MONITORDATAID
      ,dl.SensorDataHeadID
      ,CASE nvl(dl.MONITORDATAID,nvl(dl.SensorDataHeadID, -1)) 
      WHEN -1 THEN '无记录' ELSE '查看监控数据' END AS MONITORLOG
      ,D.DEVICENAME,DL.USETIMES,DL.TODAYUSETIMES,OU.FNames NAME, TP.TYPENAME AS ISOK,DL.LOGID,
      DL.CPIMGID,prule.RULENAME as RULENAME,
      (CASE WHEN DL.IsBDTest = 1 THEN  CTP.TYPENAME END) AS ISBDOK,
      (CASE WHEN DL.IsBDTest <> 1 THEN CTP.TYPENAME END) AS ISCPCDOK,
      (CASE WHEN DL.IsBDTest <> 1 THEN case when DL.IsBPCDOK<>0  then BTP.TYPENAME else case when  fun_isbpcd(ST.SterilizationLogID)=0 then '未涉及' else BTP.TYPENAME end end END) AS ISBPCDOK,
      DL.BDAutoCheckJudgmentValue,
      /*CTP.TYPENAME AS ISCPCDOK,
      BTP.TYPENAME AS ISBPCDOK,*/D.BARCODE as DEVICEBARCODE,D.DEVICETYPE,ST.CNT as STERILIZEPACKAGECOUNT,nvl(DL.CPCDBarcode,'') as  CPCDBARCODE,ISBD.TypeName AS ISBDTEST
       /*--双审核人(生物，BD)--*/
      ,case when dl.IsBDTest=0 then 
      case when wg1.FNames is not null and wg2.FNames is not null
      then wg1.FNames||','||wg2.FNames else 
      case when wg1.FNames is not null 
      then wg1.FNames else wg2.FNames end end
      else   --生物
      case when wg3.FNames is not null and wg2.FNames is not null
      then wg3.FNames||','||wg2.FNames 
      else case when wg3.FNames is not null
      then wg3.FNames else wg2.FNames end end
      end as CHECKNAME
      ,wg4.FNames as CPCDCHECKANEM
      FROM DEVICESUSELOG DL  INNER JOIN DEVICES D  ON DL.DEVICEID = D.DEVICEID
      LEFT JOIN AC_WorkGroup OU  ON DL.USERID= OU.FID
      LEFT JOIN SYSTEMTYPEPARAMETER TP  ON ( DL.ISOK = TP.TYPEVALUE AND TP.TYPEKEY = 'IsOK')
      LEFT JOIN SYSTEMTYPEPARAMETER CTP ON ( DL.IsCPCDOK =  CTP.TYPEVALUE AND CTP.TYPEKEY = 'IsOK')
      LEFT JOIN SYSTEMTYPEPARAMETER BTP ON ( DL.IsBPCDOK =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'IsOK')
      LEFT JOIN SYSTEMTYPEPARAMETER ISBD ON ( DL.IsBDTest = ISBD.TYPEVALUE AND ISBD.TYPEKEY = 'YesOrNo')
      left join (SELECT COUNT(*) as cnt,SterilizationLogID     FROM  FlowSterilizationList   group by SterilizationLogID) ST
      on DL.Logid=ST.SterilizationLogID
      left join DeviceProcessRule prule  on dl.DeviceProcessRuleID = prule.RuleID
      left join AC_WorkGroup wg1 on DL.BCheckID=wg1.FID
      left join AC_WorkGroup wg2 on DL.check1ID=wg2.FID
      left join AC_WorkGroup wg3 on DL.CheckID=wg3.FID
      left join AC_WorkGroup wg4 on DL.CheckID=wg4.FID
      WHERE D.DEVICETYPE >= 4 {0}
      ]]>
    </Content>

    <Content Key="Query_GetViewListContainerDeviceLocation" DataBaseType="SqlServer">
      <![CDATA[
      select c.CONTAINERNAME,DLC.DEVICELOCATIONNAME from FlowContainerPackage  fcp
inner join Container c on fcp.ContainerID=c.ContainerID
left join DeviceLocation dlc on dlc.DeviceLocationID=fcp.DeviceLocationID
where 1=1  {0} order by dlc.DeviceLocationSort
      ]]>
    </Content>
    <Content Key="Query_GetViewListContainerDeviceLocation" DataBaseType="Oracle">
      <![CDATA[
     select c.CONTAINERNAME,DLC.DEVICELOCATIONNAME from FlowContainerPackage  fcp
inner join Container c on fcp.ContainerID=c.ContainerID
left join DeviceLocation dlc on dlc.DeviceLocationID=fcp.DeviceLocationID
where 1=1  {0} order by dlc.DeviceLocationSort
      ]]>
    </Content>

    <Content Key="Query_FlowSterilizeCB" DataBaseType="SqlServer">
      SELECT DL.BEGINDATE,d.DEVICEID,dl.MONITORDATAID,CASE ISNULL(Convert(nvarchar(50),dl.MONITORDATAID),'')  WHEN '' THEN '无记录' ELSE '查看监控数据' END AS MONITORLOG,D.DEVICENAME,DL.TODAYUSETIMES,OU.FNames NAME,
      CC.FNames AS CNAME,BC.FNames AS BNAME,CTP.TYPENAME AS CPOK,BTP.TYPENAME AS BPOK,
      case when dbo.fun_IsBPCD(LOGID)=0 then case when BTP.TYPENAME='合格' then BTP.TYPENAME else '未涉及' end else BTP.TYPENAME end as ISBPOK,
      DL.LOGID,DL.CPIMGID,isnull(prule.RULENAME,'') as RULENAME,DL.CHECKDATE,DL.BCHECKDATE
      FROM DEVICESUSELOG DL  INNER JOIN DEVICES D  ON DL.DEVICEID = D.DEVICEID
      left JOIN AC_WorkGroup OU  ON DL. USERID= OU.FID
      left JOIN AC_WorkGroup CC  ON DL.CheckID= CC.FID
      left JOIN AC_WorkGroup BC  ON DL.BCheckID= BC.FID
      left JOIN SYSTEMTYPEPARAMETER TP  ON ( DL.ISOK = TP.TYPEVALUE AND TP.TYPEKEY = 'IsOK')
      INNER JOIN SYSTEMTYPEPARAMETER CTP ON ( DL.IsCPCDOK =  CTP.TYPEVALUE AND CTP.TYPEKEY = 'IsOK')
      INNER JOIN SYSTEMTYPEPARAMETER BTP ON ( DL.IsBPCDOK =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'IsOK')
      left join DeviceProcessRule prule  on dl.DeviceProcessRuleID = prule.RuleID
      WHERE D.DEVICETYPE >= 4 {0}
    </Content>
    <Content Key="Query_FlowSterilizeCB" DataBaseType="Oracle">
      SELECT DL.BEGINDATE,d.DEVICEID,dl.MONITORDATAID,CASE nvl(dl.MONITORDATAID,0)  WHEN 0 THEN '无记录' ELSE '查看监控数据' END AS MONITORLOG,D.DEVICENAME,DL.TODAYUSETIMES,OU.FNames NAME,
      CC.FNames AS CNAME,BC.FNames AS BNAME,CTP.TYPENAME AS CPOK,BTP.TYPENAME AS BPOK,
      case when dbo.fun_IsBPCD(LOGID)=0 then case when BTP.TYPENAME='合格' then BTP.TYPENAME else '未涉及' end else BTP.TYPENAME end as ISBPOK,
      DL.LOGID,DL.CPIMGID,nvl(prule.RULENAME,'') as RULENAME,DL.CHECKDATE,DL.BCHECKDATE
      FROM DEVICESUSELOG DL  INNER JOIN DEVICES D  ON DL.DEVICEID = D.DEVICEID
      left JOIN AC_WorkGroup OU  ON DL. USERID= OU.FID
      left JOIN AC_WorkGroup CC  ON DL.CheckID= CC.FID
      left JOIN AC_WorkGroup BC  ON DL.BCheckID= BC.FID
      left JOIN SYSTEMTYPEPARAMETER TP  ON ( DL.ISOK = TP.TYPEVALUE AND TP.TYPEKEY = 'IsOK')
      INNER JOIN SYSTEMTYPEPARAMETER CTP ON ( DL.IsCPCDOK =  CTP.TYPEVALUE AND CTP.TYPEKEY = 'IsOK')
      INNER JOIN SYSTEMTYPEPARAMETER BTP ON ( DL.IsBPCDOK =  BTP.TYPEVALUE AND BTP.TYPEKEY = 'IsOK')
      left join DeviceProcessRule prule  on dl.DeviceProcessRuleID = prule.RuleID
      WHERE D.DEVICETYPE >= 4 {0}
    </Content>

    <Content Key="Query_FlowSterilizeGetViewDetail" DataBaseType="SqlServer">
      Select sl.BARCODE,c.CARGOTYPENAME ,ctk.KINDNAME,fsl.STERILIZATIONLOGID,o.NAME,SSTATUS.TYPENAME,fl.PACKAGEID,CASE WHEN C.ISIN = 1 THEN own.NAME ELSE '' END as OWNORG
      ,isnull(fsl.ifcheck,0) as IFCHECK,ct.CONTAINERNAME,dlt.DEVICELOCATIONNAME
      from FlowSterilizationList fsl  inner join FlowPackageList fl  on fsl.PackageID = fl.PackageID
      inner join StorageList sl  on fl.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      left join CargoTypeKind ctk on c.CargoTypeKind=ctk.ID
      inner join Warehouse w  on w.WarehouseID = sl.WarehouseID
      inner join AC_Org o on o.ID = w.OrgID
      left join AC_Org own on own.ID = fl.OwnOrgID
      inner join SystemTypeParameter SSTATUS ON sl.Status = SSTATUS.TypeValue AND SSTATUS.TypeKey = 'StorageStatus'
      left join FlowContainerPackageList fcpl on fcpl.packageid=sl.storageid
      left join FlowContainerPackage fcp on fcpl.containerpackageid=fcp.containerpackageid and fcp.logid=fsl.sterilizationlogid
      left join Container ct  on ct.Containerid = fcp.Containerid
      left join DeviceLocation dlt on dlt.DeviceLocationID=fcp.devicelocationid
      where 1=1 {0}
    </Content>
    <Content Key="Query_FlowSterilizeGetViewDetail" DataBaseType="Oracle">
      Select sl.BARCODE,c.CARGOTYPENAME ,ctk.KINDNAME,fsl.STERILIZATIONLOGID,o.NAME,SSTATUS.TYPENAME,sl.STORAGEID PACKAGEID,CASE WHEN C.ISIN = 1 THEN own.NAME ELSE '' END as OWNORG
      ,nvl(fsl.ifcheck,0) as IFCHECK,ct.CONTAINERNAME,dlt.DEVICELOCATIONNAME
      from FlowSterilizationList fsl   inner join FlowPackageList fl  on fsl.PackageID = fl.PackageID
      inner join StorageList sl  on fl.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      left join CargoTypeKind ctk on c.CargoTypeKind=ctk.ID
      inner join Warehouse w  on w.WarehouseID = sl.WarehouseID
      inner join AC_Org o on o.ID = w.OrgID
      left join AC_Org own on own.ID = fl.OwnOrgID
      inner join SystemTypeParameter SSTATUS ON sl.Status = SSTATUS.TypeValue AND SSTATUS.TypeKey = 'StorageStatus'
      left join FlowContainerPackageList fcpl on fcpl.packageid=sl.storageid
      left join FlowContainerPackage fcp on fcpl.containerpackageid=fcp.containerpackageid and fcp.logid=fsl.sterilizationlogid
      left join Container ct  on ct.Containerid = fcp.Containerid
      left join DeviceLocation dlt on dlt.DeviceLocationID=fcp.devicelocationid
      where 1=1 {0}
    </Content>

    <Content Key="ListGetBarcodesByBarcode" DataBaseType="SqlServer">
      SELECT SL.BARCODE
      FROM FLOWPACKAGELIST FL
      INNER JOIN FlowPackage  on FL.FPackageID =FlowPackage.FPackageID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE FlowPackage.BARCODE=@barcode
    </Content>
    <Content Key="ListGetBarcodesByBarcode" DataBaseType="Oracle">
      SELECT SL.BARCODE
      FROM FLOWPACKAGELIST FL
      INNER JOIN FlowPackage  on FL.FPackageID =FlowPackage.FPackageID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE FlowPackage.BARCODE=:barcode
    </Content>

    //根据Barcode 判断是否有发放记录
    <Content Key="Count_FlowProvideByBarcode" DataBaseType="SqlServer">
      <![CDATA[
      select count(*) as Sumcount from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID=fpl.ProvideID
 inner join StorageList sl on fpl.PackageID=sl.StorageID
 where sl.Barcode=@barcode
      ]]>
    </Content>
    <Content Key="Count_FlowProvideByBarcode" DataBaseType="Oracle">
      <![CDATA[
      select count(*) as Sumcount from FlowProvide fp inner join FlowProvideList fpl on fp.ProvideID=fpl.ProvideID
 inner join StorageList sl on fpl.PackageID=sl.StorageID
 where sl.Barcode=:barcode
      ]]>
    </Content>

    <Content Key="Query_GetFlowPackageBarcodeByContainerBarcode" DataBaseType="SqlServer">
      <![CDATA[
      select fp.BARCODE from Container c
      inner join StorageList sl
      on c.PackageBarcode=sl.Barcode
      inner join FlowPackageList fpl on fpl.StorageID=sl.StorageID
      inner join flowpackage fp on fpl.FPackageID=fp.FPackageID
      where c.BarCode=@barcode
      ]]>
    </Content>
    <Content Key="Query_GetFlowPackageBarcodeByContainerBarcode" DataBaseType="Oracle">
      <![CDATA[
      select fp.BARCODE from Container c
      inner join StorageList sl
      on c.PackageBarcode=sl.Barcode
      inner join FlowPackageList fpl on fpl.StorageID=sl.StorageID
      inner join flowpackage fp on fpl.FPackageID=fp.FPackageID
      where c.BarCode=:barcode
      ]]>
    </Content>

    <Content Key="Count_FlowFetchByBarcode" Desc="根据Barcode判断是否有交接记录" DataBaseType="SqlServer">
      select count(*) as Sumcount from FlowFetch fp inner join FlowFetchList fpl on fp.FetchID=fpl.FetchID
      inner join StorageList sl on fpl.PackageID=sl.StorageID
      where sl.Barcode=@barcode and FETCHTYPE=@fetchType
    </Content>

    <Content Key="Count_FlowFetchByBarcode" Desc="根据Barcode判断是否有交接记录" DataBaseType="Oracle">
      select count(*) as Sumcount from FlowFetch fp inner join FlowFetchList fpl on fp.FetchID=fpl.FetchID
      inner join StorageList sl on fpl.PackageID=sl.StorageID
      where sl.Barcode=@barcode
    </Content>

    <Content Key="Query_FlowPackageListByBarcode" DataBaseType="SqlServer">
      SELECT SL.STATUS,StorageStatus.TypeName As FStatusName,FL.PACKAGEID,FL.STORAGEID,case when OWNORG.Name is null then c.CARGOTYPENAME else c.CARGOTYPENAME+'('+OWNORG.Name+')' end as CARGOTYPENAME,SL.EXPDATE,FL.VALIDDATE,
      C.IsIn,CK.ID AS CargoTypeKind,CK.KindName AS CargoKindText,
      SL.STERILIZEDATE,FL.CHECKID,FL.FPACKAGEID,FL.ISTEMP,CK.ORGID,C.CARGOTYPEID, SL.BARCODE,FL.LENDFLAG,ISNULL(O.CODE,'?') AS ORGCODE,
      ISNULL(O.NAME,'?') AS ORGNAME,Fl.BADFLAGDATE,FL.BADFLAG,FL.USESTATUS,FL.PACKAGEOPENDATE,FL.LASTDATE,dbo.fun_get_BadFlagReason(FL.BADFLAGREASON) as BADFLAGREASON,
      BU.NAME AS BADFLAGCHECKER,OU.NAME AS PACKAGEOPENCHECKER,SBADFLAG.TypeName as BADFLAGNAME,DATEDIFF(MINUTE,PACKAGEOPENDATE,
      GETDATE()) as PACKAGEOPENMINS,LU.NAME AS LASTOP,C.ISRECYCLEALONE,C.ISVIRTUALPACKAGE,C.ISNEEDBCP,C.ISRECYCLECHECK,C.ISELECCONTAINER
      ,worg.Name WAREHOUSENAME,FL.FLOWORGID,FL.CONTAINERID,CONTAINER.BARCODE AS CONTAINERBARCODE,OWNORG.ID AS OEMORGID,ISNULL(OWNORG.CODE,'') AS OEMORGCODE,C.ISIN,C.ISNORMAL
      ,UU.ID AS USERID,UU.NAME AS USERNAME,CU.NAME AS PACKAGECHKER,C.CARGOTYPENAME AS CARGOTYPETEXT,FL.IsHighRiskInfectivity
      ,c.LocationID
      FROM FLOWPACKAGELIST FL WITH (NOLOCK)  INNER JOIN STORAGELIST SL WITH (NOLOCK)    ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C WITH (NOLOCK)    ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK WITH (NOLOCK)   ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN AC_ORG O WITH (NOLOCK)   ON CK.ORGID = O.ID
      LEFT JOIN AC_USER BU WITH (NOLOCK)   ON FL.BadFlagChecker = BU.ID
      LEFT JOIN AC_USER OU WITH (NOLOCK)   ON FL.PackageOpener = OU.ID
      LEFT JOIN AC_USER CU WITH (NOLOCK)   ON FL.CheckID = CU.ID
      LEFT JOIN SystemTypeParameter SBADFLAG WITH (NOLOCK)   ON FL.BadFlag = SBADFLAG.TypeValue AND SBADFLAG.TypeKey = 'QualifiedNO'
      LEFT JOIN AC_USER LU WITH (NOLOCK)   ON FL.LASTOPID = LU.ID
      LEFT JOIN WAREHOUSE W WITH (NOLOCK)   ON FL.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN AC_Org worg WITH (NOLOCK)  on worg.ID=w.OrgID
      LEFT JOIN SystemTypeParameter StorageStatus WITH (NOLOCK) ON SL.STATUS = StorageStatus.TYPEVALUE AND StorageStatus.TypeKey='StorageStatus'
      LEFT JOIN CONTAINER WITH (NOLOCK)  ON FL.CONTAINERID = CONTAINER.CONTAINERID
      LEFT JOIN AC_ORG OWNORG WITH (NOLOCK) ON ( FL.OWNORGID = OWNORG.ID AND C.IsOEM = 1)
      LEFT JOIN AC_USER UU WITH (NOLOCK) ON FL.USERID = UU.ID
      LEFT JOIN  DevicesUseLog DL WITH(NOLOCK) ON FL.laststerilizationlogid=DL.LOGID
      WHERE SL.BARCODE =@barcode
    </Content>
    <Content Key="Query_FlowPackageListByBarcode" DataBaseType="Oracle">
      SELECT  FL.PACKAGEID,SL.STATUS,StorageStatus.TypeName As FStatusName,FL.STORAGEID,case when OWNORG.Name is null then c.CARGOTYPENAME else c.CARGOTYPENAME||'('||OWNORG.Name||')' end as CARGOTYPENAME,SL.EXPDATE,FL.VALIDDATE,
      C.ISIN,SL.STERILIZEDATE,FL.CHECKID,FL.FPACKAGEID,FL.ISTEMP,CK.ORGID,C.CARGOTYPEID, SL.BARCODE,FL.LENDFLAG,nvl(O.CODE,'?') AS ORGCODE,
      nvl(O.NAME,'?') AS ORGNAME,Fl.BADFLAGDATE,FL.BADFLAG,FL.USESTATUS,FL.PACKAGEOPENDATE,FL.LASTDATE,fun_get_BadFlagReason(FL.BADFLAGREASON) as BADFLAGREASON,
      BU.FNames AS BADFLAGCHECKER,OU.FNames AS PACKAGEOPENCHECKER,SBADFLAG.TypeName as BADFLAGNAME,Datediff('N',PACKAGEOPENDATE,sysdate) as PACKAGEOPENMINS,
      LU.FNames AS LASTOP,C.ISRECYCLEALONE,C.ISVIRTUALPACKAGE,C.ISNEEDBCP,C.ISRECYCLECHECK,C.ISELECCONTAINER
      ,worg.Name WAREHOUSENAME,FL.FLOWORGID,FL.CONTAINERID,CONTAINER.BARCODE AS CONTAINERBARCODE,OWNORG.ID AS OEMORGID,nvl(OWNORG.CODE,'') AS OEMORGCODE,C.ISIN,C.ISNORMAL
      ,UU.ID AS USERID,UU.NAME AS USERNAME,CU.NAME AS PACKAGECHKER,C.CARGOTYPENAME AS CARGOTYPETEXT,FL.IsHighRiskInfectivity
      ,c.LocationID
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C   ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN AC_ORG O  ON CK.ORGID = O.ID
      LEFT JOIN AC_WorkGroup BU   ON FL.BadFlagChecker = BU.FID
      LEFT JOIN AC_WorkGroup OU   ON FL.PackageOpener = OU.FID
      LEFT JOIN AC_USER CU    ON FL.CheckID = CU.ID
      LEFT JOIN SystemTypeParameter SBADFLAG  ON FL.BadFlag = SBADFLAG.TypeValue AND SBADFLAG.TypeKey = 'QualifiedNO'
      LEFT JOIN AC_WorkGroup LU  ON FL.LASTOPID = LU.FID
      LEFT JOIN WAREHOUSE W  ON FL.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN AC_Org worg  on worg.ID=w.OrgID
      LEFT JOIN SystemTypeParameter  StorageStatus  ON SL.STATUS = StorageStatus.TYPEVALUE AND StorageStatus.TypeKey='StorageStatus'
      LEFT JOIN CONTAINER  ON FL.CONTAINERID = CONTAINER.CONTAINERID
      LEFT JOIN AC_ORG OWNORG ON ( FL.OWNORGID = OWNORG.ID AND C.IsOEM = 1)
      LEFT JOIN AC_USER UU  ON FL.USERID = UU.ID
      WHERE SL.BARCODE =:barcode
    </Content>

    <Content Key="Query_PackageUseStatusByBarcode" DataBaseType="SqlServer">
      SELECT  FL.PACKAGEID,SL.STATUS,StorageStatus.TypeName As FStatusName,FL.STORAGEID,c.CARGOTYPENAME,SL.EXPDATE,
      C.CARGOTYPEID, SL.BARCODE,FL.BADFLAG,FL.USESTATUS,dbo.fun_get_BadFlagReason(FL.BADFLAGREASON) as BADFLAGREASON,
      SBADFLAG.TypeName as BADFLAGNAME,C.CARGOTYPENAME AS CARGOTYPETEXT,LU.FNames AS LASTOP,DATEDIFF(MINUTE,PACKAGEOPENDATE,GETDATE()) as PACKAGEOPENMINS
      ,FL.PACKAGEOPENDATE
      ,fpi.FHospitalizedNo
      ,fpi.FPackageID
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C   ON SL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN AC_WorkGroup LU  ON FL.LASTOPID = LU.FID
      inner JOIN SystemTypeParameter SBADFLAG  ON FL.BadFlag = SBADFLAG.TypeValue AND SBADFLAG.TypeKey = 'QualifiedNO'
      inner JOIN SystemTypeParameter  StorageStatus  ON SL.STATUS = StorageStatus.TYPEVALUE AND StorageStatus.TypeKey='StorageStatus'

      left join FlowPackageIn fpi on FL.FPackageID=fpi.FPackageID
      WHERE SL.BARCODE =@barcode
    </Content>
    <Content Key="Query_PackageUseStatusByBarcode" DataBaseType="Oracle">
      SELECT  FL.PACKAGEID,SL.STATUS,StorageStatus.TypeName As FStatusName,FL.STORAGEID,c.CARGOTYPENAME,SL.EXPDATE,
      C.CARGOTYPEID, SL.BARCODE,FL.BADFLAG,FL.USESTATUS,fun_get_BadFlagReason(FL.BADFLAGREASON) as BADFLAGREASON,
      SBADFLAG.TypeName as BADFLAGNAME,C.CARGOTYPENAME AS CARGOTYPETEXT,LU.FNames AS LASTOP,Datediff('N',PACKAGEOPENDATE,sysdate) as PACKAGEOPENMINS
      ,FL.PACKAGEOPENDATE
      ,fpi.FHospitalizedNo
      ,fpi.FPackageID
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C   ON SL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN AC_WorkGroup LU  ON FL.LASTOPID = LU.FID
      inner JOIN SystemTypeParameter SBADFLAG  ON FL.BadFlag = SBADFLAG.TypeValue AND SBADFLAG.TypeKey = 'QualifiedNO'
      inner JOIN SystemTypeParameter  StorageStatus  ON SL.STATUS = StorageStatus.TYPEVALUE AND StorageStatus.TypeKey='StorageStatus'

      left join FlowPackageIn fpi on FL.FPackageID=fpi.FPackageID
      WHERE SL.BARCODE =:barcode
    </Content>
    <Content Key="Query_FlowPackageListByCargoTypeBarcode" DataBaseType="SqlServer">
      SELECT T2.ORGID,T3.NAME FORGNAME, T1.CARGOTYPEID,T1.CARGOTYPENAME FROM CARGOTYPE T1
      INNER JOIN CARGOTYPEKIND T2 ON T2.ID=T1.CARGOTYPEKIND
      INNER JOIN AC_ORG T3 ON T3.ID=T2.ORGID
      WHERE T1.BARCODE=@barcode
    </Content>
    <Content Key="Query_FlowPackageListByCargoTypeBarcode" DataBaseType="Oracle">
      SELECT T2.ORGID,T3.NAME FORGNAME, T1.CARGOTYPEID,T1.CARGOTYPENAME FROM CARGOTYPE T1
      INNER JOIN CARGOTYPEKIND T2 ON T2.ID=T1.CARGOTYPEKIND
      INNER JOIN AC_ORG T3 ON T3.ID=T2.ORGID
      WHERE T1.BARCODE=:barcode
    </Content>


    <Content Key="Query_FlowRecycleDetailsByBarcodes" DataBaseType="SqlServer">
      SELECT C.CARGOTYPENAME,pcl.Quantity / fp.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity / fp.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackage fp ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageCargoList  pcl   ON fp.FPackageID = pcl.FPackageID
      INNER JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON PS.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE C.CARGOTOPTYPE=1  AND PL.ISTEMP = 0 AND SL.BARCODE IN ({0})
      union
      SELECT C.CARGOTYPENAME,sum(fpdl.Quantity)   as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,sum(fpdl.Quantity)   AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackage fp ON fp.FPackageID = pl.FPackageID
      left JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      left JOIN FlowPackageDetailList  fpdl   ON fpdl.PackageID = pl.PackageID
      left JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and fpdl.CargoTypeID=ps.CargoTypeID
      left JOIN CARGOTYPE C  ON fpdl.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE C.CARGOTOPTYPE=1  AND PL.ISTEMP = 0 AND SL.BARCODE IN ({0})
      group by C.CARGOTYPENAME ,SL.BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID ,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      UNION
      SELECT C.CARGOTYPENAME,pcl.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackagein fp ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageinCargoList  pcl   ON fp.FPackageID = pcl.FPackageID
      left JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON pcl.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE C.CARGOTOPTYPE=1  AND PL.ISTEMP =2 AND SL.BARCODE IN ({0})
      UNION
      SELECT C.CARGOTYPENAME,pcl.Quantity / fp.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity / fp.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackageLostBarcode fp   ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageLostBarcodeCList  pcl   ON fp.FPackageID = pcl.FPackageID
      INNER JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON PS.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE C.CARGOTOPTYPE=1  AND PL.ISTEMP in (99,1) AND SL.BARCODE IN ({0})
    </Content>
    <Content Key="Query_FlowRecycleDetailsByBarcodes" DataBaseType="Oracle">
      SELECT C.CARGOTYPENAME,pcl.Quantity / fp.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity / fp.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackage fp ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageCargoList  pcl   ON fp.FPackageID = pcl.FPackageID
      INNER JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON PS.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE C.CARGOTOPTYPE=1  AND PL.ISTEMP = 0 AND SL.BARCODE IN ({0})
      union
      SELECT C.CARGOTYPENAME,sum(fpdl.Quantity)   as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,sum(fpdl.Quantity)   AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackage fp ON fp.FPackageID = pl.FPackageID
      left JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      left JOIN FlowPackageDetailList  fpdl   ON fpdl.PackageID = pl.PackageID
      left JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and fpdl.CargoTypeID=ps.CargoTypeID
      left JOIN CARGOTYPE C  ON fpdl.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE C.CARGOTOPTYPE=1  AND PL.ISTEMP = 0 AND SL.BARCODE IN ({0})
      group by C.CARGOTYPENAME ,SL.BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID ,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      UNION
      SELECT C.CARGOTYPENAME,pcl.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity  AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackagein fp ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageinCargoList  pcl   ON fp.FPackageID = pcl.FPackageID
      left JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON pcl.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE C.CARGOTOPTYPE=1  AND PL.ISTEMP = 2 AND SL.BARCODE IN ({0})
      UNION
      SELECT C.CARGOTYPENAME,pcl.Quantity / fp.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity / fp.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackageLostBarcode   fp   ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageLostBarcodeCList  pcl   ON fp.FPackageID = pcl.FPackageID
      INNER JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON PS.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE C.CARGOTOPTYPE=1  AND PL.ISTEMP in (99,1) AND SL.BARCODE IN ({0})
    </Content>

    <Content Key="Query_FlowRecycleDetailsAllByBarcodes" DataBaseType="SqlServer">
      SELECT C.CARGOTYPENAME,pcl.Quantity / fp.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity / fp.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackage fp ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageCargoList  pcl   ON fp.FPackageID = pcl.FPackageID
      INNER JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON PS.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE PL.ISTEMP = 0 AND SL.BARCODE=@BARCODE
      UNION
      SELECT C.CARGOTYPENAME,pcl.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackagein fp ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageinCargoList  pcl   ON fp.FPackageID = pcl.FPackageID
      left JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON pcl.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE PL.ISTEMP =2 AND SL.BARCODE=@BARCODE
      UNION
      SELECT C.CARGOTYPENAME,pcl.Quantity / fp.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity / fp.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackageLostBarcode fp   ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageLostBarcodeCList  pcl   ON fp.FPackageID = pcl.FPackageID
      INNER JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON PS.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE PL.ISTEMP in (99,1) AND SL.BARCODE=@BARCODE
    </Content>
    <Content Key="Query_FlowRecycleDetailsAllByBarcodes" DataBaseType="Oracle">
      SELECT C.CARGOTYPENAME,pcl.Quantity / fp.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity / fp.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackage fp ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageCargoList  pcl   ON fp.FPackageID = pcl.FPackageID
      INNER JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON PS.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE PL.ISTEMP = 0 AND SL.BARCODE=:BARCODE
      UNION
      SELECT C.CARGOTYPENAME,pcl.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity  AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackagein fp ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageinCargoList  pcl   ON fp.FPackageID = pcl.FPackageID
      left JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON pcl.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE PL.ISTEMP = 2 AND SL.BARCODE=:BARCODE
      UNION
      SELECT C.CARGOTYPENAME,pcl.Quantity / fp.Quantity as QUANTITY,SL.BARCODE AS BARCODE,C.ISTRACK,PL.PACKAGEID,C.CARGOTYPEID,C.CARGOTOPTYPE,PS.PACKAGESETTINGID AS ID,pcl.Quantity / fp.Quantity AS NEEDQUANTITY,W.WAREHOUSENAME,PL.PACKAGEID,PS.FORDER
      ,c.OfficialName as OFFICIALNAME
      ,c.Specification as SPECIFICATION
      ,c.Model as MODEL
      ,c.Remark as REMARK
      FROM FLOWPACKAGELIST PL INNER JOIN FlowPackageLostBarcode   fp   ON fp.FPackageID = pl.FPackageID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN FlowPackageLostBarcodeCList  pcl   ON fp.FPackageID = pcl.FPackageID
      INNER JOIN PACKAGESETTING PS  ON SL.CARGOTYPEID  = PS.PACKAGETYPEID and pcl.CargoTypeID=ps.CargoTypeID
      INNER JOIN CARGOTYPE C  ON PS.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      WHERE PL.ISTEMP in (99,1) AND SL.BARCODE=:BARCODE
    </Content>

    <Content Key="Query_FlowPackageCount" DataBaseType="SqlServer">
      <![CDATA[
      select COUNT(1)
      from FlowPackageList fl with (nolock)
      where fl.PackageDate >= @begindate and fl.PackageDate < @enddate and fl.istemp = @istemp
      ]]>
    </Content>
    <Content Key="Query_FlowPackageCount" DataBaseType="Oracle">
      <![CDATA[
      select COUNT(1)
      from FlowPackageList fl  
      where fl.PackageDate >= :begindate and fl.PackageDate < :enddate and fl.istemp = :istemp
      ]]>
    </Content>

    <Content Key="Query_GetBarcodeByPackageID" DataBaseType="SqlServer">
      select s.BARCODE
      from FlowPackageList fl   inner join storagelist s   on fl.storageid = s.storageid
      where fl.PackageID = @PackageID
    </Content>
    <Content Key="Query_GetBarcodeByPackageID" DataBaseType="Oracle">
      select s.BARCODE
      from FlowPackageList fl   inner join storagelist s   on fl.storageid = s.storageid
      where fl.PackageID = :PackageID
    </Content>

    <Content Key="GetIsBDOkByBarcodeByBarcode" DataBaseType="SqlServer">
      SELECT  PL.PACKAGEID, L.LOGID, L.BEGINDATE, L.ENDDATE, L.ISOK, L.USETIMES, L.TODAYUSETIMES, L.AFTERMAINTAINUSETIMES,
      SL.BARCODE, L.CHECKDATE, L.ISCPCDOK, L.ISBPCDOK
      FROM    FlowPackageList as pl
      inner join StorageList as sl on pl.StorageID = sl.StorageID
      inner join FlowSterilizationList as fsl on pl.PackageID = fsl.PackageID
      inner join DevicesUseLog as l on fsl.SterilizationLogID = l.LogID
      where sl.Barcode =@barcode
	  order by l.begindate desc
    </Content>
    <Content Key="GetIsBDOkByBarcodeByBarcode" DataBaseType="Oracle">
		SELECT  PL.PACKAGEID, L.LOGID, L.BEGINDATE, L.ENDDATE, L.ISOK, L.USETIMES, L.TODAYUSETIMES, L.AFTERMAINTAINUSETIMES,
		SL.BARCODE, L.CHECKDATE, L.ISCPCDOK, L.ISBPCDOK
		FROM    FlowPackageList   pl
		inner join StorageList   sl on pl.StorageID = sl.StorageID
		inner join FlowSterilizationList   fsl on pl.PackageID = fsl.PackageID
		inner join DevicesUseLog  l on fsl.SterilizationLogID = l.LogID
		where sl.Barcode = :barcode
		order by l.begindate desc
	</Content>

    <Content Key="Query_GetIsNeedBCDByLogID" DataBaseType="SqlServer">
      SELECT L.ISBPCDOK,C.ISNEEDBCP
      FROM FLOWSTERILIZATIONLIST B
      INNER JOIN DEVICESUSELOG L  ON B.STERILIZATIONLOGID =L.LOGID
      INNER JOIN FLOWPACKAGELIST P  ON B.PACKAGEID = P.PACKAGEID
      INNER JOIN CARGOTYPE C ON P.CARGOTYPEID = C.CARGOTYPEID
      where L.LOGID =@logID
    </Content>
    <Content Key="Query_GetIsNeedBCDByLogID" DataBaseType="Oracle">
      SELECT L.ISBPCDOK,C.ISNEEDBCP
      FROM FLOWSTERILIZATIONLIST B
      INNER JOIN DEVICESUSELOG L  ON B.STERILIZATIONLOGID =L.LOGID
      INNER JOIN FLOWPACKAGELIST P  ON B.PACKAGEID = P.PACKAGEID
      INNER JOIN CARGOTYPE C ON P.CARGOTYPEID = C.CARGOTYPEID
      where L.LOGID =:logID
    </Content>

    <Content Key="Query_GetPackageIDByBarcode" DataBaseType="SqlServer">
      SELECT FL.PACKAGEID
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID
      WHERE SL.BARCODE =@barcode
    </Content>
    <Content Key="Query_GetPackageIDByBarcode" DataBaseType="Oracle">
      SELECT FL.PACKAGEID
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID
      WHERE SL.BARCODE = :barcode
    </Content>

    <Content Key="Query_GetFPackageIDByBarcode" DataBaseType="SqlServer">
      SELECT T2.FPACKAGEID FROM STORAGELIST T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.STORAGEID=T1.STORAGEID
      WHERE T1.BARCODE=@barcode
    </Content>
    <Content Key="Query_GetFPackageIDByBarcode" DataBaseType="Oracle">
      SELECT T2.FPACKAGEID FROM STORAGELIST T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.STORAGEID=T1.STORAGEID
      WHERE T1.BARCODE=:barcode
    </Content>

    <Content Key="DtGetPackageListByBarcode" DataBaseType="SqlServer">
      SELECT SL.BARCODE,case when o.Name is null then c.CARGOTYPENAME else c.CARGOTYPENAME+'('+o.Name+')' end as CARGOTYPENAME,FP.PACKAGEID,SL.MAEDATE,W.WAREHOUSENAME,SL.EXPDATE,FP.ISTEMP,FP.STORAGEID
      ,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLECHECK,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE,C.CARGOTYPEID,L.LOCATIONNAME,
      case CC.BARCODE when '1200000' then null else CC.BARCODE end  AS CONTAINERBARCODE,SL.STORAGEID, L.LOCATIONID,W.WAREHOUSEID,C.FDYNAMICBINDING,WHORG.NAME AS WAREHOUSEORGNAME
      ,WHORG.ID as ORGID
      FROM FLOWPACKAGELIST FP  INNER JOIN STORAGELIST SL  ON FP.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C  ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON FP.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L ON FP.LASTLOCATIONID = L.LOCATIONID
      LEFT JOIN CONTAINER CC ON FP.CONTAINERID = CC.CONTAINERID
      LEFT JOIN AC_ORG WHORG ON W.ORGID=WHORG.ID
      LEFT JOIN AC_ORG O ON (FP.OwnOrgID = o.ID and C.IsOEM = 1)
      WHERE SL.BARCODE=@Barcode
    </Content>
    <Content Key="DtGetPackageListByBarcode" DataBaseType="Oracle">
      SELECT SL.BARCODE,case when o.Name is null then c.CARGOTYPENAME else c.CARGOTYPENAME||'('||o.Name||')' end as CARGOTYPENAME,FP.PACKAGEID,SL.MAEDATE,W.WAREHOUSENAME,SL.EXPDATE,FP.ISTEMP,FP.STORAGEID
      ,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLECHECK,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE,C.CARGOTYPEID,L.LOCATIONNAME,
      case CC.BARCODE when '1200000' then null else CC.BARCODE end  AS CONTAINERBARCODE,SL.STORAGEID, L.LOCATIONID,W.WAREHOUSEID,C.FDYNAMICBINDING,WHORG.NAME AS WAREHOUSEORGNAME
      ,WHORG.ID as ORGID
      FROM FLOWPACKAGELIST FP  INNER JOIN STORAGELIST SL  ON FP.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C  ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON FP.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN AC_ORG WHORG ON W.ORGID=WHORG.ID
      LEFT JOIN LOCATION L ON FP.LASTLOCATIONID = L.LOCATIONID
      LEFT JOIN CONTAINER CC ON FP.CONTAINERID = CC.CONTAINERID
      LEFT JOIN AC_ORG O ON (FP.OwnOrgID = o.ID and C.IsOEM = 1)
      WHERE SL.BARCODE=:Barcode
    </Content>
    <Content Key="DtGetPackageListByBarcodes" DataBaseType="SqlServer">
      SELECT SL.BARCODE,case when o.Name is null then c.CARGOTYPENAME else c.CARGOTYPENAME+'('+o.Name+')' end as CARGOTYPENAME,FP.PACKAGEID,SL.MAEDATE,W.WAREHOUSENAME,SL.EXPDATE,FP.ISTEMP,FP.STORAGEID
      ,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLECHECK,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE,C.CARGOTYPEID,L.LOCATIONNAME,
      case CC.BARCODE when '1200000' then null else CC.BARCODE end  AS CONTAINERBARCODE,SL.STORAGEID, L.LOCATIONID,W.WAREHOUSEID,C.FDYNAMICBINDING,WHORG.NAME AS WAREHOUSEORGNAME
      ,WHORG.ID as ORGID
      FROM FLOWPACKAGELIST FP  INNER JOIN STORAGELIST SL  ON FP.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C  ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON FP.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L ON FP.LASTLOCATIONID = L.LOCATIONID
      LEFT JOIN CONTAINER CC ON FP.CONTAINERID = CC.CONTAINERID
      LEFT JOIN AC_ORG WHORG ON W.ORGID=WHORG.ID
      LEFT JOIN AC_ORG O ON (FP.OwnOrgID = o.ID and C.IsOEM = 1)
      WHERE SL.BARCODE IN ({0})
    </Content>
    <Content Key="DtGetPackageListByBarcodes" DataBaseType="Oracle">
      SELECT SL.BARCODE,case when o.Name is null then c.CARGOTYPENAME else c.CARGOTYPENAME||'('||o.Name||')' end as CARGOTYPENAME,FP.PACKAGEID,SL.MAEDATE,W.WAREHOUSENAME,SL.EXPDATE,FP.ISTEMP,FP.STORAGEID
      ,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLECHECK,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE,C.CARGOTYPEID,L.LOCATIONNAME,
      case CC.BARCODE when '1200000' then null else CC.BARCODE end  AS CONTAINERBARCODE,SL.STORAGEID, L.LOCATIONID,W.WAREHOUSEID,C.FDYNAMICBINDING,WHORG.NAME AS WAREHOUSEORGNAME
      ,WHORG.ID as ORGID
      FROM FLOWPACKAGELIST FP  INNER JOIN STORAGELIST SL  ON FP.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C  ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON FP.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN AC_ORG WHORG ON W.ORGID=WHORG.ID
      LEFT JOIN LOCATION L ON FP.LASTLOCATIONID = L.LOCATIONID
      LEFT JOIN CONTAINER CC ON FP.CONTAINERID = CC.CONTAINERID
      LEFT JOIN AC_ORG O ON (FP.OwnOrgID = o.ID and C.IsOEM = 1)
      WHERE SL.BARCODE IN ({0})
    </Content>
    <Content Key="DsGetPackageListByBarcodesSql" DataBaseType="SqlServer">
      SELECT SL.BARCODE,C.CARGOTYPENAME,FP.PACKAGEID,SL.MAEDATE,W.WAREHOUSENAME,SL.EXPDATE,FP.ISTEMP,FP.STORAGEID
      ,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE,C.CARGOTYPEID,L.LOCATIONNAME
	  ,W.ORGID
      FROM FLOWPACKAGELIST FP  INNER JOIN STORAGELIST SL  ON FP.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C  ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON FP.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L ON FP.LASTLOCATIONID = L.LOCATIONID
      WHERE SL.BARCODE  IN ({0})
    </Content>
    <Content Key="DsGetPackageListByBarcodesSql" DataBaseType="Oracle">
		SELECT SL.BARCODE,C.CARGOTYPENAME,FP.PACKAGEID,SL.MAEDATE,W.WAREHOUSENAME,SL.EXPDATE,FP.ISTEMP,FP.STORAGEID
		,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE,C.CARGOTYPEID,L.LOCATIONNAME
		,W.ORGID
		FROM FLOWPACKAGELIST FP  INNER JOIN STORAGELIST SL  ON FP.STORAGEID = SL.STORAGEID
		INNER JOIN CARGOTYPE C  ON SL.CARGOTYPEID = C.CARGOTYPEID
		LEFT JOIN WAREHOUSE W  ON FP.LASTWAREHOUSEID = W.WAREHOUSEID
		LEFT JOIN LOCATION L ON FP.LASTLOCATIONID = L.LOCATIONID
		WHERE SL.BARCODE  IN ({0})
	</Content>

    <Content Key="Query_FlowPackageListGetViewListBySql" DataBaseType="SqlServer">
     <![CDATA[
          SELECT C.FlashID,c.Pinyin as PYCode,c.CargoTypeID,FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,
      OU.FNames AS PUSERNAME,CU.FNames AS CUSERNAME,COUNT(1) AS QUANTITY,FlowPackage.FPackageID,FlowPackage.BARCODE
      ,FlowPackage.FISPDADATA,CON.ContainerName CONTAINERNAME,
      Case when FlowPackage.FISPDADATA = 0 then '否' when FlowPackage.FISPDADATA = 1 then '是' end as PDA,
      CK.KINDNAME,FlowPackage.REMARK
      ,c.CargoTypeID as CARGOTYPEID
      FROM FLOWPACKAGELIST FL
      LEFT JOIN Container CON ON FL.ContainerID=CON.ContainerID
      inner join FlowPackage   on FL.FPackageID =FlowPackage.FPackageID
      left JOIN CARGOTYPE C    ON FL.CARGOTYPEID = C.CARGOTYPEID
      left JOIN CargoTypeKind CK ON C.CargoTypeKind = CK.ID
      INNER JOIN AC_WorkGroup OU    ON FlowPackage.OPID = OU.FID
      --LEFT OUTER JOIN AC_USER CU    ON FL.CHECKID = CU.ID
      LEFT OUTER JOIN AC_WorkGroup CU    ON FL.CHECKID = CU.FID
      WHERE 1 = 1 and c.IsNormal<>1 {0} GROUP BY CON.ContainerName,FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,OU.FNames,CU.FNames,FlowPackage.FPackageID,FlowPackage.BARCODE,FlowPackage.REMARK,FlowPackage.FISPDADATA,CK.KINDNAME,c.CargoTypeID,c.Pinyin,C.FlashID
      ORDER BY FlowPackage.PACKAGEDATE
     ]]>
    </Content>
    <Content Key="Query_FlowPackageListGetViewListBySql" DataBaseType="Oracle">
      <![CDATA[
        SELECT C.FlashID,c.Pinyin as PYCode,c.CargoTypeID,FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,
      OU.FNames AS PUSERNAME,CU.FNames AS CUSERNAME,COUNT(1) AS QUANTITY,FlowPackage.FPackageID,FlowPackage.BARCODE
      ,FlowPackage.FISPDADATA,CON.ContainerName CONTAINERNAME,
      Case when FlowPackage.FISPDADATA = 0 then '否' when FlowPackage.FISPDADATA = 1 then '是' end as PDA,
      CK.KINDNAME,FlowPackage.REMARK
      ,c.CargoTypeID as CARGOTYPEID
      FROM FLOWPACKAGELIST FL
      LEFT JOIN Container CON ON FL.ContainerID=CON.ContainerID
      inner join FlowPackage   on FL.FPackageID =FlowPackage.FPackageID
      left JOIN CARGOTYPE C    ON FL.CARGOTYPEID = C.CARGOTYPEID
      left JOIN CargoTypeKind CK ON C.CargoTypeKind = CK.ID
      INNER JOIN AC_WorkGroup OU    ON FlowPackage.OPID = OU.FID
      --LEFT OUTER JOIN AC_USER CU    ON FL.CHECKID = CU.ID
      LEFT  JOIN AC_WorkGroup CU    ON FL.CHECKID = CU.FID
      WHERE 1 = 1 and c.IsNormal<>1 {0} GROUP BY CON.ContainerName,FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,OU.FNames,CU.FNames,FlowPackage.FPackageID,FlowPackage.BARCODE,FlowPackage.REMARK,FlowPackage.FISPDADATA,CK.KINDNAME,c.CargoTypeID,c.Pinyin,C.FlashID
      ORDER BY FlowPackage.PACKAGEDATE
      ]]>
    </Content>
	  <Content Key="Query_SchoolFunctionCargoType" DataBaseType="SqlServer">
		  select C.FlashID,c.Pinyin as PYCode,c.CargoTypeID,C.CARGOTYPENAME,
		  CK.KINDNAME
		  from CargoType C
		  left join CargoTypeKind CK on C.CargoTypeKind=CK.ID
		  where 1=1 {0}
	  </Content>
	  <Content Key="Query_SchoolFunctionCargoType" DataBaseType="Oracle">
		  select C.FlashID,c.Pinyin as PYCode,c.CargoTypeID,C.CARGOTYPENAME,
		  CK.KINDNAME
		  from CargoType C
		  left join CargoTypeKind CK on C.CargoTypeKind=CK.ID
		  where 1=1 {0}
	  </Content>
	  <Content Key="Query_FlowPackageListGetNotCheckBySql" DataBaseType="SqlServer">
      SELECT FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,
      OU.FNames AS PUSERNAME,CU.FNames AS CUSERNAME,COUNT(1) AS QUANTITY,FlowPackage.FPackageID,FlowPackage.BARCODE
      ,FlowPackage.FISPDADATA,CON.ContainerName CONTAINERNAME,
      CON.BarCode as CONTAINERBARCODE,
      Case when FlowPackage.FISPDADATA = 0 then '否' when FlowPackage.FISPDADATA = 1 then '是' end as PDA,
      CK.KINDNAME,FL.CARGOTYPEID,FlowPackage.REMARK
      FROM FLOWPACKAGELIST FL
      LEFT JOIN Container CON ON FL.ContainerID=CON.ContainerID
      inner join
      (select PACKAGEDATE,FPackageID,BARCODE,FISPDADATA,FlowOrgID,opid,REMARK from FlowPackage
      union all
      select PACKAGEinDATE PACKAGEDATE,FPackageID,BARCODE,0 FISPDADATA,FlowOrgID,opid,REMARK from FlowPackagein
      )
      FlowPackage   on FL.FPackageID =FlowPackage.FPackageID
      left JOIN CARGOTYPE C    ON FL.CARGOTYPEID = C.CARGOTYPEID
      left JOIN CargoTypeKind CK ON C.CargoTypeKind = CK.ID
      INNER JOIN AC_WorkGroup OU    ON FlowPackage.OPID = OU.FID
      --LEFT OUTER JOIN AC_USER CU    ON FL.CHECKID = CU.ID
      LEFT OUTER JOIN AC_WorkGroup CU    ON FL.CHECKID = CU.FID
      WHERE 1 = 1 {0} GROUP BY CON.ContainerName,FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,OU.FNames,CU.FNames,FlowPackage.FPackageID,FlowPackage.BARCODE,FlowPackage.REMARK,FL.CARGOTYPEID,FlowPackage.FISPDADATA,CK.KINDNAME
      ,CON.BarCode
      ORDER BY FlowPackage.PACKAGEDATE
    </Content>
	  <Content Key="Query_FlowPackageListGetNotCheckBySql" DataBaseType="Oracle">
      SELECT FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,
      OU.FNames AS PUSERNAME,CU.FNames AS CUSERNAME,COUNT(1) AS QUANTITY,FlowPackage.FPackageID,FlowPackage.BARCODE
      ,FlowPackage.FISPDADATA,CON.ContainerName CONTAINERNAME,
      CON.BarCode as CONTAINERBARCODE,
      Case when FlowPackage.FISPDADATA = 0 then '否' when FlowPackage.FISPDADATA = 1 then '是' end as PDA,
      CK.KINDNAME,FL.CARGOTYPEID,FlowPackage.REMARK
      FROM FLOWPACKAGELIST FL
      LEFT JOIN Container CON ON FL.ContainerID=CON.ContainerID
      inner join
      (select PACKAGEDATE,FPackageID,BARCODE,FISPDADATA,FlowOrgID,opid,REMARK from FlowPackage
      union all
      select PACKAGEinDATE PACKAGEDATE,FPackageID,BARCODE,0 FISPDADATA,FlowOrgID,opid,REMARK from FlowPackagein
      )
      FlowPackage   on FL.FPackageID =FlowPackage.FPackageID
      left JOIN CARGOTYPE C    ON FL.CARGOTYPEID = C.CARGOTYPEID
      left JOIN CargoTypeKind CK ON C.CargoTypeKind = CK.ID
      INNER JOIN AC_WorkGroup OU    ON FlowPackage.OPID = OU.FID
      --LEFT OUTER JOIN AC_USER CU    ON FL.CHECKID = CU.ID
      LEFT  JOIN AC_WorkGroup CU    ON FL.CHECKID = CU.FID
      WHERE 1 = 1 {0} GROUP BY CON.ContainerName,FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,OU.FNames,CU.FNames,FlowPackage.FPackageID,FlowPackage.BARCODE,FlowPackage.REMARK,FL.CARGOTYPEID,FlowPackage.FISPDADATA,CK.KINDNAME
      ,CON.BarCode
      ORDER BY FlowPackage.PACKAGEDATE
    </Content>
    <Content Key="Query_FlowPackageListGetViewDetailBySql" DataBaseType="SqlServer">
		SELECT SL.BARCODE,FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,FL.PACKAGEID
		FROM FLOWPACKAGELIST FL
		inner join
		(select PACKAGEDATE,FPackageID from FlowPackage
		union all
		select PACKAGEinDATE,FPackageID from FlowPackagein
		)
		FlowPackage on FL.FPackageID =FlowPackage.FPackageID
		INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID
		INNER JOIN CARGOTYPE C   ON SL.CARGOTYPEID = C.CARGOTYPEID
		WHERE 1 = 1  {0}
	</Content>
    <Content Key="Query_FlowPackageListGetViewDetailBySql" DataBaseType="Oracle">
		SELECT SL.BARCODE,FlowPackage.PACKAGEDATE,C.CARGOTYPENAME,FL.PACKAGEID
		FROM FLOWPACKAGELIST FL 
		inner join
		(select PACKAGEDATE,FPackageID from FlowPackage
		union all
		select PACKAGEinDATE,FPackageID from FlowPackagein
		)
		FlowPackage on FL.FPackageID =FlowPackage.FPackageID
		INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID
		INNER JOIN CARGOTYPE C   ON SL.CARGOTYPEID = C.CARGOTYPEID
		WHERE 1 = 1  {0}
	</Content>

    <Content Key="Query_GetFlowPackageTask" DataBaseType="SqlServer">
     <![CDATA[
       SELECT DISTINCT C.CARGOTYPEID,C.BARCODEIMAGE,case isnull(fpi.FPackageName,'') when '' then C.CARGOTYPENAME else  fpi.FPackageName end  as CARGOTYPENAME,T.TASKNUM,T.FINISHNUM,C.BARCODE,T.TASKID,case p.pdaystype when '月' then datediff(day,GETDATE(),dateadd(MONTH,P.PDAYS,GETDATE()))   else P.PDAYS end  AS PDAYS,P.PTYPEID,P.PNAME,ISNULL(FR.BARCODE,'') AS RECYCLECODE,FR.FRECYCLEID,K.KINDNAME,C.PACKAGENOTALLCONTAINER,C.PACKAGECHECKMODE
      ,C.ISDYNAMIC,C.ISVIRTUALPACKAGE,C.ISNORMAL,C.NUMPERCONTAINER,C.PACKAGENUMPRINTALL,C.CHECKERDEFAULTPACKAGER,T.TASKNUM - T.FINISHNUM AS NEEDNUM,ISNULL(C.PACKAGECHECKMODE,0) PACKAGECHECKMODE,C.PINYIN AS PYCODE,CREATETIME,C.ISIN,C.ISDISINFECTONLY,C.FDYNAMICBINDING,C.FFIXEDBINDING
      ,FR.RECYCLEDATE,AW.FNames as RECYCLEOP,AWC.FNames as CREATOR,fpl.SubPackageQty as SUBPACKAGEQTY
      ,fpi.FPatient as FPATIENT
      ,fpi.FBedNo as FBEDNO
      ,p.PdaysType as PDAYSTYPE
      FROM FLOWTASK T WITH (NOLOCK)
      INNER JOIN CARGOTYPE C WITH (NOLOCK) ON T.CARGOTYPEID = C.CARGOTYPEID
      LEFT OUTER JOIN CARGOTYPEKIND K WITH (NOLOCK) ON C.CARGOTYPEKIND = K.ID
      LEFT OUTER JOIN PACKAGETYPE P WITH (NOLOCK) ON C.PACKAGETYPEID = P.PTYPEID
      LEFT OUTER JOIN FLOWRECYCLE FR WITH (NOLOCK) ON T.FRECYCLEID = FR.FRECYCLEID
      LEFT OUTER JOIN FLOWDISINFECTCONTAINERLIST FDC WITH (NOLOCK) ON FR.FRECYCLEID = FDC.FRECYCLEID
      LEFT OUTER JOIN AC_WORKGROUP AW WITH (NOLOCK) ON FR.OPID = AW.FID
      LEFT OUTER JOIN AC_WORKGROUP AWC WITH (NOLOCK) ON T.CreateBy = AWC.FID
      LEFT JOIN FlowPackageIn fpi on t.FRecycleID=fpi.FPackageID
      LEFT JOIN FlowPackageList fpl on fpi.FPackageID=fpl.FPackageID
      WHERE T.FINISHFLAG = 0 and (fpi.FSterilizeType<>0 or fpi.FSterilizeType is null) {0} ORDER BY CREATETIME DESC
     ]]>
    </Content>
    <Content Key="Query_GetFlowPackageTask" DataBaseType="Oracle">
     <![CDATA[
       SELECT TT.*,CC.BARCODEIMAGE FROM (SELECT DISTINCT C.CARGOTYPEID,nvl(fpi.FPackageName,C.CARGOTYPENAME)   as CARGOTYPENAME,T.TASKNUM,T.FINISHNUM,C.BARCODE,T.TASKID,case p.pdaystype when '月' then add_months(sysdate,P.PDAYS)-sysdate   else P.PDAYS end  AS PDAYS,P.PTYPEID,P.PNAME,NVL(FR.BARCODE,'') AS RECYCLECODE,FR.FRECYCLEID,K.KINDNAME,C.PACKAGENOTALLCONTAINER
      ,C.ISDYNAMIC,C.ISVIRTUALPACKAGE,C.ISNORMAL,C.NUMPERCONTAINER,C.PACKAGENUMPRINTALL,C.CHECKERDEFAULTPACKAGER,T.TASKNUM - T.FINISHNUM AS NEEDNUM,nvl(C.PACKAGECHECKMODE,0) PACKAGECHECKMODE,C.PINYIN AS PYCODE,CREATETIME,C.ISIN,C.ISDISINFECTONLY,C.FDYNAMICBINDING,C.FFIXEDBINDING
      ,FR.RECYCLEDATE,AW.FNames as RECYCLEOP,AWC.FNames as CREATOR,fpl.SubPackageQty as SUBPACKAGEQTY
      ,fpi.FPatient as FPATIENT
      ,fpi.FBedNo as FBEDNO
      ,p.PdaysType as PDAYSTYPE
      FROM FLOWTASK T
      INNER JOIN CARGOTYPE C  ON T.CARGOTYPEID = C.CARGOTYPEID
      LEFT OUTER JOIN CARGOTYPEKIND K  ON C.CARGOTYPEKIND = K.ID
      LEFT OUTER JOIN PACKAGETYPE P  ON C.PACKAGETYPEID = P.PTYPEID
      LEFT OUTER JOIN FLOWRECYCLE FR  ON T.FRECYCLEID = FR.FRECYCLEID
      LEFT OUTER JOIN FLOWDISINFECTCONTAINERLIST FDC ON FR.FRECYCLEID = FDC.FRECYCLEID
      LEFT OUTER JOIN AC_WORKGROUP AW ON FR.OPID = AW.FID
      LEFT OUTER JOIN AC_WORKGROUP AWC ON T.CreateBy = AWC.FID
      LEFT JOIN FlowPackageIn fpi on t.FRecycleID=fpi.FPackageID
      LEFT JOIN FlowPackageList fpl on fpi.FPackageID=fpl.FPackageID
      WHERE T.FINISHFLAG = 0 and (fpi.FSterilizeType<>0 or fpi.FSterilizeType is null) {0} ) TT INNER JOIN CARGOTYPE CC
      ON TT.CARGOTYPEID = CC.CARGOTYPEID order by CREATETIME DESC
     ]]>
    </Content>

    <Content Key="Query_GetFlowPackageTaskCheck" DataBaseType="SqlServer">
      Select C.CARGOTYPENAME as CARGOTYPENAMECHECK
      ,CC.CARGOTYPENAME
      ,K.KINDNAME
      ,sum((T.TASKNUM-T.FINISHNUM)*P.QUANTITY) as QTY
      FROM PACKAGESETTING P
      INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID
      left join FLOWTASK T on P.PackageTypeID = T.CargoTypeID
      INNER JOIN CARGOTYPE CC  ON T.CARGOTYPEID = CC.CARGOTYPEID
      LEFT OUTER JOIN CARGOTYPEKIND K WITH (NOLOCK) ON CC.CARGOTYPEKIND = K.ID
      WHERE T.FINISHFLAG = 0 {0}
      group by C.CARGOTYPENAME
      ,CC.CARGOTYPENAME
      ,K.KindName  order by C.CARGOTYPENAME
    </Content>
    <Content Key="Query_GetFlowPackageTaskCheck" DataBaseType="Oracle">
      Select C.CARGOTYPENAME as CARGOTYPENAMECHECK
      ,CC.CARGOTYPENAME
      ,K.KINDNAME
      ,sum((T.TASKNUM-T.FINISHNUM)*P.QUANTITY) as QTY
      FROM PACKAGESETTING P
      INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID
      left join FLOWTASK T on P.PackageTypeID = T.CargoTypeID
      INNER JOIN CARGOTYPE CC  ON T.CARGOTYPEID = CC.CARGOTYPEID
      LEFT OUTER JOIN CARGOTYPEKIND K   ON CC.CARGOTYPEKIND = K.ID
      WHERE T.FINISHFLAG = 0 {0}
      group by C.CARGOTYPENAME
      ,CC.CARGOTYPENAME
      ,K.KindName  order by C.CARGOTYPENAME
    </Content>

    <Content Key="Query_GetFlowPackageInfoByBarCode" DataBaseType="SqlServer">
      select C.CARGOTYPENAME,TSTATUS.TYPENAME AS STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME,U.FNames AS OPNAME,PL.LASTDATE,TBADFLAG.TYPENAME AS BADFLAGNAME,DBO.FUN_GET_BADFLAGREASON(PL.BADFLAGREASON) AS BADFLAGREASON,PL.BADFLAG,C.CARGOTYPEID
      ,FP.OPID,FP.PACKAGEDATE,ck.KINDNAME,OU.FNames AS PUSERNAME,pl.CheckID,CU.FNames AS CUSERNAME,PT.PName AS PACKAGETYPENAME,PT.PTYPEID,c.ISIN
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join CargoType c on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck on c.CargoTypeKind=ck.ID
      inner join SystemTypeParameter tstatus on sl.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
      left join Warehouse w on pl.LastWarehouseID = w.WarehouseID
      left join Location l on pl.LastLocationID = l.LocationID
      --left join AC_User u on pl.LastOPID = u.ID
      left join AC_WorkGroup u on pl.LastOPID = u.FID
      inner join SystemTypeParameter tbadflag on pl.BadFlag = tbadflag.TypeValue and tbadflag.TypeKey = 'QualifiedNO'
      INNER JOIN FlowPackage FP ON pl.FPackageID=FP.FPackageID
      --INNER JOIN AC_User OU ON FP.OPID=OU.ID
      INNER JOIN AC_WorkGroup OU ON FP.OPID=OU.FID
      --LEFT OUTER JOIN AC_User CU ON pl.CheckID=CU.ID
      LEFT OUTER JOIN AC_WorkGroup CU ON pl.CheckID=CU.FID
      left join PackageType PT ON PL.PackageTypeID = PT.PTypeID
      where sl.BarCode = @barcode
    </Content>
    <Content Key="Query_GetFlowPackageInfoByBarCode" DataBaseType="Oracle">
      select C.CARGOTYPENAME,TSTATUS.TYPENAME AS STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME,U.FNames AS OPNAME,PL.LASTDATE,TBADFLAG.TYPENAME AS BADFLAGNAME,FUN_GET_BADFLAGREASON(PL.BADFLAGREASON) AS BADFLAGREASON,PL.BADFLAG,C.CARGOTYPEID
      ,FP.OPID,FP.PACKAGEDATE,ck.KINDNAME,OU.FNames AS PUSERNAME,pl.CheckID,CU.FNames AS CUSERNAME,PT.PName AS PACKAGETYPENAME,PT.PTYPEID,c.ISIN
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join CargoType c on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck on c.CargoTypeKind=ck.ID
      inner join SystemTypeParameter tstatus on sl.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
      left join Warehouse w on pl.LastWarehouseID = w.WarehouseID
      left join Location l on pl.LastLocationID = l.LocationID
      --left join AC_User u on pl.LastOPID = u.ID
      left join AC_WorkGroup u on pl.LastOPID = u.FID
      inner join SystemTypeParameter tbadflag on pl.BadFlag = tbadflag.TypeValue and tbadflag.TypeKey = 'QualifiedNO'
      INNER JOIN FlowPackage FP ON pl.FPackageID=FP.FPackageID
      --INNER JOIN AC_User OU ON FP.OPID=OU.ID
      INNER JOIN AC_WorkGroup OU ON FP.OPID=OU.FID
      --LEFT OUTER JOIN AC_User CU ON pl.CheckID=CU.ID
      LEFT OUTER JOIN AC_WorkGroup CU ON pl.CheckID=CU.FID
      left join PackageType PT ON PL.PackageTypeID = PT.PTypeID
      where sl.BarCode = :barcode
    </Content>

    <Content Key="Query_GetFlowPackageInfoByBarCodes" DataBaseType="SqlServer">
		select pl.PACKAGEID,sl.BARCODE,C.CARGOTYPENAME,TSTATUS.TYPENAME AS STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME,U.FNames AS OPNAME,PL.LASTDATE,TBADFLAG.TYPENAME AS BADFLAGNAME,DBO.FUN_GET_BADFLAGREASON(PL.BADFLAGREASON) AS BADFLAGREASON,PL.BADFLAG,C.CARGOTYPEID
		,FP.OPID,FP.PACKAGEDATE,ck.KINDNAME,OU.FNames AS PUSERNAME,pl.CheckID,CU.FNames AS CUSERNAME,PT.PName AS PACKAGETYPENAME,PT.PTYPEID,c.ISIN
		from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
		inner join CargoType c on sl.CargoTypeID = c.CargoTypeID
		inner join CargoTypeKind ck on c.CargoTypeKind=ck.ID
		inner join SystemTypeParameter tstatus on sl.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
		left join Warehouse w on pl.LastWarehouseID = w.WarehouseID
		left join Location l on pl.LastLocationID = l.LocationID
		--left join AC_User u on pl.LastOPID = u.ID
		left join AC_WorkGroup u on pl.LastOPID = u.FID
		inner join SystemTypeParameter tbadflag on pl.BadFlag = tbadflag.TypeValue and tbadflag.TypeKey = 'QualifiedNO'
		INNER JOIN
		(
		select PACKAGEDATE,FPackageID,BARCODE,opid from FlowPackage
		union all
		select PACKAGEinDATE PACKAGEDATE,FPackageID,BARCODE,opid from FlowPackagein 
		)
		FP ON pl.FPackageID=FP.FPackageID
		--INNER JOIN AC_User OU ON FP.OPID=OU.ID
		INNER JOIN AC_WorkGroup OU ON FP.OPID=OU.FID
		--LEFT OUTER JOIN AC_User CU ON pl.CheckID=CU.ID
		LEFT OUTER JOIN AC_WorkGroup CU ON pl.CheckID=CU.FID
		left join PackageType PT ON PL.PackageTypeID = PT.PTypeID
		where 1=1
	</Content>

    <Content Key="Query_GetFlowPackageInfoByBarCodes" DataBaseType="Oracle">
		select pl.PACKAGEID,sl.BARCODE,C.CARGOTYPENAME,TSTATUS.TYPENAME AS STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME,U.FNames AS OPNAME,PL.LASTDATE,TBADFLAG.TYPENAME AS BADFLAGNAME,FUN_GET_BADFLAGREASON(PL.BADFLAGREASON) AS BADFLAGREASON,PL.BADFLAG,C.CARGOTYPEID
		,FP.OPID,FP.PACKAGEDATE,ck.KINDNAME,OU.FNames AS PUSERNAME,pl.CheckID,CU.FNames AS CUSERNAME,PT.PName AS PACKAGETYPENAME,PT.PTYPEID,c.ISIN
		from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
		inner join CargoType c on sl.CargoTypeID = c.CargoTypeID
		inner join CargoTypeKind ck on c.CargoTypeKind=ck.ID
		inner join SystemTypeParameter tstatus on sl.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
		left join Warehouse w on pl.LastWarehouseID = w.WarehouseID
		left join Location l on pl.LastLocationID = l.LocationID
		--left join AC_User u on pl.LastOPID = u.ID
		left join AC_WorkGroup u on pl.LastOPID = u.FID
		inner join SystemTypeParameter tbadflag on pl.BadFlag = tbadflag.TypeValue and tbadflag.TypeKey = 'QualifiedNO'
		INNER JOIN
		(
		select PACKAGEDATE,FPackageID,BARCODE,opid from FlowPackage
		union all
		select PACKAGEinDATE PACKAGEDATE,FPackageID,BARCODE,opid from FlowPackagein
		)
		FP ON pl.FPackageID=FP.FPackageID
		--INNER JOIN AC_User OU ON FP.OPID=OU.ID
		INNER JOIN AC_WorkGroup OU ON FP.OPID=OU.FID
		--LEFT OUTER JOIN AC_User CU ON pl.CheckID=CU.ID
		LEFT OUTER JOIN AC_WorkGroup CU ON pl.CheckID=CU.FID
		left join PackageType PT ON PL.PackageTypeID = PT.PTypeID
		where 1=1
	</Content>
    
    <Content Key="Query_GetFlowPackageInInfoByBarCode" DataBaseType="SqlServer">
      SELECT C.CARGOTYPENAME,TSTATUS.TYPENAME AS STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME,awp.FNAMES AS OPNAME,PL.LASTDATE,TBADFLAG.TYPENAME AS BADFLAGNAME,DBO.FUN_GET_BADFLAGREASON(PL.BADFLAGREASON) AS BADFLAGREASON,PL.BADFLAG,C.CARGOTYPEID
      ,awp.FID as OPID,OU.FNAMES AS PUSERNAME,PL.CHECKID,CU.FNAMES AS CUSERNAME,PT.PNAME AS PACKAGETYPENAME,PT.PTYPEID,FP.FPACKAGENAME,FP.FDOCTOR,FP.FPATIENT,FP.FSURGERYPART,FP.RETURNRECEIVER,FP.SENDTEXT,C.ISIN,TORG.NAME USEORGNAME,SENDORG.NAME SENDORG
      FROM FLOWPACKAGELIST PL INNER JOIN STORAGELIST SL ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN SYSTEMTYPEPARAMETER TSTATUS ON SL.STATUS = TSTATUS.TYPEVALUE AND TSTATUS.TYPEKEY = 'STORAGESTATUS'
      LEFT JOIN WAREHOUSE W ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L ON PL.LASTLOCATIONID = L.LOCATIONID
      LEFT JOIN AC_WORKGROUP U ON PL.LASTOPID = U.FID
      INNER JOIN SYSTEMTYPEPARAMETER TBADFLAG ON PL.BADFLAG = TBADFLAG.TYPEVALUE AND TBADFLAG.TYPEKEY = 'QUALIFIEDNO'
      INNER JOIN FLOWPACKAGEIN FP ON PL.FPACKAGEID=FP.FPACKAGEID
      INNER JOIN AC_WORKGROUP OU ON FP.OPID=OU.FID
      left join AC_WorkGroup awp on FP.packagerID=awp.FID
      LEFT JOIN AC_ORG TORG ON TORG.ID=FP.FORGID
      LEFT JOIN AC_ORG SENDORG ON SENDORG.ID=FP.SENDER
      LEFT OUTER JOIN AC_WORKGROUP CU ON PL.CHECKID=CU.FID
      LEFT JOIN PACKAGETYPE PT ON PL.PACKAGETYPEID = PT.PTYPEID
      WHERE SL.BARCODE = @barcode
    </Content>
    <Content Key="Query_GetFlowPackageInInfoByBarCode" DataBaseType="Oracle">
      SELECT C.CARGOTYPENAME,TSTATUS.TYPENAME AS STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME,awp.FNAMES AS OPNAME,PL.LASTDATE,TBADFLAG.TYPENAME AS BADFLAGNAME,FUN_GET_BADFLAGREASON(PL.BADFLAGREASON) AS BADFLAGREASON,PL.BADFLAG,C.CARGOTYPEID
      ,awp.FID as OPID,OU.FNAMES AS PUSERNAME,PL.CHECKID,CU.FNAMES AS CUSERNAME,PT.PNAME AS PACKAGETYPENAME,PT.PTYPEID,FP.FPACKAGENAME,FP.FDOCTOR,FP.FPATIENT,FP.FSURGERYPART,FP.RETURNRECEIVER,FP.SENDTEXT,C.ISIN,TORG.NAME USEORGNAME,SENDORG.NAME SENDORG
      FROM FLOWPACKAGELIST PL INNER JOIN STORAGELIST SL ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN SYSTEMTYPEPARAMETER TSTATUS ON SL.STATUS = TSTATUS.TYPEVALUE AND tstatus.TypeKey = 'StorageStatus'
      LEFT JOIN WAREHOUSE W ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN LOCATION L ON PL.LASTLOCATIONID = L.LOCATIONID
      LEFT JOIN AC_WORKGROUP U ON PL.LASTOPID = U.FID
      INNER JOIN SYSTEMTYPEPARAMETER TBADFLAG ON PL.BADFLAG = TBADFLAG.TYPEVALUE AND tbadflag.TypeKey = 'QualifiedNO'
      INNER JOIN FLOWPACKAGEIN FP ON PL.FPACKAGEID=FP.FPACKAGEID
      INNER JOIN AC_WORKGROUP OU ON FP.OPID=OU.FID
      left join AC_WorkGroup awp on FP.packagerID=awp.FID
      LEFT JOIN AC_ORG TORG ON TORG.ID=FP.FORGID
      LEFT JOIN AC_ORG SENDORG ON SENDORG.ID=FP.SENDER
      LEFT OUTER JOIN AC_WORKGROUP CU ON PL.CHECKID=CU.FID
      LEFT JOIN PACKAGETYPE PT ON PL.PACKAGETYPEID = PT.PTYPEID
      WHERE SL.BARCODE = :barcode
    </Content>

    <Content Key="Query_GetFlowPackageInInfoByBarCodes" DataBaseType="SqlServer">
		SELECT sl.BARCODE,C.CARGOTYPENAME,TSTATUS.TYPENAME AS STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME,U.FNAMES AS OPNAME,PL.LASTDATE,TBADFLAG.TYPENAME AS BADFLAGNAME,DBO.FUN_GET_BADFLAGREASON(PL.BADFLAGREASON) AS BADFLAGREASON,PL.BADFLAG,C.CARGOTYPEID
		,FP.OPID,OU.FNAMES AS PUSERNAME,PL.CHECKID,CU.FNAMES AS CUSERNAME,PT.PNAME AS PACKAGETYPENAME,PT.PTYPEID,FP.FPACKAGENAME,FP.FDOCTOR,FP.FPATIENT,FP.FSURGERYPART,FP.RETURNRECEIVER,FP.SENDTEXT,C.ISIN,TORG.NAME USEORGNAME,SENDORG.NAME SENDORG
		FROM FLOWPACKAGELIST PL INNER JOIN STORAGELIST SL ON PL.STORAGEID = SL.STORAGEID
		INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
		INNER JOIN SYSTEMTYPEPARAMETER TSTATUS ON SL.STATUS = TSTATUS.TYPEVALUE AND TSTATUS.TYPEKEY = 'StorageStatus'
		LEFT JOIN WAREHOUSE W ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
		LEFT JOIN LOCATION L ON PL.LASTLOCATIONID = L.LOCATIONID
		LEFT JOIN AC_WORKGROUP U ON PL.LASTOPID = U.FID
		INNER JOIN SYSTEMTYPEPARAMETER TBADFLAG ON PL.BADFLAG = TBADFLAG.TYPEVALUE AND TBADFLAG.TYPEKEY = 'QUALIFIEDNO'
		INNER JOIN FLOWPACKAGEIN FP ON PL.FPACKAGEID=FP.FPACKAGEID
		INNER JOIN AC_WORKGROUP OU ON FP.OPID=OU.FID
		LEFT JOIN AC_ORG TORG ON TORG.ID=FP.FORGID
		LEFT JOIN AC_ORG SENDORG ON SENDORG.ID=FP.SENDER
		LEFT OUTER JOIN AC_WORKGROUP CU ON PL.CHECKID=CU.FID
		LEFT JOIN PACKAGETYPE PT ON PL.PACKAGETYPEID = PT.PTYPEID
		WHERE 1=1
	</Content>

    <Content Key="Query_GetFlowPackageInInfoByBarCodes" DataBaseType="Oracle">
		SELECT sl.BARCODE,C.CARGOTYPENAME,TSTATUS.TYPENAME AS STATUSNAME,W.WAREHOUSENAME,L.LOCATIONNAME,U.FNAMES AS OPNAME,PL.LASTDATE,TBADFLAG.TYPENAME AS BADFLAGNAME,FUN_GET_BADFLAGREASON(PL.BADFLAGREASON) AS BADFLAGREASON,PL.BADFLAG,C.CARGOTYPEID
		,FP.OPID,OU.FNAMES AS PUSERNAME,PL.CHECKID,CU.FNAMES AS CUSERNAME,PT.PNAME AS PACKAGETYPENAME,PT.PTYPEID,FP.FPACKAGENAME,FP.FDOCTOR,FP.FPATIENT,FP.FSURGERYPART,FP.RETURNRECEIVER,FP.SENDTEXT,C.ISIN,TORG.NAME USEORGNAME,SENDORG.NAME SENDORG
		FROM FLOWPACKAGELIST PL INNER JOIN STORAGELIST SL ON PL.STORAGEID = SL.STORAGEID
		INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
		INNER JOIN SYSTEMTYPEPARAMETER TSTATUS ON SL.STATUS = TSTATUS.TYPEVALUE AND TSTATUS.TYPEKEY = 'StorageStatus'
		LEFT JOIN WAREHOUSE W ON PL.LASTWAREHOUSEID = W.WAREHOUSEID
		LEFT JOIN LOCATION L ON PL.LASTLOCATIONID = L.LOCATIONID
		LEFT JOIN AC_WORKGROUP U ON PL.LASTOPID = U.FID
		INNER JOIN SYSTEMTYPEPARAMETER TBADFLAG ON PL.BADFLAG = TBADFLAG.TYPEVALUE AND TBADFLAG.TYPEKEY = 'QualifiedNO'
		INNER JOIN FLOWPACKAGEIN FP ON PL.FPACKAGEID=FP.FPACKAGEID
		INNER JOIN AC_WORKGROUP OU ON FP.OPID=OU.FID
		LEFT JOIN AC_ORG TORG ON TORG.ID=FP.FORGID
		LEFT JOIN AC_ORG SENDORG ON SENDORG.ID=FP.SENDER
		LEFT OUTER JOIN AC_WORKGROUP CU ON PL.CHECKID=CU.FID
		LEFT JOIN PACKAGETYPE PT ON PL.PACKAGETYPEID = PT.PTYPEID
		WHERE 1=1
	</Content>

    <Content Key="Update_OPIDByBarcode" DataBaseType="SqlServer">
      UPDATE FlowPackage SET FlowPackage.OPID=@OPID WHERE FlowPackage.FPackageID=
      (
      SELECT FL.FPackageID FROM StorageList SL
      INNER JOIN FlowPackageList FL ON SL.StorageID=FL.StorageID
      WHERE SL.Barcode=@Barcode
      )
    </Content>
    <Content Key="Update_OPIDByBarcode" DataBaseType="Oracle">
      UPDATE FlowPackage SET FlowPackage.OPID=:OPID WHERE FlowPackage.FPackageID=
      (
      SELECT FL.FPackageID FROM StorageList SL
      INNER JOIN FlowPackageList FL ON SL.StorageID=FL.StorageID
      WHERE SL.Barcode=:Barcode
      )
    </Content>

    <Content Key="Update_InOPIDByBarcode" DataBaseType="SqlServer">
      UPDATE FlowPackageIn SET FlowPackageIn.OPID=@OPID WHERE FlowPackageIN.FPackageID=
      (
      SELECT FL.FPackageID FROM StorageList SL
      INNER JOIN FlowPackageList FL ON SL.StorageID=FL.StorageID
      WHERE SL.Barcode=@Barcode
      )
    </Content>
    <Content Key="Update_InOPIDByBarcode" DataBaseType="Oracle">
      UPDATE FlowPackageIn SET FlowPackageIn.OPID=:OPID WHERE FlowPackageIn.FPackageID=
      (
      SELECT FL.FPackageID FROM StorageList SL
      INNER JOIN FlowPackageList FL ON SL.StorageID=FL.StorageID
      WHERE SL.Barcode=:Barcode
      )
    </Content>
	  
	  <Content Key="Update_FlowPackageinPackageIDByFpackageid" DataBaseType="SqlServer">
		  update flowpackagein set PackageID=@opid where fpackageid=@fpackageid
	  </Content>
	  <Content Key="Update_FlowPackageinPackageIDByFpackageid" DataBaseType="Oracle">
		  update flowpackagein set PackageID=:opid where fpackageid=:fpackageid
	  </Content>

    <Content Key="Update_CheckIDByBarcode" DataBaseType="SqlServer">
      UPDATE FlowPackageList SET FlowPackageList.CheckID=@CheckID WHERE FlowPackageList.PackageID=
      (
      SELECT FL.PackageID FROM StorageList SL
      INNER JOIN FlowPackageList FL ON SL.StorageID=FL.StorageID
      WHERE SL.Barcode=@Barcode
      )
    </Content>
    <Content Key="Update_CheckIDByBarcode" DataBaseType="Oracle">
      UPDATE FlowPackageList SET FlowPackageList.CheckID=:CheckID WHERE FlowPackageList.PackageID=
      (
      SELECT FL.PackageID FROM StorageList SL
      INNER JOIN FlowPackageList FL ON SL.StorageID=FL.StorageID
      WHERE SL.Barcode=:Barcode
      )
    </Content>


    <Content Key="Query_GetFlowPackageCleanInfoByBarCode" DataBaseType="SqlServer">
      SELECT   PL.PACKAGEID,
      FDC.CHECKID,
      FDCCHECK.FNames  AS FLOWRECYCLECONTAINERCHECKNAME,
      FDC.CHECKDATE, C.CONTAINERNAME,
      FDC.WASHTYPE, FDC.DEVICELOGID,
      DL.TODAYUSETIMES, DU.FNames AS CLEANUSERNAME,
      D.DeviceName AS FLOWRECYCLECONTAINERLOGNAME,
      FDC.Status, ST.TypeName AS CONTAINERSTAUSNAME,
      SL.Barcode AS STORAGEBARCODE,
      DL.begindate WASHDATE,
      ISNULL(R.RuleName, N'') AS RULENAME,
      C.CONTAINERID,C.ISDISINFECTONLY
      FROM FlowPackageList PL WITH (NOLOCK)
      INNER JOIN StorageList SL WITH (NOLOCK) ON PL.StorageID = SL.StorageID
      INNER JOIN FlowPackageListDisinfect FPLD WITH (NOLOCK) ON PL.PackageID = FPLD.PackageID
      INNER JOIN FlowDisinfectContainerList FDC WITH (NOLOCK) ON FPLD.FRecycleID = FDC.FRecycleID
      LEFT JOIN AC_WorkGroup FDCCHECK WITH (NOLOCK) ON FDC.CheckID = FDCCHECK.FID
      INNER JOIN Container C WITH (NOLOCK) ON C.ContainerID = FDC.ContainerID
      INNER JOIN DevicesUseLog DL WITH (NOLOCK) ON FDC.DeviceLogID = DL.LogID
      INNER JOIN Devices D WITH (NOLOCK) ON DL.DeviceID = D.DeviceID
      INNER JOIN AC_WorkGroup DU WITH (NOLOCK) ON DU.FID = DL.UserID
      LEFT JOIN DeviceProcessRule R WITH (NOLOCK) ON R.RuleID = DL.DeviceProcessRuleID
      LEFT JOIN SystemTypeParameter ST WITH (NOLOCK) ON FDC.Status = ST.TypeValue AND ST.TypeKey = 'ContainerStatus'
      where SL.Barcode  = @barcode
      order by fdc.washdate desc,c.ContainerName
    </Content>
    <Content Key="Query_GetFlowPackageCleanInfoByBarCode" DataBaseType="Oracle">
      SELECT   PL.PACKAGEID,
      FDC.CHECKID,
      FDCCHECK.FNames  AS FLOWRECYCLECONTAINERCHECKNAME,
      FDC.CHECKDATE, C.CONTAINERNAME,
      FDC.WASHTYPE, FDC.DEVICELOGID,
      DL.TODAYUSETIMES, DU.FNames AS CLEANUSERNAME,
      D.DeviceName AS FLOWRECYCLECONTAINERLOGNAME,
      FDC.Status, ST.TypeName AS CONTAINERSTAUSNAME,
      SL.Barcode AS STORAGEBARCODE, 
      DL.begindate WASHDATE,
      nvl(R.RuleName, N'') AS RULENAME,
      C.CONTAINERID,C.ISDISINFECTONLY
      FROM FlowPackageList PL
      INNER JOIN StorageList SL ON PL.StorageID = SL.StorageID
      INNER JOIN FlowPackageListDisinfect FPLD ON PL.PackageID = FPLD.PackageID
      INNER JOIN FlowDisinfectContainerList FDC ON FPLD.FRecycleID = FDC.FRecycleID
      LEFT JOIN AC_WorkGroup FDCCHECK ON FDC.CheckID = FDCCHECK.FID
      INNER JOIN Container C ON C.ContainerID = FDC.ContainerID
      INNER JOIN DevicesUseLog DL ON FDC.DeviceLogID = DL.LogID
      INNER JOIN Devices D ON DL.DeviceID = D.DeviceID
      INNER JOIN AC_WorkGroup DU ON DU.FID = DL.UserID
      LEFT JOIN DeviceProcessRule R ON R.RuleID = DL.DeviceProcessRuleID
      LEFT JOIN SystemTypeParameter ST ON FDC.Status = ST.TypeValue AND ST.TypeKey = 'ContainerStatus'
      where SL.Barcode  = :barcode
      order by fdc.washdate desc,c.ContainerName
    </Content>

    <Content Key="Query_GetFlowPackageInCleanInfoByBarCode" DataBaseType="SqlServer">
		SELECT   PL.PACKAGEID,
		FDC.CHECKID,
		FDCCHECK.FNames  AS FLOWRECYCLECONTAINERCHECKNAME,
		FDC.CHECKDATE, C.CONTAINERNAME,
		FDC.WASHTYPE, FDC.DEVICELOGID,
		DL.TODAYUSETIMES, DU.FNames AS CLEANUSERNAME,
		D.DeviceName AS FLOWRECYCLECONTAINERLOGNAME,
		FDC.Status, ST.TypeName AS CONTAINERSTAUSNAME,
		SL.Barcode AS STORAGEBARCODE,
		FDC.WASHDATE,
		ISNULL(R.RuleName, N'') AS RULENAME,
		C.CONTAINERID,C.ISDISINFECTONLY
		FROM FlowPackageList PL WITH (NOLOCK)
		INNER JOIN StorageList SL WITH (NOLOCK) ON PL.StorageID = SL.StorageID
		--INNER JOIN FlowPackageListDisinfect FPLD WITH (NOLOCK) ON PL.PackageID = FPLD.PackageID
		INNER JOIN FlowDisinfectContainerList FDC WITH (NOLOCK) ON PL.FPackageID = FDC.FRecycleID
		LEFT JOIN AC_WorkGroup FDCCHECK WITH (NOLOCK) ON FDC.CheckID = FDCCHECK.FID
		INNER JOIN Container C WITH (NOLOCK) ON C.ContainerID = FDC.ContainerID
		INNER JOIN DevicesUseLog DL WITH (NOLOCK) ON FDC.DeviceLogID = DL.LogID
		INNER JOIN Devices D WITH (NOLOCK) ON DL.DeviceID = D.DeviceID
		INNER JOIN AC_WorkGroup DU WITH (NOLOCK) ON DU.FID = DL.UserID
		LEFT JOIN DeviceProcessRule R WITH (NOLOCK) ON R.RuleID = DL.DeviceProcessRuleID
		LEFT JOIN SystemTypeParameter ST WITH (NOLOCK) ON FDC.Status = ST.TypeValue AND ST.TypeKey = 'ContainerStatus'
		where SL.Barcode  = @barcode
		order by fdc.washdate desc,c.ContainerName
	</Content>

    <Content Key="Query_GetFlowPackageInCleanInfoByBarCode" DataBaseType="Oracle">
		SELECT   PL.PACKAGEID,
		FDC.CHECKID,
		FDCCHECK.FNames  AS FLOWRECYCLECONTAINERCHECKNAME,
		FDC.CHECKDATE, C.CONTAINERNAME,
		FDC.WASHTYPE, FDC.DEVICELOGID,
		DL.TODAYUSETIMES, DU.FNames AS CLEANUSERNAME,
		D.DeviceName AS FLOWRECYCLECONTAINERLOGNAME,
		FDC.Status, ST.TypeName AS CONTAINERSTAUSNAME,
		SL.Barcode AS STORAGEBARCODE,
		FDC.WASHDATE,
		nvl(R.RuleName, N'') AS RULENAME,
		C.CONTAINERID,C.ISDISINFECTONLY
		FROM FlowPackageList PL
		INNER JOIN StorageList SL ON PL.StorageID = SL.StorageID
		--INNER JOIN FlowPackageListDisinfect FPLD ON PL.PackageID = FPLD.PackageID
		INNER JOIN FlowDisinfectContainerList FDC ON PL.FPackageID = FDC.FRecycleID
		LEFT JOIN AC_WorkGroup FDCCHECK ON FDC.CheckID = FDCCHECK.FID
		INNER JOIN Container C ON C.ContainerID = FDC.ContainerID
		INNER JOIN DevicesUseLog DL ON FDC.DeviceLogID = DL.LogID
		INNER JOIN Devices D ON DL.DeviceID = D.DeviceID
		INNER JOIN AC_WorkGroup DU ON DU.FID = DL.UserID
		LEFT JOIN DeviceProcessRule R ON R.RuleID = DL.DeviceProcessRuleID
		LEFT JOIN SystemTypeParameter ST ON FDC.Status = ST.TypeValue AND ST.TypeKey = 'ContainerStatus'
		where SL.Barcode  = :barcode
		order by fdc.washdate desc,c.ContainerName
	</Content>

    <Content Key="Query_GetFlowPackageSysLogInfoByBarCode" DataBaseType="SqlServer">
      SELECT SL.Barcode STORAGEBARCODE,SysLog.Content OPERATINGCONTENT,
      SysLog.LogTime OPERATINGDATE,AU.FNames OPERATINGNAME,SYSLOG.LOGTYPE FROM FlowPackageList FL
      INNER JOIN SysLog  ON SysLog.KeyID1=FL.PackageID
      INNER JOIN StorageList SL ON FL.StorageID=SL.StorageID
      INNER JOIN AC_WorkGroup AU ON AU.FID=SysLog.Operator
      WHERE SL.Barcode = @barcode
      union all
      SELECT DISTINCT SL.Barcode STORAGEBARCODE,SysLog.Content OPERATINGCONTENT,
      SysLog.LogTime OPERATINGDATE,AU.FNames OPERATINGNAME,SYSLOG.LOGTYPE
      from
      StorageList SL
      INNER JOIN FlowPackageListDisinfect FPLD WITH (NOLOCK) ON SL.storageid = FPLD.PackageID
      INNER JOIN FlowDisinfectContainerList FDC WITH (NOLOCK) ON FPLD.FRecycleID = FDC.FRecycleID
      INNER JOIN SysLog  ON SysLog.KeyID1= FDC.DeviceLogID and LogType=1
      INNER JOIN AC_WorkGroup AU ON AU.FID=SysLog.Operator
      where SL.Barcode  = @barcode
      union all
      SELECT DISTINCT SL.Barcode STORAGEBARCODE,SysLog.Content OPERATINGCONTENT,
      SysLog.LogTime OPERATINGDATE,AU.FNames OPERATINGNAME,SYSLOG.LOGTYPE FROM FlowPackageList FL
      INNER JOIN FlowSterilizationList FS ON FS.PackageID = FL.PackageID
      INNER JOIN SysLog  ON SysLog.KeyID1=FS.SterilizationLogID
      INNER JOIN StorageList SL ON FL.StorageID=SL.StorageID
      INNER JOIN AC_WorkGroup AU ON AU.FID=SysLog.Operator
      WHERE SL.Barcode = @barcode
      union all
      SELECT DISTINCT SL.Barcode STORAGEBARCODE,SysLog.Content OPERATINGCONTENT,
      SysLog.LogTime OPERATINGDATE,AU.FNames OPERATINGNAME,SYSLOG.LOGTYPE FROM FlowPackageList FL
      INNER JOIN FLOWFETCHLIST FS ON FS.PackageID = FL.PackageID
      INNER JOIN SysLog  ON SysLog.KeyID1=FS.FETCHID
      INNER JOIN StorageList SL ON FL.StorageID=SL.StorageID
      INNER JOIN AC_WorkGroup AU ON AU.FID=SysLog.Operator
      WHERE SL.Barcode = @barcode
      ORDER BY OPERATINGDATE DESC
    </Content>
    <Content Key="Query_GetFlowPackageSysLogInfoByBarCode" DataBaseType="Oracle">
      SELECT SL.Barcode STORAGEBARCODE,SysLog.Content OPERATINGCONTENT,
      SysLog.LogTime OPERATINGDATE,AU.FNames OPERATINGNAME,SYSLOG.LOGTYPE FROM FlowPackageList FL
      INNER JOIN SysLog  ON SysLog.KeyID1=FL.PackageID
      INNER JOIN StorageList SL ON FL.StorageID=SL.StorageID
      INNER JOIN AC_WorkGroup AU ON AU.FID=SysLog.Operator
      WHERE SL.Barcode = :barcode
      union 
      SELECT DISTINCT SL.Barcode STORAGEBARCODE,SysLog.Content OPERATINGCONTENT,
      SysLog.LogTime OPERATINGDATE,AU.FNames OPERATINGNAME,SYSLOG.LOGTYPE
      from
      StorageList SL
      INNER JOIN FlowPackageListDisinfect FPLD   ON SL.storageid = FPLD.PackageID
      INNER JOIN FlowDisinfectContainerList FDC   ON FPLD.FRecycleID = FDC.FRecycleID
      INNER JOIN SysLog  ON SysLog.KeyID1= FDC.DeviceLogID and LogType=1
      INNER JOIN AC_WorkGroup AU ON AU.FID=SysLog.Operator
      where SL.Barcode  = :barcode
      union
      SELECT DISTINCT SL.Barcode STORAGEBARCODE,SysLog.Content OPERATINGCONTENT,
      SysLog.LogTime OPERATINGDATE,AU.FNames OPERATINGNAME,SYSLOG.LOGTYPE FROM FlowPackageList FL
      INNER JOIN FlowSterilizationList FS ON FS.PackageID = FL.PackageID
      INNER JOIN SysLog  ON SysLog.KeyID1=FS.SterilizationLogID
      INNER JOIN StorageList SL ON FL.StorageID=SL.StorageID
      INNER JOIN AC_WorkGroup AU ON AU.FID=SysLog.Operator
      WHERE SL.Barcode = :barcode
      union
      SELECT DISTINCT SL.Barcode STORAGEBARCODE,SysLog.Content OPERATINGCONTENT,
      SysLog.LogTime OPERATINGDATE,AU.FNames OPERATINGNAME,SYSLOG.LOGTYPE FROM FlowPackageList FL
      INNER JOIN FLOWFETCHLIST FS ON FS.PackageID = FL.PackageID
      INNER JOIN SysLog  ON SysLog.KeyID1=FS.FETCHID
      INNER JOIN StorageList SL ON FL.StorageID=SL.StorageID
      INNER JOIN AC_WorkGroup AU ON AU.FID=SysLog.Operator
      WHERE SL.Barcode = :barcode
      ORDER BY OPERATINGDATE DESC
    </Content>

    <Content Key="Query_GetFlowPackageDevicesInfoByBarCode" DataBaseType="SqlServer">
      SELECT
      l.LOGID
      ,d.DEVICEID
      ,d.DEVICENAME
      ,l.BEGINDATE
      ,l.ENDDATE
      ,SystemTypeParameter.TypeName as ISOK
      ,l.USETIMES
      ,l.TODAYUSETIMES
      ,l.AFTERMAINTAINUSETIMES
      ,luser.FNames as DEVICESUSELOGUSERNAME
      ,cuser.FNames as DEVICESUSELOGCHECKNAME
      ,r.RULENAME AS SRULENAME
      ,case ISNULL(l.MonitorDataID,'') when '' then '无记录' else '查看监控记录' end as MONITORLOG
      ,l.MonitorDataID
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join FlowSterilizationList fsl on fsl.PackageID = pl.PackageID
      inner join DevicesUseLog l on fsl.SterilizationLogID = l.LogID
      inner join Devices d on l.DeviceID = d.DeviceID
      left join DeviceProcessRule r on l.DeviceProcessRuleID = r.RuleID
      left join SystemTypeParameter on l.ISOK=SystemTypeParameter.TypeValue and SystemTypeParameter.TypeKey='IsOK'
      left join AC_WorkGroup luser ON l.USERID = luser.FID
      --left join AC_User cuser on l.CheckID = cuser.ID
      left join AC_WorkGroup cuser on l.CheckID = cuser.FID
      where sl.Barcode =@barcode
    </Content>
    <Content Key="Query_GetFlowPackageDevicesInfoByBarCode" DataBaseType="Oracle">
      SELECT
      l.LOGID
      ,d.DEVICEID
      ,d.DEVICENAME
      ,l.BEGINDATE
      ,l.ENDDATE
      ,SystemTypeParameter.TypeName as ISOK
      ,l.USETIMES
      ,l.TODAYUSETIMES
      ,l.AFTERMAINTAINUSETIMES
      ,luser.FNames as DEVICESUSELOGUSERNAME
      ,cuser.FNames as DEVICESUSELOGCHECKNAME
      ,r.RULENAME AS SRULENAME
      ,case nvl(l.MonitorDataID,-1) when -1 then '无记录' else '查看监控记录' end as MONITORLOG
      ,l.MonitorDataID
      from FlowPackageList pl inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join FlowSterilizationList fsl on fsl.PackageID = pl.PackageID
      inner join DevicesUseLog l on fsl.SterilizationLogID = l.LogID
      inner join Devices d on l.DeviceID = d.DeviceID
      left join DeviceProcessRule r on l.DeviceProcessRuleID = r.RuleID
      left join SystemTypeParameter on l.ISOK=SystemTypeParameter.TypeValue and SystemTypeParameter.TypeKey='IsOK'
      left join AC_WorkGroup luser ON l.USERID = luser.FID
      --left join AC_User cuser on l.CheckID = cuser.ID
      left join AC_WorkGroup cuser on l.CheckID = cuser.FID
      where sl.Barcode =:barcode
    </Content>

    <Content Key="Query_GetFlowPackageProvideInfoByBarCode" DataBaseType="SqlServer">
      select * from view_PakageProvideInfo where StorageBarCode =@barcode
    </Content>
    <Content Key="Query_GetFlowPackageProvideInfoByBarCode" DataBaseType="Oracle">
      select * from view_PakageProvideInfo where StorageBarCode =:barcode
    </Content>

    <Content Key="Query_GetFlowPackageRecycleInfoByBarCode" DataBaseType="SqlServer">
      select * from view_PakageRecycleInfo where StorageBarCode  =@barcode
    </Content>
    <Content Key="Query_GetFlowPackageRecycleInfoByBarCode" DataBaseType="Oracle">
      select * from view_PakageRecycleInfo where StorageBarCode  =:barcode
    </Content>

    <Content Key="DsGetFlowPackageReportByTimeID" DataBaseType="SqlServer">
      SELECT D.FNames NAME,C.CARGOTYPENAME,B.QUANTITY,B.BARCODE,B.MAEDATE,B.EXPDATE
      FROM FLOWPACKAGELIST A
      INNER JOIN STORAGELIST B
      ON A.STORAGEID=B.STORAGEID
      INNER JOIN CARGOTYPE C
      ON B.CARGOTYPEID=C.CARGOTYPEID
      inner join FlowPackage
      on
      FlowPackage.FPackageID =A.FPackageID
      INNER JOIN AC_WorkGroup D
      ON FlowPackage.OPID=D.FID
      WHERE 1=1
    </Content>
    <Content Key="DsGetFlowPackageReportByTimeID" DataBaseType="Oracle">
      SELECT D.FNames NAME,C.CARGOTYPENAME,B.QUANTITY,B.BARCODE,B.MAEDATE,B.EXPDATE
      FROM FLOWPACKAGELIST A
      INNER JOIN STORAGELIST B
      ON A.STORAGEID=B.STORAGEID
      INNER JOIN CARGOTYPE C
      ON B.CARGOTYPEID=C.CARGOTYPEID
      inner join FlowPackage
      on
      FlowPackage.FPackageID =A.FPackageID
      INNER JOIN AC_WorkGroup D
      ON FlowPackage.OPID=D.FID
      WHERE 1=1
    </Content>

    <Content Key="DsGetFlowPackageReportByTimeIDFlowOrgID" DataBaseType="SqlServer">
      SELECT D.FNames NAME,C.CARGOTYPENAME,B.QUANTITY,B.BARCODE,B.MAEDATE,B.EXPDATE
      FROM FLOWPACKAGELIST A
      INNER JOIN STORAGELIST B
      ON A.STORAGEID=B.STORAGEID
      INNER JOIN CARGOTYPE C
      ON B.CARGOTYPEID=C.CARGOTYPEID
      inner join FlowPackage
      on
      FlowPackage.FPackageID =A.FPackageID
      INNER JOIN AC_WorkGroup D
      ON FlowPackage.OPID=D.FID
      WHERE 1=1
    </Content>
    <Content Key="DsGetFlowPackageReportByTimeIDFlowOrgID" DataBaseType="Oracle">
      SELECT D.FNames NAME,C.CARGOTYPENAME,B.QUANTITY,B.BARCODE,B.MAEDATE,B.EXPDATE
      FROM FLOWPACKAGELIST A
      INNER JOIN STORAGELIST B
      ON A.STORAGEID=B.STORAGEID
      INNER JOIN CARGOTYPE C
      ON B.CARGOTYPEID=C.CARGOTYPEID
      inner join FlowPackage
      on
      FlowPackage.FPackageID =A.FPackageID
      INNER JOIN AC_WorkGroup D
      ON FlowPackage.OPID=D.FID
      WHERE 1=1
    </Content>

    <Content Key="Query_DsGetProvideInfoByBarcode" DataBaseType="SqlServer">
      SELECT FL.PACKAGEID,P.PROVIDEID,O.CODE AS ORGCODE,SL.STORAGEID,FL.LENDFLAG,PL.STATUS,P.PROVIDEDATE,sl.status as STORAGESTATUS,FL.BADFLAG,FL.VALIDDATE,SL.EXPDATE,FL.CARGOTYPEID,C.CARGOTYPENAME
      FROM FLOWPACKAGELIST FL    INNER JOIN STORAGELIST SL    ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN FLOWPROVIDELIST PL   ON FL.PACKAGEID = PL.PACKAGEID
      INNER JOIN FLOWPROVIDE P  ON P.PROVIDEID = PL.PROVIDEID
      INNER JOIN CARGOTYPE C ON FL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN AC_ORG O   ON P.ORGID = O.ID
      WHERE SL.BARCODE =@barcode  --AND PL.STATUS = 0
    </Content>
    <Content Key="Query_DsGetProvideInfoByBarcode" DataBaseType="Oracle">
      SELECT FL.PACKAGEID,P.PROVIDEID,O.CODE AS ORGCODE,SL.STORAGEID,FL.LENDFLAG,PL.STATUS,P.PROVIDEDATE,sl.status as STORAGESTATUS,FL.BADFLAG,FL.VALIDDATE,SL.EXPDATE,FL.CARGOTYPEID,C.CARGOTYPENAME
      FROM FLOWPACKAGELIST FL    INNER JOIN STORAGELIST SL    ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN FLOWPROVIDELIST PL   ON FL.PACKAGEID = PL.PACKAGEID
      INNER JOIN FLOWPROVIDE P  ON P.PROVIDEID = PL.PROVIDEID
      INNER JOIN CARGOTYPE C ON FL.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN AC_ORG O   ON P.ORGID = O.ID
      WHERE SL.BARCODE =:barcode
    </Content>

    <Content Key="DtGetSynDataFlowPackageList" DataBaseType="SqlServer">
      <![CDATA[
      SELECT   FL.PACKAGEID,FL.CARGOTYPEID, SL.BARCODE,SL.EXPDATE,SL.STATUS,FL.VALIDDATE,FL.BADFLAG,FL.CHECKID,FL.LENDFLAG,FL.USESTATUS,FL.PACKAGEOPENDATE,FL.BADFLAGREASON
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID     
      where sl.status <> 20 and SL.Status < 100
      and EXPDate>GETDATE()-7
      order by sl.barcode asc
      ]]>
    </Content>
    <Content Key="DtGetSynDataFlowPackageList" DataBaseType="Oracle">
      <![CDATA[
      SELECT FL.PACKAGEID,FL.CARGOTYPEID, SL.BARCODE,SL.EXPDATE,SL.STATUS,FL.VALIDDATE,FL.BADFLAG,FL.CHECKID,FL.LENDFLAG,FL.USESTATUS,FL.PACKAGEOPENDATE,FL.BADFLAGREASON
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID 
      where sl.status <> 20 and SL.Status < 100
      and EXPDate>sysdate-7 
      order by sl.barcode asc
      ]]>
    </Content>
    <Content Key="DtGetSynDataFlowPackageListCount" DataBaseType="SqlServer">
      <![CDATA[
      SELECT count(*) CNT
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID     
      where sl.status <> 20 and SL.Status < 100
      and EXPDate>GETDATE()-7 
      ]]>
    </Content>
    <Content Key="DtGetSynDataFlowPackageListCount" DataBaseType="Oracle">
      <![CDATA[
      SELECT count(*) CNT
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID 
      where sl.status <> 20 and SL.Status < 100
      and EXPDate>sysdate-7      
      ]]>
    </Content>
    <Content Key="DtGetSynDataFlowPackageListOEM" DataBaseType="SqlServer">
      <![CDATA[
      SELECT FL.PACKAGEID,FL.CARGOTYPEID, SL.BARCODE,FL.OWNORGID
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID    
                                INNER JOIN CARGOTYPE C ON FL.CARGOTYPEID = C.CARGOTYPEID
      where C.ISOEM = 1 AND SL.Status IN (40,50)
      ]]>
    </Content>
    <Content Key="DtGetSynDataFlowPackageListOEM" DataBaseType="Oracle">
      <![CDATA[
       SELECT FL.PACKAGEID,FL.CARGOTYPEID, SL.BARCODE,FL.OWNORGID
      FROM FLOWPACKAGELIST FL   INNER JOIN STORAGELIST SL   ON FL.STORAGEID = SL.STORAGEID    
                                INNER JOIN CARGOTYPE C ON FL.CARGOTYPEID = C.CARGOTYPEID
      where C.ISOEM = 1 AND SL.Status IN (40,50)
      ]]>
    </Content>

    <Content Key="GetPackageListUsedByTypeId" DataBaseType="SqlServer">
      SELECT SL.BARCODE
      FROM FLOWPACKAGELIST FL    INNER JOIN STORAGELIST SL    ON FL.STORAGEID = SL.STORAGEID
      WHERE SL.WAREHOUSEID =@warehouseid  AND SL.STATUS = 70 AND SL.CARGOTYPEID =@cargotypeid
    </Content>
    <Content Key="GetPackageListUsedByTypeId" DataBaseType="Oracle">
      SELECT SL.BARCODE
      FROM FLOWPACKAGELIST FL    INNER JOIN STORAGELIST SL    ON FL.STORAGEID = SL.STORAGEID
      WHERE SL.WAREHOUSEID =:warehouseid  AND SL.STATUS = 70 AND SL.CARGOTYPEID =:cargotypeid
    </Content>


    <Content Key="GetPackageListIsNormalByTypeId" DataBaseType="SqlServer">
      SELECT TOP {0} SL.BARCODE
      FROM FLOWPACKAGELIST FL    INNER JOIN STORAGELIST SL    ON FL.STORAGEID = SL.STORAGEID
      WHERE SL.WAREHOUSEID =@warehouseid  AND SL.STATUS = 60 AND SL.CARGOTYPEID =@cargotypeid
    </Content>
    <Content Key="GetPackageListIsNormalByTypeId" DataBaseType="Oracle">
      <![CDATA[
      SELECT SL.BARCODE
      FROM FLOWPACKAGELIST FL    INNER JOIN STORAGELIST SL    ON FL.STORAGEID = SL.STORAGEID
      WHERE rownum<= {0} AND  SL.WAREHOUSEID =:warehouseid  AND SL.STATUS = 60 AND SL.CARGOTYPEID =:cargotypeid
      ]]>
    </Content>


    <Content Key="Query_GetTestAll" DataBaseType="SqlServer">
      SELECT * from test
    </Content>
    <Content Key="Query_GetTestAll" DataBaseType="Oracle">
      SELECT * from test
    </Content>

    <Content Key="Query_DeleteLostBarcodeByBarcodeA" DataBaseType="SqlServer">
      SELECT  FL.PACKAGEID,SL.STORAGEID,FL.FPackageID
      FROM FLOWPACKAGELIST FL    INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE SL.BARCODE =@barcode
    </Content>
    <Content Key="Query_DeleteLostBarcodeByBarcodeA" DataBaseType="Oracle">
      SELECT  FL.PACKAGEID,SL.STORAGEID,FL.FPackageID
      FROM FLOWPACKAGELIST FL    INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE SL.BARCODE =:barcode
    </Content>

    <Content Key="Query_DeleteLostBarcodeByBarcodeD" DataBaseType="SqlServer">
      select   quantity from FlowPackageLostBarcode where FPackageID =@FPackageID
    </Content>
    <Content Key="Query_DeleteLostBarcodeByBarcodeD" DataBaseType="Oracle">
      select   quantity from FlowPackageLostBarcode where FPackageID =:FPackageID
    </Content>

    <Content Key="Query_DoNormalPackageSterilize" DataBaseType="SqlServer">
      insert into FlowSterilizationList
      (PackageID,SterilizationLogID)
      select top {0} FL.packageid,@logid
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN FlowSterilizationList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=40 AND FS.SterilizationLogID IS NULL  and C.IsNormal=1 and C.CARGOTYPEID = @CARGOTYPEID  and FL.FlowOrgID = @flowOrgID
    </Content>
    <Content Key="Query_DoNormalPackageSterilize" DataBaseType="Oracle">
      <![CDATA[
      insert into FlowSterilizationList
      (PackageID,SterilizationLogID)
      select  FL.packageid,:logid
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN FlowSterilizationList FS ON FL.PackageID = FS.PackageID
      where rownum<= {0} and  SL.STATUS=40 AND FS.SterilizationLogID IS NULL  and C.IsNormal=1 and C.CARGOTYPEID = :CARGOTYPEID  and FL.FlowOrgID = :flowOrgID
      ]]>
    </Content>

    <Content Key="Query_DoNormalPackageProvide" DataBaseType="SqlServer">
      insert into FlowProvideList
      (PackageID,ProvideID,Status,CargoTypeID,MinUnit,SumQty,UnitQty)
      select top {0} FL.packageid,@provideid,1,@CARGOTYPEID,0,0,0
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      where SL.STATUS=50  and C.IsNormal=1 and C.CARGOTYPEID = @CARGOTYPEID  and FL.FlowOrgID = @flowOrgID
      --order by SL.barcode asc
      order by SL.SterilizeDate asc

      update FlowPackageList
      set LendFlag = 1
      where exists
      (
      select 1 from (
      select top {1} Fl.packageid
      FROM FLOWPACKAGELIST  FL
      inner join FlowProvideList fpl on fpl.packageid=fl.packageid
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      where    SL.STATUS=50 and C.CARGOTYPEID = @CARGOTYPEID  and FL.FlowOrgID = @flowOrgID and FL.lendflag = 0 and fpl.provideid=@provideid)
      cc where cc.packageid=FlowPackageList.packageid
      )
    </Content>
    <Content Key="Query_DoNormalPackageFetchIn" DataBaseType="SqlServer">
      insert into FlowfetchList
      (PackageID,FetchID)
      select top {0} FL.packageid,@fetchid
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      left join FlowProvide   FP on FS.ProvideID=FP.ProvideID
      where SL.STATUS=60  and C.IsNormal=1  and sl.LocationID is null  and C.CARGOTYPEID = @CARGOTYPEID  and FP.OrgID = @OrgID order by SL.barcode asc
    </Content>
    <Content Key="Query_DoNormalPackageFetchProvide" DataBaseType="SqlServer">
      insert into FlowfetchList
      (PackageID,FetchID)
      select top {0} FL.packageid,@fetchid
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      where SL.STATUS=60  and C.IsNormal=1  and sl.LocationID=@locationid  and C.CARGOTYPEID = @CARGOTYPEID order by SL.barcode asc
    </Content>
    <Content Key="Query_DoNormalPackageFetchTemporary" DataBaseType="SqlServer">
      <![CDATA[
		insert into FlowfetchList
		(PackageID,FetchID)
		select top {0} FL.packageid,@fetchid
		FROM FLOWPACKAGELIST  FL
		INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
		INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
		where SL.STATUS=60  and C.IsNormal=1  and SL.locationid<>@locationid  and C.CARGOTYPEID = @CARGOTYPEID 
		and Fl.Packageid in (select distinct ffl.packageid from flowfetchlist ffl inner join flowfetch ff
on ffl.fetchid=ff.fetchid
inner join storagelist SL on sl.storageid=ffl.packageid
inner join cargotype CT on sl.cargotypeid=CT.cargotypeid
where ct.isnormal=1 and ff.fetchtype in (0,5))
		order by SL.barcode desc
	]]>
    </Content>
    <Content Key="Query_DoNormalPackageFetchProvide" DataBaseType="Oracle">
      insert into FlowfetchList
      (PackageID,FetchID)
      select top {0} FL.packageid,@fetchid
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      where SL.STATUS=60  and C.IsNormal=1  and sl.LocationID=:locationid  and C.CARGOTYPEID = @CARGOTYPEID order by SL.barcode asc
    </Content>
    <Content Key="Query_DoNormalPackageFetchIn" DataBaseType="Oracle">
      <![CDATA[
		  insert into FlowfetchList
		  (PackageID,FetchID)
		  select top {0} FL.packageid,@fetchid
		  FROM FLOWPACKAGELIST  FL
		  INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
		  INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
		  LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
		  left join FlowProvide   FP on FS.ProvideID=FP.ProvideID
		  where SL.STATUS=60  and C.IsNormal=1 and sl.LocationID is null  and C.CARGOTYPEID = :CARGOTYPEID  and FP.OrgID = :OrgID
		  and rownum<= {0}
		   ]]>
    </Content>
    <Content Key="Query_DoNormalPackageProvide" DataBaseType="Oracle">
      <![CDATA[
      begin
      insert into FlowProvideList
      (PackageID,ProvideID,Status,CargoTypeID,MinUnit,SumQty,UnitQty)
      select FL.packageid,:provideid,1,:CARGOTYPEID,0,0,0
      FROM FLOWPACKAGELIST  FL 
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      where rownum<= {0} and SL.STATUS=50  and C.IsNormal=1 and C.CARGOTYPEID = :CARGOTYPEID  and FL.FlowOrgID = :flowOrgID order by SL.barcode asc;
      
      update FlowPackageList
      set LendFlag = 1
      where packageid in 
      (
      select Fl.packageid
      FROM FLOWPACKAGELIST  FL
	  inner join FlowProvideList fpl on fpl.packageid=fl.packageid
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      where  rownum<= {1} and fpl.Provideid=:provideid and  SL.STATUS=50 and C.CARGOTYPEID = :CARGOTYPEID  and FL.FlowOrgID = :flowOrgID and FL.lendflag = 0 );
      
      end;
      ]]>
    </Content>

    <Content Key="GetPackageNoSterilizeBarcodeByTypeOrgID" DataBaseType="SqlServer">
      select SL.BARCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowSterilizationList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=40 AND FS.SterilizationLogID IS NULL  and C.IsNormal=1 and C.CARGOTYPEID = @cargotypeid  and FL.FlowOrgID = @flowOrgID
    </Content>
    <Content Key="GetPackageNoSterilizeBarcodeByTypeOrgID" DataBaseType="Oracle">
      select SL.BARCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowSterilizationList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=40 AND FS.SterilizationLogID IS NULL  and C.IsNormal=1 and C.CARGOTYPEID = :cargotypeid  and FL.FlowOrgID = :flowOrgID
    </Content>

    <Content Key="GetPackageNoSterilizeByOrgID" DataBaseType="SqlServer">
      select C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,COUNT(1) as SUMQUY, null as QUANTITY,C.PINYIN AS PYCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowSterilizationList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=40  AND FS.SterilizationLogID IS NULL and C.IsNormal=1 and FL.FlowOrgID = @orgid
      group by C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,C.PINYIN
    </Content>
    <Content Key="GetPackageNoSterilizeByOrgID" DataBaseType="Oracle">
      select C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,COUNT(1) as SUMQUY, null as QUANTITY,C.PINYIN AS PYCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowSterilizationList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=40  AND FS.SterilizationLogID IS NULL and C.IsNormal=1 and FL.FlowOrgID = :orgid
      group by C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,C.PINYIN
    </Content>

    <Content Key="GetSterilizeBarcodeByTypeOrgID" DataBaseType="SqlServer">
      select count(1)
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      where SL.STATUS=50 AND Fl.LastProvideID IS NULL  and C.IsNormal=1 and C.CARGOTYPEID = @cargotypeid  and FL.FlowOrgID = @flowOrgID
    </Content>
    <Content Key="GetSterilizeBarcodeByTypeOrgID" DataBaseType="Oracle">
      select count(1)
      FROM FLOWPACKAGELIST  FL
      inner join FLOWPACKAGE f  on fl.FPackageID = f.FPackageID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=50 AND FS.ProvideID IS NULL  and C.IsNormal=1 and C.CARGOTYPEID = :cargotypeid  and FL.FlowOrgID = :flowOrgID
    </Content>
    <Content Key="GetNotInLocationBarcodeByTypeOrgID" DataBaseType="SqlServer">
      select count(1)
      FROM FLOWPACKAGELIST  FL
      inner join FLOWPACKAGE f  on fl.FPackageID = f.FPackageID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      left join FlowProvide   FP on FS.ProvideID=FP.ProvideID
      where SL.STATUS=60  and sl.LocationID is null and FP.OrgID=@orgid and C.IsNormal=1 and C.CARGOTYPEID = @cargotypeid
    </Content>
    <Content Key="GetNotInLocationBarcodeByTypeOrgID" DataBaseType="Oracle">
      select count(1)
      FROM FLOWPACKAGELIST  FL
      inner join FLOWPACKAGE f  on fl.FPackageID = f.FPackageID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      left join FlowProvide   FP on FS.ProvideID=FP.ProvideID
      where SL.STATUS=60  and sl.LocationID is null and FP.OrgID=:orgid and C.IsNormal=1 and C.CARGOTYPEID = :cargotypeid
    </Content>
    <Content Key="GetSterilizeByOrgID" DataBaseType="SqlServer">
      select C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,COUNT(1) as SUMQUY,null as QUANTITY,null as LENDQTY,C.PINYIN AS PYCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=50  AND FS.ProvideID IS NULL and C.IsNormal=1 and FL.FlowOrgID = @orgid
      group by C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,C.PINYIN
    </Content>
    <Content Key="GetSterilizeByOrgID" DataBaseType="Oracle">
      select C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,COUNT(1) as SUMQUY,null as QUANTITY,null as LENDQTY,C.PINYIN AS PYCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=50  AND FS.ProvideID IS NULL and C.IsNormal=1 and FL.FlowOrgID = :orgid
      group by C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,C.PINYIN
    </Content>

    <Content Key="GetProvideByOrgID" DataBaseType="SqlServer">
      select C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,COUNT(1) as SUMQUY,null as QUANTITY,null as LENDQTY,C.PINYIN AS PYCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      left join FlowProvide   FP on FS.ProvideID=FP.ProvideID
      where SL.STATUS=60  AND FS.ProvideID IS not NULL and C.IsNormal=1
      and sl.LocationID is null  and FP.OrgID=@orgid
      group by C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,C.PINYIN
    </Content>
    <Content Key="GetProvideByOrgID" DataBaseType="Oracle">
      select C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,COUNT(1) as SUMQUY,null as QUANTITY,null as LENDQTY,C.PINYIN AS PYCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      left join FlowProvide   FP on FS.ProvideID=FP.ProvideID
      where SL.STATUS=60  AND FS.ProvideID IS not NULL and C.IsNormal=1
      and sl.LocationID is null  and FP.OrgID=:orgid
      group by C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,C.PINYIN
    </Content>

    <Content Key="GetSterilizeByOrgIDCargoTypeID" DataBaseType="SqlServer">
      select COUNT(1) as SUMQTY
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=50  AND FS.ProvideID IS NULL and C.IsNormal=1 and FL.FlowOrgID = @orgid AND FL.CargoTypeID = @cargotypeid
    </Content>
    <Content Key="GetSterilizeByOrgIDCargoTypeID" DataBaseType="Oracle">
      select COUNT(1) as SUMQTY
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN FlowProvideList FS ON FL.PackageID = FS.PackageID
      where SL.STATUS=50  AND FS.ProvideID IS NULL and C.IsNormal=1 and FL.FlowOrgID = :orgid AND FL.CargoTypeID = :cargotypeid
    </Content>
    <Content Key="GetInLocationIsNormalPackageByLocationID" DataBaseType="SqlServer">
      select C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,COUNT(1) as SUMQUY,null as QUANTITY,null as LENDQTY,C.PINYIN AS PYCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      where SL.STATUS=60   and C.IsNormal=1
      and sl.LocationID=@locationid
      group by C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,dbo.fun_getpy(CARGOTYPENAME),C.PINYIN
    </Content>
    <Content Key="GetInLocationIsNormalPackageByLocationID" DataBaseType="Oracle">
      select C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,COUNT(1) as SUMQUY,null as QUANTITY,null as LENDQTY,C.PINYIN AS PYCODE
      FROM FLOWPACKAGELIST  FL
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C ON SL.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CARGOTYPEKIND CK  ON C.CARGOTYPEKIND = CK.ID
      where SL.STATUS=60   and C.IsNormal=1
      and sl.LocationID=:locationid
      group by C.CARGOTYPEID,C.CARGOTYPENAME,CK.KINDNAME,fun_getpy(CARGOTYPENAME),C.PINYIN
    </Content>
    <Content Key="GetRelatedPackageData" DataBaseType="SqlServer">
      SELECT C.CARGOTYPEID,C.CARGOTYPENAME,SL.BARCODE,SL.MAEDATE
      from FlowPackageList pl with (nolock)
      inner join StorageList sl with (nolock) on pl.StorageID = sl.StorageID
      inner join CargoType c with (nolock) on sl.CargoTypeID = c.CargoTypeID
      where pl.ContainerID =
      (select ContainerID from FlowPackageList plc with (nolock)
      inner join StorageList slc with (nolock) on plc.StorageID = slc.StorageID and slc.Barcode = @Barcode
      ) {0}
    </Content>
    <Content Key="GetRelatedPackageData" DataBaseType="Oracle">
      SELECT C.CARGOTYPEID,C.CARGOTYPENAME,SL.BARCODE,SL.MAEDATE
      from FlowPackageList pl
      inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join CargoType c on sl.CargoTypeID = c.CargoTypeID
      where pl.ContainerID =
      (select ContainerID from FlowPackageList plc
      inner join StorageList slc on plc.StorageID = slc.StorageID and slc.Barcode = :Barcode
      ) {0}
    </Content>

    <Content Key="GetPackAgeTraceByKindName" DataBaseType="SqlServer">
      select fu.OPID,plist.PatientName, plist.PatientID,pl.UserID,og.Name orgName,C.CARGOTYPEID,C.CARGOTYPENAME,ck.KindName,sl.BARCODE,SL.STERILIZEDATE
      from FlowPackageList pl
      inner join StorageList sl  on pl.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID
      left join AC_OrgUser ou on pl.UserID=ou.UserID
      left join AC_Org og on ou.OrgID=og.ID
      left join PatientList plist on pl.PatientID=plist.PatientID
      left join FlowUseList ful on pl.PackageID=ful.StorageID
      left join FlowUse fu on ful.UseID=fu.UseID
      where 1=1
    </Content>
    <Content Key="GetPackAgeTraceByKindName" DataBaseType="Oracle">
      select fu.OPID,plist.PatientName, plist.PatientID,pl.UserID,og.Name orgName,C.CARGOTYPEID,C.CARGOTYPENAME,ck.KindName,sl.BARCODE,SL.STERILIZEDATE
      from FlowPackageList pl
      inner join StorageList sl  on pl.StorageID = sl.StorageID
      inner join CargoType c  on sl.CargoTypeID = c.CargoTypeID
      inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID
      left join AC_OrgUser ou on pl.UserID=ou.UserID
      left join AC_Org og on ou.OrgID=og.ID
      left join PatientList plist on pl.PatientID=plist.PatientID
      left join FlowUseList ful on pl.PackageID=ful.StorageID
      left join FlowUse fu on ful.UseID=fu.UseID
      where 1=1
    </Content>


    <Content Key="GetFlowPreOrderDetails" DataBaseType="SqlServer">
      --DECLARE @OrgID Varchar(MAX)
      --DECLARE @PreOrderID Varchar(MAX)
      --DECLARE @IsNew bit

      --set @PreOrderID='00000000-0000-0000-0000-000000000000'
      --SET @OrgID='921B3684-EB68-49D3-85C0-5AC60BF5A8CB'
      --SET @IsNew = 1


      --新建
      IF @IsNew =1
      BEGIN
      SELECT 0 AS PreOrderQty
      ,NULL PreOrderID
      ,NULL PreOrderDetailID
      , CargoType.CargoTypeID
      , CargoType.CargoTypeKind
      , CargoType.CargoTopType
      , CargoType.CargoTopTypeText
      , CargoType.CargoTypeText
      , CargoType.CargoTypeKindText
      FROM SafeStock
      LEFT JOIN view_CargoType AS CargoType
      ON SafeStock.OrgID = CargoType.CargoTypeID
      WHERE SafeStock.IsDefaultShow=1 AND SafeStock.OrgID=@OrgID and CargoType.isdisabled=0
      END
      ELSE
      BEGIN
      SELECT ISNULL(PreOrderQty,0) AS PreOrderQty
      , Details.PreOrderID
      , Details.PreOrderDetailID
      , CargoType.CargoTypeID
      , CargoType.CargoTypeKind
      , CargoType.CargoTopType
      , CargoType.CargoTopTypeText
      , CargoType.CargoTypeText
      , CargoType.CargoTypeKindText
      FROM FLOWPREORDERDETAIL AS Details
      LEFT JOIN view_CargoType AS CargoType
      ON Details.CargoTypeID = CargoType.CargoTypeID
      WHERE Details.PreOrderID = @PreOrderID
      END
    </Content>
    <Content Key="GetFlowPreOrderDetails" DataBaseType="Oracle">
      --DECLARE @OrgID Varchar(MAX)
      --DECLARE @PreOrderID Varchar(MAX)
      --DECLARE @IsNew bit

      --set @PreOrderID='00000000-0000-0000-0000-000000000000'
      --SET @OrgID='921B3684-EB68-49D3-85C0-5AC60BF5A8CB'
      --SET @IsNew = 1


      --新建
      IF :IsNew =1 then
      SELECT 0 AS PreOrderQty
      ,NULL PreOrderID
      ,NULL PreOrderDetailID
      , CargoType.CargoTypeID
      , CargoType.CargoTypeKind
      , CargoType.CargoTopType
      , CargoType.CargoTopTypeText
      , CargoType.CargoTypeText
      , CargoType.CargoTypeKindText
      FROM SafeStock
      LEFT JOIN view_CargoType  CargoType
      ON SafeStock.CargoTypeID = CargoType.CargoTypeID
      WHERE SafeStock.IsDefaultShow=1 AND SafeStock.OrgID=:OrgID and CargoType.isdisabled=0;

      ELSE
      SELECT nvl(PreOrderQty,0) AS PreOrderQty
      , Details.PreOrderID
      , Details.PreOrderDetailID
      , CargoType.CargoTypeID
      , CargoType.CargoTypeKind
      , CargoType.CargoTopType
      , CargoType.CargoTopTypeText
      , CargoType.CargoTypeText
      , CargoType.CargoTypeKindText
      FROM FLOWPREORDERDETAIL  Details
      LEFT JOIN view_CargoType  CargoType
      ON Details.CargoTypeID = CargoType.CargoTypeID
      WHERE Details.PreOrderID = :PreOrderID;
      END if;
    </Content>

    <Content Key="Query_StorageInList" DataBaseType="SqlServer">
      SELECT
      ISNULL (C.CARGOTYPENAME,'') AS CARGOTYPETEXT
      , A.PREORDERDETAILID
      , A.PREORDERID
      , A.CARGOTOPTYPE
      , S.TYPENAME AS CARGOTOPTYPETEXT
      , T.KINDNAME  AS CARGOTYPEKINDTEXT
      , A.CARGOTYPEID
      , A.PREORDERQTY
      FROM FLOWPREORDERDETAIL A WITH (NOLOCK)
      INNER JOIN CARGOTYPE  C  WITH (NOLOCK) ON A.CARGOTYPEID=C.CARGOTYPEID
      INNER JOIN CARGOTYPEKIND T WITH (NOLOCK) ON C.CARGOTYPEKIND=T.ID
      INNER JOIN SYSTEMTYPEPARAMETER S WITH (NOLOCK) ON A.CARGOTOPTYPE = S.TYPEVALUE AND S.TYPEKEY = 'CargoTopType'
      WHERE 1=1
    </Content>
    <Content Key="Query_StorageInList" DataBaseType="Oracle">
      SELECT
      nvl (C.CARGOTYPENAME,'') AS CARGOTYPETEXT
      , A.PREORDERDETAILID
      , A.PREORDERID
      , A.CARGOTOPTYPE
      , S.TYPENAME AS CARGOTOPTYPETEXT
      , T.KINDNAME  AS CARGOTYPEKINDTEXT
      , A.CARGOTYPEID
      , A.PREORDERQTY
      FROM FLOWPREORDERDETAIL A
      INNER JOIN CARGOTYPE  C   ON A.CARGOTYPEID=C.CARGOTYPEID
      INNER JOIN CARGOTYPEKIND T ON C.CARGOTYPEKIND=T.ID
      INNER JOIN SYSTEMTYPEPARAMETER S  ON A.CARGOTOPTYPE = S.TYPEVALUE AND S.TYPEKEY = 'CargoTopType'
      WHERE 1=1
    </Content>

    <Content Key="GetFlowPreOrderDetailsIsNew" DataBaseType="SqlServer">
      SELECT 0 AS PREORDERQTY
      ,null PREORDERID
      ,null PREORDERDETAILID
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      FROM SafeStock
      LEFT JOIN view_CargoType  CargoType
      ON SafeStock.CargoTypeID = CargoType.CargoTypeID
      WHERE SafeStock.IsDefaultShow=1 AND SafeStock.OrgID=@OrgID and CargoType.isdisabled=0
      --union
      --select 0 AS PREORDERQTY
      --,null PREORDERID
      --,null PREORDERDETAILID
      --, CargoType.CARGOTYPEID
      --, CargoType.CARGOTYPEKIND
      --, CargoType.CARGOTOPTYPE
      --, view_CargoType.CARGOTOPTYPETEXT
      --, view_CargoType.CARGOTYPETEXT
      --, view_CargoType.CARGOTYPEKINDTEXT
      --, view_CargoType.MINUNIT
      --FROM view_CargoType  inner join CargoType on view_CargoType.CargoTypeID = CargoType.CargoTypeID
      --WHERE CargoType.IsForOrgs = 1
    </Content>
    <Content Key="GetFlowPreOrderDetailsIsNew" DataBaseType="Oracle">
      SELECT 0 AS PREORDERQTY
      ,'' PREORDERID
      ,'' PREORDERDETAILID
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      FROM SafeStock
      LEFT JOIN view_CargoType  CargoType
      ON SafeStock.CargoTypeID = CargoType.CargoTypeID
      WHERE SafeStock.IsDefaultShow=1 AND SafeStock.OrgID=:OrgID and CargoType.isdisabled=0
      --union
      --select 0 AS PREORDERQTY
      --,null PREORDERID
      --,null PREORDERDETAILID
      --, CargoType.CARGOTYPEID
      --, CargoType.CARGOTYPEKIND
      --, CargoType.CARGOTOPTYPE
      --, view_CargoType.CARGOTOPTYPETEXT
      --, view_CargoType.CARGOTYPETEXT
      --, view_CargoType.CARGOTYPEKINDTEXT
      --, view_CargoType.MINUNIT
      --FROM view_CargoType  inner join CargoType on view_CargoType.CargoTypeID = CargoType.CargoTypeID
      --WHERE CargoType.IsForOrgs = 1
    </Content>

    <Content Key="GetFlowPreOrderDetailsIsNotNew" DataBaseType="SqlServer">
      SELECT isnull(PreOrderQty,0) AS PREORDERQTY
      ,Details.PREORDERID
      ,Details.PREORDERDETAILID
      ,isnull(ProvidedQty,0) AS PROVIDEDQTY
      ,CASE WHEN (Details.CHECKSTATUS) in (1,4) THEN Details.PREORDERQTY ELSE 0  END AS PREORDERAPPROVEQTY
      ,isnull(PreOrderOriQty,isnull(PreOrderQty,0)) AS PREORDERORIQTY
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      ,CargoType.amount as AMOUNT
      ,Details.CHECKSTATUS
      ,CheckStatus.TypeName CHECKSTATUSNAME
      ,Details.Remark as REMARK
      FROM FLOWPREORDERDETAIL  Details
      LEFT JOIN view_CargoType  CargoType ON Details.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CheckStatus ON(CheckStatus.TypeKey='PreOrderCheck' and Details.CheckStatus=CheckStatus.TypeValue)
      WHERE Details.PreOrderID =@PreOrderID
    </Content>
    <Content Key="GetFlowPreOrderDetailsIsNotNew" DataBaseType="Oracle">
      SELECT nvl(PreOrderQty,0) AS PREORDERQTY
      ,Details.PREORDERID
      ,Details.PREORDERDETAILID
      ,nvl(ProvidedQty,0) AS PROVIDEDQTY
      ,case when (Details.CheckStatus) in (1,4) then Details.PreOrderQty  else 0  end As PreOrderApproveQty
      ,case when nvl(PreOrderOriQty,0)=0 then nvl(preorderqty,0) else PreOrderOriQty end AS PREORDERORIQTY
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      ,CargoType.amount as AMOUNT
      ,Details.CHECKSTATUS
      ,CheckStatus.TypeName CHECKSTATUSNAME
      ,Details.Remark as REMARK
      FROM FLOWPREORDERDETAIL  Details
      LEFT JOIN view_CargoType  CargoType
      ON Details.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CheckStatus ON(CheckStatus.TypeKey='PreOrderCheck' and Details.CheckStatus=CheckStatus.TypeValue)
      WHERE Details.PreOrderID =:PreOrderID
    </Content>

    <Content Key="GetNewPreOrderDetail" DataBaseType="SqlServer">
      SELECT 0 AS PREORDERQTY
      ,null PREORDERID
      ,null PREORDERDETAILID
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      FROM  view_CargoType  CargoType
      WHERE CargoType.CargoTypeID=@CargoTypeID and CargoType.isdisabled=0
    </Content>
    <Content Key="GetNewPreOrderDetail" DataBaseType="Oracle">
      SELECT 0 AS PREORDERQTY
      ,null PREORDERID
      ,null PREORDERDETAILID
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      FROM  view_CargoType  CargoType
      WHERE CargoType.CargoTypeID=:CargoTypeID and CargoType.isdisabled=0
    </Content>
    <Content Key="GetListNewPreOrderDetail" DataBaseType="SqlServer">
      SELECT 0 AS PREORDERQTY
      ,null PREORDERID
      ,null PREORDERDETAILID
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      FROM  view_CargoType  CargoType
      WHERE 1=1 and CargoType.isdisabled=0 {0}
    </Content>
    <Content Key="GetListNewPreOrderDetail" DataBaseType="Oracle">
      SELECT 0 AS PREORDERQTY
      ,null PREORDERID
      ,null PREORDERDETAILID
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      FROM  view_CargoType  CargoType
      WHERE 1=1 and CargoType.isdisabled=0 {0}
    </Content>
    <Content Key="Query_ProvidePrintInfo" DataBaseType="SqlServer">
      SELECT ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),'') AS StrProvideDate,
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,COUNT(1) as Quantity,
      SUM(FlowPackageList.LendFlag) as LendQuantity,
      CargoType.Amount AS UnitPrice,(CargoType.Amount * COUNT(1)) AS GroupPrice,
      Devices.DeviceName,DevicesUseLog.TodayUseTimes,PackageType.PName,
      case PackageType.PName when '清洗消毒包装' then '--' else
      ISNULL(CONVERT(varchar(10),StorageList.SterilizeDate,120),'') end AS StrSterilizeDate,
      case PackageType.PName when '清洗消毒包装' then '--' else
      ISNULL(CONVERT(varchar(10),StorageList.EXPDate,120),'') end AS StrEXPDate,
      AC_WorkGroup.FNames AS OPNAME,'' as Signer,CASE WHEN FlowPackageList.LendFlag = 0 THEN '否' ELSE '是' END LendFlag
      ,FlowProvide.Recipient as RECIPIENT
      from FlowProvide with (nolock)
      inner join FlowProvideList with (nolock) on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList with (nolock) on FlowProvideList.PackageID = FlowPackageList.PackageID
      left join PackageType with (nolock) on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG with (nolock) on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType with (nolock) on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      left join (select t1.PackageID ,t2.* from FlowSterilizationList t1 inner join DevicesUseLog t2 on t2.LogID=t1.SterilizationLogID where t2.LogID=(select top 1 SterilizationLogID from FlowSterilizationList where PackageID=t1.PackageID order by t2.begindate desc )) DevicesUseLog on DevicesUseLog.PackageID=flowpackagelist.PackageID
      left join Devices with (nolock) on DevicesUseLog.DeviceID = Devices.DeviceID
      inner join StorageList with (nolock) on FlowPackageList.StorageID = StorageList.StorageID
      inner join AC_WorkGroup with (nolock) on FlowProvide.OpID = AC_WorkGroup.FID
      where FlowProvide.ProvideID in ({0})
      group by ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),''),
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,Devices.DeviceName,
      DevicesUseLog.TodayUseTimes,PackageType.PName,ISNULL(CONVERT(varchar(10),StorageList.SterilizeDate,120),''),
      ISNULL(CONVERT(varchar(10),StorageList.EXPDate,120),''),AC_WorkGroup.FNames,CargoType.Amount,CASE WHEN FlowPackageList.LendFlag = 0 THEN '否' ELSE '是' END
      ,FlowProvide.Recipient
      order by DevicesUseLog.TodayUseTimes desc,Devices.DeviceName desc
    </Content>
    <Content Key="Query_ProvidePrintInfo" DataBaseType="Oracle">
      <![CDATA[ 
      SELECT  to_char(FlowProvide.ProvideDate,'yyyy-mm-dd')  AS StrProvideDate,
      FlowProvide.BarCode,
      AC_Org.Name,
      CargoType.CargoTypeName,
      COUNT(1) as Quantity,
	    SUM(FlowPackageList.LendFlag) as LendQuantity,
      CargoType.Amount AS UnitPrice,
      (CargoType.Amount * COUNT(1)) AS GroupPrice,
      Devices.DeviceName,
      DevicesUseLog.TodayUseTimes,
      PackageType.PName,
      to_char(StorageList.SterilizeDate,'yyyy-mm-dd')  AS StrSterilizeDate,
      to_char(StorageList.EXPDate,'yyyy-mm-dd')  AS StrEXPDate,
      AC_WorkGroup.FNames AS OPNAME,
      '' as Signer
      ,FlowProvide.Recipient as RECIPIENT
      from FlowProvide
      inner join FlowProvideList
      on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList
      on FlowProvideList.PackageID = FlowPackageList.PackageID
      left join PackageType
      on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG
      on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType
      on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
     left join
       (
        select m2.TodayUseTimes,m2.DeviceID , SterilizationLogID,packageid,  row_number() over(partition by packageid order by m2.begindate desc) as rownu from FlowSterilizationList m1 inner join DevicesUseLog  m2 
 on  m2.LogID=m1.SterilizationLogID  
        ) DevicesUseLog on DevicesUseLog.PackageID=flowpackagelist.PackageID and rownu=1
      left join Devices
      on DevicesUseLog.DeviceID = Devices.DeviceID
      inner join StorageList
      on FlowPackageList.StorageID = StorageList.StorageID
      inner join AC_WorkGroup  on FlowProvide.OpID = AC_WorkGroup.FID
      where FlowProvide.ProvideID in ({0})
      group by  to_char(FlowProvide.ProvideDate,'yyyy-mm-dd'),
      FlowProvide.BarCode,
      AC_Org.Name,
      CargoType.CargoTypeName,
      Devices.DeviceName,
      DevicesUseLog.TodayUseTimes,
      PackageType.PName,
      to_char(StorageList.SterilizeDate,'yyyy-mm-dd'),
      to_char(StorageList.EXPDate,'yyyy-mm-dd'), 
      AC_WorkGroup.FNames,CargoType.Amount
      ,FlowProvide.Recipient
	  order by DevicesUseLog.TodayUseTimes desc,Devices.DeviceName desc
      ]]>
    </Content>
    <Content Key="Query_ProvideSimplePrintInfo" DataBaseType="SqlServer">
      SELECT ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),'') AS StrProvideDate,
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,COUNT(1) as Quantity,
      CargoType.Amount AS UnitPrice,(CargoType.Amount * COUNT(1)) AS GroupPrice,
      SUM(FlowPackageList.LendFlag) as LendQuantity,
      AC_WorkGroup.FNames AS OPNAME
      from FlowProvide with (nolock)
      inner join FlowProvideList with (nolock) on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList with (nolock) on FlowProvideList.PackageID = FlowPackageList.PackageID
      inner join AC_ORG with (nolock) on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType with (nolock) on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      inner join AC_WorkGroup with (nolock) on FlowProvide.OpID = AC_WorkGroup.FID
      where  FlowProvide.ProvideID in ({0})
      group by ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),''),
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,AC_WorkGroup.FNames,CargoType.Amount
    </Content>
    <Content Key="Query_ProvideSimplePrintInfo" DataBaseType="Oracle">
      <![CDATA[  
      SELECT to_char(FlowProvide.ProvideDate,'yyyy-mm-dd') AS StrProvideDate,
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,COUNT(1) as Quantity,
      CargoType.Amount AS UnitPrice,(CargoType.Amount * COUNT(1)) AS GroupPrice,
      SUM(FlowPackageList.LendFlag) as LendQuantity,
      AC_WorkGroup.FNames AS OPNAME
      from FlowProvide with (nolock)
      inner join FlowProvideList with (nolock) on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList with (nolock) on FlowProvideList.PackageID = FlowPackageList.PackageID
      inner join AC_ORG with (nolock) on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType with (nolock) on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      inner join AC_WorkGroup with (nolock) on FlowProvide.OpID = AC_WorkGroup.FID
      where  FlowProvide.ProvideID in ({0})
      group by to_char(FlowProvide.ProvideDate,'yyyy-mm-dd'),
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,AC_WorkGroup.FNames,CargoType.Amount 
      ]]>
    </Content>
    <Content Key="Query_ProvidePrintInfoByIDANDOrgID" DataBaseType="SqlServer">
      SELECT ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),'') AS StrProvideDate,
      AC_Org.Name,CargoType.CargoTypeName,COUNT(1) as Quantity
      ,FlowProvide.Recipient as RECIPIENT
      from FlowProvide with (nolock)
      inner join FlowProvideList with (nolock) on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList with (nolock) on FlowProvideList.PackageID = FlowPackageList.PackageID
      inner join AC_ORG with (nolock) on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType with (nolock) on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      where FlowProvide.ProvideID in ({0}) and FlowProvide.orgid='{1}'
      group by ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),''),
      AC_Org.Name,CargoType.CargoTypeName,FlowProvide.Recipient
    </Content>
    <Content Key="Query_ProvidePrintInfoByIDANDOrgID" DataBaseType="Oracle">
      <![CDATA[ 
      SELECT  to_char(FlowProvide.ProvideDate,'yyyy-mm-dd')  AS StrProvideDate, 
      AC_Org.Name,
      CargoType.CargoTypeName,
      COUNT(1) as Quantity
      ,FlowProvide.Recipient as RECIPIENT
      from FlowProvide
      inner join FlowProvideList
      on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList
      on FlowProvideList.PackageID = FlowPackageList.PackageID 
      inner join AC_ORG
      on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType
      on FlowPackageList.CargoTypeID = CargoType.CargoTypeID  
      where FlowProvide.ProvideID in ({0})  and FlowProvide.orgid='{1}'
      group by  to_char(FlowProvide.ProvideDate,'yyyy-mm-dd'),     
      AC_Org.Name,
      CargoType.CargoTypeName,FlowProvide.Recipient
      ]]>
    </Content>
    <Content Key="Query_FlowProvidePackageByBarcode" DataBaseType="SqlServer">
      SELECT FP.PROVIDEID,U.FUsers CODE, U.FNames NAME, O.ID as ORGID, O.NAME as ORGNAME,U.FID AS OPID,RU.FUsers AS RPCODE,RU.FNames AS RPNAME,RU.FID AS RPID,FP.LOCATIONID,L.LOCATIONNAME
      FROM	FLOWPROVIDE FP WITH (NOLOCK)
      INNER JOIN FLOWPROVIDELIST FPL  WITH (NOLOCK) ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST FL WITH (NOLOCK) ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL WITH (NOLOCK) ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_WorkGroup U WITH (NOLOCK) ON FP.OPID = U.FID
      INNER JOIN AC_ORG O WITH (NOLOCK) ON FP.ORGID = O.ID
      --left JOIN AC_USER RU WITH (NOLOCK) ON FP.RecipientID = RU.ID
      left JOIN AC_WorkGroup RU WITH (NOLOCK) ON FP.RecipientID = RU.FID
      LEFT JOIN LOCATION L WITH (NOLOCK) ON FP.LOCATIONID = L.LOCATIONID
      WHERE SL.BARCODE = @barCode
      ORDER BY PROVIDEDATE DESC
    </Content>
    <Content Key="Query_FlowProvidePackageByBarcode" DataBaseType="Oracle">
      <![CDATA[
      SELECT FP.PROVIDEID,U.FUsers CODE, U.FNames NAME, O.ID as ORGID, O.NAME as ORGNAME,U.FID AS OPID,RU.FUsers AS RPCODE,RU.FNames AS RPNAME,RU.FID AS RPID,FP.LOCATIONID,L.LOCATIONNAME
      FROM	FLOWPROVIDE FP 
      INNER JOIN FLOWPROVIDELIST FPL  ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST FL  ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_WorkGroup U  ON FP.OPID = U.FID
      INNER JOIN AC_ORG O  ON FP.ORGID = O.ID
      --left JOIN AC_USER RU  ON FP.RecipientID = RU.ID
      left JOIN AC_WorkGroup RU  ON FP.RecipientID = RU.FID
      LEFT JOIN LOCATION L  ON FP.LOCATIONID = L.LOCATIONID
      WHERE SL.BARCODE = :barCode ORDER  BY PROVIDEDATE DESC
      ]]>
    </Content>
    <Content Key="Query_FlowProvidePackageByProvideBarcode" DataBaseType="SqlServer">
      SELECT FP.PROVIDEID
      FROM	FLOWPROVIDE FP WITH (NOLOCK)
      INNER JOIN FLOWPROVIDELIST FPL  WITH (NOLOCK) ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST FL WITH (NOLOCK) ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL WITH (NOLOCK) ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_WorkGroup U WITH (NOLOCK) ON FP.OPID = U.FID
      INNER JOIN AC_ORG O WITH (NOLOCK) ON FP.ORGID = O.ID
      --left JOIN AC_USER RU WITH (NOLOCK) ON FP.RecipientID = RU.ID
      left JOIN AC_WorkGroup RU WITH (NOLOCK) ON FP.RecipientID = RU.FID
      LEFT JOIN LOCATION L WITH (NOLOCK) ON FP.LOCATIONID = L.LOCATIONID
      WHERE FP.BARCODE = @barCode
      ORDER BY PROVIDEDATE DESC
    </Content>
    <Content Key="Query_FlowProvidePackageByProvideBarcode" DataBaseType="Oracle">
      <![CDATA[
      SELECT FP.PROVIDEID,U.FUsers CODE, U.FNames NAME, O.ID as ORGID, O.NAME as ORGNAME,U.FID AS OPID,RU.FUsers AS RPCODE,RU.FNames AS RPNAME,RU.FID AS RPID,FP.LOCATIONID,L.LOCATIONNAME
      FROM	FLOWPROVIDE FP 
      INNER JOIN FLOWPROVIDELIST FPL  ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST FL  ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_WorkGroup U  ON FP.OPID = U.FID
      INNER JOIN AC_ORG O  ON FP.ORGID = O.ID
      --left JOIN AC_USER RU  ON FP.RecipientID = RU.ID
      left JOIN AC_WorkGroup RU  ON FP.RecipientID = RU.FID
      LEFT JOIN LOCATION L  ON FP.LOCATIONID = L.LOCATIONID
      WHERE FP.BARCODE = :barCode ORDER  BY PROVIDEDATE DESC
      ]]>
    </Content>
    <Content Key="Query_FlowProvidePackageByProvideID" DataBaseType="SqlServer">
      SELECT FP.PROVIDEID,U.FUsers CODE, U.FNames NAME, O.ID as ORGID, O.NAME as ORGNAME,U.FID AS OPID,RU.FUsers AS RPCODE,RU.FNames AS RPNAME,RU.FID AS RPID,FP.LOCATIONID,L.LOCATIONNAME
      FROM	FLOWPROVIDE FP WITH (NOLOCK)
      INNER JOIN FLOWPROVIDELIST FPL  WITH (NOLOCK) ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST FL WITH (NOLOCK) ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL WITH (NOLOCK) ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_WorkGroup U WITH (NOLOCK) ON FP.OPID = U.FID
      INNER JOIN AC_ORG O WITH (NOLOCK) ON FP.ORGID = O.ID
      left JOIN AC_WorkGroup RU WITH (NOLOCK) ON FP.RecipientID = RU.FID
      LEFT JOIN LOCATION L WITH (NOLOCK) ON FP.LOCATIONID = L.LOCATIONID
      WHERE FP.ProvideID = @ProvideID
      ORDER BY PROVIDEDATE DESC
    </Content>
    <Content Key="Query_FlowProvidePackageByProvideID" DataBaseType="Oracle">
      <![CDATA[
      SELECT FP.PROVIDEID,U.FUsers CODE, U.FNames NAME, O.ID as ORGID, O.NAME as ORGNAME,U.FID AS OPID,RU.FUsers AS RPCODE,RU.FNames AS RPNAME,RU.FID AS RPID,FP.LOCATIONID,L.LOCATIONNAME
      FROM	FLOWPROVIDE FP 
      INNER JOIN FLOWPROVIDELIST FPL  ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST FL  ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN AC_WorkGroup U  ON FP.OPID = U.FID
      INNER JOIN AC_ORG O  ON FP.ORGID = O.ID
      left JOIN AC_WorkGroup RU  ON FP.RecipientID = RU.FID
      LEFT JOIN LOCATION L  ON FP.LOCATIONID = L.LOCATIONID
      WHERE FP.ProvideID = :ProvideID ORDER  BY PROVIDEDATE DESC
      ]]>
    </Content>

    <Content Key="QueryPackagesByID" DataBaseType="SqlServer">
      SELECT c.CARGOTYPENAME,C.CARGOTYPEID,SL.BARCODE,FL.LENDFLAG,FPL.PACKAGEID,SL.EXPDATE,C.ISNORMAL
      FROM FLOWPROVIDELIST FPL  WITH (NOLOCK)
      INNER JOIN FLOWPACKAGELIST FL WITH (NOLOCK) ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL WITH (NOLOCK) ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C WITH (NOLOCK) ON FL.CARGOTYPEID = C.CARGOTYPEID
      WHERE FPL.PROVIDEID = @PROVIDEID
    </Content>
    <Content Key="QueryPackagesByID" DataBaseType="Oracle">
      SELECT c.CARGOTYPENAME,C.CARGOTYPEID,SL.BARCODE,FL.LENDFLAG,FPL.PACKAGEID,SL.EXPDATE,C.ISNORMAL
      FROM FLOWPROVIDELIST FPL
      INNER JOIN FLOWPACKAGELIST FL  ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      INNER JOIN CARGOTYPE C  ON FL.CARGOTYPEID = C.CARGOTYPEID
      WHERE  FPL.PROVIDEID = :PROVIDEID
    </Content>

    <Content Key="QueryProvideInfoByPackage" DataBaseType="SqlServer">
      SELECT TOP 1 FP.PROVIDEID,U.FUsers AS USERID,U.FNames AS USERNAME,O.CODE AS ORGID,O.NAME AS ORGNAME
      FROM	FLOWPROVIDE FP WITH (NOLOCK)
      INNER JOIN FLOWPROVIDELIST FPL  WITH (NOLOCK) ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST FL WITH (NOLOCK) ON FL.PACKAGEID = FPL.PACKAGEID
      INNER JOIN STORAGELIST SL WITH (NOLOCK) ON FL.STORAGEID = SL.STORAGEID
      --INNER JOIN AC_USER U WITH (NOLOCK) ON FP.OPID = U.ID
      INNER JOIN AC_WorkGroup U WITH (NOLOCK) ON FP.OPID = U.FID
      INNER JOIN AC_ORG O WITH (NOLOCK) ON FP.ORGID = O.ID
      WHERE SL.BARCODE = @BARCODE
      ORDER BY PROVIDEDATE DESC
    </Content>
    <Content Key="QueryProvideInfoByPackage" DataBaseType="Oracle">
      <![CDATA[
	  select * from 
	  (
      SELECT  FP.PROVIDEID,U.FUsers AS USERID,U.FNames AS USERNAME,O.CODE AS ORGID,O.NAME AS ORGNAME
      FROM	FLOWPROVIDE FP 
      INNER JOIN FLOWPROVIDELIST FPL  ON FP.PROVIDEID = FPL.PROVIDEID 
      INNER JOIN STORAGELIST SL ON FL.STORAGEID = FPL.STORAGEID
      --INNER JOIN AC_USER U ON FP.OPID = U.ID
      INNER JOIN AC_WorkGroup U  ON FP.OPID = U.FID
      INNER JOIN AC_ORG O ON FP.ORGID = O.ID
      WHERE   SL.BARCODE = :BARCODE
	  order by PROVIDEDATE DESC
      ) where rownum=1
      ]]>
    </Content>

    <Content Key="Query_QueryRecycleProvideReport" DataBaseType="SqlServer">
      SELECT NAME,CARGOTYPENAME,SUM(RECYCLEQUANTIY) AS RECYCLEQUANTIY,SUM(PROVIDEQUANTITY) AS PROVIDEQUANTITY,PARENTORGNAME
      FROM
      (SELECT case isnull(fpi.FPackageName,'') when '' then T.CARGOTYPENAME else fpi.FPackageName end as CARGOTYPENAME
      , O.NAME,SUM(D.QUANTITY) AS RECYCLEQUANTIY,0 AS PROVIDEQUANTITY,P.NAME AS PARENTORGNAME
      FROM FLOWRECYCLE A WITH (NOLOCK) INNER JOIN FLOWRECYCLELIST B WITH (NOLOCK) ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C WITH (NOLOCK) ON B.PACKAGEID=C.PACKAGEID
      left join FlowPackageIn fpi on C.FPackageID=fpi.FPackageID
      LEFT JOIN STORAGELIST D WITH (NOLOCK) ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T WITH (NOLOCK) ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W WITH (NOLOCK) ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN AC_ORG O WITH (NOLOCK) ON W.ORGID = O.ID
      LEFT JOIN AC_ORG P WITH (NOLOCK) ON O.PREVID = P.ID
      WHERE A.RECYCLEDATE BETWEEN @TIME1 AND @TIME2 AND (@ORGID = '00000000-0000-0000-0000-000000000000' OR O.ID = @ORGID)
      GROUP BY T.CARGOTYPENAME,O.NAME,P.NAME,fpi.FPackageName
      UNION
      SELECT case isnull(fpi.FPackageName,'') when '' then C.CargoTypeName else fpi.FPackageName end as CargoTypeName
      ,O.Name,0 AS RECYCLEQUANTIY,COUNT(1) AS PROVIDEQUANTITY,P.NAME AS PARENTORGNAME
      FROM FLOWPROVIDE FP WITH (NOLOCK) INNER JOIN FLOWPROVIDELIST FPL WITH (NOLOCK) ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST PL WITH (NOLOCK) ON PL.PACKAGEID = FPL.PACKAGEID
      left join FlowPackageIn fpi on PL.FPackageID=fpi.FPackageID
      INNER JOIN AC_Org O WITH (NOLOCK) ON FP.OrgID = O.ID
      INNER JOIN CargoType C WITH (NOLOCK) ON PL.CargoTypeID = C.CargoTypeID
      LEFT JOIN AC_ORG P WITH (NOLOCK) ON O.PREVID = P.ID
      WHERE FP.ProvideDate BETWEEN @TIME1 AND @TIME2 AND (@ORGID = '00000000-0000-0000-0000-000000000000' OR O.ID = @ORGID)
      GROUP BY C.CargoTypeName,O.Name,P.NAME,fpi.FPackageName) AS TEMP
      GROUP BY CARGOTYPENAME,NAME,PARENTORGNAME
    </Content>
    <Content Key="Query_QueryRecycleProvideReport" DataBaseType="Oracle">
      SELECT NAME,CARGOTYPENAME,SUM(RECYCLEQUANTIY) AS RECYCLEQUANTIY,SUM(PROVIDEQUANTITY) AS PROVIDEQUANTITY,PARENTORGNAME
      FROM
      (SELECT case when fpi.FPackageName is null then T.CARGOTYPENAME else fpi.FPackageName end as CARGOTYPENAME
      ,O.NAME,SUM(D.QUANTITY) AS RECYCLEQUANTIY,0 AS PROVIDEQUANTITY,P.NAME AS PARENTORGNAME
      FROM FLOWRECYCLE A  INNER JOIN FLOWRECYCLELIST B  ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C  ON B.PACKAGEID=C.PACKAGEID
      left join FlowPackageIn fpi on C.FPackageID=fpi.FPackageID
      LEFT JOIN STORAGELIST D  ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN AC_ORG O  ON W.ORGID = O.ID
      LEFT JOIN AC_ORG P  ON O.PREVID = P.ID
      WHERE A.RECYCLEDATE BETWEEN :TIME1 AND :TIME2 AND (:ORGID = '00000000-0000-0000-0000-000000000000' OR O.ID = :ORGID)
      GROUP BY T.CARGOTYPENAME,O.NAME,P.NAME,fpi.FPackageName
      UNION
      SELECT case when fpi.FPackageName is null then C.CargoTypeName else fpi.FPackageName end as CargoTypeName
      ,O.Name,0 AS RECYCLEQUANTIY,COUNT(1) AS PROVIDEQUANTITY,P.NAME AS PARENTORGNAME
      FROM FLOWPROVIDE FP  INNER JOIN FLOWPROVIDELIST FPL  ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST PL  ON PL.PACKAGEID = FPL.PACKAGEID
      left join FlowPackageIn fpi on PL.FPackageID=fpi.FPackageID
      INNER JOIN AC_Org O  ON FP.OrgID = O.ID
      INNER JOIN CargoType C  ON PL.CargoTypeID = C.CargoTypeID
      LEFT JOIN AC_ORG P  ON O.PREVID = P.ID
      WHERE  FP.ProvideDate BETWEEN :TIME1 AND :TIME2 AND (:ORGID = '00000000-0000-0000-0000-000000000000' OR O.ID = :ORGID)
      GROUP BY C.CargoTypeName,O.Name,P.NAME,fpi.FPackageName)  TEMP
      GROUP BY CARGOTYPENAME,NAME,PARENTORGNAME
    </Content>

    <Content Key="Query_GetDetailListProvides" DataBaseType="SqlServer">
      SELECT
      ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),'') AS ProvideDate,
      AC_Org.Name AS OrgText,
      CargoType.CargoTypeName AS CargoTypeText,
      ISNULL(CargoType.Amount,0.00) AS UnitPrice,
      ISNULL(CargoType.Amount,0.00) * SUM(FlowProvideList.Status) AS TotalPrice,
      SUM(FlowProvideList.Status) AS ConfirmQty,
      COUNT(1) AS Qty,
      PackageType.PName AS OutPacking
      from FlowProvide with (nolock)
      inner join FlowProvideList with (nolock) on FlowProvide.ProvideID = FlowProvideList.ProvideID
      inner join FlowPackageList with (nolock) on FlowProvideList.PackageID = FlowPackageList.PackageID
      inner join PackageType with (nolock) on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG with (nolock) on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType with (nolock) on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      Left join FlowSterilizationList with (nolock) on FlowSterilizationList.PackageID = FlowPackageList.PackageID
      left join DevicesUseLog with (nolock) on FlowSterilizationList.SterilizationLogID = DevicesUseLog.LogID
      left join Devices with (nolock) on DevicesUseLog.DeviceID = Devices.DeviceID
      inner join StorageList with (nolock) on FlowPackageList.StorageID = StorageList.StorageID
      --inner join AC_User with (nolock) on FlowProvide.OPID = AC_User.ID
      inner join AC_WorkGroup with (nolock) on FlowProvide.OPID = AC_WorkGroup.FID
      Where 1 = 1 {0}
      Group By
      ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),''),
      AC_Org.Name,
      CargoType.CargoTypeName,
      PackageType.PName,
      CargoType.Amount
    </Content>
    <Content Key="Query_GetDetailListProvides" DataBaseType="Oracle">
      SELECT
      nvl(FlowProvide.ProvideDate,'') AS ProvideDate,
      AC_Org.Name AS OrgText,
      CargoType.CargoTypeName AS CargoTypeText,
      nvl(CargoType.Amount,0.00) AS UnitPrice,
      nvl(CargoType.Amount,0.00) * SUM(FlowProvideList.Status) AS TotalPrice,
      SUM(FlowProvideList.Status) AS ConfirmQty,
      COUNT(1) AS Qty,
      PackageType.PName AS OutPacking
      from FlowProvide
      inner join FlowProvideList on FlowProvide.ProvideID = FlowProvideList.ProvideID
      inner join FlowPackageList on FlowProvideList.PackageID = FlowPackageList.PackageID
      inner join PackageType on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      Left join FlowSterilizationList on FlowSterilizationList.PackageID = FlowPackageList.PackageID
      left join DevicesUseLog on FlowSterilizationList.SterilizationLogID = DevicesUseLog.LogID
      left join Devices on DevicesUseLog.DeviceID = Devices.DeviceID
      inner join StorageList on FlowPackageList.StorageID = StorageList.StorageID
      --inner join AC_User on FlowProvide.OPID = AC_User.ID
      inner join AC_WorkGroup  on FlowProvide.OPID = AC_WorkGroup.FID
      Where 1 = 1 {0}
      Group By
      nvl(FlowProvide.ProvideDate,''),
      AC_Org.Name,
      CargoType.CargoTypeName,
      PackageType.PName,
      CargoType.Amount
    </Content>

    <Content Key="Query_QueryRecycleProvideWizard" DataBaseType="SqlServer">
      SELECT A.RECYCLEDATE,T.CARGOTYPENAME, O.NAME,SUM(D.QUANTITY) AS RECYCLEQUANTIY,P.NAME AS PARENTORGNAME,U.FNames AS OPNAME,STP.TypeName AS PDA,A.OPID,W.ORGID,D.CARGOTYPEID,A.FRECYCLEID
      FROM FLOWRECYCLE A WITH (NOLOCK) INNER JOIN FLOWRECYCLELIST B WITH (NOLOCK) ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C WITH (NOLOCK) ON B.PACKAGEID=C.PACKAGEID
      LEFT JOIN STORAGELIST D WITH (NOLOCK) ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T WITH (NOLOCK) ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W WITH (NOLOCK) ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN AC_ORG O WITH (NOLOCK) ON W.ORGID = O.ID
      LEFT JOIN AC_ORG P WITH (NOLOCK) ON O.PREVID = P.ID
      --INNER JOIN AC_USER U WITH (NOLOCK) ON A.OPID = U.ID
      INNER JOIN AC_WorkGroup U WITH (NOLOCK) ON A.OPID = U.FID
      LEFT JOIN SystemTypeParameter STP WITH (NOLOCK) ON A.FIsPdaData = STP.TypeValue AND STP.TypeKey = 'YesOrNo'
      WHERE 1 = 1 {0}
      GROUP BY A.RECYCLEDATE,T.CARGOTYPENAME,O.NAME,P.NAME,U.FNames,STP.TypeName,A.OPID,W.ORGID,D.CARGOTYPEID,A.FRECYCLEID

    </Content>
    <Content Key="Query_QueryRecycleProvideWizard" DataBaseType="Oracle">
      SELECT A.RECYCLEDATE,T.CARGOTYPENAME, O.NAME,SUM(D.QUANTITY) AS RECYCLEQUANTIY,P.NAME AS PARENTORGNAME,U.FNames AS OPNAME,STP.TypeName AS PDA,A.OPID,W.ORGID,D.CARGOTYPEID,A.FRECYCLEID
      FROM FLOWRECYCLE A  INNER JOIN FLOWRECYCLELIST B  ON A.FRECYCLEID=B.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST C  ON B.PACKAGEID=C.PACKAGEID
      LEFT JOIN STORAGELIST D  ON C.STORAGEID=D.STORAGEID
      INNER JOIN CARGOTYPE T  ON D.CARGOTYPEID = T.CARGOTYPEID
      LEFT JOIN WAREHOUSE W  ON C.LASTWAREHOUSEID = W.WAREHOUSEID
      LEFT JOIN AC_ORG O  ON W.ORGID = O.ID
      LEFT JOIN AC_ORG P  ON O.PREVID = P.ID
      --INNER JOIN AC_USER U  ON A.OPID = U.ID
      INNER JOIN AC_WorkGroup U  ON A.OPID = U.FID
      LEFT JOIN SystemTypeParameter STP  ON A.FIsPdaData = STP.TypeValue AND STP.TypeKey = 'YesOrNo'
      WHERE 1 = 1 {0}
      GROUP BY A.RECYCLEDATE,T.CARGOTYPENAME,O.NAME,P.NAME,U.FNames,STP.TypeName,A.OPID,W.ORGID,D.CARGOTYPEID,A.FRECYCLEID
    </Content>


    <Content Key="Query_QueryRecycleProvideWizardPreOrder" DataBaseType="SqlServer">
      SELECT PO.ORDERDATE,C.CARGOTYPENAME,O.NAME AS ORGNAME, POD.PREORDERQTY,POD.ProvidedQty FINISHQTY,POD.PREORDERQTY - POD.ProvidedQty AS NEEDQTY,P.NAME AS PARENTORGNAME,ISNULL(STP.TYPENAME,'否') AS PDA,PO.CREATEBY,O.ID AS ORGID,C.CARGOTYPEID,R.FRECYCLEID,PO.REMARK,0 AS PROVIDENUM,0 AS LENDNUM
      FROM FLOWPREORDER PO WITH (NOLOCK)
      INNER JOIN FLOWPREORDERDETAIL POD WITH (NOLOCK) ON PO.PREORDERID = POD.PREORDERID
      INNER JOIN CARGOTYPE C WITH (NOLOCK) ON POD.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN AC_ORG O WITH (NOLOCK) ON PO.ORGID = O.ID
      LEFT JOIN AC_ORG P WITH (NOLOCK) ON O.PREVID = P.ID
      LEFT JOIN FLOWRECYCLE R WITH (NOLOCK) ON PO.FRECYCLEID = R.FRECYCLEID
      --INNER JOIN AC_USER U ON PO.CREATEBY = U.ID
      INNER JOIN AC_WorkGroup U  ON PO.CREATEBY = U.FID
      LEFT JOIN SYSTEMTYPEPARAMETER STP WITH (NOLOCK) ON R.FISPDADATA = STP.TYPEVALUE AND STP.TYPEKEY = 'YesOrNo'
      WHERE 1 = 1 {0}

    </Content>
    <Content Key="Query_QueryRecycleProvideWizardPreOrder" DataBaseType="Oracle">
      SELECT PO.ORDERDATE,C.CARGOTYPENAME,O.NAME AS ORGNAME, POD.PREORDERQTY,POD.ProvidedQty FINISHQTY,POD.PREORDERQTY - POD.ProvidedQty AS NEEDQTY,P.NAME AS PARENTORGNAME,NVL(STP.TYPENAME,'否') AS PDA,PO.CREATEBY,O.ID AS ORGID,C.CARGOTYPEID,R.FRECYCLEID,PO.REMARK,0 AS PROVIDENUM,0 AS LENDNUM
      FROM FLOWPREORDER PO
      INNER JOIN FLOWPREORDERDETAIL POD  ON PO.PREORDERID = POD.PREORDERID
      INNER JOIN CARGOTYPE C  ON POD.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN AC_ORG O  ON PO.ORGID = O.ID
      LEFT JOIN AC_ORG P  ON O.PREVID = P.ID
      LEFT JOIN FLOWRECYCLE R  ON PO.FRECYCLEID = R.FRECYCLEID
      --INNER JOIN AC_USER U ON PO.CREATEBY = U.ID
      INNER JOIN AC_WorkGroup U  ON PO.CREATEBY = U.FID
      LEFT JOIN SYSTEMTYPEPARAMETER STP  ON R.FISPDADATA = STP.TYPEVALUE AND STP.TYPEKEY = 'YesOrNo'
      WHERE 1 = 1 {0}
    </Content>

    <Content Key="Query_QueryProvideMaterialPreOrder" DataBaseType="SqlServer">
      SELECT PO.ORDERDATE,C.CARGOTYPENAME,O.NAME AS ORGNAME, POD.PREORDERQTY,POD.ProvidedQty as FINISHQTY,
      POD.PreOrderQty - POD.ProvidedQty AS NEEDQTY,P.NAME AS PARENTORGNAME,PO.CREATEBY,O.ID AS ORGID,C.CARGOTYPEID,PO.REMARK,0 AS PROVIDENUM,0 AS LENDNUM
      FROM  FlowPreOrder PO WITH (NOLOCK)
      INNER JOIN FLOWPREORDERDETAIL POD WITH (NOLOCK) ON PO.PREORDERID = POD.PREORDERID
      INNER JOIN CARGOTYPE C WITH (NOLOCK) ON POD.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN AC_ORG O WITH (NOLOCK) ON PO.ORGID = O.ID
      LEFT JOIN AC_ORG P WITH (NOLOCK) ON O.PREVID = P.ID
      INNER JOIN AC_WorkGroup U  ON PO.CREATEBY = U.FID
      WHERE 1 = 1 {0} AND POD.CargoTopType = 2
      AND POD.CheckStatus in (1,4)
      AND POD.PreOrderQty - POD.ProvidedQty > 0
    </Content>

    <Content Key="Query_QueryProvideMaterialPreOrder" DataBaseType="Oracle">
      SELECT PO.ORDERDATE,C.CARGOTYPENAME,O.NAME AS ORGNAME, POD.PREORDERQTY,POD.ProvidedQty FINISHQTY,
      POD.PREORDERQTY - POD.ProvidedQty AS NEEDQTY,P.NAME AS PARENTORGNAME,PO.CREATEBY,O.ID AS ORGID,C.CARGOTYPEID,PO.REMARK,0 AS PROVIDENUM,0 AS LENDNUM
      FROM  FlowPreOrder PO
      INNER JOIN FLOWPREORDERDETAIL POD  ON PO.PREORDERID = POD.PREORDERID
      INNER JOIN CARGOTYPE C  ON POD.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN AC_ORG O  ON PO.ORGID = O.ID
      LEFT JOIN AC_ORG P  ON O.PREVID = P.ID
      INNER JOIN AC_WorkGroup U  ON PO.CREATEBY = U.FID
      WHERE 1 = 1 {0}
      AND POD.CargoTopType = 2
      AND POD.CheckStatus in (1,4)
      AND POD.PreOrderQty - POD.ProvidedQty > 0
    </Content>

    <Content Key="SP_Query_FlowTask" DataBaseType="SqlServer">
      SELECT
      FlowTask.TaskID,
      FlowTask.CargoTopType,
      FlowTask.CargoTypeID,
      FlowTask.TaskNum,
      FlowTask.DoingNum,
      FlowTask.FinishNum,
      FlowTask.FinishFlag,
      FlowTask.CreateBy,
      FlowTask.CreateTime,
      FlowTask.FinishTime,
      FlowTask.FRecycleID,
      FlowTask.PreOrderID,
      FlowTask.FlowOrgID,
      CargoTypeName.TypeName as CargoTopTypeName,
      UserName.FNames AS CreateByName,
      CargoType.CargoTypeName AS CargoTypeIDName,
      FlowTaskStatus.TypeName AS FinishFlagName,
      kind.KindName as CargoTypeKindName
      FROM FlowTask
      LEFT JOIN SystemTypeParameter CargoTypeName on(CargoTypeName.TypeKey='CargoTopType' and FlowTask.CargoTopType=CargoTypeName.TypeValue)
      --LEFT JOIN AC_User UserName on(UserName.ID=FlowTask.CreateBy)
      LEFT JOIN AC_WorkGroup UserName on(UserName.FID=FlowTask.CreateBy)
      LEFT JOIN CargoType CargoType on(CargoType.CargoTypeID=FlowTask.CargoTypeID)
      left join CargoTypeKind kind on CargoType.CargoTypeKind=kind.ID
      LEFT JOIN SystemTypeParameter FlowTaskStatus on(FlowTaskStatus.TypeKey='FlowTaskStatus' and FlowTask.FinishFlag=FlowTaskStatus.TypeValue)
      WHERE 1 = 1
    </Content>
    <Content Key="SP_Query_FlowTask" DataBaseType="Oracle">
      SELECT
      FlowTask.TaskID,
      FlowTask.CargoTopType,
      FlowTask.CargoTypeID,
      FlowTask.TaskNum,
      FlowTask.DoingNum,
      FlowTask.FinishNum,
      FlowTask.FinishFlag,
      FlowTask.CreateBy,
      FlowTask.CreateTime,
      FlowTask.FinishTime,
      FlowTask.FRecycleID,
      FlowTask.PreOrderID,
      FlowTask.FlowOrgID,
      CargoTypeName.TypeName as CargoTopTypeName,
      UserName.FNames AS CreateByName,
      CargoType.CargoTypeName AS CargoTypeIDName,
      FlowTaskStatus.TypeName AS FinishFlagName,
      kind.KindName as CargoTypeKindName
      FROM FlowTask
      LEFT JOIN SystemTypeParameter CargoTypeName on(CargoTypeName.TypeKey='CargoTopType' and FlowTask.CargoTopType=CargoTypeName.TypeValue)
      --LEFT JOIN AC_User UserName on(UserName.ID=FlowTask.CreateBy)
      LEFT JOIN AC_WorkGroup UserName on(UserName.FID=FlowTask.CreateBy)
      LEFT JOIN CargoType CargoType on(CargoType.CargoTypeID=FlowTask.CargoTypeID)
      left join CargoTypeKind kind on CargoType.CargoTypeKind=kind.ID
      LEFT JOIN SystemTypeParameter FlowTaskStatus on(FlowTaskStatus.TypeKey='FlowTaskStatus' and FlowTask.FinishFlag=FlowTaskStatus.TypeValue)
      WHERE 1 = 1
    </Content>

    <Content Key="Query_FlowPackageDeviceTrack" DataBaseType="SqlServer">
      <![CDATA[
      SELECT PACKAGEID 
      , LOGID 
      , DEVICEID 
      , DEVICENAME 
      , BEGINDATE 
      , ENDDATE 
      , DEVICESUSELOGUSERID 
      , DEVICESUSELOGUSERNAME 
      , ISOK 
      , USETIMES 
      , TODAYUSETIMES 
      , AFTERMAINTAINUSETIMES 
      , STORAGEBARCODE 
      , DEVICESUSELOGCHECKID 
      , DEVICESUSELOGCHECKNAME 
      , PATIENTID 
      , CHECKDATE 
      , ORGNAME 
      , USENAME 
      , TYPENAME 
      , BARCODE 
      , BADFLAGSHOW  from view_PakageDevicesInfo with (nolock)
      where DeviceID=@DeviceID
      and (Count1 =@Count1 or @Count1 is null) 
      and ((BeginDate>=@BeginDate and BeginDate<Dateadd(day,1,@BeginDate)) or @BeginDate is null)
      ]]>
    </Content>
    <Content Key="Query_FlowPackageDeviceTrack" DataBaseType="Oracle">
      <![CDATA[
     SELECT PACKAGEID 
      , LOGID 
      , DEVICEID 
      , DEVICENAME 
      , BEGINDATE 
      , ENDDATE 
      , DEVICESUSELOGUSERID 
      , DEVICESUSELOGUSERNAME 
      , ISOK 
      , USETIMES 
      , TODAYUSETIMES 
      , AFTERMAINTAINUSETIMES 
      , STORAGEBARCODE 
      , DEVICESUSELOGCHECKID 
      , DEVICESUSELOGCHECKNAME 
      , PATIENTID 
      , CHECKDATE 
      , ORGNAME 
      , USENAME 
      , TYPENAME 
      , BARCODE 
      , BADFLAGSHOW  from view_PakageDevicesInfo  
      where DeviceID=:DeviceID
      and (Count1 =:Count1 or :Count1 is null) 
      and ((BeginDate>=:BeginDate and BeginDate<1+:BeginDate) or :BeginDate is null)
      ]]>
    </Content>

    <Content Key="SP_Query_FlowPreOrder" DataBaseType="SqlServer">
      SELECT
      FLOWPREORDER.PREORDERID,
      FLOWPREORDER.PREORDERCODE,
      FLOWPREORDER.ORGID,
      FLOWPREORDER.ORDERDATE,
      FLOWPREORDER.REQUIREDDATE,
      FLOWPREORDER.PREORDERTYPE,
      FLOWPREORDER.PREORDERSTATUS,
      FLOWPREORDER.REMARK,
      FLOWPREORDER.FINISHDATE,
      FLOWPREORDER.CHECKSTATUS,
      FLOWPREORDER.CREATEBY,
      FLOWPREORDER.CREATEDATE,
      FLOWPREORDER.UPDATEBY,
      FLOWPREORDER.UPDATEDATE,
      CREATENAME.FNAMES AS CREATEBYNAME,
      UPDATENAME.FNAMES AS UPDATEBYNAME,
      AC_ORG.NAME AS ORGNAME,
      PREORDERTYPE.TYPENAME AS PREORDERTYPENAME,
      PREORDERSTATUS.TYPENAME AS STATUSNAME,
      CHECKSTATUS.TYPENAME AS CHECKSTATUSNAME
      FROM FLOWPREORDER
      LEFT JOIN AC_ORG  ON (AC_ORG.ID=FLOWPREORDER.ORGID)
      LEFT JOIN SYSTEMTYPEPARAMETER PREORDERSTATUS ON(PREORDERSTATUS.TYPEKEY='PREORDERSTATUS' AND FLOWPREORDER.PREORDERSTATUS=PREORDERSTATUS.TYPEVALUE)
      LEFT JOIN SYSTEMTYPEPARAMETER PREORDERTYPE ON(PREORDERTYPE.TYPEKEY='PREORDERTYPE' AND FLOWPREORDER.PREORDERTYPE=PREORDERTYPE.TYPEVALUE)
      LEFT JOIN SYSTEMTYPEPARAMETER CHECKSTATUS ON(CHECKSTATUS.TYPEKEY='PREORDERCHECK' AND FLOWPREORDER.CHECKSTATUS=CHECKSTATUS.TYPEVALUE)
      --LEFT JOIN AC_USER CREATENAME ON(CREATENAME.ID=FLOWPREORDER.CREATEBY)
      --LEFT JOIN AC_USER UPDATENAME ON(UPDATENAME.ID=FLOWPREORDER.UPDATEBY)
      LEFT JOIN AC_WORKGROUP CREATENAME ON(CREATENAME.FID=FLOWPREORDER.CREATEBY)
      LEFT JOIN AC_WORKGROUP UPDATENAME ON(UPDATENAME.FID=FLOWPREORDER.UPDATEBY)
      WHERE 1 = 1 {0}
      ORDER BY REQUIREDDATE DESC,ORGNAME
    </Content>

    <Content Key="SP_Query_FlowPreOrder" DataBaseType="Oracle">
      SELECT
      FlowPreOrder.PreOrderID,
      FlowPreOrder.PreOrderCode,
      FlowPreOrder.OrgID,
      FlowPreOrder.OrderDate,
      FlowPreOrder.RequiredDate,
      FlowPreOrder.PreOrderType,
      FlowPreOrder.PreOrderStatus,
      FlowPreOrder.Remark,
      FlowPreOrder.FinishDate,
      FlowPreOrder.CheckStatus,
      FlowPreOrder.CreateBy,
      FlowPreOrder.CreateDate,
      FlowPreOrder.UpdateBy,
      FlowPreOrder.UpdateDate,
      CreateName.FNames AS CreateByName,
      UpdateName.FNames AS UpdateByName,
      AC_Org.Name As OrgName,
      PreOrderType.TypeName AS PreOrderTypeName,
      PreOrderStatus.TypeName AS StatusName,
      CheckStatus.TypeName as CheckStatusName
      FROM FlowPreOrder
      LEFT JOIN AC_Org  on (AC_Org.ID=FlowPreOrder.OrgID)
      LEFT JOIN SystemTypeParameter PreOrderStatus on(PreOrderStatus.TypeKey='PreOrderStatus' and FlowPreOrder.PreOrderStatus=PreOrderStatus.TypeValue)
      LEFT JOIN SystemTypeParameter PreOrderType on(PreOrderType.TypeKey='PreOrderType' and FlowPreOrder.PreOrderType=PreOrderType.TypeValue)
      LEFT JOIN SystemTypeParameter CheckStatus on(CheckStatus.TypeKey='PreOrderCheck' and FlowPreOrder.CheckStatus=CheckStatus.TypeValue)
      --LEFT JOIN AC_User CreateName on(CreateName.ID=FlowPreOrder.CreateBy)
      --LEFT JOIN AC_User UpdateName on(UpdateName.ID=FlowPreOrder.UpdateBy)
      LEFT JOIN AC_WorkGroup CreateName on(CreateName.FID=FlowPreOrder.CreateBy)
      LEFT JOIN AC_WorkGroup UpdateName on(UpdateName.FID=FlowPreOrder.UpdateBy)
      WHERE 1 = 1 {0}
      ORDER BY RequiredDate DESC,OrgName
    </Content>
    <Content Key="SP_Query_FlowPackageNumOrder" DataBaseType="SqlServer">
      SELECT
      FlowPackageNumOrder.FLOWPACKAGENUMORDERID,
      FlowPackageNumOrder.OrgID,
      FlowPackageNumOrder.REMARK,
      FlowPackageNumOrder.FinishDate,
      FlowPackageNumOrder.CheckStatus,
      FlowPackageNumOrder.CreateBy,
      FlowPackageNumOrder.CREATEDATE,
      FlowPackageNumOrder.UpdateBy,
      FlowPackageNumOrder.UpdateDate,
      CreateName.FNames AS CreateByName,
      UpdateName.FNames AS UpdateByName,
      AC_Org.Name As ORGNAME,
      CheckStatus.TypeName as CHECKSTATUSNAME
      FROM FlowPackageNumOrder
      LEFT JOIN AC_Org  on (AC_Org.ID=FlowPackageNumOrder.OrgID)
      LEFT JOIN SystemTypeParameter CheckStatus on(CheckStatus.TypeKey='PreOrderCheck' and FlowPackageNumOrder.CheckStatus=CheckStatus.TypeValue)
      LEFT JOIN AC_WorkGroup CreateName on(CreateName.FID=FlowPackageNumOrder.CreateBy)
      LEFT JOIN AC_WorkGroup UpdateName on(UpdateName.FID=FlowPackageNumOrder.UpdateBy)
      WHERE 1 = 1  {0}
      ORDER BY CreateDate DESC,OrgName
    </Content>
    <Content Key="SP_Query_FlowPackageNumOrder" DataBaseType="Oracle">
      SELECT
      FlowPackageNumOrder.FLOWPACKAGENUMORDERID,
      FlowPackageNumOrder.OrgID,
      FlowPackageNumOrder.REMARK,
      FlowPackageNumOrder.FinishDate,
      FlowPackageNumOrder.CheckStatus,
      FlowPackageNumOrder.CreateBy,
      FlowPackageNumOrder.CREATEDATE,
      FlowPackageNumOrder.UpdateBy,
      FlowPackageNumOrder.UpdateDate,
      CreateName.FNames AS CreateByName,
      UpdateName.FNames AS UpdateByName,
      AC_Org.Name As ORGNAME,
      CheckStatus.TypeName as CHECKSTATUSNAME
      FROM FlowPackageNumOrder
      LEFT JOIN AC_Org  on (AC_Org.ID=FlowPackageNumOrder.OrgID)
      LEFT JOIN SystemTypeParameter CheckStatus on(CheckStatus.TypeKey='PreOrderCheck' and FlowPackageNumOrder.CheckStatus=CheckStatus.TypeValue)
      LEFT JOIN AC_WorkGroup CreateName on(CreateName.FID=FlowPackageNumOrder.CreateBy)
      LEFT JOIN AC_WorkGroup UpdateName on(UpdateName.FID=FlowPackageNumOrder.UpdateBy)
      WHERE 1 = 1  {0}
      ORDER BY CreateDate DESC,OrgName
    </Content>
    <Content Key="SP_Query_BadEquipment" DataBaseType="SqlServer">
      SELECT
      BadEquipment.BadEquipmentID,
      BadEquipment.OrgID,
      BadEquipment.Remark,
      BadEquipment.CreateBy,
      BadEquipment.CreateDate,
      BadEquipment.UpdateBy,
      BadEquipment.UpdateDate,
      CreateName.FNames AS CreateByName,
      UpdateName.FNames AS UpdateByName,
      AC_Org.Name As OrgName
      FROM BadEquipment
      LEFT JOIN AC_Org  on (AC_Org.ID=BadEquipment.OrgID)
      LEFT JOIN AC_WorkGroup CreateName on(CreateName.FID=BadEquipment.CreateBy)
      LEFT JOIN AC_WorkGroup UpdateName on(UpdateName.FID=BadEquipment.UpdateBy)
      WHERE 1 = 1  {0}
      ORDER BY CreateDate DESC,OrgName
    </Content>

    <Content Key="SP_Query_BadEquipmentList" DataBaseType="SqlServer">
      SELECT
      BadEquipmentList.BadEquipmentListID,
      BadEquipmentList.BadEquipmentID,
      BadEquipmentList.CargoTypeID,
      BadEquipmentList.PreOrderQty,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText
      FROM BadEquipmentList
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND BadEquipmentList.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoType  ON (CargoType.CargoTypeID=BadEquipmentList.CargoTypeID)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE 1 = 1 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="SP_Query_FlowPreOrderDetails" DataBaseType="SqlServer">
      SELECT
      FLOWPREORDERDETAIL.PREORDERDETAILID,
      FLOWPREORDERDETAIL.PREORDERID,
      FLOWPREORDERDETAIL.CARGOTOPTYPE,
      FLOWPREORDERDETAIL.CARGOTYPEID,
      FLOWPREORDERDETAIL.PREORDERQTY,
      CASE WHEN (FLOWPREORDERDETAIL.CHECKSTATUS) = 1 THEN FLOWPREORDERDETAIL.PREORDERQTY WHEN (FLOWPREORDERDETAIL.CHECKSTATUS) = 4 THEN FLOWPREORDERDETAIL.PREORDERQTY ELSE 0  END AS PREORDERAPPROVEQTY,
      FLOWPREORDERDETAIL.PREORDERORIQTY,
      FLOWPREORDERDETAIL.CREATEBY,
      FLOWPREORDERDETAIL.CREATEDATE,
      FLOWPREORDERDETAIL.MODIFYBY,
      FLOWPREORDERDETAIL.MODIFYDATE,
      FLOWPREORDERDETAIL.TASKID,
      FLOWPREORDERDETAIL.PROVIDEDQTY,
      FLOWPREORDERDETAIL.FINISHQTY,
      FLOWPREORDERDETAIL.FINISHDATE,
      FLOWPREORDERDETAIL.CHECKSTATE,
      FLOWPREORDERDETAIL.CHECKSTATUS,
      CARGOTOPTYPE.TYPENAME AS CARGOTOPTYPETEXT,
      CARGOTYPEKIND.KINDNAME AS CARGOTYPEKINDTEXT,
      CARGOTYPEKIND.ID AS CARGOTYPEKIND,
      CARGOTYPE.CARGOTYPENAME AS CARGOTYPETEXT,
      CREATENAME.FNAMES AS CREATEBY_NAME,
      UPDATENAME.FNAMES AS MODIFYBY_NAME
      FROM FLOWPREORDERDETAIL
      LEFT JOIN SYSTEMTYPEPARAMETER CARGOTOPTYPE ON (CARGOTOPTYPE.TYPEKEY='CARGOTOPTYPE' AND FLOWPREORDERDETAIL.CARGOTOPTYPE=CARGOTOPTYPE.TYPEVALUE)
      LEFT JOIN CARGOTYPE  ON (CARGOTYPE.CARGOTYPEID=FLOWPREORDERDETAIL.CARGOTYPEID)
      LEFT JOIN CARGOTYPEKIND ON (CARGOTYPE.CARGOTYPEKIND = CARGOTYPEKIND.ID)
      --LEFT JOIN AC_USER CREATENAME ON  (CREATENAME.ID=FLOWPREORDERDETAIL.CREATEBY)
      --LEFT JOIN AC_USER MODIFYNAME ON  (MODIFYNAME.ID=FLOWPREORDERDETAIL.MODIFYBY)
      LEFT JOIN AC_WORKGROUP CREATENAME ON(CREATENAME.FID=FLOWPREORDERDETAIL.CREATEBY)
      LEFT JOIN AC_WORKGROUP UPDATENAME ON(UPDATENAME.FID=FLOWPREORDERDETAIL.MODIFYBY)
      WHERE 1 = 1 {0}
      ORDER BY CARGOTOPTYPETEXT,CARGOTYPEKINDTEXT,CARGOTYPETEXT
    </Content>
    <Content Key="SP_Query_FlowPreOrderDetails" DataBaseType="Oracle">
      SELECT
      FlowPreOrderDetail.PreOrderDetailID,
      FlowPreOrderDetail.PreOrderID,
      FlowPreOrderDetail.CargoTopType,
      FlowPreOrderDetail.CargoTypeID,
      FlowPreOrderDetail.PreOrderQty,
      case when (FlowPreOrderDetail.CheckStatus) = 1 then FlowPreOrderDetail.PreOrderQty when (FlowPreOrderDetail.CheckStatus) = 4 then FlowPreOrderDetail.PreOrderQty else 0  end As PreOrderApproveQty,
      FlowPreOrderDetail.PreOrderOriQty,
      FlowPreOrderDetail.CreateBy,
      FlowPreOrderDetail.CreateDate,
      FlowPreOrderDetail.ModifyBy,
      FlowPreOrderDetail.ModifyDate,
      FlowPreOrderDetail.TaskID,
      FlowPreOrderDetail.ProvidedQty,
      FlowPreOrderDetail.FinishQty,
      FlowPreOrderDetail.FinishDate,
      FlowPreOrderDetail.CheckState,
      FlowPreOrderDetail.CheckStatus,
      CargoTopType.TypeName AS CargoTopTypeText,
      a.KindName AS CargoTypeKindText,
      a.ID as CargoTypeKind,
      CargoType.CargoTypeName as CargoTypeText,
      CreateName.FNames AS CreateBy_Name,
      UpdateName.FNames AS ModifyBy_Name
      FROM FlowPreOrderDetail
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' and FlowPreOrderDetail.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoType ON (CargoType.CargoTypeID=FlowPreOrderDetail.CargoTypeID)
      LEFT JOIN  (select CargoTypeKind.ID,CargoTypeKind.KindName from CargoTypeKind) a ON (CargoType.CargoTypeID=FlowPreOrderDetail.CargoTypeID and CargoType.CargoTypeKind=a.ID)
      --LEFT JOIN AC_User CreateName on(CreateName.ID=FlowPreOrderDetail.CreateBy)
      --LEFT JOIN AC_User ModifyName on(ModifyName.ID=FlowPreOrderDetail.ModifyBy)
      LEFT JOIN AC_WorkGroup CreateName on(CreateName.FID=FlowPreOrderDetail.CreateBy)
      LEFT JOIN AC_WorkGroup UpdateName on(UpdateName.FID=FlowPreOrderDetail.ModifyBy)
      WHERE 1 = 1 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="SP_Query_FlowPackageNumOrderDetails" DataBaseType="SqlServer">
      SELECT
      FlowPackageNumOrderDetail.FlowPackageNumDetailID,
      FlowPackageNumOrderDetail.FlowPackageNumOrderID,
      FlowPackageNumOrderDetail.CargoTopType,
      FlowPackageNumOrderDetail.CargoTypeID,
      FlowPackageNumOrderDetail.PreOrderQty,
      FlowPackageNumOrderDetail.CreateBy,
      FlowPackageNumOrderDetail.CreateDate,
      FlowPackageNumOrderDetail.ModifyBy,
      FlowPackageNumOrderDetail.ModifyDate,
      FlowPackageNumOrderDetail.CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      CreateName.FNames AS CreateBy_Name,
      UpdateName.FNames AS ModifyBy_Name
      FROM  FlowPackageNumOrderDetail
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND FlowPackageNumOrderDetail.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoType  ON (CargoType.CargoTypeID=FlowPackageNumOrderDetail.CargoTypeID)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      LEFT JOIN AC_WorkGroup CreateName on(CreateName.FID=FlowPackageNumOrderDetail.CreateBy)
      LEFT JOIN AC_WorkGroup UpdateName on(UpdateName.FID=FlowPackageNumOrderDetail.ModifyBy)
      WHERE 1 = 1 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="SP_Query_FlowPackageNumOrderDetails" DataBaseType="Oracle">
      SELECT
      FlowPackageNumOrderDetail.FlowPackageNumDetailID,
      FlowPackageNumOrderDetail.FlowPackageNumOrderID,
      FlowPackageNumOrderDetail.CargoTopType,
      FlowPackageNumOrderDetail.CargoTypeID,
      FlowPackageNumOrderDetail.PreOrderQty,
      FlowPackageNumOrderDetail.CreateBy,
      FlowPackageNumOrderDetail.CreateDate,
      FlowPackageNumOrderDetail.ModifyBy,
      FlowPackageNumOrderDetail.ModifyDate,
      FlowPackageNumOrderDetail.CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      CreateName.FNames AS CreateBy_Name,
      UpdateName.FNames AS ModifyBy_Name
      FROM  FlowPackageNumOrderDetail
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND FlowPackageNumOrderDetail.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoType  ON (CargoType.CargoTypeID=FlowPackageNumOrderDetail.CargoTypeID)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      LEFT JOIN AC_WorkGroup CreateName on(CreateName.FID=FlowPackageNumOrderDetail.CreateBy)
      LEFT JOIN AC_WorkGroup UpdateName on(UpdateName.FID=FlowPackageNumOrderDetail.ModifyBy)
      WHERE 1 = 1 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="Query_FlowRecycleReportByOrg" DataBaseType="SqlServer">
      <![CDATA[
      SELECT O.NAME AS ORGNAME,C.CARGOTYPENAME, COUNT(1) AS QUANTITY
      FROM FLOWRECYCLE R WITH (NOLOCK) 
	      INNER JOIN FLOWRECYCLELIST RL WITH (NOLOCK) ON R.FRECYCLEID = RL.FRECYCLEID
	      INNER JOIN FLOWPACKAGELIST PL WITH (NOLOCK) ON RL.PACKAGEID = PL.PACKAGEID
	      INNER JOIN STORAGELIST SL WITH (NOLOCK) ON PL.STORAGEID = SL.STORAGEID
	      INNER JOIN WAREHOUSE W WITH (NOLOCK) ON SL.WAREHOUSEID = W.WAREHOUSEID
	      INNER JOIN AC_ORG O WITH (NOLOCK) ON W.ORGID = O.ID 
	      INNER JOIN CARGOTYPE C WITH (NOLOCK) ON PL.CARGOTYPEID = C.CARGOTYPEID 
      WHERE R.FISPDADATA = 1 {0}
      GROUP BY O.NAME,C.CARGOTYPENAME
      ]]>
    </Content>
    <Content Key="Query_FlowRecycleReportByOrg" DataBaseType="Oracle">
      <![CDATA[
      SELECT O.NAME AS ORGNAME,C.CARGOTYPENAME, COUNT(1) AS QUANTITY
      FROM FLOWRECYCLE R  
      INNER JOIN FLOWRECYCLELIST RL   ON R.FRECYCLEID = RL.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST PL   ON RL.PACKAGEID = PL.PACKAGEID
      INNER JOIN STORAGELIST SL   ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN WAREHOUSE W   ON SL.WAREHOUSEID = W.WAREHOUSEID
      INNER JOIN AC_ORG O   ON W.ORGID = O.ID
      INNER JOIN CARGOTYPE C   ON PL.CARGOTYPEID = C.CARGOTYPEID
      WHERE R.FISPDADATA = 1 {0}
      GROUP BY O.NAME,C.CARGOTYPENAME
      ]]>
    </Content>

    <Content Key="Query_FlowRecycleReportByPackage" DataBaseType="SqlServer">
      <![CDATA[
      SELECT C.CARGOTYPENAME, COUNT(1) AS QUANTITY
      FROM FLOWRECYCLE R WITH (NOLOCK) 
	      INNER JOIN FLOWRECYCLELIST RL WITH (NOLOCK) ON R.FRECYCLEID = RL.FRECYCLEID
	      INNER JOIN FLOWPACKAGELIST PL WITH (NOLOCK) ON RL.PACKAGEID = PL.PACKAGEID
	      INNER JOIN STORAGELIST SL WITH (NOLOCK) ON PL.STORAGEID = SL.STORAGEID
	      INNER JOIN WAREHOUSE W WITH (NOLOCK) ON SL.WAREHOUSEID = W.WAREHOUSEID
	      INNER JOIN AC_ORG O WITH (NOLOCK) ON W.ORGID = O.ID 
	      INNER JOIN CARGOTYPE C WITH (NOLOCK) ON PL.CARGOTYPEID = C.CARGOTYPEID 
      WHERE R.FISPDADATA = 1 {0}
      GROUP BY C.CARGOTYPENAME
      ]]>
    </Content>
    <Content Key="Query_FlowRecycleReportByPackage" DataBaseType="Oracle">
      <![CDATA[
      SELECT C.CARGOTYPENAME, COUNT(1) AS QUANTITY
      FROM FLOWRECYCLE R  
      INNER JOIN FLOWRECYCLELIST RL  ON R.FRECYCLEID = RL.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST PL   ON RL.PACKAGEID = PL.PACKAGEID
      INNER JOIN STORAGELIST SL   ON PL.STORAGEID = SL.STORAGEID
      INNER JOIN WAREHOUSE W   ON SL.WAREHOUSEID = W.WAREHOUSEID
      INNER JOIN AC_ORG O   ON W.ORGID = O.ID
      INNER JOIN CARGOTYPE C   ON PL.CARGOTYPEID = C.CARGOTYPEID
      WHERE R.FISPDADATA = 1 {0}
      GROUP BY C.CARGOTYPENAME
      ]]>
    </Content>

    <Content Key="SP_Query_FlowRecycleOrder" DataBaseType="SqlServer">
      SELECT     FlowRecycleOrder.RecycleStatus,
      b.TypeName AS Status_Name, FlowRecycleOrder.OrgID,
      FlowRecycleOrder.CreateBy, FlowRecycleOrder.ModifyBy,
      FlowRecycleOrder.ModifyDate,
      FlowRecycleOrder.CreateDate,
      FlowRecycleOrder.RecycleDate,
      FlowRecycleOrder.RecycleCode,
      FlowRecycleOrder.RecycleOrderID, c.FNames AS CreateBy_Name, d.FNames AS ModifyBy_Name, AC_Org.Name AS OrgID_Name, FlowRecycleOrder.Remark
      FROM         dbo.FlowRecycleOrder  LEFT OUTER JOIN
      (SELECT     SystemTypeParameter.TypeName,dbo.SystemTypeParameter.TypeValue
      FROM          dbo.SystemTypeParameter

      WHERE      (SystemTypeParameter.TypeKey = 'FlowRecycleOrderStatus')) AS b ON FlowRecycleOrder.RecycleStatus = b.TypeValue
      --LEFT OUTER JOIN AC_User AS c ON FlowRecycleOrder.CreateBy = c.ID
      --LEFT OUTER JOIN AC_User AS d ON FlowRecycleOrder.ModifyBy = d.ID
      LEFT OUTER JOIN AC_WorkGroup AS c ON FlowRecycleOrder.CreateBy = c.FID
      LEFT OUTER JOIN AC_WorkGroup AS d ON FlowRecycleOrder.ModifyBy = d.FID
      LEFT OUTER JOIN AC_Org  ON FlowRecycleOrder.OrgID = AC_Org.ID
    </Content>
    <Content Key="SP_Query_FlowRecycleOrder" DataBaseType="Oracle">
      SELECT     FlowRecycleOrder.RecycleStatus,
      b.TypeName AS Status_Name, FlowRecycleOrder.OrgID,
      FlowRecycleOrder.CreateBy, FlowRecycleOrder.ModifyBy,
      FlowRecycleOrder.ModifyDate,
      FlowRecycleOrder.CreateDate,
      FlowRecycleOrder.RecycleDate,
      FlowRecycleOrder.RecycleCode,
      FlowRecycleOrder.RecycleOrderID, c.FNames AS CreateBy_Name, d.FNames AS ModifyBy_Name, AC_Org.Name AS OrgID_Name, FlowRecycleOrder.Remark
      FROM         dbo.FlowRecycleOrder  LEFT OUTER JOIN
      (SELECT     SystemTypeParameter.TypeName,dbo.SystemTypeParameter.TypeValue
      FROM          dbo.SystemTypeParameter

      WHERE      (SystemTypeParameter.TypeKey = 'FlowRecycleOrderStatus')) AS b ON FlowRecycleOrder.RecycleStatus = b.TypeValue
      --LEFT OUTER JOIN AC_User AS c ON FlowRecycleOrder.CreateBy = c.ID
      --LEFT OUTER JOIN AC_User AS d ON FlowRecycleOrder.ModifyBy = d.ID
      LEFT OUTER JOIN AC_WorkGroup AS c ON FlowRecycleOrder.CreateBy = c.FID
      LEFT OUTER JOIN AC_WorkGroup AS d ON FlowRecycleOrder.ModifyBy = d.FID
      LEFT OUTER JOIN AC_Org  ON FlowRecycleOrder.OrgID = AC_Org.ID
    </Content>

    <Content Key="GetPatientUseList" DataBaseType="SqlServer">
      SELECT FlowUseList.*
      ,FLOWPACKAGELIST.PackageID
      ,STORAGELIST.Barcode
      ,STORAGELIST.EXPDATE
      ,view_CargoType.CargoTypeText AS CARGOTYPENAME
      ,FLOWPACKAGELIST.VALIDDATE
      ,STORAGELIST.STERILIZEDATE
      ,FLOWPACKAGELIST.CHECKID
      ,FLOWPACKAGELIST.FPACKAGEID
      ,FLOWPACKAGELIST.ISTEMP
      ,view_CargoType.CARGOTYPEID
      ,FLOWPACKAGELIST.LENDFLAG
      ,FLOWPACKAGELIST.BADFLAG
      ,FLOWPACKAGELIST.USESTATUS
      ,AC_WorkGroup.FNames as LASTOP
      ,FLOWPACKAGELIST.PACKAGEOPENDATE
      ,dbo.fun_get_BadFlagReason(FLOWPACKAGELIST.BADFLAGREASON) AS BADFLAGREASON
      ,SBADFLAG.TypeName AS BADFLAGNAME
      ,ISNULL(DATEDIFF(MINUTE,PACKAGEOPENDATE,GETDATE()),0) AS PACKAGEOPENMINS
      ,FLOWPACKAGELIST.PACKAGEOPENDATE AS PACKAGEOPENDATE
      FROM FlowUseList
      INNER  JOIN FLOWPACKAGELIST WITH (NOLOCK)
      ON FLOWPACKAGELIST.StorageID = FlowUseList.StorageID
      INNER JOIN STORAGELIST WITH (NOLOCK)
      ON FLOWPACKAGELIST.STORAGEID = STORAGELIST.STORAGEID
      INNER JOIN view_CargoType WITH (NOLOCK)
      ON FlowUseList.CargoTypeID = view_CargoType.CargoTypeID
      INNER JOIN SystemTypeParameter SBADFLAG WITH (NOLOCK)
      ON FLOWPACKAGELIST.BadFlag = SBADFLAG.TypeValue
      AND SBADFLAG.TypeKey = 'QualifiedNO'
      --inner join AC_User on FLOWPACKAGELIST.LASTOPID=ac_user.ID
      inner join AC_WorkGroup on FLOWPACKAGELIST.LASTOPID=AC_WorkGroup.FID
      WHERE 1=1 {0}
    </Content>
    <Content Key="GetPatientUseList" DataBaseType="Oracle">
      SELECT FlowUseList.*
      ,FLOWPACKAGELIST.PackageID
      ,STORAGELIST.Barcode
      ,STORAGELIST.EXPDATE
      ,view_CargoType.CargoTypeText AS CARGOTYPENAME
      ,FLOWPACKAGELIST.VALIDDATE
      ,STORAGELIST.STERILIZEDATE
      ,FLOWPACKAGELIST.CHECKID
      ,FLOWPACKAGELIST.FPACKAGEID
      ,FLOWPACKAGELIST.ISTEMP
      ,view_CargoType.CARGOTYPEID
      ,FLOWPACKAGELIST.LENDFLAG
      ,FLOWPACKAGELIST.BADFLAG
      ,FLOWPACKAGELIST.USESTATUS
      ,AC_WorkGroup.FNames as LASTOP
      ,FLOWPACKAGELIST.PACKAGEOPENDATE
      ,fun_get_BadFlagReason(FLOWPACKAGELIST.BADFLAGREASON) AS BADFLAGREASON
      ,SBADFLAG.TypeName AS BADFLAGNAME
      ,nvl(Datediff('N',PACKAGEOPENDATE,sysdate),0) AS PACKAGEOPENMINS
      ,FLOWPACKAGELIST.PACKAGEOPENDATE
      FROM FlowUseList
      INNER  JOIN FLOWPACKAGELIST
      ON FLOWPACKAGELIST.StorageID = FlowUseList.StorageID
      INNER JOIN STORAGELIST
      ON FLOWPACKAGELIST.STORAGEID = STORAGELIST.STORAGEID
      INNER JOIN view_CargoType
      ON FlowUseList.CargoTypeID = view_CargoType.CargoTypeID
      INNER JOIN SystemTypeParameter SBADFLAG
      ON FLOWPACKAGELIST.BadFlag = SBADFLAG.TypeValue
      AND SBADFLAG.TypeKey = 'QualifiedNO'
      --inner join AC_User on FLOWPACKAGELIST.LASTOPID=ac_user.ID
      inner join AC_WorkGroup on FLOWPACKAGELIST.LASTOPID=AC_WorkGroup.FID
      WHERE 1=1 {0}
    </Content>

    <Content Key="GetLastFlowUseByPatient" DataBaseType="SqlServer">
      SELECT TOP 1 FlowUse.UseID
      FROM PatientList
      INNER JOIN FlowUse
      ON PatientList.PatientID = FlowUse.PatientID
      WHERE 1 = 1 {0}
      ORDER BY UseDate DESC
    </Content>
    <Content Key="GetLastFlowUseByPatient" DataBaseType="Oracle">
      <![CDATA[
	  select UseID from 
	  (
      SELECT   FlowUse.UseID
      FROM PatientList
      INNER JOIN FlowUse 
      ON PatientList.PatientID = FlowUse.PatientID
      WHERE 1 = 1 {0} 
	  order by UseDate DESC
	  ) where rownum=1
      ]]>
    </Content>

    <Content Key="Delete_FlowPreOrderDetailsByForeignKey" DataBaseType="SqlServer">
      DELETE FROM FlowPreOrderDetail
      WHERE
      PreOrderID = @PreOrderID
    </Content>
    <Content Key="Delete_BadEquipmentListsByForeignKey" DataBaseType="SqlServer">
      DELETE FROM BadEquipmentList
      WHERE
      BadEquipmentID = @PreOrderID
    </Content>
    <Content Key="Delete_BadEquipmentListsByForeignKey" DataBaseType="Oracle">
      DELETE FROM BadEquipmentList
      WHERE
      BadEquipmentID = :PreOrderID
    </Content>
    <Content Key="Delete_FlowPreOrderDetailsByForeignKey" DataBaseType="Oracle">
      DELETE FROM FlowPreOrderDetail
      WHERE
      PreOrderID = :PreOrderID
    </Content>

    <Content Key="Delete_FlowPackageNumOrderDetailsByForeignKey" DataBaseType="SqlServer">
      DELETE FROM FlowPackageNumOrderDetail
      WHERE
      FlowPackageNumOrderID = @PreOrderID
    </Content>
    <Content Key="Delete_FlowPackageNumOrderDetailsByForeignKey" DataBaseType="Oracle">
      DELETE FROM FlowPackageNumOrderDetail
      WHERE
      FlowPackageNumOrderID = :PreOrderID
    </Content>

    <Content Key="Delete_FlowContainerPackageListByID" DataBaseType="SqlServer">
      DELETE FROM FlowContainerPackageList  WHERE ContainerPackageID=@ContainerPackageID
    </Content>
    <Content Key="Delete_FlowContainerPackageListByID" DataBaseType="Oracle">
      DELETE FROM FlowContainerPackageList  WHERE ContainerPackageID=:ContainerPackageID
    </Content>


    <Content Key="Delete_StorageOutList" DataBaseType="SqlServer">
      DELETE FROM StorageOutList  WHERE OutID=@OutID
    </Content>
    <Content Key="Delete_StorageOutList" DataBaseType="Oracle">
      DELETE FROM StorageOutList  WHERE OutID=:OutID
    </Content>
    <Content Key="Delete_StorageOutListStorageListByOutListID" DataBaseType="SqlServer">
      DELETE FROM StorageOutListStorageList  WHERE OutListID=@OutListID
    </Content>
    <Content Key="Delete_StorageOutListStorageListByOutListID" DataBaseType="Oracle">
      DELETE FROM StorageOutListStorageList  WHERE OutListID=:OutListID
    </Content>
    <Content Key="Delete_StorageOutListPreOrderDetailByOutListID" DataBaseType="SqlServer">
      DELETE FROM StorageOutListPreOrderDetail  WHERE OutListID=@OutListID
    </Content>
    <Content Key="Delete_StorageOutListPreOrderDetailByOutListID" DataBaseType="Oracle">
      DELETE FROM StorageOutListPreOrderDetail  WHERE OutListID=:OutListID
    </Content>
    <Content Key="Delete_ProviderList" DataBaseType="SqlServer">
      DELETE FROM FlowProvideList  WHERE ProvideID=@ProvideID
    </Content>
    <Content Key="Delete_ProviderList" DataBaseType="Oracle">
      DELETE FROM FlowProvideList  WHERE ProvideID=:ProvideID
    </Content>


    <Content Key="Delete_ProviderListByPBOW" DataBaseType="SqlServer">
      DECLARE @PACKAGEID UNIQUEIDENTIFIER
      DECLARE @STORAGEID UNIQUEIDENTIFIER

      SELECT @PACKAGEID = FL.PACKAGEID,@STORAGEID = SL.STORAGEID
      FROM FLOWPACKAGELIST FL  INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE SL.BARCODE = @BARCODE

      DELETE FLOWPROVIDELIST
      WHERE PROVIDEID = @PROVIDEID AND PACKAGEID =  @PACKAGEID

      UPDATE FLOWPACKAGELIST
      SET LENDFLAG = 0,
      LASTOPID = @OPID,
      LASTWAREHOUSEID = @WAREHOUSEID,
      LASTDATE = GETDATE()
      WHERE PACKAGEID = @PACKAGEID

      UPDATE STORAGELIST
      SET STATUS = 50,
      LOCATIONID = NULL,
      WAREHOUSEID = @WAREHOUSEID,
      MODIFIER = @OPID,
      MODIFYTIME = GETDATE()
      WHERE STORAGEID = @STORAGEID
    </Content>
    <Content Key="Delete_ProviderListByPBOW" DataBaseType="Oracle">
      DECLARE
      vPACKAGEID varchar2(36);
      vSTORAGEID varchar2(36);
      begin
      SELECT  FL.PACKAGEID,SL.STORAGEID into vPACKAGEID,vSTORAGEID
      FROM FLOWPACKAGELIST FL  INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE SL.BARCODE = :BARCODE;

      DELETE FLOWPROVIDELIST
      WHERE PROVIDEID = :PROVIDEID AND PACKAGEID =  vPACKAGEID;

      UPDATE FLOWPACKAGELIST
      SET LENDFLAG = 0,
      LASTOPID = :OPID,
      LASTWAREHOUSEID = :WAREHOUSEID,
      LASTDATE = sysdate
      WHERE PACKAGEID = vPACKAGEID;

      UPDATE STORAGELIST
      SET STATUS = 50,
      LOCATIONID = null,
      WAREHOUSEID = :WAREHOUSEID,
      MODIFIER = :OPID,
      MODIFYTIME = sysdate
      WHERE STORAGEID = vSTORAGEID;
      end;
    </Content>

    <Content Key="Delete_DeleteLostBarcodeByBarcodeB" DataBaseType="SqlServer">
		delete flowrecyclefetchlist where PACKAGEID =@PACKAGEID
		delete flowrecyclelist where PACKAGEID =@PACKAGEID
		delete FLOWPACKAGELIST where PACKAGEID =@PACKAGEID
	</Content>
    <Content Key="Delete_DeleteLostBarcodeByBarcodeB" DataBaseType="Oracle">
		begin
		delete flowrecyclefetchlist where PACKAGEID =:PACKAGEID;
		delete flowrecyclelist where PACKAGEID =:PACKAGEID;
		delete FLOWPACKAGELIST where PACKAGEID =:PACKAGEID;
		end;
	</Content>

    <Content Key="Delete_DeleteLostBarcodeByBarcodeC" DataBaseType="SqlServer">
      delete STORAGELIST where STORAGEID  =@STORAGEID
    </Content>
    <Content Key="Delete_DeleteLostBarcodeByBarcodeC" DataBaseType="Oracle">
      delete STORAGELIST where STORAGEID  =:STORAGEID
    </Content>

    <Content Key="Delete_DeleteLostBarcodeByBarcodeE" DataBaseType="SqlServer">
      delete FlowPackageLostBarcodeCList where FPackageID =@FPackageID
    </Content>
    <Content Key="Delete_DeleteLostBarcodeByBarcodeE" DataBaseType="Oracle">
      delete FlowPackageLostBarcodeCList where FPackageID =:FPackageID
    </Content>

    <Content Key="Delete_DeleteLostBarcodeByBarcodeF" DataBaseType="SqlServer">
      delete FlowPackageLostBarcode where FPackageID  =@FPackageID
    </Content>
    <Content Key="Delete_DeleteLostBarcodeByBarcodeF" DataBaseType="Oracle">
      delete FlowPackageLostBarcode where FPackageID  =:FPackageID
    </Content>


    <Content Key="Update_PreOrderFinish" DataBaseType="SqlServer">
      Update FlowPreOrder
      set PreOrderStatus = @PreOrderStatus,
      FinishDate = getdate()
      where PreOrderID = @PreOrderID
    </Content>
    <Content Key="Update_PreOrderFinish" DataBaseType="Oracle">
      Update FlowPreOrder
      set PreOrderStatus = :PreOrderStatus,
      FinishDate = sysdate
      where PreOrderID = :PreOrderID
    </Content>

    <Content Key="Update_SterilizeInfo" DataBaseType="SqlServer">
      update FlowContainerPackage
      set ReadyStatus = 1 
      where  containerid = @containerid  
    </Content>
    <Content Key="Update_SterilizeInfo" DataBaseType="Oracle">
      update FlowContainerPackage
      set ReadyStatus = 1 
      where  containerid = :containerid 
    </Content>

    <Content Key="Update_SterilizeInfoByCP" DataBaseType="SqlServer">
      update FlowContainerPackage
      set ReadyStatus = 1,
      DeviceLocationID=@devicelocationid,Logid=@LogID
      where  containerid = @containerid and  CONTAINERPACKAGEID=@CONTAINERPACKAGEID
    </Content>
    <Content Key="Update_SterilizeInfoByCP" DataBaseType="Oracle">
      update FlowContainerPackage
      set ReadyStatus = 1,DEVICELOCATIONID=:devicelocationid,Logid=:LogID
      where  containerid = :containerid and CONTAINERPACKAGEID=:CONTAINERPACKAGEID
    </Content>
    <Content Key="Update_SetLastUpdateInfoEmptyWarehouseid" DataBaseType="SqlServer">
      UPDATE FLOWPACKAGELIST
      SET LASTOPID = @OPID,
      LASTDATE = @TODAY
      WHERE PACKAGEID = @PACKAGEID

      UPDATE STORAGELIST
      SET MODIFIER = @OPID,
      MODIFYTIME = @TODAY
      FROM FLOWPACKAGELIST
      WHERE STORAGELIST.STORAGEID = FLOWPACKAGELIST.STORAGEID AND
      FLOWPACKAGELIST.PACKAGEID = @PACKAGEID
    </Content>
    <Content Key="Update_SetLastUpdateInfoEmptyWarehouseid" DataBaseType="Oracle">
      begin
      UPDATE FLOWPACKAGELIST
      SET LASTOPID = :OPID,
      LASTDATE = :TODAY
      WHERE PACKAGEID = :PACKAGEID;

      UPDATE STORAGELIST
      SET MODIFIER = :OPID,
      MODIFYTIME = :TODAY
      where STORAGEID  =:PACKAGEID;
      end ;
    </Content>


    <Content Key="Update_SetLastUpdateInfoHaslocationidWithStatus" DataBaseType="SqlServer">
      UPDATE FLOWPACKAGELIST
      SET LASTOPID = @OPID,
      LASTWAREHOUSEID = @WAREHOUSEID,
      LASTLOCATIONID = @LOCATIONID,
      LASTDATE = @TODAY
      WHERE PACKAGEID = @PACKAGEID

      UPDATE STORAGELIST
      SET MODIFIER = @OPID,
      MODIFYTIME = @TODAY,
      WAREHOUSEID = @WAREHOUSEID,
      LOCATIONID = @LOCATIONID,
      STATUS = @STATUS
      FROM FLOWPACKAGELIST
      WHERE STORAGELIST.STORAGEID = FLOWPACKAGELIST.STORAGEID AND
      FLOWPACKAGELIST.PACKAGEID = @PACKAGEID
    </Content>
    <Content Key="Update_SetLastUpdateInfoHaslocationidWithStatus" DataBaseType="Oracle">
      begin
      UPDATE FLOWPACKAGELIST
      SET LASTOPID = :OPID,
      LASTDATE = :TODAY,
      LASTWAREHOUSEID = :WAREHOUSEID,
      LASTLOCATIONID = :LOCATIONID
      WHERE PACKAGEID = :PACKAGEID;

      UPDATE STORAGELIST
      SET MODIFIER = :OPID,
      MODIFYTIME = :TODAY,
      WAREHOUSEID = :WAREHOUSEID,
      LOCATIONID = :LOCATIONID,
      STATUS = :STATUS
      where STORAGEID = :PACKAGEID;
      end ;
    </Content>
    <Content Key="Update_SetLastUpdateInfoHaslocationid" DataBaseType="SqlServer">
      UPDATE FLOWPACKAGELIST
      SET LASTOPID = @OPID,
      LASTWAREHOUSEID = @WAREHOUSEID,
      LASTLOCATIONID = @LOCATIONID,
      LASTDATE = @TODAY
      WHERE PACKAGEID = @PACKAGEID

      UPDATE STORAGELIST
      SET MODIFIER = @OPID,
      MODIFYTIME = @TODAY,
      WAREHOUSEID = @WAREHOUSEID,
      LOCATIONID = @LOCATIONID
      FROM FLOWPACKAGELIST
      WHERE STORAGELIST.STORAGEID = FLOWPACKAGELIST.STORAGEID AND
      FLOWPACKAGELIST.PACKAGEID = @PACKAGEID
    </Content>
    <Content Key="Update_SetLastUpdateInfoHaslocationid" DataBaseType="Oracle">
      begin
      UPDATE FLOWPACKAGELIST
      SET LASTOPID = :OPID,
      LASTWAREHOUSEID = :WAREHOUSEID,
      LASTLOCATIONID = :LOCATIONID,
      LASTDATE = :TODAY
      WHERE PACKAGEID = :PACKAGEID;

      UPDATE STORAGELIST
      SET MODIFIER = :OPID,
      MODIFYTIME = :TODAY,
      WAREHOUSEID = :WAREHOUSEID,
      LOCATIONID = :LOCATIONID
      where STORAGEID = :PACKAGEID;
      end ;
    </Content>
    <Content Key="Update_ContainerInfo" DataBaseType="SqlServer">
      Update FlowDisinfectContainerList
      set FlowDisinfectContainerList.Status = @Status,
      FlowDisinfectContainerList.CheckID = @CheckID,
      FlowDisinfectContainerList.CheckDate = getdate()
      where
      FlowDisinfectContainerList.FDisinfectID = @FDisinfectID and
      FlowDisinfectContainerList.ContainerID = @ContainerID   
    </Content>
    <Content Key="Update_ContainerInfo" DataBaseType="Oracle">
      Update FlowDisinfectContainerList
      set Status = :Status,
      CheckID = :CheckID,
      CheckDate = sysdate
      where ContainerID = :ContainerID and FDisinfectID = :FDisinfectID
    </Content>
    
    <Content Key="Update_ContainerInfoDisinfecting" DataBaseType="SqlServer">
      <![CDATA[
      Update FlowDisinfectContainerList
      set FlowDisinfectContainerList.Status = 30
      where  FlowDisinfectContainerList.FDisinfectID = @FDisinfectID and
      FlowDisinfectContainerList.ContainerID <> @ContainerID  and
      FlowDisinfectContainerList.status = 20
      ]]>
    </Content>
    <Content Key="Update_ContainerInfoDisinfecting" DataBaseType="Oracle">
      <![CDATA[
      Update FlowDisinfectContainerList
      set FlowDisinfectContainerList.Status = 30
      where  FlowDisinfectContainerList.FDisinfectID = :FDisinfectID and
      FlowDisinfectContainerList.ContainerID <> :ContainerID  and
      FlowDisinfectContainerList.status =20
      ]]>
    </Content>

    <Content Key="Update_ContainerInfoDisinfectingList" DataBaseType="SqlServer">
      <![CDATA[
      Update FlowDisinfectContainerList
      set FlowDisinfectContainerList.Status = @Status
      where  FlowDisinfectContainerList.FDisinfectID = @FDisinfectID and
      FlowDisinfectContainerList.FrecycleID=@FrecycleID and 
      FlowDisinfectContainerList.ContainerID <> @ContainerID  and
      FlowDisinfectContainerList.status = 30
      ]]>
    </Content>
    <Content Key="Update_ContainerInfoDisinfectingList" DataBaseType="Oracle">
      <![CDATA[
      Update FlowDisinfectContainerList
      set FlowDisinfectContainerList.Status = :Status
      where  FlowDisinfectContainerList.FDisinfectID = :FDisinfectID and
      FlowDisinfectContainerList.FrecycleID=:FrecycleID and
      FlowDisinfectContainerList.ContainerID <> :ContainerID  and
      FlowDisinfectContainerList.status =30
      ]]>
    </Content>

    <Content Key="Update_ContainerInfoDisinfectingByFDisinfectID" DataBaseType="SqlServer">
      <![CDATA[
      Update FlowDisinfectContainerList
      set FlowDisinfectContainerList.Status = @Status
      where  FlowDisinfectContainerList.FDisinfectID = @FDisinfectID
      and FlowDisinfectContainerList.status = 30
      ]]>
    </Content>
    <Content Key="Update_ContainerInfoDisinfectingByFDisinfectID" DataBaseType="Oracle">
      <![CDATA[
      Update FlowDisinfectContainerList
      set FlowDisinfectContainerList.Status = :Status
      where  FlowDisinfectContainerList.FDisinfectID = :FDisinfectID
      and FlowDisinfectContainerList.status =30
      ]]>
    </Content>
    
    <Content Key="Query_ContainerInfoDisinfecting" DataBaseType="SqlServer">
      <![CDATA[
       select ContainerID,FrecycleID from FlowDisinfectContainerList
       where  FlowDisinfectContainerList.FDisinfectID = @FDisinfectID and
       FlowDisinfectContainerList.ContainerID <> @ContainerID  and
       FlowDisinfectContainerList.status = @status
      ]]>
    </Content>
    <Content Key="Query_ContainerInfoDisinfecting" DataBaseType="Oracle">
      <![CDATA[
       select ContainerID,FrecycleID from FlowDisinfectContainerList
       where  FlowDisinfectContainerList.FDisinfectID = :FDisinfectID and
       FlowDisinfectContainerList.ContainerID <> :ContainerID  and
       FlowDisinfectContainerList.status = :status
      ]]>
    </Content>

    <Content Key="Query_ContainerInfoDisinfectingByRecycleID" DataBaseType="SqlServer">
      <![CDATA[
       select ContainerID,FDisinfectID from FlowDisinfectContainerList
       where  FlowDisinfectContainerList.FRecycleID = :FDisinfectID and
       FlowDisinfectContainerList.ContainerID <> :ContainerID  and
       FlowDisinfectContainerList.status = :status
      ]]>
    </Content>
    <Content Key="Query_ContainerInfoDisinfectingByRecycleID" DataBaseType="Oracle">
      <![CDATA[
       select ContainerID,FDisinfectID from FlowDisinfectContainerList
       where  FlowDisinfectContainerList.FRecycleID = :FDisinfectID and
       FlowDisinfectContainerList.ContainerID <> :ContainerID  and
       FlowDisinfectContainerList.status = :status
      ]]>
    </Content>
    
    <Content Key="Update_SterilizationBDAutoCheck" DataBaseType="SqlServer">
      <![CDATA[
      Update DevicesUseLog set IsOk=@IsOK,IsBDAutoCheck=@IsBDAutoCheck,BDAutoCheckJudgmentValue=@BDAutoCheckJudgmentValue,CheckID = @UserID,CheckDate = getdate(),IsCPCDOK = @IsOK where LogId = @LogId

      Update Devices  set  TodayTestPass = case when (TodayTestCount + @TodayTestCountFix) = 1 then 1 else 0  end,TodayTestCount  = case when  TodayTestCount + @TodayTestCountFix < -2 then -2 else  TodayTestCount + @TodayTestCountFix end where DeviceID = @DeviceID
      ]]>
    </Content>
    <Content Key="Update_SterilizationBDAutoCheck" DataBaseType="Oracle">
      <![CDATA[
      begin
      Update DevicesUseLog set IsOk=:IsOK,IsBDAutoCheck=:IsBDAutoCheck,BDAutoCheckJudgmentValue=:BDAutoCheckJudgmentValue,CheckID = :UserID,CheckDate = sysdate,IsCPCDOK = :IsOK where LogId = :LogId; 
      Update Devices  set  TodayTestPass = case when (TodayTestCount + :TodayTestCountFix) = 1 then 1 else 0  end,TodayTestCount  = case when  TodayTestCount + :TodayTestCountFix < -2 then -2 else  TodayTestCount + :TodayTestCountFix end where DeviceID = :DeviceID;
      end;
      ]]>
    </Content>

    <Content Key="Update_SterilizationBD" DataBaseType="SqlServer">
      <![CDATA[
      Update DevicesUseLog set IsOk=@IsOK,CheckID = @UserID,CheckDate = getdate(),IsCPCDOK = @IsOK where LogId = @LogId

      Update Devices  set  TodayTestPass = case when (TodayTestCount + @TodayTestCountFix) = 1 then 1 else 0  end,TodayTestCount  = case when  TodayTestCount + @TodayTestCountFix < -2 then -2 else  TodayTestCount + @TodayTestCountFix end where DeviceID = @DeviceID
      ]]>
    </Content>
    <Content Key="Update_SterilizationBD" DataBaseType="Oracle">
      <![CDATA[
      begin
      Update DevicesUseLog set IsOk=:IsOK,CheckID = :UserID,CheckDate = sysdate,IsCPCDOK = :IsOK where LogId = :LogId; 
      Update Devices  set  TodayTestPass = case when (TodayTestCount + :TodayTestCountFix) = 1 then 1 else 0  end,TodayTestCount  = case when  TodayTestCount + :TodayTestCountFix < -2 then -2 else  TodayTestCount + :TodayTestCountFix end where DeviceID = :DeviceID;
      end;
      ]]>
    </Content>
    
    <Content Key="Update_CheckSterilizationIsOk" DataBaseType="SqlServer">
      <![CDATA[
      Update DevicesUseLog set IsOk=@IsOK,CheckID = @UserID,CheckDate = getdate(),IsCPCDOK = @IsCPOK,SterilizaTionReason=@SterilizaTionReason where LogId = @LogId 
      Update FlowPackageList 
                           set LastWarehouseID  = @WarehouseID,
                               LastOPID = @UserID,
                               LastDate = getdate(),
                               BadFlag = 0
                           where FlowPackageList.PackageID
                                 in (
                                      select fs.Packageid  
                                      from  FlowSterilizationList fs 
                                            inner join Storagelist sl on fs.PackageID =sl.storageid
                                            inner join FlowPackageList fpl on sl.StorageID=fpl.StorageID
                                       where fs.SterilizationLogID=@LogId and
                                             (sl.status = 40 or fpl.BadFlag=-2)
                                 ) 

                            Update storagelist 
                           set storagelist.status = 50,
                               storagelist.warehouseid = @WarehouseID,
                               storagelist.modifier = @UserID,
                               storagelist.modifytime = getdate()
                            where storagelist.storageid in
                            (
                              select s.storageid 
                              from storagelist s    inner join FlowSterilizationList fs on fs.PackageID = s.storageid
                              inner join FlowPackageList fpl on s.StorageID=fpl.StorageID
                              where fs.SterilizationLogID =@LogId and
                                    (s.status = 40 or fpl.BadFlag=-2)
                            )
                        
                        
      ]]>
    </Content>



    <Content Key="Update_CheckSterilizationIsOk" DataBaseType="Oracle">
      <![CDATA[
       begin
      Update DevicesUseLog set IsOk=:IsOK,CheckID = :UserID,CheckDate = sysdate,IsCPCDOK = :IsCPOK,SterilizaTionReason=:SterilizaTionReason where LogId = :LogId ;
      Update FlowPackageList fpl
                           set LastWarehouseID  = :WarehouseID,
                               LastOPID = :UserID ,
                               LastDate = sysdate,
                               BadFlag = 0
							where    fpl.PackageID
                                 in (
                                     select fs.Packageid  
                                      from  FlowSterilizationList fs 
                                            inner join Storagelist sl on fs.PackageID =sl.storageid
                                            inner join FlowPackageList fpl on sl.StorageID=fpl.StorageID
                                       where fs.SterilizationLogID=:LogId and
                                             (sl.status = 40 or fpl.BadFlag=-2)
                                 ) ; 
                           Update storagelist sl
                             set status = 50,
                               warehouseid = :WarehouseID,
                               modifier = :UserID,
                               modifytime = sysdate 
                            where sl.storageid in
                            (
                              select s.storageid 
                              from storagelist s    inner join FlowSterilizationList fs on fs.PackageID = s.storageid
                              inner join FlowPackageList fpl on s.StorageID=fpl.StorageID
                              where fs.SterilizationLogID =:LogId and
                                    (s.status = 40 or fpl.BadFlag=-2)
                            );
      end;
      ]]>
    </Content>

    <Content Key="Update_CheckSterilizationBCD" DataBaseType="SqlServer">
      <![CDATA[
      Update DevicesUseLog 
      set LastBPCDDate = case when LastBPCDDate is null then (select isnull(d.LastBPCDDate,'2000-1-1') from devices d inner join DevicesUseLog du on d.deviceid = du.deviceid and du.logid = @LogId) else LastBPCDDate end ,
          IsOk=@IsOK,
          BCheckID = @UserID,
          BCheckDate = getdate(),
          IsBPCDOK = @IsOK  
      where LogId = @LogId 
      Update Devices  
      set   LastBPCDDate = (select begindate from DevicesUseLog where LogId = @LogId) ,
            LastBPCDResult = @IsOK,
            LastBPCDLogID = @LogId 
      where DeviceID = @DeviceID
      ]]>
    </Content>
    <Content Key="Update_CheckSterilizationBCD" DataBaseType="Oracle">
      <![CDATA[
      begin
      Update DevicesUseLog 
      set LastBPCDDate = case when LastBPCDDate is null then (select nvl(d.LastBPCDDate,to_date('2000-01-01','YYYY-MM-dd')) from devices d inner join DevicesUseLog du on d.deviceid = du.deviceid and du.logid = :LogId) else LastBPCDDate end ,
          IsOk=:IsOK,
          BCheckID = :UserID,
          BCheckDate = sysdate,
          IsBPCDOK = :IsOK  
      where LogId = :LogId ;
      Update Devices  
      set LastBPCDDate = (select begindate from DevicesUseLog where LogId = :LogId),
          LastBPCDResult = :IsOK,
          LastBPCDLogID = :LogId 
      where DeviceID = :DeviceID; 
      end;
      ]]>
    </Content>
    <Content Key="Update_CheckSterilizationBCDIsBad" DataBaseType="SqlServer">
      <![CDATA[
                          Update FlowPackageList 
                           set BadFlag = 1,
                               BadFlagChecker = @UserID,
                               BadFlagDate = getdate(),
                               BadFlagReason = BadFlagReason | 16 | 1024 , 
                               LastOPID = @UserID,
                               LastDate = getdate()							   
                           where FlowPackageList.PackageID
                           in (
                                  select pl.Packageid  
                                  from  FlowPackageList pl
                                        inner join FlowSterilizationList fs on pl.PackageID = fs.PackageID
                                        inner join DevicesUseLog du on du.LogID = fs.SterilizationLogID
                                        inner join DevicesUseLog du1 on  du1.deviceid = du.deviceid
                                        inner join StorageList sl on pl.storageid = sl.storageid
                                  where du1.logid = @LogId and 
                                        du.BeginDate >= du1.LastBPCDDate and 
                                        du.Begindate <= du1.begindate 
                                 )    
                            
                          
                           
      ]]>
    </Content>
    <Content Key="Update_CheckSterilizationBCDIsBad" DataBaseType="Oracle">
      <![CDATA[
      begin
                  Update FlowPackageList fpl
                           set BadFlag = 1,
                               BadFlagChecker = :UserID,
                               BadFlagDate = sysdate,
                               BadFlagReason = bit_or(BadFlagReason,bit_or(16,1024)) , 
                               LastOPID = :UserID,
                               LastDate = sysdate
							   where fpl.packageid in (
                                 select fs.packageid from   FlowSterilizationList fs ,DevicesUseLog du ,
                                          DevicesUseLog du1   
                                  where   du1.deviceid = du.deviceid and du.LogID = fs.SterilizationLogID  
                                        and du.BeginDate >= du1.LastBPCDDate and   du.Begindate <= du1.begindate 
                                        and du1.logid =:LogId
                           );
        end;                           
      ]]>
    </Content>
    <Content Key="Update_CheckSterilizationIsBad" DataBaseType="SqlServer">
      <![CDATA[
      Update DevicesUseLog set IsOk=@IsOK,CheckID = @UserID,CheckDate = getdate(),IsCPCDOK = @IsCPOK,SterilizaTionReason=@SterilizaTionReason where LogId = @LogId 
                           Update FlowPackageList 
                           set BadFlag = 1,
                               BadFlagChecker = @UserID,
                               BadFlagDate = getdate(),
                               BadFlagReason = BadFlagReason | 16   , 
                               LastOPID = @UserID,
                               LastDate = getdate()
                           where PackageID
                                 in (
                                      select pl.Packageid  
                                      from  FlowPackageList pl inner join FlowSterilizationList fs on pl.PackageID = fs.PackageID
                                      where fs.SterilizationLogID=@LogId
                                 )     
                        
                         
                           
                                 
      ]]>
    </Content>

    <Content Key="Update_CheckSterilizationIsBad" DataBaseType="Oracle">
      <![CDATA[
      begin
      Update DevicesUseLog set IsOk=:IsOK,CheckID = :UserID,CheckDate = sysdate,IsCPCDOK = :IsCPOK,SterilizaTionReason=:SterilizaTionReason where LogId = :LogId ;
      
      Update FlowPackageList fpl
                           set BadFlag = 1,
                               BadFlagChecker = :UserID,
                               BadFlagDate = sysdate,
                               BadFlagReason = bit_or(BadFlagReason ,16) , 
                               LastOPID = :UserID,
                               LastDate = sysdate
							   where fpl.packageid in  (
							   select fsl.packageid from FlowSterilizationList fsl where   fsl.sterilizationlogid=:LogId
							   ); 
      end;
      ]]>
    </Content>

    <Content Key="Update_SterilizePCDCancel" DataBaseType="SqlServer">
      <![CDATA[
      Update DevicesUseLog set IsOk=0,CheckID = null,CheckDate = null,IsCPCDOK = 0,BDAutoCheckJudgmentValue = null where LogId = @LogId 
      Update FlowPackageList 
                           set LastWarehouseID  = @WarehouseID,
                               LastOPID = @UserID,
                               BadFlag =  case when BadFlagReason ^512 ^ 16 = 0 then -2 else 1 end,
                               BadFlagChecker = null,
                               BadFlagDate = null,
                               BadFlagReason = BadFlagReason ^512 ^ 16,
                               LastDate = getdate()
                           where PackageID
                            in (
                                 select pl.Packageid  
                                 from  FlowPackageList pl inner join FlowSterilizationList fs  on pl.PackageID = fs.PackageID
                                                          inner join Storagelist sl on pl.StorageID = sl.StorageID
                                 where fs.SterilizationLogID=@LogId and 
                                       (sl.status = 50 or sl.status = 40)
                                )
                           
                           Update storagelist 
                           set storagelist.status = 40,
                               storagelist.warehouseid = @WarehouseID
                           where storagelist.storageid in
                            (
                              select sl.storageid 
                              from storagelist sl inner join FlowPackageList fl on sl.storageid=fl.storageid
                                                 inner join FlowSterilizationList fs on fs.PackageID = fl.PackageID
                              where fs.SterilizationLogID =@LogId and
                                    (sl.status = 50 or sl.status = 40)
                            )
                           
      ]]>
    </Content>
    <Content Key="Update_SterilizePCDCancel" DataBaseType="Oracle">
      <![CDATA[
      begin
      Update DevicesUseLog set IsOk=0,CheckID = null,CheckDate = null,IsCPCDOK = 0,BDAutoCheckJudgmentValue = null where LogId = :LogId ;
      
      Update FlowPackageList fpl
                           set LastWarehouseID  = :WarehouseID,
                               LastOPID = :UserID,
                               BadFlag =  case when bit_xor(bit_xor(BadFlagReason,512) ,16) = 0 then -2 else 1 end,
                               BadFlagChecker = null,
                               BadFlagDate = null,
                               BadFlagReason = bit_xor(bit_xor(BadFlagReason,512) ,16),
                               LastDate = sysdate 
							   where fpl.packageid in (
							   select fsl.packageid from FlowSterilizationList fsl,Storagelist sl where  fsl.packageid=sl.storageid  and 	 (sl.status = 50 or sl.status = 40) and fsl.sterilizationlogid=:LogId
							   );  
                            Update storagelist sl
                           set sl.status = 40,
                               sl.warehouseid = :WarehouseID
							    where sl.storageid in  (
							   select sl.storageid from FlowSterilizationList fsl,storagelist sl where  fsl.packageid=sl.storageid 
							   and 	 (sl.status = 50 or sl.status = 40) and fsl.sterilizationlogid=:LogId
							   );
      end;
      ]]>
    </Content>

    <Content Key="Update_SterilizeBCDCancel" DataBaseType="SqlServer">
      <![CDATA[
      
      declare @IsBPCDOK  int
      select @IsBPCDOK = IsBPCDOK
      FROM DevicesUseLog 
      where LogId = @LogId
      
      Update DevicesUseLog set IsOk=0,BCheckID = null,BCheckDate = null,IsBPCDOK = 0 where LogId = @LogId 
      
      if (@IsBPCDOK = -1)
      begin
        Update FlowPackageList 
         set LastWarehouseID  = @WarehouseID,
             LastOPID = @UserID,
             BadFlag = case when BadFlagReason ^1024 ^ 16 = 0 then -2 else 1 end,
             BadFlagChecker = null,
             BadFlagDate = null,
             BadFlagReason = BadFlagReason^1024^16,
             LastDate = getdate()
       where FlowPackageList.PackageID
        in (
         select fl.Packageid  
         from  FlowPackageList fl
               inner join FlowSterilizationList fs on fl.PackageID = fs.PackageID
               inner join DevicesUseLog du on du.LogID = fs.SterilizationLogID
               inner join DevicesUseLog du1 on du.deviceid = du1.deviceid
               inner join StorageList sl on fl.storageid = sl.storageid
         where
             du1.LogID=@LogId and 
             du.BeginDate > du1.LastBPCDDate and 
             du.BeginDate <= du1.begindate and
             (sl.status <>20 and sl.status <>70)
             )
      end
      ]]>
    </Content>
    <Content Key="Update_SterilizeBCDCancel" DataBaseType="Oracle">
      <![CDATA[ 
      DECLARE vIsBPCDOK number;
      begin
      select   IsBPCDOK into vIsBPCDOK
      FROM DevicesUseLog 
      where LogId = :LogId; 
      
      Update DevicesUseLog set IsOk=0,BCheckID = null,BCheckDate = null,IsBPCDOK = 0 where LogId = :LogId ;
      
      if vIsBPCDOK = -1 then
       Update FlowPackageList fl
         set LastWarehouseID  = :WarehouseID,
             LastOPID = :UserID,
             BadFlag = case when bit_xor(bit_xor(BadFlagReason,1024) ,16) = 0 then -2 else 1 end,
             BadFlagChecker = null,
             BadFlagDate = null,
             BadFlagReason = bit_xor(bit_xor(BadFlagReason,1024) ,16),
             LastDate = sysdate
			 where fl.packageid in  (
						   select fsl.packageid from FlowSterilizationList fsl,DevicesUseLog du,DevicesUseLog du1,StorageList sl
						   where  fsl.packageid=sl.storageid  and du.LogID = fsl.SterilizationLogID and du.deviceid = du1.deviceid
						   and  du.BeginDate > du1.LastBPCDDate and  du.BeginDate <= du1.begindate
						   and (sl.status <>20 and sl.status <>70) and du1.LogID=:LogId							    
			); 
       end if;
      end;
      ]]>
    </Content>

    <Content Key="Update_FlowRecycleContainerInfo" DataBaseType="SqlServer">
      declare @LastFDisinfectID uniqueidentifier
      select top 1 @LastFDisinfectID = FlowRecycleContainer.LastFDisinfectID
      from FlowRecycleContainer inner join FlowRecycle on FlowRecycleContainer.FRecycleID = FlowRecycle.FRecycleID
      where FlowRecycleContainer.ContainerID = @ContainerID
      order by FlowRecycle.RecycleDate desc
      if (@LastFDisinfectID is null)
      begin
      update FlowRecycleContainer set LastFDisinfectID =@FDisinfectID  where  LastFDisinfectID is null and ContainerID = @ContainerID
      end
      else
      begin
      update FlowRecycleContainer set LastFDisinfectID =@FDisinfectID  where  LastFDisinfectID =@LastFDisinfectID and ContainerID = @ContainerID
      end
    </Content>
    <Content Key="Update_FlowRecycleContainerInfo" DataBaseType="Oracle">
      DECLARE
      vLastRecycleDate date;
      vLastFDisinfectID varchar2(36);
      begin

      begin
      select    max(fr.RecycleDate) into vLastRecycleDate
      from FlowRecycleContainer frc inner join FlowRecycle fr on frc.FRecycleID = fr.FRecycleID
      where frc.ContainerID = :ContainerID;
      exception
      when NO_DATA_FOUND
      then vLastRecycleDate := null;
      end;

      begin
      select    frc.LastFDisinfectID into vLastFDisinfectID
      from FlowRecycleContainer frc inner join FlowRecycle fr on frc.FRecycleID = fr.FRecycleID
      where rownum = 1 and  frc.ContainerID = :ContainerID and fr.RecycleDate = vLastRecycleDate;
      exception
      when NO_DATA_FOUND
      then vLastFDisinfectID := null;
      end;
      if vLastFDisinfectID is null then
      update FlowRecycleContainer set LastFDisinfectID =:FDisinfectID  where  LastFDisinfectID is null and ContainerID = :ContainerID;
      else
      update FlowRecycleContainer set LastFDisinfectID =:FDisinfectID  where  LastFDisinfectID =vLastFDisinfectID and ContainerID = :ContainerID;
      end if;
      end;
    </Content>
    <Content Key="Update_FlowRecycleContainerInfoBad" DataBaseType="SqlServer">
      update FlowRecycleContainer set LastFDisinfectID = null  where  LastFDisinfectID = @FDisinfectID and ContainerID = @ContainerID
    </Content>
    <Content Key="Update_FlowRecycleContainerInfoBad" DataBaseType="Oracle">
      update FlowRecycleContainer set LastFDisinfectID = null  where  LastFDisinfectID = :FDisinfectID and ContainerID = :ContainerID
    </Content>

    <Content Key="Update_PreOrderDetailFinish" DataBaseType="SqlServer">
      Update FlowPreOrderDetail
      set ProvidedQty = PreOrderQty,
      FinishQty = PreOrderQty,
      FinishDate = getdate()
      where PreOrderID = @PreOrderID
    </Content>
    <Content Key="Update_PreOrderDetailFinish" DataBaseType="Oracle">
      Update FlowPreOrderDetail
      set ProvidedQty = PreOrderQty,
      FinishQty = PreOrderQty,
      FinishDate = sysdate
      where PreOrderID = :PreOrderID
    </Content>

    <Content Key="SP_Update_FlowTask" DataBaseType="SqlServer">
      UPDATE FlowTask SET
      CargoTopType = @CargoTopType,
      CargoTypeID = @CargoTypeID,
      TaskNum = @TaskNum,
      DoingNum = @DoingNum,
      FinishNum = @FinishNum,
      FinishFlag = @FinishFlag,
      CreateBy = @CreateBy,
      CreateTime = @CreateTime,
      FinishTime = @FinishTime,
      FRecycleID = @FRecycleID,
      PreOrderID = @PreOrderID
      WHERE
      TaskID = @TaskID
    </Content>
    <Content Key="SP_Update_FlowTask" DataBaseType="Oracle">
      UPDATE FlowTask SET
      CargoTopType = :CargoTopType,
      CargoTypeID = :CargoTypeID,
      TaskNum = :TaskNum,
      DoingNum = :DoingNum,
      FinishNum = :FinishNum,
      FinishFlag = :FinishFlag,
      CreateBy = :CreateBy,
      CreateTime = :CreateTime,
      FinishTime = :FinishTime,
      FRecycleID = :FRecycleID,
      PreOrderID = :PreOrderID
      WHERE
      TaskID = :TaskID
    </Content>
    <Content Key="SP_Update_FlowPreOrder" DataBaseType="SqlServer">
      UPDATE FlowPreOrder SET
      PreOrderCode = @PreOrderCode,
      OrgID = @OrgID,
      OrderDate = @OrderDate,
      PreOrderDate = @PreOrderDate,
      PreOrderType = @PreOrderType,
      PreOrderStatus = @PreOrderStatus,
      Remark = @Remark,
      FinishDate = @FinishDate,
      CheckStatus = @CheckStatus,
      CreateBy = @CreateBy,
      CreateDate = @CreateDate,
      ModifyBy = @ModifyBy,
      ModifyDate = @ModifyDate
      WHERE
      PreOrderID = @PreOrderID
    </Content>
    <Content Key="SP_Update_FlowPreOrder" DataBaseType="Oracle">
      UPDATE FlowPreOrder SET
      PreOrderCode = :PreOrderCode,
      OrgID = :OrgID,
      OrderDate = :OrderDate,
      PreOrderDate = :PreOrderDate,
      PreOrderType = :PreOrderType,
      PreOrderStatus = :PreOrderStatus,
      Remark = :Remark,
      FinishDate = :FinishDate,
      CheckState = :CheckState,
      CreateBy = :CreateBy,
      CreateDate = :CreateDate,
      ModifyBy = :ModifyBy,
      ModifyDate = :ModifyDate
      WHERE
      PreOrderID = :PreOrderID
    </Content>
    <Content Key="SP_Confirm_FlowPreOrder" DataBaseType="SqlServer">
      UPDATE FlowPreOrder SET
      CheckStatus = @CheckStatus
      WHERE
      PreOrderID = @PreOrderID
    </Content>
    <Content Key="SP_Confirm_FlowPreOrder" DataBaseType="Oracle">
      UPDATE FlowPreOrder SET
      CheckStatus = :CheckStatus
      WHERE
      PreOrderID = :PreOrderID
    </Content>

    <Content Key="Update_SetFlowSterilizeStatus" DataBaseType="Oracle">
      update storagelist
      set locationid = null,
      warehouseid = :warehouseid,
      status = :status
      where StorageID in
      (
      select fs.packageid
      from FlowSterilizationList fs   
       where   fs.SLogID = :LogID
      )

    </Content>
    <Content Key="Update_SetFlowSterilizeStatus" DataBaseType="SqlServer">
      update storagelist
      set locationid = null,
      warehouseid = @warehouseid,
      status = @status
      from FlowSterilizationList fs inner join FlowPackageList fp on fs.PackageID = fp.PackageID
      where storagelist.StorageID = fp.StorageID and
      fs.SLogID = @LogID
    </Content>
	  <Content Key="Update_PackageProvideNewProvideid" DataBaseType="Oracle">
		  DECLARE
		  vDIFFLOCATIONID varchar2(36);
		  vDIFFWAREHOUSEID varchar2(36);
		  vDIFFPROVIDEID varchar2(36);
		  begin
		  update flowprovidelist set provideid=:NEWPROVIDEID where provideid=:PROVIDEID and packageid=:PACKAGEID;
		  update flowprovidelist set provideid=:PROVIDEID where provideid=:NEWPROVIDEID and packageid=:NEWPACKAGEID;

		  SELECT  lastLocationID,lastWarehouseID,lastprovideid into  vDIFFLOCATIONID,vDIFFWAREHOUSEID,vDIFFPROVIDEID
		  FROM  FLOWPACKAGELIST
		  WHERE packageid=:PACKAGEID and rownum=1;

		  update storagelist set (LocationID,WarehouseID)=(select locationid,WarehouseID from storagelist where storageid=:NEWPACKAGEID)
		  where storageid=:PACKAGEID;
		  update flowpackagelist set (lastLocationID,lastWarehouseID,lastprovideid)=(select lastLocationID,lastWarehouseID,lastprovideid from flowpackagelist where storageid=:NEWPACKAGEID)
		  where storageid=:PACKAGEID;

		  update storagelist set LocationID=vDIFFLOCATIONID,WarehouseID=vDIFFWAREHOUSEID where storageid=:NEWPACKAGEID;

		  update flowpackagelist set lastLocationID=vDIFFLOCATIONID,lastWarehouseID=vDIFFWAREHOUSEID,lastprovideid=vDIFFPROVIDEID where storageid=:NEWPACKAGEID;
		  end;
	  </Content>
	  <Content Key="Update_PackageProvideNewProvideid" DataBaseType="SqlServer">
		  DECLARE @DIFFLOCATIONID UNIQUEIDENTIFIER
		  DECLARE @DIFFWAREHOUSEID UNIQUEIDENTIFIER
		  DECLARE @DIFFPROVIDEID UNIQUEIDENTIFIER
		  update flowprovidelist set provideid=@NEWPROVIDEID where provideid=@PROVIDEID and packageid=@PACKAGEID
		  update flowprovidelist set provideid=@PROVIDEID where provideid=@NEWPROVIDEID and packageid=@NEWPACKAGEID

		  SELECT TOP 1 @DIFFLOCATIONID =lastLocationID,@DIFFWAREHOUSEID = lastWarehouseID,@DIFFPROVIDEID=lastprovideid
		  FROM  FLOWPACKAGELIST
		  WHERE packageid=@PACKAGEID
		  
		  update sa  set sa.LocationID=sb.LocationID,sa.WarehouseID=sb.WarehouseID
		  from  storagelist sa,
		  (select  locationid,WarehouseID from storagelist where storageid=@NEWPACKAGEID) sb
		  where sa.storageid=@PACKAGEID
		  update sa  set sa.lastLocationID=sb.lastLocationID,sa.lastWarehouseID=sb.lastWarehouseID,sa.lastprovideid=sb.lastprovideid
		  from  flowpackagelist sa,
		  (select  lastLocationID,lastWarehouseID,lastprovideid  from flowpackagelist where storageid=@NEWPACKAGEID) sb
		  where sa.storageid=@PACKAGEID

		  update storagelist set LocationID=@DIFFLOCATIONID,WarehouseID=@DIFFWAREHOUSEID where storageid=@NEWPACKAGEID

		  update flowpackagelist set lastLocationID=@DIFFLOCATIONID,lastWarehouseID=@DIFFWAREHOUSEID,lastprovideid=@DIFFPROVIDEID where storageid=@NEWPACKAGEID

	  </Content>
    <Content Key="Update_PackageProvideConfirm" DataBaseType="SqlServer">
      DECLARE @DIFFPROVIDEID UNIQUEIDENTIFIER
      DECLARE @DIFFPACKAGEID UNIQUEIDENTIFIER
      DECLARE @DIFFSTORAGEID UNIQUEIDENTIFIER
      DECLARE @DIFFLENDFLAG INT
      DECLARE @STORAGEID UNIQUEIDENTIFIER
      DECLARE @CARGOTYPEID UNIQUEIDENTIFIER
      DECLARE @LENDFLAG INT

      SELECT @CARGOTYPEID = SL.CARGOTYPEID,@STORAGEID= SL.STORAGEID,@LENDFLAG = FL.LENDFLAG
      FROM FLOWPACKAGELIST FL  INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE FL.PACKAGEID = @PACKAGEID

      --从未发放的原发放记录中选出一条
      SELECT TOP 1 @DIFFPROVIDEID = FP.PROVIDEID,@DIFFPACKAGEID = FPL.PACKAGEID,@DIFFSTORAGEID=SL.STORAGEID,@DIFFLENDFLAG=PL.LENDFLAG
      FROM FLOWPROVIDE FP  INNER JOIN FLOWPROVIDELIST FPL  ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST PL  ON FPL.PACKAGEID = PL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      WHERE FPL.STATUS = 0 AND FP.ORGID = @ORGID AND PL.CARGOTYPEID = @CARGOTYPEID

      --修改选出的原发放记录
      UPDATE FLOWPACKAGELIST
      SET LASTOPID = A.LASTOPID,
      LASTWAREHOUSEID = A.LASTWAREHOUSEID,
      LENDFLAG = A.LENDFLAG,
      LASTDATE = GETDATE()
      FROM FLOWPACKAGELIST A
      WHERE PACKAGEID = @DIFFPACKAGEID AND A.PACKAGEID = @PACKAGEID

      UPDATE STORAGELIST
      SET MODIFIER = A.MODIFIER,
      MODIFYTIME = A.MODIFYTIME,
      WAREHOUSEID = A.WAREHOUSEID
      FROM STORAGELIST A
      WHERE STORAGEID =  @DIFFSTORAGEID AND
      A.STORAGEID = @STORAGEID

      UPDATE FLOWPROVIDELIST
      SET PACKAGEID = @DIFFPACKAGEID
      WHERE PROVIDEID = @PROVIDEID AND PACKAGEID = @PACKAGEID

      --修改现发放记录
      UPDATE FLOWPACKAGELIST
      SET LASTOPID = @OPID,
      LASTWAREHOUSEID = @WAREHOUSEID,
      LENDFLAG = @DIFFLENDFLAG,
      LASTDATE = GETDATE()
      WHERE FLOWPACKAGELIST.PACKAGEID =  @PACKAGEID

      UPDATE STORAGELIST
      SET MODIFIER = @OPID,
      MODIFYTIME = @OPTIME,
      WAREHOUSEID = @WAREHOUSEID
      WHERE STORAGEID = @STORAGEID

      UPDATE FLOWPROVIDELIST
      SET PACKAGEID = @PACKAGEID,
      STATUS = 1,
      ProvideConfirmID= @PROVIDECONFIRMID
      WHERE PROVIDEID = @DIFFPROVIDEID AND PACKAGEID = @DIFFPACKAGEID  
    </Content>
    <Content Key="Update_PackageProvideConfirm" DataBaseType="Oracle">
      DECLARE
      vDIFFPROVIDEID varchar2(36);
      vDIFFPACKAGEID varchar2(36);
      vDIFFSTORAGEID varchar2(36);
      vDIFFLENDFLAG number;
      vSTORAGEID varchar2(36);
      vCARGOTYPEID varchar2(36);
      vLENDFLAG number;
      begin
      SELECT SL.CARGOTYPEID,SL.STORAGEID,FL.LENDFLAG into vCARGOTYPEID,vSTORAGEID,vLENDFLAG
      FROM FLOWPACKAGELIST FL  INNER JOIN STORAGELIST SL  ON FL.STORAGEID = SL.STORAGEID
      WHERE FL.PACKAGEID = :PACKAGEID;
      SELECT FP.PROVIDEID,FPL.PACKAGEID,SL.STORAGEID,PL.LENDFLAG into vDIFFPROVIDEID,vDIFFPACKAGEID,vDIFFSTORAGEID,vDIFFLENDFLAG
      FROM FLOWPROVIDE FP  INNER JOIN FLOWPROVIDELIST FPL  ON FP.PROVIDEID = FPL.PROVIDEID
      INNER JOIN FLOWPACKAGELIST PL  ON FPL.PACKAGEID = PL.PACKAGEID
      INNER JOIN STORAGELIST SL  ON PL.STORAGEID = SL.STORAGEID
      WHERE FPL.STATUS = 0 AND FP.ORGID = :ORGID AND PL.CARGOTYPEID = vCARGOTYPEID and rownum=1;

      UPDATE FLOWPACKAGELIST FPL
      SET (LASTOPID,LASTWAREHOUSEID,LENDFLAG,LASTDATE) = (select LASTOPID,LASTWAREHOUSEID,LENDFLAG,sysdate from FLOWPACKAGELIST FPL1  where FPL1.PACKAGEID=:PACKAGEID),
      WHERE  EXISTS (SELECT 1 FROM FLOWPACKAGELIST FPL1 WHERE FPL.PACKAGEID=FPL.PACKAGEID AND FPL1.PACKAGEID=vDIFFPACKAGEID);

      UPDATE STORAGELIST SL
      SET (MODIFIER,MODIFYTIME,WAREHOUSEID) =(SELECT MODIFIER,MODIFYTIME,WAREHOUSEID FROM  STORAGELIST SL1 WHERE SL1.STORAGEID = vSTORAGEID)
      WHERE  EXISTS (SELECT 1 FROM STORAGELIST SL1 WHERE SL1.STORAGEID=SL.STORAGEID AND SL1.STORAGEID = vDIFFSTORAGEID);

      UPDATE FLOWPROVIDELIST
      SET PACKAGEID = vDIFFPACKAGEID
      WHERE PROVIDEID = :PROVIDEID AND PACKAGEID = :PACKAGEID;

      UPDATE FLOWPACKAGELIST
      SET LASTOPID = :OPID,
      LASTWAREHOUSEID = :WAREHOUSEID,
      LENDFLAG = vDIFFLENDFLAG,
      LASTDATE = sysdate
      WHERE FLOWPACKAGELIST.PACKAGEID =  :PACKAGEID;

      UPDATE STORAGELIST
      SET MODIFIER = :OPID,
      MODIFYTIME = :OPTIME,
      WAREHOUSEID = :WAREHOUSEID
      WHERE STORAGEID = vSTORAGEID;

      UPDATE FLOWPROVIDELIST
      SET PACKAGEID = :PACKAGEID,
      STATUS = 1,
      ProvideConfirmID= :PROVIDECONFIRMID
      WHERE PROVIDEID = vDIFFPROVIDEID AND PACKAGEID = vDIFFPACKAGEID;

      end ;
    </Content>


    <Content Key="UpdateProvidedQty" DataBaseType="SqlServer" >
      <![CDATA[
      DECLARE @CargoTypeID uniqueidentifier
      DECLARE @ID uniqueidentifier
      DECLARE @LENDFLAG int
      DECLARE @PCNT int
      DECLARE @NEEDCNT int
      DECLARE Temp_Cursor CURSOR FOR
      select p.CargoTypeID,p.LendFlag,count(1) as cnt
      from FlowPackageList p with (nolock)
      inner join FlowProvideList pl with (nolock) on p.PackageID = pl.PackageID
      where pl.ProvideID = @ProvideID
      group by p.CargoTypeID,p.lendflag

      OPEN Temp_Cursor
      FETCH NEXT FROM Temp_Cursor into @CargoTypeID,@LENDFLAG,@PCNT
      WHILE @@FETCH_STATUS = 0
      BEGIN
      if (NOT(@INCLUDELEND = 1 AND @LENDFLAG = 1))
      BEGIN
      select @ID = null
      select top 1 @ID = PreOrderDetailID,@NEEDCNT=od.PreOrderQty - od.ProvidedQty
      from FlowPreOrderDetail od with (nolock) inner join
      FlowPreOrder o with (nolock) on od.PreOrderID = o.PreOrderID
      where od.CheckStatus in (1,4)  and o.OrgID = @ORGID and od.CargoTypeID = @CargoTypeID and od.PreOrderQty > od.ProvidedQty
      order by o.OrderDate asc

      while (@ID is not null and @PCNT>0)
      begin
        if(@PCNT<=@NEEDCNT)  
        begin
          update FlowPreOrderDetail
          set ProvidedQty = ProvidedQty + @PCNT
          ,ProvideID= @ProvideID
          where PreOrderDetailID = @ID
          set @PCNT=0
        end
        else
        begin
          update FlowPreOrderDetail
          set ProvidedQty = ProvidedQty + @NEEDCNT
          where PreOrderDetailID = @ID
          set @PCNT=@PCNT-@NEEDCNT
          select @ID = null
          select top 1 @ID = PreOrderDetailID,@NEEDCNT=od.PreOrderQty - od.ProvidedQty
          from FlowPreOrderDetail od with (nolock) inner join
          FlowPreOrder o with (nolock) on od.PreOrderID = o.PreOrderID
          where od.CheckStatus in (1,4)  and o.OrgID = @ORGID and od.CargoTypeID = @CargoTypeID and od.PreOrderQty > od.ProvidedQty
          order by o.OrderDate asc
        end
      end
      END
      FETCH NEXT FROM Temp_Cursor INTO @CargoTypeID,@LENDFLAG,@PCNT
      END
      CLOSE Temp_Cursor
      DEALLOCATE Temp_Cursor
      ]]>
    </Content>
    <Content Key="UpdateProvidedQty" DataBaseType="Oracle" >
      declare
      vCargoTypeID varchar2(36);
      vLendFlag number;
      vID varchar2(36);
      begin
      DECLARE CURSOR Temp_Cursor  is
      select p.CargoTypeID,p.LendFlag
      from FlowPackageList p
      inner join FlowProvideList pl  on p.PackageID = pl.PackageID
      where pl.ProvideID = :ProvideID ;

      begin
      OPEN Temp_Cursor;
      fetch Temp_Cursor  INTO vCargoTypeID,vLendFlag;
      WHILE Temp_Cursor%FOUND
      loop
      if  not (:INCLUDELEND=1 and vLendFlag = 1 ) then
      begin
      select  PreOrderDetailID into vID
      from
      (
      select  PreOrderDetailID
      from FlowPreOrderDetail od   inner join
      FlowPreOrder o   on od.PreOrderID = o.PreOrderID
      where od.CheckStatus in (1,4) and od.PreOrderQty > od.ProvidedQty and o.OrgID = :ORGID and od.CargoTypeID = vCargoTypeID
      order by o.OrderDate asc
      ) where   rownum=1;
      exception
      when NO_DATA_FOUND
      then  vID := null ;
      end;

      if vID is not null then
      update FlowPreOrderDetail
      set ProvidedQty = ProvidedQty + 1
      ,ProvideID= :ProvideID
      where PreOrderDetailID = vID;
      end if;
      end if;

      FETCH   Temp_Cursor INTO vCargoTypeID,vLendFlag;
      END loop;
      CLOSE Temp_Cursor;
      end;
      end;
    </Content>

    <Content Key="UpdatePreOrderQty" DataBaseType="SqlServer">
      UPDATE FlowPreOrderDetail SET ProvidedQty=ProvidedQty + @Quantity WHERE PreOrderDetailID = @PreOrderDetailID
    </Content>
    <Content Key="UpdatePreOrderQty" DataBaseType="Oracle">
      UPDATE FlowPreOrderDetail SET ProvidedQty=ProvidedQty + :Quantity WHERE PreOrderDetailID = :PreOrderDetailID
    </Content>


    <Content Key="Upadte_UnSelectCheckData" DataBaseType="SqlServer">
      UPDATE STORAGECHECK
      SET STORAGECHECKPOINTID = NULL
      WHERE STORAGECHECKPOINTID = @STORAGECHECKPOINTID AND STORAGECHECKID = @STORAGECHECKID
    </Content>
    <Content Key="Upadte_UnSelectCheckData" DataBaseType="Oracle">
      UPDATE STORAGECHECK
      SET STORAGECHECKPOINTID = NULL
      WHERE STORAGECHECKPOINTID = :STORAGECHECKPOINTID AND STORAGECHECKID = :STORAGECHECKID
    </Content>

    <Content Key="Upadte_SelectCheckData" DataBaseType="SqlServer">
      UPDATE STORAGECHECK
      SET STORAGECHECKPOINTID = @STORAGECHECKPOINTID
      WHERE STORAGECHECKPOINTID IS NULL AND STORAGECHECKID = @STORAGECHECKID
    </Content>
    <Content Key="Upadte_SelectCheckData" DataBaseType="Oracle">
      UPDATE STORAGECHECK
      SET STORAGECHECKPOINTID = :STORAGECHECKPOINTID
      WHERE STORAGECHECKPOINTID IS NULL AND STORAGECHECKID = :STORAGECHECKID
    </Content>


    <Content Key="Recycle_SetNormalPackageContainerStatus" DataBaseType="SqlServer">
      Update Container
      set status = 1
      from FlowRecycleContainer
      where container.ContainerID = FlowRecycleContainer.ContainerID and
      FlowRecycleContainer.FRecycleID = @FRecycleID and
      not exists (select  1
      from FlowTask inner join CargoType on FlowTask.CargoTypeID = CargoType.CargoTypeID
      WHERE FlowTask.FRecycleID = @FRecycleID and CargoType.IsNormal = 0)
    </Content>
    <Content Key="Recycle_SetNormalPackageContainerStatus" DataBaseType="Oracle">
      Update Container
      set status = 1
      where containerid in
      (
      select container.containerid from container inner join FlowRecycleContainer on    container.ContainerID = FlowRecycleContainer.ContainerID
      where   FlowRecycleContainer.FRecycleID = :FRecycleID
      )
      and not exists (select  1
      from FlowTask inner join CargoType on FlowTask.CargoTypeID = CargoType.CargoTypeID
      WHERE FlowTask.FRecycleID = :FRecycleID and CargoType.IsNormal = 0)
    </Content>

    <Content Key="UpdatePackageBarcode" DataBaseType="SqlServer">
      update Container
      set PackageBarcode = @PackageBarcode
      WHERE CONTAINERID=@ContainerID
    </Content>
    <Content Key="UpdatePackageBarcode" DataBaseType="Oracle">
      update Container
      set PackageBarcode = :PackageBarcode
      WHERE CONTAINERID=:ContainerID
    </Content>

    <Content Key="Package_UpdatePackageSterilizeInfo" DataBaseType="SqlServer">
      update StorageList
      set Status = @StorageStatus,SterilizeDate = @DoDate,
      WarehouseID = @WarehouseID
      from FlowPackageList
      Where StorageList.StorageID = FlowPackageList.StorageID and
      FlowPackageList.FPackageID = @FPackageID

      update FlowPackageList
      set ValidDate = @DoDate,LastWarehouseID = @WarehouseID,badflag=0
      where     FlowPackageList.FPackageID = @FPackageID
    </Content>
    <Content Key="Package_UpdatePackageSterilizeInfo" DataBaseType="Oracle">
      begin
      update StorageList sl
      set Status = :StorageStatus,SterilizeDate = :DoDate,
      WarehouseID = :WarehouseID
      where EXISTS (
      select 1 from FlowPackageList fpl where fpl.packageid=sl.storageid and fpl.FPackageID = :FPackageID
      );
      update FlowPackageList
      set ValidDate = :DoDate,LastWarehouseID = :WarehouseID,badflag=0
      where     FlowPackageList.FPackageID = :FPackageID;
      end;
    </Content>

    <Content Key="Update_PackLocationByLocationID" DataBaseType="SqlServer">
      Update StorageList Set LocationID=@Location  Where Barcode=@barcode

      Update t1 Set t1.LastLocationID=@Location From FlowPackageList t1
      Inner Join STORAGELIST t2 On t2.StorageID=t1.StorageID
      Where t2.Barcode=@barcode
    </Content>
    <Content Key="Update_PackLocationByLocationID" DataBaseType="Oracle">
      <![CDATA[
      begin
      Update StorageList Set LocationID=:Location  Where Barcode=:barcode;
      
      Update FlowPackageList fp  set LastLocationID = :Location 
              where EXISTS (
				select 1 from STORAGELIST sl where sl.storageid=fp.packageid and sl.barcode=:barcode
			  ); 
      end;
      ]]>
    </Content>

    <Content Key="Update_FlowPackageListCheckerInfoBysql" DataBaseType="SqlServer">
      update FlowPackageList
      set CHECKID = @CHECKID,CheckDate =@CheckDate
      WHERE PACKAGEID=@PACKAGEID
    </Content>
    <Content Key="Update_FlowPackageListCheckerInfoBysql" DataBaseType="Oracle">
      update FlowPackageList
      set CHECKID = :CHECKID,CheckDate =:CheckDate
      WHERE PACKAGEID=:PACKAGEID
    </Content>

    <Content Key="Update_DeleteLostBarcodeByBarcodeG" DataBaseType="SqlServer">
      update FlowPackageLostBarcodeCList set Quantity = (Quantity / @QUANTITY * ( @QUANTITY - 1))
      where FPackageID = @FPACKAGEID
    </Content>
    <Content Key="Update_DeleteLostBarcodeByBarcodeG" DataBaseType="Oracle">
      update FlowPackageLostBarcodeCList set Quantity = (Quantity / :QUANTITY * ( :QUANTITY - 1))
      where FPackageID = :FPACKAGEID
    </Content>

    <Content Key="Update_DeleteLostBarcodeByBarcodeH" DataBaseType="SqlServer">
      update FlowPackageLostBarcode set Quantity = (Quantity - 1) where FPackageID = @FPACKAGEID
    </Content>
    <Content Key="Update_DeleteLostBarcodeByBarcodeH" DataBaseType="Oracle">
      update FlowPackageLostBarcode set Quantity = (Quantity - 1) where FPackageID = :FPACKAGEID
    </Content>

    <Content Key="Update_DoNormalPackgeProvideUpdateInfo" DataBaseType="SqlServer">
      Update FlowPackageList
      set 	LastOPID = @OPID,
      LastWarehouseID = @WarehouseID,
      LastLocationID = @LocationID,
      LastDate = getdate()
      from    FlowProvideList fpl
      where   FlowPackageList.PackageID = fpl.PackageID and
      fpl.ProvideID = @ProvideID

      Update StorageList
      set 	LocationID = @LocationID,
      WarehouseID = @WarehouseID,
      Status = 60,
      Modifier = @OPID,
      ModifyTime = @OPDate
      from FlowProvideList fpl inner join FlowPackageList fl on fpl.PackageID = fl.PackageID
      where Storagelist.StorageID = fl.StorageID and
      fpl.ProvideID = @ProvideID
    </Content>
    <Content Key="Update_DoNormalPackgeFetchInUpdateInfo" DataBaseType="SqlServer">
      Update FlowPackageList
      set 	LastOPID = @OPID,
      LastWarehouseID = @WarehouseID,
      LastLocationID = @LocationID,
      LastDate = getdate()
      from    FlowFetchList fpl
      where   FlowPackageList.PackageID = fpl.PackageID and
      fpl.fetchID = @fetchID

      Update StorageList
      set 	LocationID = @LocationID,
      WarehouseID = @WarehouseID,
      Status = 60,
      Modifier = @OPID,
      ModifyTime = @OPDate
      from FlowFetchList fpl inner join FlowPackageList fl on fpl.PackageID = fl.PackageID
      where Storagelist.StorageID = fl.StorageID and
      fpl.fetchID = @fetchID
    </Content>
    <Content Key="Update_DoNormalPackgeFetchInUpdateInfo" DataBaseType="Oracle">
      begin
      Update FlowPackageList fp
      set 	LastOPID = :OPID,
      LastWarehouseID = :WarehouseID,
      LastLocationID = :LocationID,
      LastDate = sysdate
      where EXISTS ( select 1 from FlowFetchList fpl
      where fp.PackageID = fpl.PackageID and fpl.fetchID = :fetchID);

      Update StorageList sl
      set 	LocationID = :LocationID,
      WarehouseID = :WarehouseID,
      Status = 60,
      Modifier = :OPID,
      ModifyTime = :OPDate
      where EXISTS ( select 1 from FlowFetchList fpl
      where sl.StorageID = fpl.PackageID and fpl.fetchID = :fetchID);
      end;
    </Content>
    <Content Key="Update_DoNormalPackgeProvideUpdateInfo" DataBaseType="Oracle">
      begin
      Update FlowPackageList fp
      set 	LastOPID = :OPID,
      LastWarehouseID = :WarehouseID,
      LastLocationID = :LocationID,
      LastDate = sysdate
      where EXISTS (select 1 from FlowProvideList fpl
      where fp.PackageID = fpl.PackageID and fpl.ProvideID = :ProvideID);

      Update StorageList sl
      set 	LocationID = :LocationID,
      WarehouseID = :WarehouseID,
      Status = 60,
      Modifier = :OPID,
      ModifyTime = :OPDate
      where EXISTS (select 1 from FlowProvideList fpl
      where sl.StorageID = fpl.PackageID and fpl.ProvideID = :ProvideID);
      end;
    </Content>

    <Content Key="UpdatePreOrderQtyByLendRetrun" DataBaseType="SqlServer" >
      <![CDATA[
      DECLARE @NEEDQTY INT
      DECLARE @ID uniqueidentifier
      DECLARE Temp_Cursor CURSOR FOR
      select pd.PreOrderDetailID,pd.PreOrderQty - pd.ProvidedQty
      from FlowPreOrderDetail pd with (nolock) inner join FlowPreOrder p with (nolock) on pd.PreOrderID = p.PreOrderID
      where	pd.CargoTypeID = @CargoTypeID and
      pd.FlowOrgID = @FlowOrgID and
      p.OrgID = @OrgID and
      pd.PreOrderQty > pd.ProvidedQty
      order by p.OrderDate desc

      OPEN Temp_Cursor
      FETCH NEXT FROM Temp_Cursor into @ID,@NEEDQTY
      WHILE @@FETCH_STATUS = 0
      BEGIN
      if (@NEEDQTY >=  @TOTALQTY)
      begin
      update FlowPreOrderDetail
      set ProvidedQty = ProvidedQty + @TOTALQTY,
      ReturnQty = ReturnQty + @TOTALQTY
      where PreOrderDetailID = @ID
      break
      end
      else
      begin
      update FlowPreOrderDetail
      set ProvidedQty = ProvidedQty + @NEEDQTY,
      ReturnQty = ReturnQty + @NEEDQTY
      where PreOrderDetailID = @ID

      select @TOTALQTY = @TOTALQTY - @NEEDQTY
      end
      FETCH NEXT FROM Temp_Cursor into @ID,@NEEDQTY
      END
      CLOSE Temp_Cursor
      DEALLOCATE Temp_Cursor
      ]]>
    </Content>
    <Content Key="UpdatePreOrderQtyByLendRetrun" DataBaseType="Oracle" >
      <![CDATA[
      declare 
      vNEEDQTY number;
      vID varchar2(36);
      begin
      DECLARE CURSOR Temp_Cursor  is
      select pd.PreOrderDetailID,pd.PreOrderQty - pd.ProvidedQty as NeedQty
      from FlowPreOrderDetail pd  inner join FlowPreOrder p   on pd.PreOrderID = p.PreOrderID
      where	pd.CargoTypeID = :CargoTypeID and
      pd.FlowOrgID = :FlowOrgID and
      p.OrgID = :OrgID and
      pd.PreOrderQty > pd.ProvidedQty
      order by p.OrderDate desc; 
        begin
        OPEN Temp_Cursor;
        fetch Temp_Cursor  INTO vID,vNEEDQTY;
        WHILE Temp_Cursor%FOUND
        loop         
          if  vNEEDQTY >= :TOTALQTY then
            update FlowPreOrderDetail
            set ProvidedQty = ProvidedQty + :TOTALQTY,
            ReturnQty = ReturnQty + :TOTALQTY
            where PreOrderDetailID = vID;
            exit;
          else 
            update FlowPreOrderDetail
            set ProvidedQty = ProvidedQty + vNEEDQTY,
            ReturnQty = ReturnQty + vNEEDQTY
            where PreOrderDetailID = vID;
            :TOTALQTY := :TOTALQTY - vNEEDQTY;
          end if;
          fetch Temp_Cursor  INTO vID,vNEEDQTY;
        END loop;
        CLOSE Temp_Cursor;
        end;
      end;
      ]]>
    </Content>

    <Content Key="Update_PackageTaskBySqlA" DataBaseType="SqlServer">
      Update FlowTask Set FinishNum = TaskNum,FinishFlag = 1,FinishTime =GetDate() Where TaskID =@TaskID
    </Content>
    <Content Key="Update_PackageTaskBySqlA" DataBaseType="Oracle">
      Update FlowTask Set FinishNum = TaskNum,FinishFlag = 1,FinishTime =sysdate Where TaskID =:TaskID
    </Content>

    <Content Key="Update_PackageTaskBySqlB" DataBaseType="SqlServer">
      Update FlowTask Set FinishNum =IsNull(FinishNum,0)+ @FinishQty  Where TaskID =@TaskID
    </Content>
    <Content Key="Update_PackageTaskBySqlB" DataBaseType="Oracle">
      Update FlowTask Set FinishNum =nvl(FinishNum,0)+ :FinishQty  Where TaskID =:TaskID
    </Content>


    <Content Key="Package_GetPackageDetailPrintData" DataBaseType="SqlServer">
		select ctk.KindName,t2.CargoTypeName FPackageType,FOrder=Row_Number() OVER(ORDER BY PackageSetting.CargoTopType,PackageSetting.FOrder), CargoType.CargoTypeName,FlowPackageCargoList.Quantity / FlowPackage.Quantity as Quantity,IsNull(t2.IsPrintContents,0) IsPrintContents
		,u.FNames AS PACKAGER,cu.FNames as CHECKER
		from FlowPackageList inner join StorageList on FlowPackageList.StorageID = StorageList.StorageID
		inner join FlowPackageCargoList on FlowPackageList.FPackageID = FlowPackageCargoList.FPackageID
		inner join FlowPackage on FlowPackage.FPackageID = FlowPackageCargoList.FPackageID
		inner join PackageSetting on (FlowPackageCargoList.CargoTypeID = PackageSetting.CargoTypeID and FlowPackageList.CargoTypeID = PackageSetting.PackageTypeID)
		inner join CargoType on FlowPackageCargoList.CargoTypeID = CargoType.CargoTypeID
		inner join CargoType t2 On t2.CargoTypeID=PackageSetting.PackageTypeID
		inner join CargoTypeKind ctk on t2.CargoTypeKind=ctk.ID
		inner join AC_WorkGroup u    on FlowPackage.opid = u.FID
		left join AC_WorkGroup cu  on FlowPackageList.checkid = cu.FID
		where StorageList.Barcode = @Barcode
		Order By PackageSetting.CargoTopType,PackageSetting.FOrder
	</Content>
    <Content Key="Package_GetPackageDetailPrintData" DataBaseType="Oracle">
		select ctk.KindName,t2.CargoTypeName FPackageType, Row_Number() OVER(ORDER BY PackageSetting.CargoTopType,PackageSetting.FOrder) as  FOrder, CargoType.CargoTypeName,FlowPackageCargoList.Quantity / FlowPackage.Quantity as Quantity,nvl(t2.IsPrintContents,0) IsPrintContents
		,u.FNames AS PACKAGER,cu.FNames as CHECKER
		from FlowPackageList inner join StorageList on FlowPackageList.StorageID = StorageList.StorageID
		inner join FlowPackageCargoList on FlowPackageList.FPackageID = FlowPackageCargoList.FPackageID
		inner join FlowPackage on FlowPackage.FPackageID = FlowPackageCargoList.FPackageID
		inner join PackageSetting on (FlowPackageCargoList.CargoTypeID = PackageSetting.CargoTypeID and FlowPackageList.CargoTypeID = PackageSetting.PackageTypeID)
		inner join CargoType on FlowPackageCargoList.CargoTypeID = CargoType.CargoTypeID
		inner join CargoType t2 On t2.CargoTypeID=PackageSetting.PackageTypeID
		inner join CargoTypeKind ctk on t2.CargoTypeKind=ctk.ID
		inner join AC_WorkGroup u    on FlowPackage.opid = u.FID
		left join AC_WorkGroup cu  on FlowPackageList.checkid = cu.FID
		where StorageList.Barcode = :Barcode
		Order By PackageSetting.CargoTopType,PackageSetting.FOrder
	</Content>

    <Content Key="Package_GetPackageInDetailPrintData" DataBaseType="SqlServer">
		select ctk.KindName,t2.CargoTypeName FPackageType,FOrder=Row_Number() OVER(ORDER BY PackageSetting.CargoTopType,PackageSetting.FOrder), CargoType.CargoTypeName,FlowPackageInCargoList.Quantity / FlowPackageIn.Quantity as Quantity,IsNull(t2.IsPrintContents,0) IsPrintContents
		,u.FNames AS PACKAGER,cu.FNames as CHECKER
		from FlowPackageList inner join StorageList on FlowPackageList.StorageID = StorageList.StorageID
		inner join FlowPackageInCargoList on FlowPackageList.FPackageID = FlowPackageInCargoList.FPackageID
		inner join FlowPackageIn on FlowPackageIn.FPackageID = FlowPackageInCargoList.FPackageID
		inner join PackageSetting on (FlowPackageInCargoList.CargoTypeID = PackageSetting.CargoTypeID and FlowPackageList.CargoTypeID = PackageSetting.PackageTypeID)
		inner join CargoType on FlowPackageInCargoList.CargoTypeID = CargoType.CargoTypeID
		inner join CargoType t2 On t2.CargoTypeID=PackageSetting.PackageTypeID
		inner join CargoTypeKind ctk on t2.CargoTypeKind=ctk.ID
		inner join AC_WorkGroup u   on FlowPackageIn.packagerid = u.FID
		left join AC_WorkGroup cu  on FlowPackageList.checkid = cu.FID
		where StorageList.Barcode = @Barcode
		Order By PackageSetting.CargoTopType,PackageSetting.FOrder
	</Content>
    <Content Key="Package_GetPackageInDetailPrintData" DataBaseType="Oracle">
		select ctk.KindName,t2.CargoTypeName FPackageType,Row_Number() OVER(ORDER BY PackageSetting.CargoTopType,PackageSetting.FOrder) as FOrder, CargoType.CargoTypeName,FlowPackageInCargoList.Quantity / FlowPackageIn.Quantity as Quantity,nvl(t2.IsPrintContents,0) IsPrintContents
		,u.FNames AS PACKAGER,cu.FNames as CHECKER
		from FlowPackageList inner join StorageList on FlowPackageList.StorageID = StorageList.StorageID
		inner join FlowPackageInCargoList on FlowPackageList.FPackageID = FlowPackageInCargoList.FPackageID
		inner join FlowPackageIn on FlowPackageIn.FPackageID = FlowPackageInCargoList.FPackageID
		inner join PackageSetting on (FlowPackageInCargoList.CargoTypeID = PackageSetting.CargoTypeID and FlowPackageList.CargoTypeID = PackageSetting.PackageTypeID)
		inner join CargoType on FlowPackageInCargoList.CargoTypeID = CargoType.CargoTypeID
		inner join CargoType t2 On t2.CargoTypeID=PackageSetting.PackageTypeID
		inner join CargoTypeKind ctk on t2.CargoTypeKind=ctk.ID
		inner join AC_WorkGroup u   on FlowPackageIn.packagerid = u.FID
		left join AC_WorkGroup cu  on FlowPackageList.checkid = cu.FID
		where StorageList.Barcode = :Barcode
		Order By PackageSetting.CargoTopType,PackageSetting.FOrder
	</Content>

    <Content Key="Query_PackageCostSettingGetLastSetting" DataBaseType="SqlServer">
      Select Top 1 FID,FDate,FOperator,FManualCost,FManualDisinfectCost,FMachineDisinfectCost,FSteamCost,FOxiraneCost,FPlasmaCost
      From PackageCostSetting Order By FDate Desc
    </Content>
    <Content Key="Query_PackageCostSettingGetLastSetting" DataBaseType="Oracle">
      <![CDATA[
	  select * from 
	  (
      Select  FID,FDate,FOperator,FManualCost,FManualDisinfectCost,FMachineDisinfectCost,FSteamCost,FOxiraneCost,FPlasmaCost	  
      From PackageCostSetting order by FDate Desc ) where rownum=1
      ]]>
    </Content>

    <Content Key="Query_PackageCostEntryCreateByPackageA" DataBaseType="SqlServer">
      Select Count(1) From PackageSetting t1
      Inner Join CargoType t2 On t2.CargoTypeID=t1.CargoTypeID
      Where t1.PackageTypeID=@CargoTypeID
    </Content>
    <Content Key="Query_PackageCostEntryCreateByPackageA" DataBaseType="Oracle">
      Select Count(1) From PackageSetting t1
      Inner Join CargoType t2 On t2.CargoTypeID=t1.CargoTypeID
      Where t1.PackageTypeID=:CargoTypeID
    </Content>

    <Content Key="Query_PackageCostEntryCreateByPackageB" DataBaseType="SqlServer">
      Insert Into PackageCostEntry(FParentID,FPackageID,FWastage,FCostPrice,FQty)
      Select @ParentID,t2.CargoTypeID,Case When t2.CargoTopType=1 Then ISNULL(t2.FWastage,0) Else 1 End,ISNULL(t2.FCostPrice,0),t1.Quantity From PackageSetting t1
      Inner Join CargoType t2 On t2.CargoTypeID=t1.CargoTypeID
      Where t1.PackageTypeID=@CargoTypeID
    </Content>
    <Content Key="Query_PackageCostEntryCreateByPackageB" DataBaseType="Oracle">
      Insert Into PackageCostEntry(FParentID,FPackageID,FWastage,FCostPrice,FQty)
      Select :ParentID,t2.CargoTypeID,Case When t2.CargoTopType=1 Then nvl(t2.FWastage,0) Else 1 End,nvl(t2.FCostPrice,0),t1.Quantity From PackageSetting t1
      Inner Join CargoType t2 On t2.CargoTypeID=t1.CargoTypeID
      Where t1.PackageTypeID=:CargoTypeID
    </Content>

    <Content Key="Query_PackageCostGetPackageData" DataBaseType="SqlServer">
      Select t1.CargoTypeID FPackageID,t1.CargoTypeName FPackageName,t1.FLevel,t2.FName FLevelName
      From CargoType t1
      Left Join PackageCostLevel t2 On t2.FID=t1.FLevel
      Where t1.CargoTopType=16 And IsNull(t1.IsDisabled,0)=0
    </Content>
    <Content Key="Query_PackageCostGetPackageData" DataBaseType="Oracle">
      Select t1.CargoTypeID FPackageID,t1.CargoTypeName FPackageName,t1.FLevel,t2.FName FLevelName
      From CargoType t1
      Left Join PackageCostLevel t2 On t2.FID=t1.FLevel
      Where t1.CargoTopType=16 And nvl(t1.IsDisabled,0)=0
    </Content>

    <Content Key="Query_PackageCostGetPackageDetail" DataBaseType="SqlServer">
      SELECT T2.CARGOTOPTYPE,T1.CARGOTYPEID,ISNULL(T2.FWASTAGE,0) FWASTAGE,ISNULL(T2.FCOSTPRICE,0) FCOSTPRICE,T2.CARGOTYPENAME,CASE WHEN T2.CARGOTOPTYPE=1 THEN ISNULL(T2.FWASTAGE,0)*ISNULL(T2.FCOSTPRICE,0)*T1.QUANTITY ELSE ISNULL(T2.FCOSTPRICE,0)*T1.QUANTITY END FTOTAL,T1.QUANTITY FROM PACKAGESETTING T1
      INNER JOIN CARGOTYPE T2 ON T2.CARGOTYPEID=T1.CARGOTYPEID
      WHERE T1.PACKAGETYPEID=@PackageTypeID
    </Content>
    <Content Key="Query_PackageCostGetPackageDetail" DataBaseType="Oracle">
      SELECT T2.CARGOTOPTYPE,T1.CARGOTYPEID,NVL(T2.FWASTAGE,0) FWASTAGE,NVL(T2.FCOSTPRICE,0) FCOSTPRICE,T2.CARGOTYPENAME,CASE WHEN T2.CARGOTOPTYPE=1 THEN NVL(T2.FWASTAGE,0)*NVL(T2.FCOSTPRICE,0)*T1.QUANTITY ELSE NVL(T2.FCOSTPRICE,0)*T1.QUANTITY END FTOTAL,T1.QUANTITY FROM PACKAGESETTING T1
      INNER JOIN CARGOTYPE T2 ON T2.CARGOTYPEID=T1.CARGOTYPEID
      WHERE T1.PACKAGETYPEID=:PackageTypeID
    </Content>

    <Content Key="Query_PackageCostGetLevelList" DataBaseType="SqlServer">
      Select FID,FNAME From PackageCostLevel Where IsNull(FIsDisable,0)=0 Order By FName
    </Content>
    <Content Key="Query_PackageCostGetLevelList" DataBaseType="Oracle">
      Select FID,FNAME From PackageCostLevel Where nvl(FIsDisable,0)=0 Order By FName
    </Content>

    <Content Key="Query_PackageCostLevelExistA" DataBaseType="SqlServer">
      Select Top 1 1 From PackageCostLevel Where FName=@LevelName
    </Content>
    <Content Key="Query_PackageCostLevelExistA" DataBaseType="Oracle">
      <![CDATA[
      Select  1 From PackageCostLevel Where rownum=1 and FName=:LevelName
      ]]>
    </Content>

    <Content Key="Query_PackageCostLevelExistB" DataBaseType="SqlServer">
      <![CDATA[
      Select Top 1 1 From PackageCostLevel Where FName=@LevelName And FID<>@LevelID
      ]]>
    </Content>
    <Content Key="Query_PackageCostLevelExistB" DataBaseType="Oracle">
      <![CDATA[
      Select  1 From PackageCostLevel Where rownum=1 and FName=:LevelName And FID<>:LevelID
      ]]>
    </Content>
    <Content Key="Recycle_MatchLostBarcode" DataBaseType="SqlServer">
      <![CDATA[
      
        Update FlowPackageList
        set LastOPID = (select LastOPID from FlowPackageList where PackageID = @LostBarcodePackageID),
	        LastDate = (select LastDate from FlowPackageList where PackageID = @LostBarcodePackageID)
        where PackageID = @PackageID

         declare @quantity int    
         declare @storageid uniqueidentifier    
         declare @cargotypeid uniqueidentifier    
         declare @istorageid uniqueidentifier --器械的
         
        DECLARE packagedlist_cursor CURSOR FOR
         SELECT fpc.storageid,sum(fpc.QUANTITY / fp.QUANTITY) as QUANTITY,c.CARGOTYPEID
         from FlowPackage fp with (nolock) inner join FlowPackageCargoList fpc with (nolock) on fp.FPackageID = fpc.FPackageID
								           inner join CargoType c with (nolock) on fpc.CargoTypeID = c.CargoTypeID
                                           inner join FlowPackageList fl with (nolock) on fpc.FPackageID = fl.FPackageID
         where c.CargoTopType = 1 and fl.PackageID = @PackageID
         group by fpc.StorageID,c.cargotypeid
         
         OPEN packagedlist_cursor    
               
         FETCH NEXT FROM packagedlist_cursor INTO  @storageid,@quantity,@cargotypeid    
            
         WHILE @@FETCH_STATUS = 0    
         BEGIN    
           --非单件可跟踪物品改变状态为回收（从已配包处减去，回收处加上)    
	        update dbo.storagelist    
	        set	Quantity = Quantity - @quantity,
		        modifytime = getdate()    
	        where  storageid = @storageid
          	    
	        FETCH NEXT FROM packagedlist_cursor INTO  @storageid,@quantity,@cargotypeid    
         END    
            
         CLOSE packagedlist_cursor    
         DEALLOCATE packagedlist_cursor    
        
        Update FlowRecycleList
        set packageID= @PackageID
        where packageID = @LostBarcodePackageID
        
        Update StorageList
        set Status = 20
        where StorageID = @PackageID

        Update SysLog
        set KeyID1 = @PackageID
        where KeyID1 = @LostBarcodePackageID
        
        delete flowpackagelist
        where packageid = @LostBarcodePackageID
        
        delete storagelist
        where storageid = @LostBarcodePackageID
      ]]>
    </Content>
    <Content Key="Recycle_MatchLostBarcode" DataBaseType="Oracle">
      <![CDATA[
     declare
     vquantity number;
    vstorageid varchar2(36);
    vcargotypeid varchar2(36);
begin
    Update FlowPackageList
        set LastOPID = (select LastOPID from FlowPackageList where PackageID = :LostBarcodePackageID),
          LastDate = (select LastDate from FlowPackageList where PackageID = :LostBarcodePackageID)
        where PackageID = :PackageID;    
    DECLARE CURSOR packagedlist_cursor  is
    SELECT fpc.storageid,sum(fpc.QUANTITY / fp.QUANTITY) as QUANTITY,c.CARGOTYPEID
         from FlowPackage fp  inner join FlowPackageCargoList fpc   on fp.FPackageID = fpc.FPackageID
                           inner join CargoType c   on fpc.CargoTypeID = c.CargoTypeID
                                           inner join FlowPackageList fl   on fpc.FPackageID = fl.FPackageID
         where c.CargoTopType = 1 and fl.PackageID = :PackageID
         group by fpc.StorageID,c.cargotypeid;

    begin
        OPEN packagedlist_cursor;
        fetch packagedlist_cursor  INTO   vstorageid,vquantity,vcargotypeid;
        WHILE packagedlist_cursor%FOUND
        loop 
            update  storagelist    
            set  Quantity = Quantity - vquantity,modifytime = sysdate where  storageid = vstorageid;
         FETCH   packagedlist_cursor INTO vstorageid,vquantity,vcargotypeid;
        END loop;
        CLOSE packagedlist_cursor; 
		Update StorageList        set Status = 20        where StorageID = :PackageID;         
        Update SysLog      set KeyID1 = :PackageID      where KeyID1 = :LostBarcodePackageID; 
   end;
end;
      ]]>
    </Content>
    <Content Key="Delete_FlowPreOrderDetailsByForeignKey" DataBaseType="SqlServer">
      DELETE FROM FlowPreOrderDetail
      WHERE
      PreOrderID = @PreOrderID
    </Content>
    <Content Key="Delete_FlowPreOrder" DataBaseType="SqlServer">
      DELETE FROM FlowPreOrder
      WHERE
      PreOrderID = @Keys
    </Content>
    <Content Key="Delete_FlowPreOrder" DataBaseType="Oracle">
      DELETE FROM FlowPreOrder
      WHERE
      PreOrderID = :Keys
    </Content>
    <Content Key="Common_FlowPreOrder" DataBaseType="SqlServer">
      SELECT
      newid() AS PreOrderDetailID,
      NULL AS PreOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS TaskID,
      NULL AS ProvidedQty,
      NULL AS FinishQty,
      NULL AS FinishDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM
      AC_OrgProducts
      LEFT JOIN CargoType
      ON AC_OrgProducts.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE AC_OrgProducts.ID = '00000000-0000-0000-0000-000000000000'
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="Common_FlowPreOrder" DataBaseType="Oracle">
      SELECT
      fun_newguid() AS PreOrderDetailID,
      NULL AS PreOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS TaskID,
      NULL AS ProvidedQty,
      NULL AS FinishQty,
      NULL AS FinishDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM
      AC_OrgProducts
      LEFT JOIN CargoType
      ON AC_OrgProducts.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE AC_OrgProducts.ID = '00000000-0000-0000-0000-000000000000'
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>
    <Content Key="Get_PreOrderBasePackages" DataBaseType="SqlServer">
      SELECT
      newid() AS PreOrderDetailID,
      NULL AS PreOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS TaskID,
      NULL AS ProvidedQty,
      NULL AS FinishQty,
      NULL AS FinishDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM
      SafeStock
      LEFT JOIN CargoType
      ON SafeStock.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE CargoType.IsDisabled = 0 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="Get_PreOrderBasePackages" DataBaseType="Oracle">
      SELECT
      fun_newguid() AS PreOrderDetailID,
      NULL AS PreOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS TaskID,
      NULL AS ProvidedQty,
      NULL AS FinishQty,
      NULL AS FinishDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM
      SafeStock
      LEFT JOIN CargoType
      ON SafeStock.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE CargoType.IsDisabled = 0 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="Get_PreOrderBaseData" DataBaseType="SqlServer">
      SELECT
      newid() AS PreOrderDetailID,
      NULL AS PreOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS TaskID,
      NULL AS ProvidedQty,
      NULL AS FinishQty,
      NULL AS FinishDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      CargoType.Pinyin As CargoTypePinyin,
      CargoType.Unit As Unit,
      CargoType.MinUnit As MinUnit,
      CargoType.Amount AS UnitPrice,
      CargoType.Specification As CargoTypeSpecification,
      CargoType.Remark As CargoTypeRemark,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM
      CargoType
      LEFT JOIN SystemTypeParameter CargoTopType
      ON  CargoType.IsDisabled = 0 AND (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE CargoType.IsDisabled = 0 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="Get_PreOrderBaseData" DataBaseType="Oracle">
      SELECT
      fun_newguid() AS PreOrderDetailID,
      NULL AS PreOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS TaskID,
      NULL AS ProvidedQty,
      NULL AS FinishQty,
      NULL AS FinishDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      CargoType.Pinyin As CargoTypePinyin,
      CargoType.Unit As Unit,
      CargoType.MinUnit As MinUnit,
      CargoType.Amount AS UnitPrice,
      CargoType.Specification As CargoTypeSpecification,
      CargoType.Remark As CargoTypeRemark,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM
      CargoType
      LEFT JOIN SystemTypeParameter CargoTopType
      ON  CargoType.IsDisabled = 0 AND (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      inner JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE CargoType.IsDisabled = 0 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="Get_WebPreOrderBasePackages" DataBaseType="SqlServer">
      SELECT
      newid() AS PreOrderDetailID,
      NULL AS PreOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS TaskID,
      NULL AS ProvidedQty,
      NULL AS FinishQty,
      NULL AS FinishDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      CargoType.Pinyin As CargoTypePinyin,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM
      CargoType
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE CargoType.IsDisabled = 0 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="Get_WebPreOrderBasePackages" DataBaseType="Oracle">
      SELECT
      fun_newguid() AS PreOrderDetailID,
      NULL AS PreOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS TaskID,
      NULL AS ProvidedQty,
      NULL AS FinishQty,
      NULL AS FinishDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      CargoType.Pinyin As CargoTypePinyin,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM
      CargoType
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE CargoType.IsDisabled = 0 {0}
      ORDER BY CargoTopTypeText,CargoTypeKindText,CargoTypeText
    </Content>

    <Content Key="Common_FlowPackageNumOrder" DataBaseType="SqlServer">
      SELECT
      newid() AS  FlowPackageNumDetailID,
      NULL AS FlowPackageNumOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM		   FlowPackageNumOrderDetail
      LEFT JOIN CargoType
      ON FlowPackageNumOrderDetail.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE  FlowPackageNumOrderDetail.CargoTypeID is null
    </Content>
    <Content Key="Common_FlowPackageNumOrder" DataBaseType="Oracle">
      SELECT
      fun_newguid() AS PreOrderDetailID,
      NULL AS PreOrderID,
      CargoType.CargoTopType,
      CargoType.CargoTypeID,
      0 AS PreOrderQty,
      NULL AS CreateBy,
      NULL AS CreateDate,
      NULL AS ModifyBy,
      NULL AS ModifyDate,
      NULL AS TaskID,
      NULL AS ProvidedQty,
      NULL AS FinishQty,
      NULL AS FinishDate,
      NULL AS CheckState,
      CargoTopType.TypeName AS CargoTopTypeText,
      CargoTypeKind.KindName as CargoTypeKindText,
      CargoTypeKind.ID as CargoTypeKind,
      CargoType.CargoTypeName AS CargoTypeText,
      NULL AS CreateBy_Name,
      NULL AS ModifyBy_Name
      FROM
      AC_OrgProducts
      LEFT JOIN CargoType
      ON AC_OrgProducts.CargoTypeID = CargoType.CargoTypeID
      LEFT JOIN SystemTypeParameter CargoTopType ON (CargoTopType.TypeKey='CargoTopType' AND CargoType.CargoTopType=CargoTopType.TypeValue)
      LEFT JOIN CargoTypeKind ON (CargoType.CargoTypeKind = CargoTypeKind.ID)
      WHERE AC_OrgProducts.ID = '00000000-0000-0000-0000-000000000000'
    </Content>
    <Content Key="Query_FlowLendList" DataBaseType="Oracle">
      SELECT T1.PROVIDEID,T1.PROVIDEDATE,T1.BARCODE,T1.CARGOTOPTYPE,T1.FISPDADATA,T1.FLOWORGID,T1.LOCATIONID,T1.OPID,
      T1.ORGID,T1.RECIPIENT,T1.RECIPIENTID,T2.CARGOTYPEID,T2.QUANTITY,T2.RETURNQUANTITY,T3.FNames OPIDNAME,T4.FNames LENDNAME,T5.NAME ORGNAME,T6.CARGOTYPENAME
      FROM FLOWPROVIDE T1
      INNER JOIN FLOWPROVIDELEND T2 ON T2.PROVIDEID=T1.PROVIDEID
      INNER JOIN CARGOTYPE T6 ON T6.CARGOTYPEID=T2.CARGOTYPEID
      --LEFT JOIN AC_USER T3 ON T3.ID=T1.OPID
      --LEFT JOIN AC_USER T4 ON T4.ID=T1.RECIPIENTID
      LEFT JOIN AC_WorkGroup T3 ON T3.FID=T1.OPID
      LEFT JOIN AC_WorkGroup T4 ON T4.FID=T1.RECIPIENTID
      LEFT JOIN AC_ORG T5 ON T5.ID=T1.ORGID
      WHERE 1=1 {0}
      ORDER BY T1.PROVIDEDATE DESC
    </Content>

    <Content Key="Query_FlowLendList" DataBaseType="SqlServer">
      SELECT T1.PROVIDEID,T1.PROVIDEDATE,T1.BARCODE,T1.CARGOTOPTYPE,T1.FISPDADATA,T1.FLOWORGID,T1.LOCATIONID,T1.OPID,
      T1.ORGID,T1.RECIPIENT,T1.RECIPIENTID,T2.CARGOTYPEID,T2.QUANTITY,T2.RETURNQUANTITY,T3.FNames OPIDNAME,T4.FNames LENDNAME,T5.NAME ORGNAME,T6.CARGOTYPENAME
      FROM FLOWPROVIDE T1
      INNER JOIN FLOWPROVIDELEND T2 ON T2.PROVIDEID=T1.PROVIDEID
      INNER JOIN CARGOTYPE T6 ON T6.CARGOTYPEID=T2.CARGOTYPEID
      --LEFT JOIN AC_USER T3 ON T3.ID=T1.OPID
      --LEFT JOIN AC_USER T4 ON T4.ID=T1.RECIPIENTID
      LEFT JOIN AC_WorkGroup T3 ON T3.FID=T1.OPID
      LEFT JOIN AC_WorkGroup T4 ON T4.FID=T1.RECIPIENTID
      LEFT JOIN AC_ORG T5 ON T5.ID=T1.ORGID
      WHERE 1=1 {0}
      ORDER BY T1.PROVIDEDATE DESC
    </Content>
    <Content Key="Query_FlowLendSummaryList" DataBaseType="Oracle">
      <![CDATA[
		Select  t4.ID,t1.CARGOTYPEID,sum(t1.QUANTITY-nvl(t1.RETURNQUANTITY,0)) as QUANTITY
		From FlowProvideLend t1
		Inner Join FlowProvide t2 On t1.ProvideID = t2.ProvideID
		left Join  FlowProvideLendReturnDetail fplrd on fplrd.ProvideID=t2.ProvideID
		left Join FlowProvideLendReturn fplr on fplr.ProvideLendReturnID=fplrd.ProvideLendReturnID
		left Join view_CargoType t3 On t1.CargoTypeID = t3.CargoTypeID
		Inner Join AC_Org t4 On t4.ID=t2.OrgID
		Where 1=1  {0}
		group by t4.id,t1.cargotypeid having sum(t1.QUANTITY-nvl(t1.RETURNQUANTITY,0))<>0
		]]>
    </Content>

    <Content Key="Query_FlowLendSummaryList" DataBaseType="SqlServer">
      <![CDATA[
		  Select  t4.ID,t1.CARGOTYPEID,sum(t1.QUANTITY-ISNULL(t1.RETURNQUANTITY,0)) as QUANTITY
		  From FlowProvideLend t1
		  Inner Join FlowProvide t2 On t1.ProvideID = t2.ProvideID
		  left Join  FlowProvideLendReturnDetail fplrd on fplrd.ProvideID=t2.ProvideID
		  left Join FlowProvideLendReturn fplr on fplr.ProvideLendReturnID=fplrd.ProvideLendReturnID
		  left Join view_CargoType t3 On t1.CargoTypeID = t3.CargoTypeID
		  Inner Join AC_Org t4 On t4.ID=t2.OrgID
		  Where 1=1  {0}
		  group by t4.id,t1.cargotypeid having sum(t1.QUANTITY-isnull(t1.RETURNQUANTITY,0))<>0
		  ]]>
    </Content>
    <Content Key="Query_GetPreOrderInfo" DataBaseType="Oracle">
      SELECT SUM(PREORDERQTY - PROVIDEDQTY) AS PREORDERQTY FROM FLOWPREORDERDETAIL
      WHERE PREORDERQTY>PROVIDEDQTY AND CARGOTYPEID=:CargoTypeID
    </Content>

    <Content Key="Query_GetPreOrderInfo" DataBaseType="SqlServer">
      SELECT SUM(PREORDERQTY - PROVIDEDQTY) AS PREORDERQTY FROM FLOWPREORDERDETAIL
      WHERE PREORDERQTY>PROVIDEDQTY AND CARGOTYPEID=@CargoTypeID
    </Content>
    <Content Key="Query_GetPreOrderInfoBycargotypeidfloworgidorgid" DataBaseType="Oracle">
      SELECT SUM(PREORDERQTY - PROVIDEDQTY) AS PREORDERQTY FROM FLOWPREORDERDETAIL   pd  inner join FlowPreOrder p   on pd.PreOrderID = p.PreOrderID
      where  pd.CargoTypeID = :CargoTypeID and
      pd.FlowOrgID = :FlowOrgID and
      p.OrgID = :OrgID and
      pd.PreOrderQty > pd.ProvidedQty
    </Content>
    <Content Key="Query_GetPreOrderInfoBycargotypeidfloworgidorgid" DataBaseType="SqlServer">
      SELECT SUM(PREORDERQTY - PROVIDEDQTY) AS PREORDERQTY FROM FLOWPREORDERDETAIL   pd  inner join FlowPreOrder p   on pd.PreOrderID = p.PreOrderID
      where  pd.CargoTypeID = @CargoTypeID and
      pd.FlowOrgID = @FlowOrgID and
      p.OrgID = @OrgID and
      pd.PreOrderQty > pd.ProvidedQty
    </Content>
    <Content Key="Query_GetBarcodeByPackageInID" DataBaseType="Oracle">
      SELECT T2.BARCODE FROM FLOWPACKAGELIST T1
      INNER JOIN STORAGELIST T2 ON T2.STORAGEID=T1.STORAGEID
      WHERE T1.FPACKAGEID=:FPACKAGEID
    </Content>

    <Content Key="Query_GetBarcodeByPackageInID" DataBaseType="SqlServer">
      SELECT T2.BARCODE FROM FLOWPACKAGELIST T1
      INNER JOIN STORAGELIST T2 ON T2.STORAGEID=T1.STORAGEID
      WHERE T1.FPACKAGEID=@FPACKAGEID
    </Content>


    <Content Key="Query_GetPackageInByOrg" DataBaseType="Oracle">
      SELECT T1.ID,T1.KINDNAME,T3.CARGOTYPEID,T3.CARGOTYPENAME
      FROM  CARGOTYPE T3
      INNER JOIN CARGOTYPEKIND T1 ON T3.CARGOTYPEKIND=T1.ID
      left JOIN AC_ORG T2 ON T1.ORGID = T2.ID
      WHERE  nvl(T2.ISDISABLED,0)=0 AND T3.ISIN=1 AND T3.ISDISABLED=0   {0}
    </Content>
    <Content Key="Query_GetPackageInByOrg" DataBaseType="SqlServer">
      SELECT T1.ID,T1.KINDNAME,T3.CARGOTYPEID,T3.CARGOTYPENAME
      FROM  CARGOTYPE T3
      INNER JOIN CARGOTYPEKIND T1 ON T3.CARGOTYPEKIND=T1.ID
      left JOIN AC_ORG T2 ON T1.ORGID = T2.ID
      WHERE  ISNULL(T2.ISDISABLED,0)=0 AND ISNULL(T3.ISIN,0)=1 AND T3.ISDISABLED=0   {0}
    </Content> 
    <Content Key="Query_GetPackageInDefault" DataBaseType="Oracle">
      <![CDATA[
      SELECT T1.ID,T1.KINDNAME,T3.CARGOTYPEID,T3.CARGOTYPENAME
      FROM CARGOTYPEKIND T1
      INNER JOIN AC_ORG T2 ON T1.ORGID = T2.ID
      INNER JOIN CARGOTYPE T3 ON T3.CARGOTYPEKIND=T1.ID
      WHERE  rownum<21  and T2.ISDISABLED = 0 AND T3.ISIN=1 AND T3.ISDISABLED=0 AND t3.isoem=0 and T2.ISOUTSIDE = 1 {0}
      ]]>
    </Content>
    <Content Key="Query_GetPackageInDefault" DataBaseType="SqlServer">
      SELECT  T1.ID,T1.KINDNAME,T3.CARGOTYPEID,T3.CARGOTYPENAME
      FROM CARGOTYPEKIND T1
      INNER JOIN AC_ORG T2 ON T1.ORGID = T2.ID
      INNER JOIN CARGOTYPE T3 ON T3.CARGOTYPEKIND=T1.ID
      WHERE T2.ISDISABLED = 0 AND ISNULL(T3.ISIN,0)=1 AND T3.ISDISABLED=0 AND t3.isoem=0 and T2.ISOUTSIDE = 1 {0}
    </Content>

    <Content Key="Query_GetPackageInOrgDefault" DataBaseType="Oracle">
      <![CDATA[
      SELECT T1.ID,T1.KINDNAME,T3.CARGOTYPEID,T3.CARGOTYPENAME
      FROM CARGOTYPEKIND T1
      INNER JOIN AC_ORG T2 ON T1.ORGID = T2.ID
      INNER JOIN CARGOTYPE T3 ON T3.CARGOTYPEKIND=T1.ID
      WHERE  rownum<21  and T2.ISDISABLED = 0 AND T3.ISIN=1 AND T3.ISDISABLED=0 AND t3.isoem=0 and T2.ISOUTSIDE = 1 {0}
      ]]>
    </Content>
    <Content Key="Query_GetPackageInOrgDefault" DataBaseType="SqlServer">
      SELECT  T1.ID,T1.KINDNAME,T3.CARGOTYPEID,T3.CARGOTYPENAME
      FROM CARGOTYPEKIND T1
      INNER JOIN AC_ORG T2 ON T1.ORGID = T2.ID
      INNER JOIN CARGOTYPE T3 ON T3.CARGOTYPEKIND=T1.ID
      WHERE T2.ISDISABLED = 0 AND ISNULL(T3.ISIN,0)=1 AND T3.ISDISABLED=0 AND t3.isoem=0 and T2.ISOUTSIDE = 1 {0}
    </Content>

    <Content Key="PackageIn_GetPackageOEM" DataBaseType="Oracle">
      <![CDATA[
      SELECT T1.ID,T1.KINDNAME,T3.CARGOTYPEID,T3.CARGOTYPENAME
      FROM  CARGOTYPE T3 
      INNER JOIN CARGOTYPEKIND T1 ON T3.CARGOTYPEKIND=T1.ID
      left JOIN AC_ORG T2 ON T1.ORGID = T2.ID
      WHERE   nvl(T2.ISDISABLED,0)=0 AND T3.ISIN=1 AND T3.ISDISABLED=0 AND T3.IsOEM = 1 {0}
      ]]>
    </Content>
    <Content Key="PackageIn_GetPackageOEM" DataBaseType="SqlServer">
      SELECT {0} T1.ID,T1.KINDNAME,T3.CARGOTYPEID,T3.CARGOTYPENAME
      FROM  CARGOTYPE T3 
      INNER JOIN CARGOTYPEKIND T1 ON T3.CARGOTYPEKIND=T1.ID
      left JOIN AC_ORG T2 ON T1.ORGID = T2.ID
      WHERE  isnull(T2.ISDISABLED,0)=0 AND ISNULL(T3.ISIN,0)=1 AND T3.ISDISABLED=0 AND T3.IsOEM = 1 {1}
    </Content>


    <Content Key="Query_GetPackageSettingData" DataBaseType="Oracle">
      SELECT PACKAGESETTINGID,PACKAGETYPEID,CARGOTYPEID,CARGOTYPENAME,CARGOTOPTYPE,QUANTITY,
      ISTRACK,ISDYNAMIC,ISRECYCLEDYNAMIC,ISCSSDPROVIDE,FORDER,ISDOCTOROWN
      FROM PACKAGESETTING WHERE CARGOTYPEID=:CargotypeID
    </Content>
    <Content Key="Query_GetPackageSettingData" DataBaseType="SqlServer">
      SELECT PACKAGESETTINGID,PACKAGETYPEID,CARGOTYPEID,CARGOTYPENAME,CARGOTOPTYPE,QUANTITY,
      ISTRACK,ISDYNAMIC,ISRECYCLEDYNAMIC,ISCSSDPROVIDE,FORDER,ISDOCTOROWN
      FROM PACKAGESETTING WHERE CARGOTYPEID=@CargotypeID
    </Content>

    <Content Key="Query_GetPackageFlowCardData" DataBaseType="SqlServer">
      <![CDATA[
      SELECT X1.CARGOTYPEID,X2.CARGOTYPENAME,SUM(FRECYCLEQTY) FRECYCLEQTY,SUM(FPACKAGEQTY) FPACKAGEQTY,SUM(FSTERILIZEQTY) FSTERILIZEQTY,SUM(FSTERILIZECHECKQTY) FSTERILIZECHECKQTY FROM (
      --回收数量
      SELECT T3.CARGOTYPEID,COUNT(T3.PACKAGEID) FRECYCLEQTY,0 AS FPACKAGEQTY,0 AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
      FROM FLOWRECYCLE T1
      INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
      WHERE T1.RECYCLEDATE >= @BeginDate AND T1.RECYCLEDATE < @EndDate AND T3.FLOWORGID = @FlowOrgID 
      GROUP BY T3.CARGOTYPEID

      UNION ALL

      --配包数量
      SELECT  T1.CARGOTYPEID,0 AS FRECYCLEQTY,COUNT(T1.PACKAGEID) FPACKAGEQTY,0 AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
      FROM FLOWPACKAGELIST T1
      INNER JOIN STORAGELIST T2 ON T2.STORAGEID=T1.STORAGEID
      WHERE T2.MAEDATE >= @BeginDate AND T2.MAEDATE < @EndDate AND T1.FLOWORGID = @FlowOrgID AND T1.IsTemp = 0
      GROUP BY T1.CARGOTYPEID

      UNION ALL

      --灭菌包数量
      SELECT T3.CARGOTYPEID,0 AS FRECYCLEQTY,0 AS FPACKAGEQTY,COUNT(T1.PACKAGEID) AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
      FROM FLOWSTERILIZATIONLIST T1
      INNER JOIN DEVICESUSELOG T2 ON T2.LOGID=T1.STERILIZATIONLOGID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T1.PACKAGEID
      WHERE T2.BEGINDATE >= @BeginDate AND T2.BEGINDATE < @EndDate AND T3.FLOWORGID = @FlowOrgID 
      GROUP BY T3.CARGOTYPEID

      UNION ALL

      --灭菌包审核数量
      SELECT T3.CARGOTYPEID,0 AS FRECYCLEQTY,0 AS FPACKAGEQTY,0 AS FSTERILIZEQTY,COUNT(T1.PACKAGEID) AS FSTERILIZECHECKQTY
      FROM FLOWSTERILIZATIONLIST T1
      INNER JOIN DEVICESUSELOG T2 ON T2.LOGID=T1.STERILIZATIONLOGID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T1.PACKAGEID
      WHERE T3.BADFLAG>=0 AND T2.BEGINDATE >= @BeginDate AND T2.BEGINDATE < @EndDate AND T3.FLOWORGID = @FlowOrgID 
      GROUP BY T3.CARGOTYPEID
      ) X1
      INNER JOIN CARGOTYPE X2 ON X2.CARGOTYPEID=X1.CARGOTYPEID
      GROUP BY X1.CARGOTYPEID,X2.CARGOTYPENAME
      ORDER BY X2.CARGOTYPENAME
      ]]>
    </Content>
    <Content Key="Query_GetPackageFlowCardData" DataBaseType="Oracle">
      <![CDATA[
      SELECT X1.CARGOTYPEID,X2.CARGOTYPENAME,SUM(FRECYCLEQTY) FRECYCLEQTY,SUM(FPACKAGEQTY) FPACKAGEQTY,SUM(FSTERILIZEQTY) FSTERILIZEQTY,SUM(FSTERILIZECHECKQTY) FSTERILIZECHECKQTY FROM (
      --回收数量
      SELECT T3.CARGOTYPEID,COUNT(T3.PACKAGEID) FRECYCLEQTY,0 AS FPACKAGEQTY,0 AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
      FROM FLOWRECYCLE T1
      INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
      WHERE T1.RECYCLEDATE >= :BeginDate AND T1.RECYCLEDATE < :EndDate AND T3.FLOWORGID = :FlowOrgID 
      GROUP BY T3.CARGOTYPEID

      UNION

      --配包数量
      SELECT  T1.CARGOTYPEID,0 AS FRECYCLEQTY,COUNT(T1.PACKAGEID) FPACKAGEQTY,0 AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
      FROM FLOWPACKAGELIST T1
      INNER JOIN STORAGELIST T2 ON T2.STORAGEID=T1.STORAGEID
      WHERE T2.MAEDATE >= :BeginDate AND T2.MAEDATE < :EndDate AND T1.FLOWORGID = :FlowOrgID   AND T1.IsTemp = 0
      GROUP BY T1.CARGOTYPEID

      UNION

      --灭菌包数量
      SELECT T3.CARGOTYPEID,0 AS FRECYCLEQTY,0 AS FPACKAGEQTY,COUNT(T1.PACKAGEID) AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
      FROM FLOWSTERILIZATIONLIST T1
      INNER JOIN DEVICESUSELOG T2 ON T2.LOGID=T1.STERILIZATIONLOGID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T1.PACKAGEID
       WHERE T2.BEGINDATE >= :BeginDate AND T2.BEGINDATE < :EndDate AND T3.FLOWORGID = :FlowOrgID
      GROUP BY T3.CARGOTYPEID

      UNION

      --灭菌包审核数量
      SELECT T3.CARGOTYPEID,0 AS FRECYCLEQTY,0 AS FPACKAGEQTY,0 AS FSTERILIZEQTY,COUNT(T1.PACKAGEID) AS FSTERILIZECHECKQTY
      FROM FLOWSTERILIZATIONLIST T1
      INNER JOIN DEVICESUSELOG T2 ON T2.LOGID=T1.STERILIZATIONLOGID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T1.PACKAGEID
       WHERE T3.BADFLAG>=0 AND T2.BEGINDATE >= :BeginDate AND T2.BEGINDATE < :EndDate AND T3.FLOWORGID = :FlowOrgID 
      GROUP BY T3.CARGOTYPEID

      ) X1
      INNER JOIN CARGOTYPE X2 ON X2.CARGOTYPEID=X1.CARGOTYPEID
      GROUP BY X1.CARGOTYPEID,X2.CARGOTYPENAME
      ORDER BY X2.CARGOTYPENAME
      ]]>
    </Content>

    <Content Key="Query_GetPackageFlowCardDataEdit" DataBaseType="SqlServer">
      <![CDATA[
      SELECT X1.CARGOTYPEID,X2.CARGOTYPENAME,SUM(FRECYCLEQTY) FRECYCLEQTY,0 FPACKAGEQTY,0 FSTERILIZEQTY,0 FSTERILIZECHECKQTY 
      FROM (
      --回收数量
      SELECT T3.CARGOTYPEID,COUNT(T3.PACKAGEID) FRECYCLEQTY,0 AS FPACKAGEQTY,0 AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
      FROM FLOWRECYCLE T1
      INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
      WHERE T1.RECYCLEDATE >= @BeginDate AND T1.RECYCLEDATE < @EndDate AND T3.FLOWORGID = @FlowOrgID 
      GROUP BY T3.CARGOTYPEID
      ) X1
      INNER JOIN CARGOTYPE X2 ON X2.CARGOTYPEID=X1.CARGOTYPEID
      WHERE X2.ISINSTRUMENTPACKAGE=@IsSingle  AND X2.ISDISABLED=0
      GROUP BY X1.CARGOTYPEID,X2.CARGOTYPENAME
      ORDER BY X2.CARGOTYPENAME
      ]]>
    </Content>
    <Content Key="Query_GetPackageFlowCardDataEdit" DataBaseType="Oracle">
      <![CDATA[
      SELECT X1.CARGOTYPEID,X2.CARGOTYPENAME,SUM(FRECYCLEQTY) FRECYCLEQTY,0 FPACKAGEQTY,0 FSTERILIZEQTY,0 FSTERILIZECHECKQTY 
      FROM (
      --回收数量
      SELECT T3.CARGOTYPEID,COUNT(T3.PACKAGEID) FRECYCLEQTY,0 AS FPACKAGEQTY,0 AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
      FROM FLOWRECYCLE T1
      INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
      WHERE T1.RECYCLEDATE >= :BeginDate AND T1.RECYCLEDATE < :EndDate AND T3.FLOWORGID = :FlowOrgID 
      GROUP BY T3.CARGOTYPEID
      ) X1
      INNER JOIN CARGOTYPE X2 ON X2.CARGOTYPEID=X1.CARGOTYPEID
      WHERE X2.ISINSTRUMENTPACKAGE=:IsSingle  AND X2.ISDISABLED=0
      GROUP BY X1.CARGOTYPEID,X2.CARGOTYPENAME
      ORDER BY X2.CARGOTYPENAME
      ]]>
    </Content>

    <Content Key="Query_GetPackageFlowCardDataSingle" DataBaseType="SqlServer">
      <![CDATA[
      SELECT X1.CARGOTYPEID,X2.CARGOTYPENAME,SUM(FRECYCLEQTY) FRECYCLEQTY,X4.ID FORGID,X4.NAME FORGNAME,0 FPACKAGEQTY,0 FSTERILIZEQTY,0 FSTERILIZECHECKQTY
      FROM (
		    SELECT T3.CARGOTYPEID,T3.LASTWAREHOUSEID,COUNT(T3.PACKAGEID) FRECYCLEQTY,0 AS FPACKAGEQTY,0 AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
		    FROM FLOWRECYCLE T1
		    INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
		    INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
		    WHERE T1.RECYCLEDATE >= @BeginDate AND T1.RECYCLEDATE < @EndDate AND T3.FLOWORGID = @FlowOrgID 
		    GROUP BY T3.CARGOTYPEID,T3.LASTWAREHOUSEID
      ) X1
      INNER JOIN CARGOTYPE X2 ON X2.CARGOTYPEID=X1.CARGOTYPEID
      INNER JOIN WAREHOUSE X3 ON X3.WAREHOUSEID=X1.LASTWAREHOUSEID
      INNER JOIN AC_ORG X4 ON X4.ID=X3.ORGID
      WHERE X2.ISINSTRUMENTPACKAGE=1  AND X2.ISDISABLED=0
      GROUP BY X1.CARGOTYPEID,X2.CARGOTYPENAME,X4.ID,X4.NAME
      ORDER BY X2.CARGOTYPENAME
      ]]>
    </Content>
    <Content Key="Query_GetPackageFlowCardDataSingle" DataBaseType="Oracle">
      <![CDATA[
      SELECT X1.CARGOTYPEID,X2.CARGOTYPENAME,SUM(FRECYCLEQTY) FRECYCLEQTY,X4.ID FORGID,X4.NAME FORGNAME,0 FPACKAGEQTY,0 FSTERILIZEQTY,0 FSTERILIZECHECKQTY
      FROM (
		    SELECT T3.CARGOTYPEID,T3.LASTWAREHOUSEID,COUNT(T3.PACKAGEID) FRECYCLEQTY,0 AS FPACKAGEQTY,0 AS FSTERILIZEQTY,0 AS FSTERILIZECHECKQTY
		    FROM FLOWRECYCLE T1
		    INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
		    INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
		    WHERE T1.RECYCLEDATE >= :BeginDate AND T1.RECYCLEDATE < :EndDate AND T3.FLOWORGID = :FlowOrgID 
		    GROUP BY T3.CARGOTYPEID,T3.LASTWAREHOUSEID
      ) X1
      INNER JOIN CARGOTYPE X2 ON X2.CARGOTYPEID=X1.CARGOTYPEID
      INNER JOIN WAREHOUSE X3 ON X3.WAREHOUSEID=X1.LASTWAREHOUSEID
      INNER JOIN AC_ORG X4 ON X4.ID=X3.ORGID
      WHERE X2.ISINSTRUMENTPACKAGE=1  AND X2.ISDISABLED=0
      GROUP BY X1.CARGOTYPEID,X2.CARGOTYPENAME,X4.ID,X4.NAME
      ORDER BY X2.CARGOTYPENAME
      ]]>
    </Content>

    <Content Key="Query_GetPackageFlowCardDataSingleEdit" DataBaseType="SqlServer">
      <![CDATA[
      SELECT T1.CUTOFFTIME,T1.FRECYCLEOP,T1.FPACKAGEOP,T1.FSTERILIZEOP,T1.FPROVIDEOP,T2.FID,T2.FPARENTID,T3.CARGOTYPEID,T2.FRECYCLEQTY,T3.CARGOTYPENAME,T2.FORGID ,T4.NAME FORGNAME,
		T2.FPACKAGEQTY,T2.FRECYCLEQTY,T2.FRECYCLEQTY,T2.FSTERILIZEQTY,T2.FSTERILIZECHECKQTY,T2.FPACKAGEMEMO,T2.FSTERILIZEMEMO,T2.FSTERILIZECHECKMEMO 
      FROM FLOWRECYCLELINETIME T1 
      INNER JOIN FLOWCARDDATA T2 ON T2.FPARENTID=T1.FID
      INNER JOIN CARGOTYPE T3 ON T3.CARGOTYPEID=T2.FPACKAGEID
      LEFT JOIN AC_ORG T4 ON T4.ID=T2.FORGID
      WHERE T2.FTYPE=3 AND T3.ISINSTRUMENTPACKAGE=1 AND T3.ISDISABLED=0 AND T3.ISDISABLED=0 AND T1.FID=@TimeID 
      ]]>
    </Content>
    <Content Key="Query_GetPackageFlowCardDataSingleEdit" DataBaseType="Oracle">
      <![CDATA[
      SELECT T1.CUTOFFTIME,T1.FRECYCLEOP,T1.FPACKAGEOP,T1.FSTERILIZEOP,T1.FPROVIDEOP,T2.FID,T2.FPARENTID,T3.CARGOTYPEID,T2.FRECYCLEQTY,T3.CARGOTYPENAME,T2.FORGID ,T4.NAME FORGNAME,
		T2.FPACKAGEQTY,T2.FRECYCLEQTY,T2.FRECYCLEQTY,T2.FSTERILIZEQTY,T2.FSTERILIZECHECKQTY,T2.FPACKAGEMEMO,T2.FSTERILIZEMEMO,T2.FSTERILIZECHECKMEMO 
      FROM FLOWRECYCLELINETIME T1 
      INNER JOIN FLOWCARDDATA T2 ON T2.FPARENTID=T1.FID
      INNER JOIN CARGOTYPE T3 ON T3.CARGOTYPEID=T2.FPACKAGEID
      LEFT JOIN AC_ORG T4 ON T4.ID=T2.FORGID
      WHERE T2.FTYPE=3 AND T3.ISINSTRUMENTPACKAGE=1 AND T3.ISDISABLED=0 AND T3.ISDISABLED=0 AND T1.FID=:TimeID 
      ]]>
    </Content>

    <Content Key="Query_FlowCardDataCheckSingleExist" DataBaseType="SqlServer">
      <![CDATA[
      SELECT TOP 1 1 FROM FLOWRECYCLELINETIME T1
      INNER JOIN FLOWCARDDATA T2 ON T2.FPARENTID=T1.FID
      WHERE T2.FTYPE=3 AND T1.FID=@FID
      ]]>
    </Content>
    <Content Key="Query_FlowCardDataCheckSingleExist" DataBaseType="Oracle">
      <![CDATA[
      SELECT TOP 1 1 FROM FLOWRECYCLELINETIME T1
      INNER JOIN FLOWCARDDATA T2 ON T2.FPARENTID=T1.FID
      WHERE T2.FTYPE=3 AND T1.FID=:FID
      ]]>
    </Content>


    <Content Key="Query_GetPackageFlowCardDataEditHistory" DataBaseType="SqlServer">
      <![CDATA[
      SELECT T1.CUTOFFTIME,T1.FRECYCLEOP,T1.FPACKAGEOP,T1.FSTERILIZEOP,T1.FPROVIDEOP,T2.FID,T2.FPARENTID,T3.CARGOTYPEID,
		    T2.FPACKAGEQTY,T2.FRECYCLEQTY,T2.FRECYCLEQTY,T2.FSTERILIZEQTY,T2.FSTERILIZECHECKQTY,T3.CARGOTYPENAME
		    ,T2.FPACKAGEMEMO,T2.FSTERILIZEMEMO,T2.FSTERILIZECHECKMEMO 
      FROM FLOWRECYCLELINETIME T1 
      INNER JOIN FLOWCARDDATA T2 ON T2.FPARENTID=T1.FID
      INNER JOIN CARGOTYPE T3 ON T3.CARGOTYPEID=T2.FPACKAGEID
      WHERE T2.FTYPE=@Type AND T3.ISINSTRUMENTPACKAGE=@IsSingle  AND T3.ISDISABLED=0 AND T1.FID=@TimeID
      ]]>
    </Content>
    <Content Key="Query_GetPackageFlowCardDataEditHistory" DataBaseType="Oracle">
      <![CDATA[
      SELECT T1.CUTOFFTIME,T1.FRECYCLEOP,T1.FPACKAGEOP,T1.FSTERILIZEOP,T1.FPROVIDEOP,T2.FID,T2.FPARENTID,T3.CARGOTYPEID,
		    T2.FPACKAGEQTY,T2.FRECYCLEQTY,T2.FRECYCLEQTY,T2.FSTERILIZEQTY,T2.FSTERILIZECHECKQTY,T3.CARGOTYPENAME
		    ,T2.FPACKAGEMEMO,T2.FSTERILIZEMEMO,T2.FSTERILIZECHECKMEMO 
      FROM FLOWRECYCLELINETIME T1 
      INNER JOIN FLOWCARDDATA T2 ON T2.FPARENTID=T1.FID
      INNER JOIN CARGOTYPE T3 ON T3.CARGOTYPEID=T2.FPACKAGEID
      WHERE T2.FTYPE=:Type AND T3.ISINSTRUMENTPACKAGE=:IsSingle  AND T3.ISDISABLED=0 AND T1.FID=:TimeID
      ]]>
    </Content>

    <Content Key="Query_GetInstrumentsFlowCardData" DataBaseType="SqlServer">
      <![CDATA[
      SELECT X1.CARGOTYPEID,X2.CARGOTYPENAME, SUM(X1.QUANTITY - X1.LOSTQTY) FRECYCLEQTY,0 FPACKAGEQTY,'' FPACKAGEMEMO,sum(x1.LOSTQTY) FLOSTQTY 
      FROM (
      SELECT T5.CARGOTYPEID,T5.QUANTITY/T4.QUANTITY QUANTITY,0 AS LOSTQTY
      FROM FLOWRECYCLE T1
      INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
      inner join CargoType c on c.CargoTypeID=t3.CargoTypeID
      INNER JOIN FLOWPACKAGE T4 ON T4.FPACKAGEID=T3.FPACKAGEID
      INNER JOIN FLOWPACKAGECARGOLIST T5 ON T5.FPACKAGEID=T4.FPACKAGEID
      WHERE T1.RECYCLEDATE >= @BeginDate AND T1.RECYCLEDATE < @EndDate AND T3.FLOWORGID =@FlowOrgID  and c.ISINSTRUMENTPACKAGE=0 
      UNION ALL
      SELECT T5.CARGOTYPEID,T5.QUANTITY/T4.QUANTITY,0 AS LOSTQTY
      FROM FLOWRECYCLE T1
      INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
      inner join CargoType c on c.CargoTypeID=t3.CargoTypeID
      INNER JOIN FLOWPACKAGELOSTBARCODE T4 ON T4.FPACKAGEID=T3.FPACKAGEID
      INNER JOIN FLOWPACKAGELOSTBARCODECLIST T5 ON T5.FPACKAGEID=T4.FPACKAGEID
      WHERE T1.RECYCLEDATE >=@BeginDate AND T1.RECYCLEDATE < @EndDate AND T3.FLOWORGID =@FlowOrgID and c.ISINSTRUMENTPACKAGE=0 
      UNION ALL
      SELECT rl.CARGOTYPEID,0 as QUANTITY,rl.Quantity AS LOSTQTY
      FROM FlowRecycleLostList rl 
      inner join FlowRecycle r on rl.FRecycleID = r.FRecycleID
      inner join FlowPackageList fpl on fpl.PackageID=rl.PackageID
      inner join CargoType c on c.CargoTypeID=fpl.CargoTypeID
      WHERE r.RECYCLEDATE >= @BeginDate AND r.RECYCLEDATE < @EndDate AND r.FLOWORGID = @FlowOrgID   and c.ISINSTRUMENTPACKAGE=0 
      ) X1
      INNER JOIN CARGOTYPE X2 ON X2.CARGOTYPEID=X1.CARGOTYPEID
      WHERE X2.ISINSTRUMENTPACKAGE=0 AND X2.ISDISABLED=0 AND X2.CARGOTOPTYPE = 1 
      GROUP BY X1.CARGOTYPEID,X2.CARGOTYPENAME
      ORDER BY X2.CARGOTYPENAME
      ]]>
    </Content>
    <Content Key="Query_GetInstrumentsFlowCardData" DataBaseType="Oracle">
      <![CDATA[
      SELECT X1.CARGOTYPEID,X2.CARGOTYPENAME, SUM(X1.QUANTITY - X1.LOSTQTY) FRECYCLEQTY,0 FPACKAGEQTY,'' FPACKAGEMEMO,sum(x1.LOSTQTY) FLOSTQTY 
      FROM (
      SELECT T5.CARGOTYPEID,T5.QUANTITY/T4.QUANTITY QUANTITY,0 AS LOSTQTY
      FROM FLOWRECYCLE T1
      INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
      inner join CargoType c on c.CargoTypeID=t3.CargoTypeID
      INNER JOIN FLOWPACKAGE T4 ON T4.FPACKAGEID=T3.FPACKAGEID
      INNER JOIN FLOWPACKAGECARGOLIST T5 ON T5.FPACKAGEID=T4.FPACKAGEID
      WHERE T1.RECYCLEDATE >= :BeginDate AND T1.RECYCLEDATE < :EndDate AND T3.FLOWORGID =:FlowOrgID  and c.ISINSTRUMENTPACKAGE=0 
      UNION ALL
      SELECT T5.CARGOTYPEID,T5.QUANTITY/T4.QUANTITY,0 AS LOSTQTY
      FROM FLOWRECYCLE T1
      INNER JOIN FLOWRECYCLELIST T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T3 ON T3.PACKAGEID=T2.PACKAGEID
      inner join CargoType c on c.CargoTypeID=t3.CargoTypeID
      INNER JOIN FLOWPACKAGELOSTBARCODE T4 ON T4.FPACKAGEID=T3.FPACKAGEID
      INNER JOIN FLOWPACKAGELOSTBARCODECLIST T5 ON T5.FPACKAGEID=T4.FPACKAGEID
      WHERE T1.RECYCLEDATE >=:BeginDate AND T1.RECYCLEDATE < :EndDate AND T3.FLOWORGID =:FlowOrgID and c.ISINSTRUMENTPACKAGE=0 
      UNION ALL
      SELECT rl.CARGOTYPEID,0 as QUANTITY,rl.Quantity AS LOSTQTY
      FROM FlowRecycleLostList rl 
      inner join FlowRecycle r on rl.FRecycleID = r.FRecycleID
      inner join FlowPackageList fpl on fpl.PackageID=rl.PackageID
      inner join CargoType c on c.CargoTypeID=fpl.CargoTypeID
      WHERE r.RECYCLEDATE >= :BeginDate AND r.RECYCLEDATE < :EndDate AND r.FLOWORGID = :FlowOrgID   and c.ISINSTRUMENTPACKAGE=0 
      ) X1
      INNER JOIN CARGOTYPE X2 ON X2.CARGOTYPEID=X1.CARGOTYPEID
      WHERE X2.ISINSTRUMENTPACKAGE=0 AND X2.ISDISABLED=0 AND X2.CARGOTOPTYPE = 1 
      GROUP BY X1.CARGOTYPEID,X2.CARGOTYPENAME
      ORDER BY X2.CARGOTYPENAME
      ]]>
    </Content>

    <Content Key="Query_GetInstrumentsFlowCardDataEdit" DataBaseType="SqlServer">
      <![CDATA[
      SELECT T1.CUTOFFTIME,T1.FRECYCLEOP,T1.FPACKAGEOP,T1.FSTERILIZEOP,T1.FPROVIDEOP,T2.FID,T2.FPARENTID,T3.CARGOTYPEID,
		    T2.FRECYCLEQTY,T2.FPACKAGEQTY,t3.CARGOTYPENAME,T2.FPACKAGEMEMO,t2.FLOSTQTY  
      FROM FLOWRECYCLELINETIME T1 
      INNER JOIN FLOWCARDDATA T2 ON T2.FPARENTID=T1.FID
      inner join CargoType t3 on t3.CargoTypeID=T2.FPackageID
      WHERE T2.FTYPE=2 AND T3.ISINSTRUMENTPACKAGE=0 AND T3.ISDISABLED=0 AND T1.FID=@TimeID AND t3.CARGOTOPTYPE = 1 
      ]]>
    </Content>
    <Content Key="Query_GetInstrumentsFlowCardDataEdit" DataBaseType="Oracle">
      <![CDATA[
      SELECT T1.CUTOFFTIME,T1.FRECYCLEOP,T1.FPACKAGEOP,T1.FSTERILIZEOP,T1.FPROVIDEOP,T2.FID,T2.FPARENTID,T3.CARGOTYPEID,
		    T2.FRECYCLEQTY,T2.FPACKAGEQTY,t3.CARGOTYPENAME,T2.FPACKAGEMEMO ,t2.FLOSTQTY 
      FROM FLOWRECYCLELINETIME T1 
      INNER JOIN FLOWCARDDATA T2 ON T2.FPARENTID=T1.FID
      inner join CargoType t3 on t3.CargoTypeID=T2.FPackageID
      WHERE T2.FTYPE=2 AND T3.ISINSTRUMENTPACKAGE=0 AND T3.ISDISABLED=0 AND T1.FID=:TimeID AND t3.CARGOTOPTYPE = 1 
      ]]>
    </Content>

    <Content Key="Query_GetFlowCardQueryDate" DataBaseType="Oracle">
      <![CDATA[
      SELECT   FID,CUTOFFTIME,OPID,FLOWORGID FROM FLOWRECYCLELINETIME
      WHERE FLOWORGID = :FlowOrgID and rownum<=30
      ORDER BY CUTOFFTIME DESC
       ]]>
    </Content>
    <Content Key="Query_GetFlowCardQueryDate" DataBaseType="SqlServer">
      <![CDATA[
      SELECT TOP 30 FID,CUTOFFTIME,OPID,FLOWORGID FROM DBO.FLOWRECYCLELINETIME
      WHERE  FLOWORGID = @FlowOrgID
      ORDER BY CUTOFFTIME DESC
      ]]>
    </Content>

    <Content Key="Query_FlowPackageInReturn" DataBaseType="SqlServer">
      SELECT P.PACKAGESETTINGID,P.PACKAGETYPEID,P.CARGOTYPEID,C.CARGOTYPENAME,P.CARGOTOPTYPE,
      P.QUANTITY ,P.ISTRACK,P.ISDYNAMIC,T1.QUANTITY FACTUALQTY,T1.FRETURNQTY,
      T1.FLOWPACKAGEINCARGOLISTID,T1.FRECYCLEQTY,T1.FRECYCLEQTY FINPUTQTY,P.ISCSSDPROVIDE,C.SPECIFICATION
      FROM PACKAGESETTING P
      INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGEINCARGOLIST T1 ON T1.CARGOTYPEID=P.CARGOTYPEID
      WHERE P.PACKAGETYPEID=@CargoTypeID
      AND T1.FPACKAGEID=@FPackageID
      ORDER BY P.FORDER
    </Content>
    <Content Key="Query_FlowPackageInReturn" DataBaseType="Oracle">
      SELECT P.PACKAGESETTINGID,P.PACKAGETYPEID,P.CARGOTYPEID,C.CARGOTYPENAME,P.CARGOTOPTYPE,
      P.QUANTITY ,P.ISTRACK,P.ISDYNAMIC,T1.QUANTITY FACTUALQTY,T1.FRETURNQTY,
      T1.FLOWPACKAGEINCARGOLISTID,T1.FRECYCLEQTY,T1.FRECYCLEQTY FINPUTQTY,P.ISCSSDPROVIDE,C.SPECIFICATION
      FROM PACKAGESETTING P
      INNER JOIN CARGOTYPE C     ON P.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWPACKAGEINCARGOLIST T1 ON T1.CARGOTYPEID=P.CARGOTYPEID
      WHERE P.PACKAGETYPEID=:CargoTypeID
      AND T1.FPACKAGEID=:FPackageID
      ORDER BY P.FORDER
    </Content>

    <Content Key="Query_FlowPackageInReturnList" DataBaseType="SqlServer">
      SELECT T1.FPACKAGEID, T3.BARCODE,CASE WHEN T3.STATUS=20 THEN 1 ELSE 0 END FRECYCLESTATUS,T5.OPID,T6.FNames FRECYCLER
      ,T1.CARGOTYPEID,T7.CARGOTYPENAME,T2.PACKAGEID,T8.LASTFDISINFECTID,T10.ISAFFECTED
      FROM
      (SELECT X1.FPACKAGEID,SUM(X2.FRETURNQTY) FRETURNQTY,SUM(X2.FRECYCLEQTY) FRECYCLEQTY FROM FLOWPACKAGEIN X1
      INNER JOIN FLOWPACKAGEINCARGOLIST X2 ON X2.FPACKAGEID=X1.FPACKAGEID
      WHERE X1.SENDER=@OrgID
      GROUP BY X1.FPACKAGEID
      ) T9
      INNER JOIN FLOWPACKAGEIN T1 ON T1.FPACKAGEID=T9.FPACKAGEID
      LEFT JOIN FLOWPACKAGELIST T2 ON T2.FPACKAGEID=T1.FPACKAGEID
      LEFT JOIN STORAGELIST T3 ON T3.STORAGEID=T2.STORAGEID
      LEFT JOIN FLOWRECYCLELIST T4 ON T4.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWRECYCLE T5 ON T5.FRECYCLEID=T4.FRECYCLEID
      --LEFT JOIN AC_USER T6 ON T6.ID=T5.OPID
      LEFT JOIN AC_WorkGroup T6 ON T6.FID=T5.OPID
      LEFT JOIN CARGOTYPE T7 ON T7.CARGOTYPEID=T1.CARGOTYPEID
      LEFT JOIN FLOWRECYCLECONTAINER T8 ON T8.FRECYCLEID=T5.FRECYCLEID
      LEFT JOIN PATIENTLIST T10 ON T10.PATIENTID=T1.FPATIENT
      WHERE T9.FRECYCLEQTY>T9.FRETURNQTY OR T9.FRETURNQTY=0
      ORDER BY T1.PACKAGEINDATE DESC
    </Content>
    <Content Key="Query_FlowPackageInReturnList" DataBaseType="Oracle">
      SELECT T1.FPACKAGEID, T3.BARCODE,CASE WHEN T3.STATUS=20 THEN 1 ELSE 0 END FRECYCLESTATUS,T5.OPID,T6.FNames FRECYCLER
      ,T1.CARGOTYPEID,T7.CARGOTYPENAME,T2.PACKAGEID,T8.LASTFDISINFECTID,T10.ISAFFECTED
      FROM
      (SELECT X1.FPACKAGEID,SUM(X2.FRETURNQTY) FRETURNQTY,SUM(X2.FRECYCLEQTY) FRECYCLEQTY FROM FLOWPACKAGEIN X1
      INNER JOIN FLOWPACKAGEINCARGOLIST X2 ON X2.FPACKAGEID=X1.FPACKAGEID
      WHERE X1.SENDER=:OrgID
      GROUP BY X1.FPACKAGEID
      ) T9
      INNER JOIN FLOWPACKAGEIN T1 ON T1.FPACKAGEID=T9.FPACKAGEID
      LEFT JOIN FLOWPACKAGELIST T2 ON T2.FPACKAGEID=T1.FPACKAGEID
      LEFT JOIN STORAGELIST T3 ON T3.STORAGEID=T2.STORAGEID
      LEFT JOIN FLOWRECYCLELIST T4 ON T4.PACKAGEID=T2.PACKAGEID
      LEFT JOIN FLOWRECYCLE T5 ON T5.FRECYCLEID=T4.FRECYCLEID
      --LEFT JOIN AC_USER T6 ON T6.ID=T5.OPID
      LEFT JOIN AC_WorkGroup T6 ON T6.FID=T5.OPID
      LEFT JOIN CARGOTYPE T7 ON T7.CARGOTYPEID=T1.CARGOTYPEID
      LEFT JOIN FLOWRECYCLECONTAINER T8 ON T8.FRECYCLEID=T5.FRECYCLEID
      LEFT JOIN PATIENTLIST T10 ON T10.PATIENTID=T1.FPATIENT
      WHERE T9.FRECYCLEQTY>T9.FRETURNQTY OR T9.FRETURNQTY=0
      ORDER BY T1.PACKAGEINDATE DESC
    </Content>

    <Content Key="Query_GetPackageInByContainer" DataBaseType="SqlServer">
      SELECT T1.STATUS,T5.CARGOTYPEID,T5.CARGOTYPENAME FROM CONTAINER T1
      INNER JOIN FLOWRECYCLE T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWRECYCLELIST  T3 ON T3.FRECYCLEID=T2.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T4 ON T4.PACKAGEID=T3.PACKAGEID
      INNER JOIN CARGOTYPE T5 ON T5.CARGOTYPEID=T4.CARGOTYPEID
      WHERE T1.CONTAINERID=@ContainerID AND T5.ISIN=1
    </Content>
    <Content Key="Query_GetPackageInByContainer" DataBaseType="Oracle">
      SELECT T1.STATUS,T5.CARGOTYPEID,T5.CARGOTYPENAME FROM CONTAINER T1
      INNER JOIN FLOWRECYCLE T2 ON T2.FRECYCLEID=T1.FRECYCLEID
      INNER JOIN FLOWRECYCLELIST  T3 ON T3.FRECYCLEID=T2.FRECYCLEID
      INNER JOIN FLOWPACKAGELIST T4 ON T4.PACKAGEID=T3.PACKAGEID
      INNER JOIN CARGOTYPE T5 ON T5.CARGOTYPEID=T4.CARGOTYPEID
      WHERE T1.CONTAINERID=:ContainerID AND T5.ISIN=1
    </Content>
    <Content Key="GetSterilizePackageCount" DataBaseType="SqlServer">
      select COUNT(*) from FlowSterilizationList where SterilizationLogID=@logID
    </Content>
    <Content Key="GetSterilizePackageCount" DataBaseType="Oracle">
      select COUNT(*) from FlowSterilizationList where SterilizationLogID=logID
    </Content>

    <Content Key="Update_FlowPackageListBysqlinfo" DataBaseType="SqlServer">
      update FlowPackageList
      set CHECKID = @CHECKID,CheckDate =@CheckDate,LastOPID=@OPID
      WHERE FPACKAGEID=@FPACKAGEID
    </Content>
    <Content Key="Update_FlowPackageListBysqlinfo" DataBaseType="Oracle">
      update FlowPackageList
      set CHECKID = :CHECKID,CheckDate =:CheckDate,LastOPID=:OPID
      WHERE FPACKAGEID=:FPACKAGEID
    </Content>

    <Content Key="Query_GetDisinfectPackageQty" DataBaseType="SqlServer">
      <![CDATA[
      SELECT 
 COUNT(distinct FlowRecycleList.PackageID) AS QTY
,view_CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT
,view_CargoType.CargoTypeText AS CARGOTYPETEXT
FROM FlowDisinfectContainerList
inner JOIN FlowRecycle ON FlowDisinfectContainerList.FRecycleID = FlowRecycle.FRecycleID
inner JOIN FlowRecycleList ON FlowRecycle.FRecycleID = FlowRecycleList.FRecycleID
inner JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
inner JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
inner JOIN view_CargoType ON StorageList.CargoTypeID = view_CargoType.CargoTypeID
WHERE 1 = 1 {0}
GROUP BY view_CargoType.CargoTypeID,view_CargoType.CargoTypeKindText,view_CargoType.CargoTypeText
ORDER BY view_CargoType.CargoTypeKindText,view_CargoType.CargoTypeText
      ]]>
    </Content>
    <Content Key="Query_GetDisinfectPackageQty" DataBaseType="Oracle">
      <![CDATA[
      SELECT 
 COUNT(distinct FlowRecycleList.PackageID) AS QTY
,view_CargoType.CargoTypeKindText AS CARGOTYPEKINDTEXT
,view_CargoType.CargoTypeText AS CARGOTYPETEXT
FROM FlowDisinfectContainerList
LEFT JOIN FlowRecycle ON FlowDisinfectContainerList.FRecycleID = FlowRecycle.FRecycleID
LEFT JOIN FlowRecycleList ON FlowRecycle.FRecycleID = FlowRecycleList.FRecycleID
LEFT JOIN FlowPackageList ON FlowRecycleList.PackageID = FlowPackageList.PackageID
LEFT JOIN StorageList ON FlowPackageList.StorageID = StorageList.StorageID
LEFT JOIN view_CargoType ON StorageList.CargoTypeID = view_CargoType.CargoTypeID
WHERE 1 = 1 {0}
GROUP BY view_CargoType.CargoTypeID,view_CargoType.CargoTypeKindText,view_CargoType.CargoTypeText
ORDER BY view_CargoType.CargoTypeKindText,view_CargoType.CargoTypeText
      ]]>
    </Content>

    <Content Key="Query_FlowPackageInIsInfect" DataBaseType="SqlServer">
      SELECT T1.PACKAGEID,T3.FRECYCLEID,T4.FPACKAGEID,T4.FPATIENT,T5.ISAFFECTED,T6.LASTFDISINFECTID
      FROM FLOWPACKAGELIST T1
      INNER JOIN STORAGELIST T2 ON T2.STORAGEID=T1.STORAGEID
      LEFT JOIN FLOWRECYCLELIST T3 ON T3.PACKAGEID=T1.PACKAGEID
      LEFT JOIN FLOWPACKAGEIN T4 ON T4.FPACKAGEID=T1.FPACKAGEID
      LEFT JOIN PATIENTLIST T5 ON T5.PATIENTID=T4.FPATIENT
      left join FlowRecycleContainer t6 on t6.FRecycleID=t3.FRecycleID
      WHERE T2.BARCODE=@Barcode
    </Content>
    <Content Key="Query_FlowPackageInIsInfect" DataBaseType="Oracle">
      SELECT T1.PACKAGEID,T3.FRECYCLEID,T4.FPACKAGEID,T4.FPATIENT,T5.ISAFFECTED,T6.LASTFDISINFECTID
      FROM FLOWPACKAGELIST T1
      INNER JOIN STORAGELIST T2 ON T2.STORAGEID=T1.STORAGEID
      LEFT JOIN FLOWRECYCLELIST T3 ON T3.PACKAGEID=T1.PACKAGEID
      LEFT JOIN FLOWPACKAGEIN T4 ON T4.FPACKAGEID=T1.FPACKAGEID
      LEFT JOIN PATIENTLIST T5 ON T5.PATIENTID=T4.FPATIENT
      left join FlowRecycleContainer t6 on t6.FRecycleID=t3.FRecycleID
      WHERE T2.BARCODE=:Barcode
    </Content>

    <Content Key="Query_GetStorageIDByBarcode" DataBaseType="SqlServer">
      SELECT STORAGEID,BARCODE FROM STORAGELIST WHERE BARCODE=@Barcode
    </Content>
    <Content Key="Query_GetStorageIDByBarcode" DataBaseType="Oracle">
      SELECT STORAGEID,BARCODE FROM STORAGELIST WHERE BARCODE=:Barcode
    </Content>

    <Content Key="Query_GetOperationCheckData" DataBaseType="SqlServer">
      SELECT FORDER=ROW_NUMBER() OVER(ORDER BY T2.CARGOTYPENAME),T1.CARGOTYPEID ,T2.CARGOTOPTYPE,T2.CARGOTYPENAME,T1.QUANTITY
      FROM STORAGELIST T3
      INNER JOIN FLOWPACKAGELIST T4 ON T4.STORAGEID=T3.STORAGEID
      INNER JOIN PACKAGESETTING T1 ON T1.PACKAGETYPEID=T4.CARGOTYPEID
      INNER JOIN CARGOTYPE T2 ON T2.CARGOTYPEID=T1.CARGOTYPEID
      WHERE T3.BARCODE=@Barcode
    </Content>
    <Content Key="Query_GetOperationCheckData" DataBaseType="Oracle">
      SELECT ROW_NUMBER() OVER(ORDER BY T2.CARGOTYPENAME) FORDER,T1.CARGOTYPEID ,T2.CARGOTOPTYPE,T2.CARGOTYPENAME,T1.QUANTITY
      FROM STORAGELIST T3
      INNER JOIN FLOWPACKAGELIST T4 ON T4.STORAGEID=T3.STORAGEID
      INNER JOIN PACKAGESETTING T1 ON T1.PACKAGETYPEID=T4.CARGOTYPEID
      INNER JOIN CARGOTYPE T2 ON T2.CARGOTYPEID=T1.CARGOTYPEID
      WHERE T3.BARCODE=:Barcode
    </Content>

    <Content Key="Query_GetProvideOperationCheckPackageInfo" DataBaseType="SqlServer">
      SELECT TOP 1 P.PACKAGEID, C.CARGOTYPENAME ,S.BARCODE ,S.STERILIZEDATE,DL.TODAYUSETIMES, S.EXPDATE,
      ISNULL(U.FNames ,UIN.FNames) AS FPACKAGER,UOP.FNames AS FPROVIDER,UR.FNames AS FGETER,T2.ProvideDate AS FETCHDATE,T2.OPID,T2.RECIPIENTID
      FROM FLOWPACKAGELIST P WITH(NOLOCK)
      INNER JOIN STORAGELIST S WITH(NOLOCK) ON P.STORAGEID = S.STORAGEID
      INNER JOIN CARGOTYPE C WITH(NOLOCK) ON P.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWSTERILIZATIONLIST SL WITH (NOLOCK) ON P.PACKAGEID = SL.PACKAGEID
      INNER JOIN DEVICESUSELOG DL WITH (NOLOCK) ON SL.STERILIZATIONLOGID = DL.LOGID
      LEFT JOIN FLOWPACKAGE FP WITH (NOLOCK) ON FP.FPACKAGEID = P.FPACKAGEID
      LEFT JOIN FLOWPACKAGEIN FPIN WITH (NOLOCK) ON FPIN.FPACKAGEID = P.FPACKAGEID
      --LEFT JOIN AC_USER U WITH (NOLOCK) ON U.ID = FP.OPID
      --LEFT JOIN AC_USER UIN WITH (NOLOCK) ON UIN.ID = FPIN.OPID
      LEFT JOIN AC_WorkGroup U WITH (NOLOCK) ON U.FID = FP.OPID
      LEFT JOIN AC_WorkGroup UIN WITH (NOLOCK) ON UIN.FID = FPIN.OPID
      LEFT JOIN FLOWPROVIDELIST T1 WITH (NOLOCK) ON P.PACKAGEID=T1.PACKAGEID
      LEFT JOIN FLOWPROVIDE T2 WITH (NOLOCK) ON T2.PROVIDEID=T1.PROVIDEID
      --LEFT JOIN AC_USER UOP WITH (NOLOCK) ON T2.OPID = UOP.ID
      --LEFT JOIN AC_USER UR WITH (NOLOCK) ON T2.RECIPIENTID = UR.ID
      LEFT JOIN AC_WorkGroup UOP WITH (NOLOCK) ON T2.OPID = UOP.FID
      LEFT JOIN AC_WorkGroup UR WITH (NOLOCK) ON T2.RECIPIENTID = UR.FID
      WHERE  S.BARCODE=@Barcode
      ORDER BY T2.PROVIDEDATE DESC
    </Content>
    <Content Key="Query_GetProvideOperationCheckPackageInfo" DataBaseType="Oracle">
      SELECT   P.PACKAGEID, C.CARGOTYPENAME ,S.BARCODE ,S.STERILIZEDATE,DL.TODAYUSETIMES, S.EXPDATE,
      nvl(U.FNames ,UIN.FNames) AS FPACKAGER,UOP.FNames AS FPROVIDER,UR.FNames AS FGETER,T2.ProvideDate AS FETCHDATE,T2.OPID,T2.RECIPIENTID,T2.FETCHTYPE
      FROM FLOWPACKAGELIST P
      INNER JOIN STORAGELIST S   ON P.STORAGEID = S.STORAGEID
      INNER JOIN CARGOTYPE C   ON P.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWSTERILIZATIONLIST SL  ON P.PACKAGEID = SL.PACKAGEID
      INNER JOIN DEVICESUSELOG DL  ON SL.STERILIZATIONLOGID = DL.LOGID
      LEFT JOIN FLOWPACKAGE FP  ON FP.FPACKAGEID = P.FPACKAGEID
      LEFT JOIN FLOWPACKAGEIN FPIN  ON FPIN.FPACKAGEID = P.FPACKAGEID
      --LEFT JOIN AC_USER U  ON U.ID = FP.OPID
      --LEFT JOIN AC_USER UIN  ON UIN.ID = FPIN.OPID
      LEFT JOIN AC_WorkGroup U  ON U.FID = FP.OPID
      LEFT JOIN AC_WorkGroup UIN  ON UIN.FID = FPIN.OPID
      LEFT JOIN FLOWPROVIDELIST T1   ON P.PACKAGEID=T1.PACKAGEID
      LEFT JOIN FLOWPROVIDE T2   ON T2.PROVIDEID=T1.PROVIDEID
      --LEFT JOIN AC_USER UOP  ON T2.OPID = UOP.ID
      --LEFT JOIN AC_USER UR  ON T2.RECIPIENTID = UR.ID
      LEFT JOIN AC_WorkGroup UOP ON T2.OPID = UOP.FID
      LEFT JOIN AC_WorkGroup UR  ON T2.RECIPIENTID = UR.FID
      WHERE  S.BARCODE=:Barcode and rownum=1
      ORDER BY T2.PROVIDEDATE DESC
    </Content>

    <Content Key="Query_GetOperationCheckPackageInfo" DataBaseType="SqlServer">
      SELECT TOP 1 P.PACKAGEID, C.CARGOTYPENAME ,S.BARCODE ,S.STERILIZEDATE,DL.TODAYUSETIMES, S.EXPDATE,
      ISNULL(U.FNames ,UIN.FNames) AS FPACKAGER,UOP.FNames AS FPROVIDER,UR.FNames AS FGETER,T2.FETCHDATE,T2.OPID,T2.RECIPIENTID
      FROM FLOWPACKAGELIST P WITH(NOLOCK)
      INNER JOIN STORAGELIST S WITH(NOLOCK) ON P.STORAGEID = S.STORAGEID
      INNER JOIN CARGOTYPE C WITH(NOLOCK) ON P.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWSTERILIZATIONLIST SL WITH (NOLOCK) ON P.PACKAGEID = SL.PACKAGEID
      INNER JOIN DEVICESUSELOG DL WITH (NOLOCK) ON SL.STERILIZATIONLOGID = DL.LOGID
      LEFT JOIN FLOWPACKAGE FP WITH (NOLOCK) ON FP.FPACKAGEID = P.FPACKAGEID
      LEFT JOIN FLOWPACKAGEIN FPIN WITH (NOLOCK) ON FPIN.FPACKAGEID = P.FPACKAGEID
      --LEFT JOIN AC_USER U WITH (NOLOCK) ON U.ID = FP.OPID
      --LEFT JOIN AC_USER UIN WITH (NOLOCK) ON UIN.ID = FPIN.OPID
      LEFT JOIN AC_WorkGroup U WITH (NOLOCK) ON U.FID = FP.OPID
      LEFT JOIN AC_WorkGroup UIN WITH (NOLOCK) ON UIN.FID = FPIN.OPID
      LEFT JOIN FLOWFETCHLIST T1 WITH (NOLOCK) ON P.PACKAGEID=T1.PACKAGEID
      LEFT JOIN FLOWFETCH T2 WITH (NOLOCK) ON T2.FETCHID=T1.FETCHID
      --LEFT JOIN AC_USER UOP WITH (NOLOCK) ON T2.OPID = UOP.ID
      --LEFT JOIN AC_USER UR WITH (NOLOCK) ON T2.RECIPIENTID = UR.ID
      LEFT JOIN AC_WorkGroup UOP WITH (NOLOCK) ON T2.OPID = UOP.FID
      LEFT JOIN AC_WorkGroup UR WITH (NOLOCK) ON T2.RECIPIENTID = UR.FID
      WHERE  S.BARCODE=@Barcode AND T2.FETCHTYPE=0
      ORDER BY T2.FETCHDATE DESC
    </Content>
    <Content Key="Query_GetOperationCheckPackageInfo" DataBaseType="Oracle">
      SELECT   P.PACKAGEID, C.CARGOTYPENAME ,S.BARCODE ,S.STERILIZEDATE,DL.TODAYUSETIMES, S.EXPDATE,
      nvl(U.FNames ,UIN.FNames) AS FPACKAGER,UOP.FNames AS FPROVIDER,UR.FNames AS FGETER,T2.FETCHDATE,T2.OPID,T2.RECIPIENTID,T2.FETCHTYPE
      FROM FLOWPACKAGELIST P
      INNER JOIN STORAGELIST S   ON P.STORAGEID = S.STORAGEID
      INNER JOIN CARGOTYPE C   ON P.CARGOTYPEID = C.CARGOTYPEID
      INNER JOIN FLOWSTERILIZATIONLIST SL  ON P.PACKAGEID = SL.PACKAGEID
      INNER JOIN DEVICESUSELOG DL  ON SL.STERILIZATIONLOGID = DL.LOGID
      LEFT JOIN FLOWPACKAGE FP  ON FP.FPACKAGEID = P.FPACKAGEID
      LEFT JOIN FLOWPACKAGEIN FPIN  ON FPIN.FPACKAGEID = P.FPACKAGEID
      --LEFT JOIN AC_USER U  ON U.ID = FP.OPID
      --LEFT JOIN AC_USER UIN  ON UIN.ID = FPIN.OPID
      LEFT JOIN AC_WorkGroup U ON U.FID = FP.OPID
      LEFT JOIN AC_WorkGroup UIN  ON UIN.FID = FPIN.OPID
      LEFT JOIN FLOWFETCHLIST T1  ON P.PACKAGEID=T1.PACKAGEID
      LEFT JOIN FLOWFETCH T2  ON T2.FETCHID=T1.FETCHID
      --LEFT JOIN AC_USER UOP  ON T2.OPID = UOP.ID
      --LEFT JOIN AC_USER UR  ON T2.RECIPIENTID = UR.ID
      LEFT JOIN AC_WorkGroup UOP  ON T2.OPID = UOP.FID
      LEFT JOIN AC_WorkGroup UR  ON T2.RECIPIENTID = UR.FID
      WHERE  S.BARCODE=:Barcode AND nvl(T2.FETCHTYPE,0)=0 and rownum=1
      ORDER BY T2.FETCHDATE DESC
    </Content>

    <Content Key="Query_GetContainerByCargotypeKind" DataBaseType="SqlServer">
      SELECT T1.CARGOTYPEKIND,T3.CONTAINERID,T3.BARCODE,T1.CARGOTYPEID ,T1.CARGOTYPENAME,T1.FDYNAMICBINDING
      FROM CARGOTYPE T1
      INNER JOIN CONTAINER T3 ON T3.FPACKAGETYPE=T1.CargoTypeID
      WHERE T1.CARGOTOPTYPE=16 AND  T1.ISDISABLED=0 AND T1.FDYNAMICBINDING=1 AND T1.CARGOTYPEID=@CargotypeID
    </Content>
    <Content Key="Query_GetContainerByCargotypeKind" DataBaseType="Oracle">
      SELECT T1.CARGOTYPEKIND,T3.CONTAINERID,T3.BARCODE,T1.CARGOTYPEID ,T1.CARGOTYPENAME,T1.FDYNAMICBINDING
      FROM CARGOTYPE T1
      INNER JOIN CONTAINER T3 ON T3.FPACKAGETYPE=T1.CargoTypeID
      WHERE T1.CARGOTOPTYPE=16 AND  T1.ISDISABLED=0 AND T1.FDYNAMICBINDING=1 AND T1.CARGOTYPEID=:CargotypeID
    </Content>

    <Content Key="SELECT_FlowPackageNumOrder" DataBaseType="SqlServer">
      SELECT
      FlowPackageNumOrderID,ORGID,
      FlowPackageNumOrder.REMARK,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,FINISHDATE,CHECKSTATUS,
      FLOWORGID, PreOrderOrg.Name AS OrgName
      FROM FlowPackageNumOrder
      LEFT JOIN AC_Org AS PreOrderOrg
      ON FlowPackageNumOrder.OrgID = PreOrderOrg.ID
      WHERE 1 = 1
    </Content>
    <Content Key="SELECT_FlowPackageNumOrder" DataBaseType="Oracle">
      SELECT
      FlowPackageNumOrderID,ORGID,
      FlowPackageNumOrder.REMARK,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,FINISHDATE,CHECKSTATUS,
      FLOWORGID, PreOrderOrg.Name AS OrgName
      FROM FlowPackageNumOrder
      LEFT JOIN AC_Org  PreOrderOrg
      ON FlowPackageNumOrder.OrgID = PreOrderOrg.ID
      WHERE 1 = 1
    </Content>
    <Content Key="SELECT_BadEquipment" DataBaseType="SqlServer">
      SELECT
      BadEquipment.*, PreOrderOrg.Name AS OrgName
      FROM BadEquipment
      LEFT JOIN AC_Org AS PreOrderOrg
      ON BadEquipment.OrgID = PreOrderOrg.ID
      WHERE 1 = 1
    </Content>
    <Content Key="SELECT_BadEquipment" DataBaseType="Oracle">
      SELECT
      BadEquipmentID,
      BadEquipment.REMARK,CREATEBY,CREATEDATE,UPDATEBY,UPDATEDATE,
      FLOWORGID, Orgid,PreOrderOrg.Name AS OrgName
      FROM BadEquipment
      LEFT JOIN AC_Org AS PreOrderOrg
      ON BadEquipment.OrgID = PreOrderOrg.ID
      WHERE 1 = 1
    </Content>
    <Content Key="Update_SterilizationByBarcode" DataBaseType="SqlServer">
      update flowpackagelist
      set BadFlag = -1 from StorageList
      where flowpackagelist.StorageID = StorageList.StorageID and  StorageList.Status = 40
      and StorageList.Barcode = @Barcode;
    </Content>
    <Content Key="Update_SterilizationByBarcode" DataBaseType="Oracle">
      update flowpackagelist
      set BadFlag = -1
      where StorageID in
      (select flowpackagelist.StorageID from flowpackagelist
      inner join StorageList on flowpackagelist.StorageID = StorageList.StorageID
      and  StorageList.Status = 40
      and StorageList.Barcode = :Barcode)
    </Content>

    <Content Key="Delete_FlowSterilizationList" DataBaseType="SqlServer">
      DECLARE @PackageID uniqueidentifier
      DECLARE @SterilizationLogID uniqueidentifier

      DECLARE Temp_Cursor CURSOR FOR

      SELECT FS.PackageID,FS.SterilizationLogID FROM FlowSterilizationList FS
      LEFT JOIN FlowPackageList FL ON FS.PackageID=FL.PackageID
      LEFT JOIN StorageList SL ON FL.StorageID=SL.StorageID
      WHERE SL.Barcode=@Barcode

      OPEN Temp_Cursor
      FETCH NEXT FROM Temp_Cursor into @PackageID,@SterilizationLogID
      WHILE @@FETCH_STATUS = 0

      BEGIN
      DELETE FROM FlowSterilizationList WHERE PackageID=@PackageID AND SterilizationLogID=@SterilizationLogID;

      FETCH NEXT FROM Temp_Cursor INTO @PackageID,@SterilizationLogID
      END
      CLOSE Temp_Cursor
      DEALLOCATE Temp_Cursor
    </Content>
    <Content Key="Delete_FlowSterilizationList" DataBaseType="Oracle">
      DECLARE
      vPackageID varchar2(50);
      vSterilizationLogID varchar2(50);
      begin

      DECLARE  CURSOR Temp_Cursor is
      SELECT FS.PackageID,FS.SterilizationLogID FROM FlowSterilizationList FS
      LEFT JOIN FlowPackageList FL ON FS.PackageID=FL.PackageID
      LEFT JOIN StorageList SL ON FL.StorageID=SL.StorageID
      WHERE SL.Barcode=:Barcode;

      begin
      OPEN Temp_Cursor ;

      FETCH   Temp_Cursor INTO  vpackageid,vsterilizationlogid;

      WHILE Temp_Cursor%FOUND
      loop

      DELETE FROM FlowSterilizationList WHERE PackageID=vPackageID AND SterilizationLogID=vSterilizationLogID;


      FETCH  Temp_Cursor INTO vpackageid,vsterilizationlogid;
      end loop;

      CLOSE Temp_Cursor;

      end;
      end;
    </Content>

    <Content Key="Query_SterilizationGetPackageByLogID" DataBaseType="SqlServer">
      SELECT T3.BARCODE,C.CARGOTYPENAME,T2.PACKAGEID,T3.MAEDATE,T3.EXPDATE,T2.ISTEMP,T2.STORAGEID
      ,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLECHECK,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE
      ,C.CARGOTYPEID,CC.BARCODE AS CONTAINERBARCODE,T3.STORAGEID ,T1.STERILIZATIONLOGID
      FROM FLOWSTERILIZATIONLIST  T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.PACKAGEID=T1.PACKAGEID
      INNER JOIN STORAGELIST T3 ON T3.STORAGEID=T2.STORAGEID
      INNER JOIN CARGOTYPE C  ON T3.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CONTAINER CC ON T2.CONTAINERID = CC.CONTAINERID
      WHERE T1.STERILIZATIONLOGID= @LogID
    </Content>
    <Content Key="Query_SterilizationGetPackageByLogID" DataBaseType="Oracle">
      SELECT T3.BARCODE,C.CARGOTYPENAME,T2.PACKAGEID,T3.MAEDATE,T3.EXPDATE,T2.ISTEMP,T2.STORAGEID
      ,C.ISRECYCLEALONE,C.ISIN,C.ISDYNAMIC,C.ISRECYCLECHECK,C.ISRECYCLEDYNAMIC,C.ISNORMAL,C.ISVIRTUALPACKAGE
      ,C.CARGOTYPEID,CC.BARCODE AS CONTAINERBARCODE,T3.STORAGEID ,T1.STERILIZATIONLOGID
      FROM FLOWSTERILIZATIONLIST  T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.PACKAGEID=T1.PACKAGEID
      INNER JOIN STORAGELIST T3 ON T3.STORAGEID=T2.STORAGEID
      INNER JOIN CARGOTYPE C  ON T3.CARGOTYPEID = C.CARGOTYPEID
      LEFT JOIN CONTAINER CC ON T2.CONTAINERID = CC.CONTAINERID
      WHERE T1.STERILIZATIONLOGID=:LogID
    </Content>

    <Content Key="Query_SterilizationGetEntity" DataBaseType="SqlServer">
      SELECT  PACKAGEID,STERILIZATIONLOGID FROM FLOWSTERILIZATIONLIST
      WHERE PackageID=@PackageID AND SterilizationLogID=@SterilizationLogID
    </Content>
    <Content Key="Query_SterilizationGetEntity" DataBaseType="Oracle">
      SELECT  PACKAGEID,STERILIZATIONLOGID FROM FLOWSTERILIZATIONLIST
      WHERE PackageID=:PackageID AND SterilizationLogID=:SterilizationLogID
    </Content>

    <Content Key="Sterilization_UpdatePackageBadFlag" DataBaseType="SqlServer">
      UPDATE T2 SET T2.BADFLAG=@BadFlag
      FROM FLOWSTERILIZATIONLIST T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.PACKAGEID=T1.PACKAGEID
      WHERE T1.STERILIZATIONLOGID=@LogID
    </Content>
    <Content Key="Sterilization_UpdatePackageBadFlag" DataBaseType="Oracle">
      update   FLOWPACKAGELIST set BADFLAG=:BadFlag where PACKAGEID in
      (select PACKAGEID from FLOWSTERILIZATIONLIST where STERILIZATIONLOGID=:LogID)
    </Content>

    <Content Key="Sterilization_GetPackageQty" DataBaseType="SqlServer">
      SELECT COUNT(1)
      FROM FLOWSTERILIZATIONLIST
      WHERE STERILIZATIONLOGID=@LogID
    </Content>
    <Content Key="Sterilization_GetPackageQty" DataBaseType="Oracle">
      SELECT COUNT(1)
      FROM FLOWSTERILIZATIONLIST
      WHERE STERILIZATIONLOGID=:LogID
    </Content>

    <Content Key="Update_StorageListSterilizeDate" DataBaseType="SqlServer">
      UPDATE StorageList SET SterilizeDate = @SterilizeDate WHERE Barcode = @Barcode
    </Content>
    <Content Key="Update_StorageListSterilizeDate" DataBaseType="Oracle">
      UPDATE StorageList SET SterilizeDate = :SterilizeDate WHERE Barcode = :Barcode
    </Content>
    <Content Key="Update_StorageListEXPDate" DataBaseType="SqlServer">
      UPDATE StorageList SET EXPDate = @EXPDate WHERE Barcode = @Barcode
    </Content>
    <Content Key="Update_StorageListEXPDate" DataBaseType="Oracle">
      UPDATE StorageList SET EXPDate = :EXPDate WHERE Barcode = :Barcode
    </Content>
    <Content Key="WorkGroup_GetWorkGroupUserList" DataBaseType="SqlServer">
      SELECT T1.FID,T3.CODE FBARCODE,T3.NAME FNAME
      FROM AC_WORKGROUP T1
      INNER JOIN AC_USERWORKGROUP T2 ON T2.FGROUPID=T1.FID
      INNER JOIN AC_USER T3 ON T3.ID=T2.FUSERID
      WHERE T1.FUSERS LIKE '%'+@UserBarcode+'%'
      ORDER BY FID,T3.CODE
    </Content>
    <Content Key="WorkGroup_GetWorkGroupUserList" DataBaseType="Oracle">
      SELECT T1.FID,T3.CODE FBARCODE,T3.NAME FNAME
      FROM AC_WORKGROUP T1
      INNER JOIN AC_USERWORKGROUP T2 ON T2.FGROUPID=T1.FID
      INNER JOIN AC_USER T3 ON T3.ID=T2.FUSERID
      WHERE T1.FUSERS LIKE '%'||:UserBarcode||'%'
      ORDER BY FID,T3.CODE
    </Content>
    <Content Key="GetCreatePreOrderDetailByCondition" DataBaseType="SqlServer">
      <![CDATA[
		  SELECT 0 AS PREORDERQTY
      ,null PREORDERID
      ,null PREORDERDETAILID
      , Quantity 
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      ,StorageList.StorageID
      FROM  StorageList  
      inner join    FlowPackageList on StorageList.StorageID=FlowPackageList.StorageID
      inner join view_CargoType CargoType on StorageList.CargoTypeID=CargoType.CargoTypeID 
      left join  PreorderStorageList on StorageList.StorageID=PreorderStorageList.StorageID
      where StorageList.CargoTopType=16 and PreorderStorageList.StorageID is null   {0}
      order by Barcode desc
		  ]]>
    </Content>
    <Content Key="GetCreatePreOrderDetailByCondition" DataBaseType="Oracle">
      <![CDATA[
		  SELECT 0 AS PREORDERQTY
      ,null PREORDERID
      ,null PREORDERDETAILID
      , Quantity 
      , CargoType.CARGOTYPEID
      , CargoType.CARGOTYPEKIND
      , CargoType.CARGOTOPTYPE
      , CargoType.CARGOTOPTYPETEXT
      , CargoType.CARGOTYPETEXT
      , CargoType.CARGOTYPEKINDTEXT
      , CargoType.MINUNIT
      , CargoType.UNIT
      ,StorageList.StorageID
      FROM  StorageList  
      inner join    FlowPackageList on StorageList.StorageID=FlowPackageList.StorageID
      inner join view_CargoType CargoType on StorageList.CargoTypeID=CargoType.CargoTypeID 
      left join  PreorderStorageList on StorageList.StorageID=PreorderStorageList.StorageID
      where StorageList.CargoTopType=16 and PreorderStorageList.StorageID is null     {0}
      order by Barcode desc
		  ]]>
    </Content>
    <Content Key="Recycle_GetPreOrderStorageList" DataBaseType="SqlServer">
      select sl.Barcode from PreorderStorageList ps
      left join StorageList sl on ps.StorageID=sl.StorageID
      where orgid=(select OrgID from AC_OrgUser where UserID=@UserID)
    </Content>
    <Content Key="Recycle_GetPreOrderStorageList" DataBaseType="Oracle">
      select sl.Barcode from PreorderStorageList ps
      left join StorageList sl on ps.StorageID=sl.StorageID
      where orgid=(select OrgID from AC_OrgUser where UserID=:UserID)
    </Content>
    <Content Key="Query_RecycleFetchByfetchBarcode" DataBaseType="SqlServer">
      select  st.Barcode  from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
      on r.FRecycleFetchID=cl.FRecycleFetchID
      inner join StorageList st
      on cl.PackageID=st.StorageID
      where FetchType=3   and r.BarCode=@barcode
    </Content>
    <Content Key="Query_RecycleFetchByfetchBarcode" DataBaseType="Oracle">
      select    st.Barcode  from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
      on r.FRecycleFetchID=cl.FRecycleFetchID
      inner join StorageList st
      on cl.PackageID=st.StorageID
      where FetchType=3   and r.BarCode=:barcode
    </Content>
    <Content Key="Recycle_GetFlowRecycleList" DataBaseType="SqlServer">
      <![CDATA[
      select  COUNT(*) Num 
      --sl.Barcode
      from FlowRecycleList fr
      left join FlowPackageList pl on fr.PackageID=pl.PackageID
      inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join SystemTypeParameter tstatus on sl.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
      inner join SystemTypeParameter tbadflag on pl.BadFlag = tbadflag.TypeValue and tbadflag.TypeKey = 'QualifiedNO'
      where sl.Barcode=@Barcode
      ]]>
    </Content>
    <Content Key="Recycle_GetFlowRecycleList" DataBaseType="Oracle">
      <![CDATA[
      select  COUNT(*) Num 
      from FlowRecycleList fr
      left join FlowPackageList pl on fr.PackageID=pl.PackageID
      inner join StorageList sl on pl.StorageID = sl.StorageID
      inner join SystemTypeParameter tstatus on sl.Status = tstatus.TypeValue and tstatus.TypeKey = 'StorageStatus'
      inner join SystemTypeParameter tbadflag on pl.BadFlag = tbadflag.TypeValue and tbadflag.TypeKey = 'QualifiedNO'
      where sl.Barcode=:Barcode
      ]]>
    </Content>

    <Content Key="OperationPreOrder_GetList" DataBaseType="SqlServer">
      <![CDATA[
      SELECT T1.FID,T1.FNumber,T1.FDate,T1.FCreator,T4.NAME FCreatorName,T1.FOperationRoom,T2.LOCATIONNAME FRoomName 
        ,T1.FLocation,T3.LocationName FLocationName,T5.TYPENAME FCheckStatusName,t1.FRequireDate,t1.FCheckStatus
        ,t1.FChecker,t6.Name FCheckerName,t1.FMemo,T8.TYPENAME PreOrderTypeName,T1.PreOrderType,T1.FCheckDate,T1.PreOrderStatus,T9.TYPENAME as PreOrderStatusName
		,t10.Name FConfirmorName,T1.FConfirmDate
      from operationpreorder t1 
      LEFT JOIN LOCATION T2 ON T2.LOCATIONID=T1.FOPERATIONROOM
      LEFT  JOIN LOCATION T3 ON T3.LOCATIONID=T1.FLOCATION
      LEFT JOIN AC_USER T4 ON T4.ID=T1.FCREATOR
      LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY = 'PREORDERCHECK') T5 ON T5.TYPEVALUE=T1.FCHECKSTATUS
	  LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY = 'PREORDERTYPE') T8 ON T8.TYPEVALUE=T1.preOrderType 
	  LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY = 'PreOrderStatus') T9 ON T9.TYPEVALUE=T1.PreOrderStatus 
	    Left Join AC_User t6 on t6.ID=t1.FChecker
		Left Join AC_User t10 on t10.ID=t1.FConfirmor
      WHERE 1=1 {0}
      ]]>
    </Content>
    <Content Key="OperationPreOrder_GetList" DataBaseType="Oracle">
      <![CDATA[
      SELECT T1.FID,T1.FNumber,T1.FDate,T1.FCreator,T4.NAME FCreatorName,T1.FOperationRoom,T2.LOCATIONNAME FRoomName 
        ,T1.FLocation,T3.LocationName FLocationName,T5.TYPENAME FCheckStatusName,t1.FRequireDate,t1.FCheckStatus
        ,t1.FChecker,t6.Name FCheckerName,t1.FMemo,T8.TYPENAME PreOrderTypeName,T1.PreOrderType,T1.FCheckDate,T1.PreOrderStatus,T9.TYPENAME as PreOrderStatusName
		,t10.Name FConfirmorName,T1.FConfirmDate
      from operationpreorder t1 
      LEFT JOIN LOCATION T2 ON T2.LOCATIONID=T1.FOPERATIONROOM
      LEFT  JOIN LOCATION T3 ON T3.LOCATIONID=T1.FLOCATION
      LEFT JOIN AC_USER T4 ON T4.ID=T1.FCREATOR
      LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY = 'PREORDERCHECK') T5 ON T5.TYPEVALUE=T1.FCHECKSTATUS
	  LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY = 'PREORDERTYPE') T8 ON T8.TYPEVALUE=T1.preOrderType
	  LEFT JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY = 'PreOrderStatus') T9 ON T9.TYPEVALUE=T1.PreOrderStatus 
      Left Join AC_User t6 on t6.ID=t1.FChecker
	  Left Join AC_User t10 on t10.ID=t1.FConfirmor
      WHERE 1=1 {0}
      ]]>
    </Content>

    <Content Key="OperationPreOrder_GetDetail" DataBaseType="SqlServer">
      <![CDATA[
      SELECT t1.FID,t1.FParentID,t1.FCargotypeID,t2.CargoTypeText,t1.FQty,t1.FCancelQty,t1.FCreator,t3.Name FCaretorName
	      ,t1.FUpdater, t4.Name FUpdaterName,t1.FProvideQty,t2.CargoTopType,t2.CargoTopTypeText
	      ,t2.CargoTypeKind,t2.CargoTypeKindText,t2.CargoTopType,t1.FCreateDate,t1.FUpdateDate
      FROM OPERATIONPREORDERDETAIL T1
      INNER JOIN VIEW_CARGOTYPE T2 ON T2.CARGOTYPEID=T1.FCARGOTYPEID
      Left JOIN AC_USER T3 ON T3.ID=T1.FCREATOR
      Left JOIN AC_USER T4 ON T4.ID=T1.FUPDATER
      WHERE 1=1 {0}
      ]]>
    </Content>
    <Content Key="OperationPreOrder_GetDetail" DataBaseType="Oracle">
      <![CDATA[
      SELECT t1.FID,t1.FParentID,t1.FCargotypeID,t2.CargoTypeText,t1.FQty,t1.FCancelQty,t1.FCreator,t3.Name FCaretorName
	      ,t1.FUpdater, t4.Name FUpdaterName,t1.FProvideQty,t2.CargoTopType,t2.CargoTopTypeText
	      ,t2.CargoTypeKind,t2.CargoTypeKindText,t2.CargoTopType,t1.FCreateDate,t1.FUpdateDate
      FROM OPERATIONPREORDERDETAIL T1
      INNER JOIN VIEW_CARGOTYPE T2 ON T2.CARGOTYPEID=T1.FCARGOTYPEID
      Left JOIN AC_USER T3 ON T3.ID=T1.FCREATOR
      Left JOIN AC_USER T4 ON T4.ID=T1.FUPDATER
      WHERE 1=1 {0}
      ]]>
    </Content>
    <Content Key="OperationPreOrder_GetStoragelist" DataBaseType="SqlServer">
      <![CDATA[
				 select CARGOTYPENAME,KINDNAME,view_StorageList.CARGOTYPEID,
				 COUNT(*)-isnull(( 
			   select  isnull(ISNULL(sum(Fqty),0)-ISNULL(sum(FProvideQty),0)-ISNULL(sum(Fcancelqty),0),0) as ydqty from OperationPreOrder
			   left join OperationPreOrderDetail 
			   on OperationPreOrder.FID=OperationPreOrderDetail.FParentID
			   where OperationPreOrder.FCheckStatus in (0,1) and OperationPreOrder.Flocation=@locationid
			  and  OperationPreOrderDetail.Fcargotypeid=CARGOTYPEID 
			   ),0)
				 as QUANTITY,0 as PREORDERQUANTITY,dbo.fun_getpy(CARGOTYPENAME) as PYCODE from 
view_StorageList  inner join 
(
 select distinct PackageID from flowfetch inner join 
  FlowFetchList on flowfetch.fetchid=FlowFetchList.fetchid
  where flowfetch.FetchType=2 and PackageID not in 
	  (select w1.PackageID  from
	   (
	    select   PackageID,COUNT(*) as lqcnt from flowfetch inner join 
	    FlowFetchList on flowfetch.fetchid=FlowFetchList.fetchid
		where flowfetch.FetchType=5 
		group by PackageID
		) w1
		left join  
		(
		   select   PackageID,COUNT(*) as cfcnt from flowfetch inner join 
		   FlowFetchList on flowfetch.fetchid=FlowFetchList.fetchid
			where flowfetch.FetchType=1 
			group by PackageID
		) w2
		on w1.packageid=w2.packageid
		where ISNULL(lqcnt,0)-ISNULL(cfcnt,0)>0
	)  
) aaa
on aaa.PackageID=view_StorageList.StorageID 
where      locationname =@locationname
and STATUS=60 
and EXPDate>GETDATE()  
group by CargoTypeName,kindname,view_StorageList.cargotypeid
having COUNT(*)-isnull(( 
			   select  isnull(ISNULL(sum(Fqty),0)-ISNULL(sum(FProvideQty),0)-ISNULL(sum(Fcancelqty),0),0) as ydqty from OperationPreOrder
			   left join OperationPreOrderDetail 
			   on OperationPreOrder.FID=OperationPreOrderDetail.FParentID
			   where OperationPreOrder.FCheckStatus in (0,1) and OperationPreOrder.Flocation=@locationid
			  and  OperationPreOrderDetail.Fcargotypeid=CARGOTYPEID 
			   ),0)>0
      ]]>
    </Content>
    <Content Key="Query_ContainerTypeName" DataBaseType="SqlServer">
      SELECT C.ContainerName,C.ContainerType,CT.FDynamicBinding,CT.FFixedBinding
      ,(SELECT TypeName FROM SystemTypeParameter WHERE TypeKey = 'ContainerType' AND TypeValue= C.CONTAINERTYPE)  ContainerTypeName
      FROM  FlowPackageList FPL
      LEFT JOIN Container C ON FPL.ContainerID=C.ContainerID
      LEFT JOIN CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      WHERE FPL.CargoTypeID=@CargoTypeID
    </Content>
    <Content Key="Query_ContainerTypeName" DataBaseType="Oracle">
      SELECT C.ContainerName,C.ContainerType,CT.FDynamicBinding,CT.FFixedBinding
      ,(SELECT TypeName FROM SystemTypeParameter WHERE TypeKey = 'ContainerType' AND TypeValue= C.CONTAINERTYPE)  ContainerTypeName
      FROM  FlowPackageList FPL
      LEFT JOIN Container C ON FPL.ContainerID=C.ContainerID
      LEFT JOIN CargoType CT ON FPL.CargoTypeID=CT.CargoTypeID
      WHERE CT.CargoTopType=16 AND FPL.CargoTypeID=:CargoTypeID
    </Content>
    <Content Key="OperationPreOrder_GetPDAOffLineData" DataBaseType="SqlServer">
      <![CDATA[
	    with tb as(
        SELECT T1.FOPERATIONROOM,T2.FCARGOTYPEID,SUM(T2.FQTY)-SUM(T2.FPROVIDEQTY)-SUM(T2.FCANCELQTY) FQty FROM OPERATIONPREORDER T1
        INNER JOIN OPERATIONPREORDERDETAIL T2 ON T2.FPARENTID=T1.FID
		inner join cargotype C on C.CargoTypeID=T2.FCargotypeID
        WHERE T1.FCHECKSTATUS=1 and C.CargoTopType=16 and C.ISNormal<>1
        GROUP BY T1.FOPERATIONROOM,T2.FCARGOTYPEID
      )
      select FOPERATIONROOM,FCARGOTYPEID,FQty from tb where FQty>0
      ]]>
    </Content>
    <Content Key="OperationPreOrder_GetPDAOffLineData" DataBaseType="Oracle">
      <![CDATA[
      SELECT T1.FOPERATIONROOM,T2.FCARGOTYPEID,SUM(T2.FQTY)-SUM(T2.FPROVIDEQTY)-SUM(T2.FCANCELQTY) FQty FROM OPERATIONPREORDER T1
      INNER JOIN OPERATIONPREORDERDETAIL T2 ON T2.FPARENTID=T1.FID
	  inner join cargotype C on C.CargoTypeID=T2.FCargotypeID
      WHERE T1.FCHECKSTATUS=1 and C.CargoTopType=16 and C.ISNormal<>1 And SUM(T2.FQTY)-SUM(T2.FPROVIDEQTY)-SUM(T2.FCANCELQTY)>0
      GROUP BY T1.FOPERATIONROOM,T2.FCARGOTYPEID
      ]]>
    </Content>
    <Content Key="Query_SumBadEquipment" DataBaseType="SqlServer">
      <![CDATA[
       select  aa.CargoTypeID,CargoType.CargoTypeKindText,CargoType.CargoTypeText,count(*) cnt,CargoType.amount ,COUNT(*)* ISNULL(CargoType.amount,0) sumprice  from
   ( select BadEquipmentList.CargoTypeID     from BadEquipment left join BadEquipmentList
on BadEquipment.BadEquipmentID=BadEquipmentList.BadEquipmentID
where 1=1 {0}) aa
left join view_CargoType AS CargoType
 ON aa.CargoTypeID = CargoType.CargoTypeID
 group by aa.CargoTypeID,CargoType.CargoTypeKindText,CargoType.CargoTypeText,CargoType.amount
      ]]>
    </Content>
    <Content Key="Query_SumBadEquipment" DataBaseType="Oracle">
      <![CDATA[
      select  aa.CargoTypeID,CargoType.CargoTypeKindText,CargoType.CargoTypeText,count(*) cnt,CargoType.amount ,COUNT(*)* nvl(CargoType.amount,0) sumprice  from
   ( select BadEquipmentList.CargoTypeID     from BadEquipment left join BadEquipmentList
on BadEquipment.BadEquipmentID=BadEquipmentList.BadEquipmentID
where 1=1 {0}) aa
left join view_CargoType AS CargoType
 ON aa.CargoTypeID = CargoType.CargoTypeID
 group by aa.CargoTypeID,CargoType.CargoTypeKindText,CargoType.CargoTypeText,CargoType.amount
      ]]>
    </Content>

    <Content Key="OperationPreOrder_GetPreOrderDetailDataByRoom" DataBaseType="SqlServer">
      <![CDATA[
      with re as (
            SELECT t1.FNumber, t2.FID,T1.FOPERATIONROOM,T2.FCARGOTYPEID,t2.FCreateDate, T2.FQTY-T2.FPROVIDEQTY-t2.FCancelQty FQty FROM OPERATIONPREORDER T1
            INNER JOIN OPERATIONPREORDERDETAIL T2 ON T2.FPARENTID=T1.FID
			inner join cargotype C on C.CargoTypeID=T2.FCargotypeID
            WHERE T1.FCHECKSTATUS=1 and C.CargoTopType=16 and C.ISNormal<>1 and t1.FOperationRoom=@RoomID
      )
      select FNumber, FID,FOPERATIONROOM,FCARGOTYPEID,FCreateDate,FQTY from re where FQty>0 ORDER BY FCARGOTYPEID, FCREATEDATE
      ]]>
    </Content>
    <Content Key="OperationPreOrder_GetPreOrderDetailDataByRoom" DataBaseType="Oracle">
      <![CDATA[
      SELECT t1.FNumber,t2.FID,T1.FOPERATIONROOM,T2.FCARGOTYPEID,t2.FCreateDate, T2.FQTY-T2.FPROVIDEQTY-t2.FCancelQty FQTY FROM OPERATIONPREORDER T1
      INNER JOIN OPERATIONPREORDERDETAIL T2 ON T2.FPARENTID=T1.FID
	  inner join cargotype C on C.CargoTypeID=T2.FCargotypeID 
      WHERE T1.FCHECKSTATUS=1 and C.CargoTopType=16 and C.ISNormal<>1  and T2.FQTY-T2.FPROVIDEQTY-t2.FCancelQty>0 and t1.FOperationRoom=:RoomID
	    ORDER BY T2.FCARGOTYPEID, T2.FCREATEDATE
      ]]>
    </Content>

    <Content Key="OperationPreOrder_GetConfirmList" DataBaseType="SqlServer">
      <![CDATA[
      SELECT t1.FetchID,t1.FetchDate FDate,t1.OPID,t2.FNames FOperator, t1.LocationID,t3.LocationName FRoomName
      FROM FLOWFETCH T1
      INNER JOIN AC_WORKGROUP T2 ON T2.FID=T1.OPID
      INNER JOIN LOCATION T3 ON T3.LOCATIONID=T1.LOCATIONID
      WHERE  T1.FETCHTYPE=5 {0}
      ]]>
    </Content>
    <Content Key="OperationPreOrder_GetConfirmList" DataBaseType="Oracle">
      <![CDATA[
      SELECT t1.FetchID,t1.FetchDate FDate,t1.OPID,t2.FNames FOperator, t1.LocationID,t3.LocationName FRoomName
      FROM FLOWFETCH T1
      INNER JOIN AC_WORKGROUP T2 ON T2.FID=T1.OPID
      INNER JOIN LOCATION T3 ON T3.LOCATIONID=T1.LOCATIONID
      WHERE  T1.FETCHTYPE=5 {0}
      ]]>
    </Content>

    <Content Key="OperationPreOrder_GetConfirmDetail" DataBaseType="SqlServer">
      <![CDATA[
      SELECT t5.CargoTypeID,t7.CargoTypeName, t6.Barcode,t4.BillNo
      FROM FLOWFETCH T1
      inner join FlowFetchList t4 on t4.FetchID=t1.FetchID
      inner join FlowPackageList t5 on t5.PackageID=t4.PackageID
      inner join StorageList t6 on t6.StorageID=t5.StorageID
      inner join CargoType t7 on t7.CargoTypeID=t5.CargoTypeID
      WHERE  T1.FETCHTYPE=5 {0}
      ]]>
    </Content>
    <Content Key="OperationPreOrder_GetConfirmDetail" DataBaseType="Oracle">
      <![CDATA[
      SELECT t5.CargoTypeID,t7.CargoTypeName, t6.Barcode,t4.BillNo
      FROM FLOWFETCH T1
      inner join FlowFetchList t4 on t4.FetchID=t1.FetchID
      inner join FlowPackageList t5 on t5.PackageID=t4.PackageID
      inner join StorageList t6 on t6.StorageID=t5.StorageID
      inner join CargoType t7 on t7.CargoTypeID=t5.CargoTypeID
      WHERE  T1.FETCHTYPE=5 {0}
      ]]>
    </Content>

    <Content Key="Query_GetCheckStatus" DataBaseType="SqlServer">
      SELECT TOP 1 CheckStatus FROM FlowPreOrderDetail WHERE PreOrderID=@PreOrderID
      AND CargoTopType=@CargoTopType
    </Content>
    <Content Key="Query_GetCheckStatus" DataBaseType="Oracle">
      <![CDATA[
      SELECT CheckStatus FROM FlowPreOrderDetail WHERE rownum<2 AND PreOrderID=:PreOrderID
      AND CargoTopType=:CargoTopType 
      ]]>
    </Content>
    <Content Key="UpdateConfirmInfoByLocationid" DataBaseType="SqlServer">
      update FlowFetchList set confirmed=1 from    FlowFetchList,OperationPreOrder where FlowFetchList.billno=OperationPreOrder.FNumber and confirmed=0 and flocation=@locationid
    </Content>

    <Content Key="CreateDisinfectContainerList" DataBaseType="SqlServer">
      declare @LastFDisinfectID uniqueidentifier
      select top 1 @LastFDisinfectID = FlowRecycleContainer.LastFDisinfectID
      from FlowRecycleContainer inner join FlowRecycle on FlowRecycleContainer.FRecycleID = FlowRecycle.FRecycleID
      where FlowRecycleContainer.ContainerID = @ContainerID
      order by FlowRecycle.RecycleDate desc

      if (@LastFDisinfectID is null)
      begin
      insert into FlowDisinfectContainerList
      (FDisinfectID,ContainerID,FRecycleID,WashType,WashDate,DeviceLogID,Status,OPID,ContainerDisinfectLogID)
      select @FDISINFECTID,@CONTAINERID,rc.FRecycleID,WashType,c.WashDate,c.DeviceLogID,c.Status,@OPID,newid()
      from Container c inner join FlowRecycleContainer rc on rc.LastFDisinfectID is null and c.ContainerID = rc.ContainerID
      WHERE c.CONTAINERID=@ContainerID
      end
      else
      begin
      insert into FlowDisinfectContainerList
      (FDisinfectID,ContainerID,FRecycleID,WashType,WashDate,DeviceLogID,Status,OPID,ContainerDisinfectLogID)
      select @FDISINFECTID,@CONTAINERID,rc.FRecycleID,WashType,c.WashDate,c.DeviceLogID,c.Status,@OPID,newid()
      from Container c inner join FlowRecycleContainer rc on rc.LastFDisinfectID =  @LastFDisinfectID and c.ContainerID = rc.ContainerID
      WHERE c.CONTAINERID=@ContainerID
      end

    </Content>
    <Content Key="CreateDisinfectContainerList" DataBaseType="Oracle">
	<![CDATA[ 
      DECLARE
      vLastFDisinfectID varchar2(36);
      begin
      select LastFDisinfectID into vLastFDisinfectID
      from (
      select   frc.LastFDisinfectID
      from FlowRecycleContainer frc inner join FlowRecycle fr on frc.FRecycleID = fr.FRecycleID
      where frc.ContainerID = :CONTAINERID
      order by fr.RecycleDate desc
      ) tt where rownum=1;
      if vLastFDisinfectID is null then
      insert into FlowDisinfectContainerList
      (FDisinfectID,ContainerID,FRecycleID,WashType,WashDate,DeviceLogID,Status,OPID,ContainerDisinfectLogID)
      select :FDISINFECTID,:CONTAINERID,rc.FRecycleID,WashType,c.WashDate,c.DeviceLogID,c.Status,:OPID,fun_newguid
      from Container c inner join FlowRecycleContainer rc on rc.LastFDisinfectID is null and c.ContainerID = rc.ContainerID
      WHERE c.CONTAINERID=:CONTAINERID;
      else
      insert into FlowDisinfectContainerList
      (FDisinfectID,ContainerID,FRecycleID,WashType,WashDate,DeviceLogID,Status,OPID,ContainerDisinfectLogID)
      select :FDISINFECTID,:CONTAINERID,rc.FRecycleID,WashType,c.WashDate,c.DeviceLogID,c.Status,:OPID,fun_newguid
      from Container c inner join FlowRecycleContainer rc on rc.LastFDisinfectID =  vLastFDisinfectID and c.ContainerID = rc.ContainerID
      WHERE c.CONTAINERID=:CONTAINERID; 
      end if;
      end;
     ]]> 
    </Content>
	  <Content Key="Delete_DisifectContainerListByDisifectID" DataBaseType="Oracle">
		  delete from FlowDisinfectContainerList where FDisinfectID=:FDisinfectID
	  </Content>
	  <Content Key="Delete_DisifectContainerListByDisifectID" DataBaseType="SqlServer">
		  delete from FlowDisinfectContainerList where FDisinfectID=@FDisinfectID
	  </Content>
	  

	  <Content Key="GetFDisinfectIDByLogID" DataBaseType="SqlServer">
      select FDisinfectID from dbo.FlowDisinfect
      where LogID = @LOGID
    </Content>
    <Content Key="GetFDisinfectIDByLogID" DataBaseType="Oracle">
      select FDisinfectID from FlowDisinfect
      where LogID = :LOGID
    </Content>

    <Content Key="IsNormalPackageDisinfect" DataBaseType="SqlServer">
      select top 1  1
      from Container c  with (nolock)
      inner join FlowRecycleContainer rc  with (nolock) on rc.LastFDisinfectID = @FDISINFECTID and c.ContainerID = rc.ContainerID
      inner join FlowRecycleList rl with (nolock) on rc.FRecycleID = rl.FRecycleID
      inner join FlowPackageList pl with (nolock) on rl.PackageID = pl.PackageID
      inner join CargoType ct with (nolock) on pl.CargoTypeID = ct.CargoTypeid
      WHERE c.CONTAINERID = @ContainerID and ct.isnormal = 0
    </Content>
    <Content Key="IsNormalPackageDisinfect" DataBaseType="Oracle">
      select 1
      from Container c inner join FlowRecycleContainer rc on rc.LastFDisinfectID = :FDISINFECTID and c.ContainerID = rc.ContainerID
      inner join FlowRecycleList rl on rc.FRecycleID = rl.FRecycleID
      inner join FlowPackageList pl on rl.PackageID = pl.PackageID
      inner join CargoType ct on pl.CargoTypeID = ct.CargoTypeid
      WHERE rownum = 1 and  c.CONTAINERID = :ContainerID and ct.isnormal = 0
    </Content>

    <Content Key="RecyclecontaineDisinfectIni" DataBaseType="SqlServer">
      update Container
      set DeviceLogID = null,
      Status = 10,
      WashTypeNow = WashType,
      FRecycleID = @FRECYCLEID,
      FDisinfectID = null
      from FlowRecycleContainer
      where Container.ContainerID = FlowRecycleContainer.ContainerID and FlowRecycleContainer.FRecycleID = @FRECYCLEID
    </Content>
    <Content Key="RecyclecontaineDisinfectIni" DataBaseType="Oracle">
      update Container c
      set DeviceLogID = null,
      Status = 10,
      WashTypeNow = WashType,
      FRecycleID = :FRECYCLEID,
      FDisinfectID = null
      where EXISTS (
      select 1 from FlowRecycleContainer frc where frc.ContainerID=c.ContainerID and frc.FRecycleID = :FRECYCLEID
      )
    </Content>

    <Content Key="Disinfect_GetInstrumentSum" DataBaseType="SqlServer">
      SELECT T3.CARGOTYPEID,T3.CARGOTYPENAME,SUM(T3.QUANTITY) QUANTITY
      FROM FLOWRECYCLELIST T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.PACKAGEID=T1.PACKAGEID
      inner join StorageList t6 on t6.StorageID=t2.StorageID
      INNER JOIN PACKAGESETTING T3 ON T3.PACKAGETYPEID=T2.CARGOTYPEID
      INNER JOIN (SELECT CARGOTYPEID,CARGOTYPENAME,Pinyin FROM CARGOTYPE WHERE CARGOTOPTYPE =16) T4 ON T4.CARGOTYPEID=T2.CARGOTYPEID
      INNER JOIN (SELECT CARGOTYPEID,CARGOTYPENAME,Pinyin FROM CARGOTYPE WHERE CARGOTOPTYPE =1) T5 ON T5.CARGOTYPEID=T3.CARGOTYPEID
      WHERE 1=1  {0}
      GROUP BY T3.CARGOTYPEID,t3.CargoTypeName
    </Content>
    <Content Key="Disinfect_GetInstrumentSum" DataBaseType="Oracle">
      SELECT T3.CARGOTYPEID,T3.CARGOTYPENAME,SUM(T3.QUANTITY) QUANTITY
      FROM FLOWRECYCLELIST T1
      INNER JOIN FLOWPACKAGELIST T2 ON T2.PACKAGEID=T1.PACKAGEID
      inner join StorageList t6 on t6.StorageID=t2.StorageID
      INNER JOIN PACKAGESETTING T3 ON T3.PACKAGETYPEID=T2.CARGOTYPEID
      INNER JOIN (SELECT CARGOTYPEID,CARGOTYPENAME,Pinyin FROM CARGOTYPE WHERE CARGOTOPTYPE =16) T4 ON T4.CARGOTYPEID=T2.CARGOTYPEID
      INNER JOIN (SELECT CARGOTYPEID,CARGOTYPENAME,Pinyin FROM CARGOTYPE WHERE CARGOTOPTYPE =1) T5 ON T5.CARGOTYPEID=T3.CARGOTYPEID
      WHERE 1=1  {0}
      GROUP BY T3.CARGOTYPEID,t3.CargoTypeName
    </Content>

    <Content Key="Get_PackageUse" DataBaseType="SqlServer">
      SELECT
      FlowUse.UseID
      ,FlowUse.UseDate
      ,FlowUse.OPID
      ,FlowUse.OrgID
      ,FlowUse.PatientID
      ,PatientList.PatientName
      ,Deptment.Name AS DeptmentText
      ,Recorder.Name AS RecorderName
      FROM FlowUse
      LEFT JOIN PatientList
      ON FlowUse.PatientID = PatientList.PatientID
      LEFT JOIN AC_Org AS Deptment
      ON FlowUse.OrgID = Deptment.ID
      LEFT JOIN AC_User AS Recorder
      ON FlowUse.OPID = Recorder.ID
      WHERE 1 = 1 {0}
    </Content>
    <Content Key="Get_PackageUseDetail" DataBaseType="SqlServer">
      SELECT
      FlowUseList.UseID
      ,FlowUseList.StorageID
      ,FlowUseList.Quantity
      ,StorageList.Barcode
      ,view_CargoType.CargoTopType
      ,view_CargoType.CargoTypeKind
      ,view_CargoType.CargoTypeID
      ,view_CargoType.CargoTopTypeText
      ,view_CargoType.CargoTypeKindText
      ,view_CargoType.CargoTypeText
      FROM FlowUseList
      INNER JOIN view_CargoType
      ON view_CargoType.CargoTypeID = FlowUseList.CargoTypeID
      INNER JOIN StorageList
      ON StorageList.StorageID = FlowUseList.StorageID
      WHERE 1 = 1 {0}
    </Content>
    <Content Key="Query_FlowPackageUse" DataBaseType="SqlServer">
      SELECT DISTINCT
      FlowUse.UseID
      ,FlowUse.OrgID AS DeptmentID
      ,FlowUse.PatientID
      ,AC_Org.NAME AS DeptmentText
      ,FlowUse.UseDate
      ,AC_User.NAME AS UserName
      ,PatientList.PatientName
      FROM FlowUse
      INNER JOIN FlowUseList on FlowUseList.UseID = FlowUse.UseID
      LEFT JOIN AC_User  on FlowUse.OPID = AC_User.ID
      LEFT JOIN AC_Org  on AC_Org.ID = FlowUse.OrgID
      INNER JOIN PatientList on PatientList.PatientID = FlowUse.PatientID
      INNER JOIN view_CargoType ON view_CargoType.CargoTypeID = FlowUseList.CargoTypeID
      INNER JOIN StorageList ON StorageList.StorageID = FlowUseList.StorageID
      WHERE 1 = 1 {0}
      Order By FlowUse.USEDATE DESC
    </Content>
	  <Content Key="Query_FlowPackageUse" DataBaseType="Oracle">
		  SELECT DISTINCT
		  FlowUse.UseID
		  ,FlowUse.OrgID AS DeptmentID
		  ,FlowUse.PatientID
		  ,AC_Org.NAME AS DeptmentText
		  ,FlowUse.UseDate
		  ,AC_User.NAME AS UserName
		  ,PatientList.PatientName
		  FROM FlowUse
		  INNER JOIN FlowUseList on FlowUseList.UseID = FlowUse.UseID
		  LEFT JOIN AC_User  on FlowUse.OPID = AC_User.ID
		  LEFT JOIN AC_Org  on AC_Org.ID = FlowUse.OrgID
		  INNER JOIN PatientList on PatientList.PatientID = FlowUse.PatientID
		  INNER JOIN view_CargoType ON view_CargoType.CargoTypeID = FlowUseList.CargoTypeID
		  INNER JOIN StorageList ON StorageList.StorageID = FlowUseList.StorageID
		  WHERE 1 = 1 {0}
		  Order By FlowUse.USEDATE DESC
	  </Content>
	  <Content Key="Query_FlowPackageUseInfo" DataBaseType="SqlServer">
      select
      p.PatientID,PatientName,PatientSex,PatientAge,DepartmentName,BedNo,Isaffected,case Isaffected when 1 then '是' else '否' end as affected
      ,s.Barcode
      /*--术前--*/
      ,case when sq1.FNames is not null and sq2.FNames is not null
      then sq1.FNames+','+sq2.FNames
      else
      case when sq1.FNames is not null then sq1.FNames else sq2.FNames end end as BeforeOperationCheckUserName
      /*--end--*/
      /*--术中--*/
      ,case when sz1.FNames is not null and sz1.FNames is not null
      then sz1.FNames+','+sz2.FNames
      else
      case when sz1.FNames is not null then sz1.FNames else sz2.FNames end end as PatientOperationingUserName
      /*--end--*/
      /*--术后--*/
      ,case when sh1.FNames is not null and sh2.FNames is not null
      then sh2.FNames+','+sh2.FNames
      else
      case when sh1.FNames is not null then sh1.FNames else sh2.FNames end end as PatientOperationFinishUserName
      /*--end--*/
      from StorageList s
      inner join FlowUseList ful
      on ful.StorageID=s.StorageID
      inner join FlowUse fu
      on ful.UseID=fu.UseID
      inner join PatientList p
      on p.PatientID=fu.PatientID
      left join AC_WorkGroup sq1 on fu.BeforeOperationCheckUserID=sq1.FID
      left join AC_WorkGroup sq2 on fu.BeforeOperationCheck2UserID=sq2.FID
      left join AC_WorkGroup sz1 on fu.PatientOperationingUserID=sz1.FID
      left join AC_WorkGroup sz2 on fu.PatientOperationing2UserID=sz2.FID
      left join AC_WorkGroup sh1 on fu.PatientOperationFinishUserID=sh1.FID
      left join AC_WorkGroup sh2 on fu.PatientOperationFinish2UserID=sh2.FID
      where  1 = 1 {0}
    </Content>
	  <Content Key="Query_FlowPackageUseInfo" DataBaseType="Oracle">
      select
      p.PatientID,PatientName,PatientSex,PatientAge,DepartmentName,BedNo,Isaffected,case Isaffected when 1 then '是' else '否' end as affected
      ,s.Barcode
      /*--术前--*/
      ,case when sq1.FNames is not null and sq2.FNames is not null
      then sq1.FNames+','+sq2.FNames
      else
      case when sq1.FNames is not null then sq1.FNames else sq2.FNames end end as BeforeOperationCheckUserName
      /*--end--*/
      /*--术中--*/
      ,case when sz1.FNames is not null and sz1.FNames is not null
      then sz1.FNames+','+sz2.FNames
      else
      case when sz1.FNames is not null then sz1.FNames else sz2.FNames end end as PatientOperationingUserName
      /*--end--*/
      /*--术后--*/
      ,case when sh1.FNames is not null and sh2.FNames is not null
      then sh2.FNames+','+sh2.FNames
      else
      case when sh1.FNames is not null then sh1.FNames else sh2.FNames end end as PatientOperationFinishUserName
      /*--end--*/
      from StorageList s
      inner join FlowUseList ful
      on ful.StorageID=s.StorageID
      inner join FlowUse fu
      on ful.UseID=fu.UseID
      inner join PatientList p
      on p.PatientID=fu.PatientID
      left join AC_WorkGroup sq1 on fu.BeforeOperationCheckUserID=sq1.FID
      left join AC_WorkGroup sq2 on fu.BeforeOperationCheck2UserID=sq2.FID
      left join AC_WorkGroup sz1 on fu.PatientOperationingUserID=sz1.FID
      left join AC_WorkGroup sz2 on fu.PatientOperationing2UserID=sz2.FID
      left join AC_WorkGroup sh1 on fu.PatientOperationFinishUserID=sh1.FID
      left join AC_WorkGroup sh2 on fu.PatientOperationFinish2UserID=sh2.FID
      where  1 = 1 {0}
    </Content>
	  <Content Key="Delete_FlowUseList" DataBaseType="SqlServer">
      DELETE
      FlowUseList
      WHERE UseID = @UseID
      </Content>
	  <Content Key="Delete_FlowUseList" DataBaseType="Oracle">
		  DELETE
		  FlowUseList
		  WHERE UseID = :UseID
	  </Content>
    <Content Key="Recycle_GetInstrumentsDetailByContainer" DataBaseType="SqlServer">
      SELECT T1.FID,T1.FRECYCLEID,T1.FCONTAINERID,T1.FCARGOTYPEID, T2.CARGOTYPENAME FCARGOTYPENAME,T1.FQTY
      FROM FLOWRECYCLEINSTRUMENT T1
      INNER JOIN (SELECT CARGOTYPEID,CARGOTYPENAME FROM CARGOTYPE WHERE CARGOTOPTYPE=1) T2 ON T2.CARGOTYPEID=T1.FCARGOTYPEID
      WHERE 1=1 {0}
    </Content>
    <Content Key="Recycle_GetInstrumentsDetailByContainer" DataBaseType="Oracle">
      SELECT T1.FID,T1.FRECYCLEID,T1.FCONTAINERID,T1.FCARGOTYPEID, T2.CARGOTYPENAME FCARGOTYPENAME,T1.FQTY
      FROM FLOWRECYCLEINSTRUMENT T1
      INNER JOIN (SELECT CARGOTYPEID,CARGOTYPENAME FROM CARGOTYPE WHERE CARGOTOPTYPE=1) T2 ON T2.CARGOTYPEID=T1.FCARGOTYPEID
      WHERE 1=1 {0}
    </Content>

    <Content Key="AssistData_GetReasonKey" DataBaseType="SqlServer">
      <![CDATA[
       WITH TEMP AS (
		    SELECT ISNULL(MAX(Cast(FKEY as int)),0) MAXID  FROM ASSISTDATA  WHERE FPARENTID=@ParentID
       )
       SELECT CASE WHEN MAXID<1 THEN 1 WHEN MAXID=1 THEN 2 ELSE MAXID*2 END FMAXID FROM TEMP
      ]]>
    </Content>
    <Content Key="AssistData_GetReasonKey" DataBaseType="Oracle">
      <![CDATA[
       SELECT CASE  WHEN MAXID<1 THEN 1 WHEN MAXID=1 THEN 2 ELSE MAXID*2 END FMAXID FROM 
	   (SELECT MAX(TO_NUMBER(nvl(FKEY,0))) MAXID  FROM ASSISTDATA  WHERE FPARENTID=:ParentID)
      ]]>
    </Content>

    <Content Key="AssistData_GetTopID" DataBaseType="SqlServer">
      <![CDATA[
        WITH TEMP AS
        (
	        SELECT * FROM ASSISTDATA WHERE FID=@ParentID AND FID>0
	        UNION ALL
	        SELECT A.* FROM ASSISTDATA AS A INNER JOIN TEMP AS B ON A.FID=B.FPARENTID
        )
        SELECT TOP 1 FID FROM TEMP ORDER BY FPARENTID 
      ]]>
    </Content>
    <Content Key="AssistData_GetTopID" DataBaseType="Oracle">
      <![CDATA[		
		select FID from
		(
		select FID 
		FROM  assistdata
		START WITH FID=:ParentID and FID>0
		CONNECT BY  FID = PRIOR fparentid   AND FID>0 
		order by  fparentid asc
		)  where   rownum=1  
      ]]>
    </Content>

    <Content Key="Task_GetReasonShowList" DataBaseType="SqlServer">
      <![CDATA[
        SELECT FID,FCAPTION FROM ASSISTDATA WHERE FPARENTID=@ReasonID AND @ReasonTotal & CAST(FKEY AS INT)>0
      ]]>
    </Content>
    <Content Key="Task_GetReasonShowList" DataBaseType="Oracle">
      <![CDATA[
        SELECT FID,FCAPTION FROM ASSISTDATA WHERE FPARENTID=:ReasonID AND bitand(:ReasonTotal,to_number(FKEY))>0
      ]]>
    </Content>

    <Content Key="FlowPackageList_GetPackageOutPackingDays" DataBaseType="SqlServer">
      <![CDATA[
	      if(Exists(select top 1 1 from SevereEnvironment where @PackageDate between FBeginDate and FEndDate))
	      begin
		      select PDAYS=Isnull(PWDays,7) from PackageType 
		      where PTypeID=@OutPackingID
	      end else
	      begin
		      select PDAYS=Isnull(PDays,14) from PackageType 
		      where PTypeID=@OutPackingID
	      end
      ]]>
    </Content>
    <Content Key="FlowPackageList_GetPackageOutPackingDays" DataBaseType="Oracle">
      <![CDATA[		  
		  select case (select count(*) from SevereEnvironment where to_date(:PackageDate,'yyyy-mm-dd hh24:mi:ss') between FBeginDate and FEndDate) when 0 then (select nvl(PDays,14)   PDAYS from PackageType 
          where PTypeID=:OutPackingID)  else (select nvl(PWDays,7)   PDAYS from PackageType 
          where PTypeID=:OutPackingID)
           end as PDAYS
           from dual
      ]]>
    </Content>

    <Content Key="Cargotype_GetAssociationBit" DataBaseType="SqlServer">
      <![CDATA[
        with device as
        (
	        select DeviceID,DeviceName,Case when DeviceType<=2 then 0 when DeviceType>=4 then 4 else DeviceType end DeviceType,BarCode
	        from Devices where isdisabled=0
        ),
        aa as (
	        select dense_rank() over(order by devicetype) typeindex,SortNum =row_number() over (partition  by devicetype order by barcode),DeviceID,DeviceName,DeviceType,BarCode
	        from device
        )
        select (case sortnum when 1 then 1 when 2 then 2 else power(2,SortNum) end) FBit,DeviceID,DeviceName,DeviceType from aa 
        order by DeviceType,BarCode
      ]]>
    </Content>
    <Content Key="Cargotype_GetAssociationBit" DataBaseType="Oracle">
      <![CDATA[
		select (case sortnum when 1 then 1 when 2 then 2 else power(2,SortNum) end) FBit,DeviceID,DeviceName,DeviceType from 
        (
         select dense_rank() over(order by devicetype) typeindex,row_number() over (partition  by devicetype order by barcode) SortNum ,DeviceID,DeviceName,DeviceType,BarCode
          from 
          (
          select DeviceID,DeviceName,Case when DeviceType<=2 then 0 when DeviceType>=4 then 4 else DeviceType end DeviceType,BarCode
          from Devices where isdisabled=0
          ) 
        )
        order by DeviceType,BarCode
      ]]>
    </Content>

    <Content Key="Cargotype_GetPackageListWithBit" DataBaseType="SqlServer">
      <![CDATA[
        select c.CargoTypeID,c.CargoTypeName,ca.FDisinfect,ca.FSterilize 
        from Container ct
        inner join FlowRecycleContainer rc on rc.FRecycleID=ct.FRecycleID 
        inner join FlowRecycleList rl on rl.FRecycleID=rc.FRecycleID
        inner join FlowPackageList pl on pl.PackageID=rl.PackageID
        inner join CargoType c on c.CargoTypeID=pl.CargoTypeID
        left join CargotypeDinSteAssociation ca on ca.FCargotypeID=pl.CargoTypeID
        where ct.ContainerID='{0}'
      ]]>
    </Content>
    <Content Key="Cargotype_GetPackageListWithBit" DataBaseType="Oracle">
      <![CDATA[
        select c.CargoTypeID,c.CargoTypeName,ca.FDisinfect,ca.FSterilize 
        from Container ct
        inner join FlowRecycleContainer rc on rc.FRecycleID=ct.FRecycleID 
        inner join FlowRecycleList rl on rl.FRecycleID=rc.FRecycleID
        inner join FlowPackageList pl on pl.PackageID=rl.PackageID
        inner join CargoType c on c.CargoTypeID=pl.CargoTypeID
        left join CargotypeDinSteAssociation ca on ca.FCargotypeID=pl.CargoTypeID
        where ct.ContainerID='{0}'
      ]]>
    </Content>

    <Content Key="FlowPackageList_PackageClinicalStatus" DataBaseType="SqlServer">
      <![CDATA[     
	  select 1 from FlowFetch ff,
      FlowFetchList ffl,StorageList sl 
	  where  ff.FetchID=ffl.FetchID
	  and ffl.PackageID=sl.storageid and ff.FetchType=@fetchtype and sl.barcode=@barcode 
      ]]>
    </Content>
    <Content Key="FlowPackageList_PackageClinicalStatus" DataBaseType="Oracle">
      <![CDATA[
      select 1 from FlowFetch ff,
      FlowFetchList ffl,StorageList sl 
	  where rownum=1 and ff.FetchID=ffl.FetchID
	  and ffl.PackageID=sl.storageid and ff.FetchType=:fetchtype and sl.barcode=:barcode 
      ]]>
    </Content>

    <Content Key="Cargotype_Info" DataBaseType="SqlServer">
      <![CDATA[
        select c.*,ck.KindName CargoTypeKindName from CargoType c
        inner join CargoTypeKind ck on ck.ID=c.CargoTypeKind
        where 1=1  and c.IsDisabled=0 {0}
      ]]>
    </Content>
    <Content Key="Cargotype_Info" DataBaseType="Oracle">
      <![CDATA[
        select c.*,ck.KindName CargoTypeKindName from CargoType c
        inner join CargoTypeKind ck on ck.ID=c.CargoTypeKind
        where 1=1  and c.IsDisabled=0 {0}
      ]]>
    </Content>

    <Content Key="FlowPackageIn_GetOutPatient" DataBaseType="SqlServer">
      <![CDATA[
        select FID,FKey,FCaption from AssistData where FParentID in (select FID from AssistData where FKey='OUTPATIENT')
      ]]>
    </Content>
    <Content Key="FlowPackageIn_GetOutPatient" DataBaseType="Oracle">
      <![CDATA[
        select FID,FKey,FCaption from AssistData where FParentID in (select FID from AssistData where FKey='OUTPATIENT')
      ]]>
    </Content>
    <Content Key="Query_ClearDisinfection" DataBaseType="SqlServer">
      SELECT
      ClearGuid
      ,ServerName
      ,ClearID
      ,ClearSN
      ,DisinfectionNo
      ,EndoscopeNo
      ,EndoscopeType
      ,Operator
      ,PatientName
      ,StartTime
      ,EndTime
      ,TotalTimes
      ,EndoscopeInfo
      FROM ClearDisinfection
      WHERE 1 = 1 {0}
      Order By ClearID DESC
    </Content>
    <Content Key="Query_ClearDisinfection" DataBaseType="Oracle">
      SELECT
      ClearGuid
      ,ServerName
      ,ClearID
      ,ClearSN
      ,DisinfectionNo
      ,EndoscopeNo
      ,EndoscopeType
      ,Operator
      ,PatientName
      ,StartTime
      ,EndTime
      ,TotalTimes
      ,EndoscopeInfo
      FROM ClearDisinfection
      WHERE 1 = 1 {0}
      Order By ClearID DESC
    </Content>
    <Content Key="Clear_DisinfectionSync" DataBaseType="SqlServer">
      IF EXISTS(SELECT * FROM ClearDisinfection WHERE ServerName=@ServerName AND ClearID=@ClearID)
      UPDATE ClearDisinfection
      SET ClearGuid = @ClearGuid
      ,ServerName = @ServerName
      ,ClearID = @ClearID
      ,ClearSN = @ClearSN
      ,DisinfectionNo = @DisinfectionNo
      ,EndoscopeNo = @EndoscopeNo
      ,EndoscopeType = @EndoscopeType
      ,Operator = @Operator
      ,PatientName = @PatientName
      ,StartTime = @StartTime
      ,EndTime = @EndTime
      ,TotalTimes = @TotalTimes
      ,EndoscopeInfo = @EndoscopeInfo
      WHERE ServerName=@ServerName AND ClearID=@ClearID
      ELSE
      INSERT INTO ClearDisinfection
      (ClearGuid
      ,ServerName
      ,ClearID
      ,ClearSN
      ,DisinfectionNo
      ,EndoscopeNo
      ,EndoscopeType
      ,Operator
      ,PatientName
      ,StartTime
      ,EndTime
      ,TotalTimes
      ,EndoscopeInfo)
      VALUES
      (@ClearGuid
      ,@ServerName
      ,@ClearID
      ,@ClearSN
      ,@DisinfectionNo
      ,@EndoscopeNo
      ,@EndoscopeType
      ,@Operator
      ,@PatientName
      ,@StartTime
      ,@EndTime
      ,@TotalTimes
      ,@EndoscopeInfo)
    </Content>
    <Content Key="Clear_EndoscopesSync" DataBaseType="SqlServer">
      IF EXISTS(SELECT * FROM ClearEndoscope WHERE EndoscopeNo=@EndoscopeNo )
      UPDATE ClearEndoscope
      SET EndoscopeNo = @EndoscopeNo
      ,EndoscopeType = @EndoscopeType
      ,EndoscopeInfo = @EndoscopeInfo
      WHERE EndoscopeNo=@EndoscopeNo
      ELSE
      INSERT INTO ClearEndoscope
      (EndoscopeNo
      ,EndoscopeType
      ,EndoscopeInfo)
      VALUES
      (@EndoscopeNo
      ,@EndoscopeType
      ,@EndoscopeInfo)
    </Content>
    <Content Key="Clear_OperatorsSync" DataBaseType="SqlServer">
      IF EXISTS(SELECT * FROM ClearOperator WHERE OperatorNo=@OperatorNo)
      UPDATE ClearOperator
      SET OperatorNo = @OperatorNo
      ,OperatorName = @OperatorName
      WHERE OperatorNo=@OperatorNo
      ELSE
      INSERT INTO ClearOperator
      (OperatorNo
      ,OperatorName)
      VALUES
      (@OperatorNo
      ,@OperatorName)
    </Content>

    <Content Key="Provide_GetPackageBarcodeByProvide" DataBaseType="SqlServer">
      <![CDATA[
        select pvl.PackageID,sl.Barcode from FlowProvide pv
        inner join FlowProvideList pvl on pvl.ProvideID=pv.ProvideID         
        inner join StorageList sl on sl.StorageID=pvl.PackageID
        where pv.BarCode=@Barcode
      ]]>
    </Content>
    <Content Key="Provide_GetPackageBarcodeByProvide" DataBaseType="Oracle">
      <![CDATA[
        select pvl.PackageID,sl.Barcode from FlowProvide pv
        inner join FlowProvideList pvl on pvl.ProvideID=pv.ProvideID         
        inner join StorageList sl on sl.StorageID=pvl.PackageID
        where pv.BarCode=:Barcode
      ]]>
    </Content>
    <Content Key="Query_ElecContainers" DataBaseType="SqlServer">
      <![CDATA[ 
        select FID,FCARGOTYPEID,QUANTITY,FCARGOTYPEECORDERNO  from ElecContainer where 1=1 AND Quantity>0 {0}
		ORDER BY FCARGOTYPEECORDERNO ASC
      ]]>
    </Content>
    <Content Key="Query_ElecContainers" DataBaseType="Oracle">
      <![CDATA[
        select FID,FCARGOTYPEID,QUANTITY,FCARGOTYPEECORDERNO  from ElecContainer where 1=1 AND Quantity>0 {0}
		ORDER BY FCARGOTYPEECORDERNO ASC
      ]]>
    </Content>
    <Content Key="Query_ElecContainersAll" DataBaseType="SqlServer">
      <![CDATA[ 
        select FID,FCARGOTYPEID,QUANTITY,FCARGOTYPEECORDERNO  from ElecContainer where 1=1 {0}
		ORDER BY FCARGOTYPEECORDERNO ASC
      ]]>
    </Content>
    <Content Key="Query_ElecContainersAll" DataBaseType="Oracle">
      <![CDATA[
        select FID,FCARGOTYPEID,QUANTITY,FCARGOTYPEECORDERNO  from ElecContainer where 1=1 {0}
		ORDER BY FCARGOTYPEECORDERNO ASC
      ]]>
    </Content>

    <Content Key="Provide_GetPackageProvideQueue" DataBaseType="SqlServer">
      <![CDATA[ 
        select fpl.CargoTypeID, fpl.PackageID,isnull(ct.containername,c.cargotypename)+'('+sl.Barcode+')' as Barcode,fpv.PackageID,sl.EXPDate from FlowPackageList fpl
        inner join StorageList sl on sl.StorageID=fpl.StorageID
        inner join CargoType c on sl.CargoTypeID = c.CargoTypeID
        left join Container ct on fpl.containerid = ct.containerid
        left join FlowProvideList fpv on fpv.PackageID=fpl.PackageID
        where sl.status in (40,50,60) and fpv.ProvideID is null and sl.EXPDate is not null and sl.EXPDate>=GETDATE()
	        {0}
        order by sl.EXPDate
      ]]>
    </Content>
    <Content Key="Provide_GetPackageProvideQueue" DataBaseType="Oracle">
      <![CDATA[
        select fpl.CargoTypeID, fpl.PackageID,nvl(ct.containername,c.cargotypename) ||'('|| sl.Barcode || ')' as Barcode,fpv.PackageID,sl.EXPDate from FlowPackageList fpl
        inner join StorageList sl on sl.StorageID=fpl.StorageID
        inner join CargoType c on sl.CargoTypeID = c.CargoTypeID、
        left join Container ct on fpl.containerid = ct.containerid
        left join FlowProvideList fpv on fpv.PackageID=fpl.PackageID
        where sl.status in (40,50,60) and fpv.ProvideID is null and sl.EXPDate is not null and sl.EXPDate>=sysdate
	        {0}
        order by sl.EXPDate
      ]]>
    </Content>

    <Content Key="Query_RecyclePreOrder" DataBaseType="SqlServer">
      <![CDATA[ 
       select bb.NAME,bb.CARGOTYPEID,isnull(bb.cnt,0)-isnull(aa.cnt,0) as CNT
		from 
		(
		select  org.Name,dbo.fun_get_Date(Orderdate,'daily') date1 ,detail.CargoTypeID,sum(PreOrderQty) cnt
		from FlowPreorder p inner join   FlowPreOrderDetail detail
		on p.PreOrderID=detail.PreOrderID and detail.CargoTopType=16 
		inner join  AC_Org org   
		ON p.OrgID = org.ID
		where dbo.fun_get_Date(Orderdate,'daily')=@date1 and org.Name=@orgname and detail.CargoTypeID=@cargotypeid	and  p.floworgid=@floworgid 
		group by org.Name,dbo.fun_get_Date(Orderdate,'daily') ,detail.CargoTypeID
		) bb 
		left join 
		(
		select w.WarehouseName,ac_org.Name,dbo.fun_get_Date(RecycleDate,'daily') date1 ,fp.CargoTypeID,COUNT(*) cnt from FlowRecycle r inner join  FlowRecycleList cl
		on r.FRecycleID=cl.FRecycleID
		inner join FlowPackageList fp
		on cl.PackageID=fp.PackageID 
		LEFT JOIN WAREHOUSE W   
		ON fp.LASTWAREHOUSEID = W.WAREHOUSEID
		inner join ac_org on w.Orgid=ac_org.ID
		where dbo.fun_get_Date(RecycleDate,'daily')=@date1 and ac_org.Name=@orgname	 and fp.CargoTypeID=@cargotypeid	and r.floworgid=@floworgid
		group by w.WarehouseName,ac_org.Name,dbo.fun_get_Date(RecycleDate,'daily') ,fp.CargoTypeID
		) aa 
		on aa.WarehouseName=bb.Name and aa.date1=bb.date1 and aa.CargoTypeID=bb.CargoTypeID
      ]]>
    </Content>
    <Content Key="Query_RecyclePreOrder" DataBaseType="Oracle">
      <![CDATA[
         select bb.NAME,bb.CARGOTYPEID,nvl(bb.cnt,0)-nvl(aa.cnt,0) as CNT
		from 
		(
		select  org.Name,fun_get_Date(Orderdate,'daily') date1 ,detail.CargoTypeID,sum(PreOrderQty) cnt
		from FlowPreorder p inner join   FlowPreOrderDetail detail
		on p.PreOrderID=detail.PreOrderID and detail.CargoTopType=16 
		inner join  AC_Org org   
		ON p.OrgID = org.ID
		where fun_get_Date(Orderdate,'daily')=:date1 and org.Name=:orgname  and detail.CargoTypeID=:cargotypeid	and  p.floworgid=:floworgid 
		group by org.Name,fun_get_Date(Orderdate,'daily')  ,detail.CargoTypeID
		) 
		bb left join		
		(
		select  w.WarehouseName,ac_org.Name, fun_get_Date(RecycleDate,'daily') date1 ,fp.CargoTypeID,COUNT(*) cnt from FlowRecycle r inner join  FlowRecycleList cl
		on r.FRecycleID=cl.FRecycleID
		inner join FlowPackageList fp
		on cl.PackageID=fp.PackageID 
		LEFT JOIN WAREHOUSE W   
		ON fp.LASTWAREHOUSEID = W.WAREHOUSEID
		inner join ac_org on w.Orgid=ac_org.ID
		where fun_get_Date(RecycleDate,'daily')=:date1 and ac_org.Name=:orgname   and fp.CargoTypeID=:cargotypeid	and r.floworgid=:floworgid
		group by  w.WarehouseName,ac_org.Name,fun_get_Date(RecycleDate,'daily') ,fp.CargoTypeID
		) aa		
		on aa.Name=bb.Name and aa.date1=bb.date1 and aa.CargoTypeID=bb.CargoTypeID
      ]]>
    </Content>
    <Content Key="Query_RecyclePreOrderSumarry" DataBaseType="SqlServer">
      <![CDATA[ 
       select bb.NAME,bb.CARGOTYPEID,bb.DATE1,isnull(bb.cnt,0) as YDCNT,isnull(aa.cnt,0) as RECYCLECNT,C.CARGOTYPENAME,CK.KINDNAME
		from 
		(
		select  org.Name,dbo.fun_get_Date(Orderdate,'daily') date1 ,detail.CargoTypeID,sum(PreOrderQty) cnt
		from FlowPreorder p inner join   FlowPreOrderDetail detail
		on p.PreOrderID=detail.PreOrderID and detail.CargoTopType=16 
		inner join  AC_Org org   ON p.OrgID = org.ID		
		where  1=1 {0}
		group by org.Name,dbo.fun_get_Date(Orderdate,'daily') ,detail.CargoTypeID
		) bb 
		left join 
		(
		select  ac_org.Name,dbo.fun_get_Date(RecycleDate,'daily') date1 ,fp.CargoTypeID,COUNT(*) cnt from FlowRecycle r inner join  FlowRecycleList cl
		on r.FRecycleID=cl.FRecycleID
		inner join FlowPackageList fp
		on cl.PackageID=fp.PackageID 
		LEFT JOIN WAREHOUSE W   
		ON fp.LASTWAREHOUSEID = W.WAREHOUSEID
		inner join ac_org on w.Orgid=ac_org.ID
		where 1=1 {1}
		group by ac_org.Name,dbo.fun_get_Date(RecycleDate,'daily') ,fp.CargoTypeID
		) aa 
		on aa.Name=bb.Name and aa.date1=bb.date1 and aa.CargoTypeID=bb.CargoTypeID
		inner join CargoType C on c.CargoTypeID=bb.CargoTypeID
		inner join CargoTypeKind ck on c.CargoTypeKind=ck.ID	
      ]]>
    </Content>
    <Content Key="Query_RecyclePreOrderSumarry" DataBaseType="Oracle">
      <![CDATA[
         select bb.NAME,bb.CARGOTYPEID,bb.DATE1,nvl(bb.cnt,0) as YDCNT,nvl(aa.cnt,0) as RECYCLECNT,C.CARGOTYPENAME,CK.KINDNAME
		from 
		(
		select  org.Name,fun_get_Date(Orderdate,'daily') date1 ,detail.CargoTypeID,sum(PreOrderQty) cnt
		from FlowPreorder p inner join   FlowPreOrderDetail detail
		on p.PreOrderID=detail.PreOrderID and detail.CargoTopType=16 
		inner join  AC_Org org   
		ON p.OrgID = org.ID
		where 1=1 {0}
		group by org.Name,fun_get_Date(Orderdate,'daily')  ,detail.CargoTypeID
		) 
		bb left join		
		(
		select  ac_org.Name, fun_get_Date(RecycleDate,'daily') date1 ,fp.CargoTypeID,COUNT(*) cnt from FlowRecycle r inner join  FlowRecycleList cl
		on r.FRecycleID=cl.FRecycleID
		inner join FlowPackageList fp
		on cl.PackageID=fp.PackageID 
		LEFT JOIN WAREHOUSE W   
		ON fp.LASTWAREHOUSEID = W.WAREHOUSEID
		inner join ac_org on w.Orgid=ac_org.ID
		where 1=1 {1}
		group by  ac_org.name,fun_get_Date(RecycleDate,'daily') ,fp.CargoTypeID
		) aa		
		on aa.Name=bb.Name and aa.date1=bb.date1 and aa.CargoTypeID=bb.CargoTypeID
		inner join CargoType C on c.CargoTypeID=bb.CargoTypeID
		inner join CargoTypeKind ck on c.CargoTypeKind=ck.ID
      ]]>
    </Content>
    <Content Key="Query_RecycleFetchRecycleSumarry" DataBaseType="SqlServer">
      <![CDATA[ 
       select    bb.NAME,bb.DATE1,bb.CARGOTYPEKINDTEXT,bb.CARGOTYPETEXT,isnull(bb.cnt,0) as FETCHCNT1,isnull(aa.cnt,0) as FETCHCNT2 
		from 
		(
		select  W.name,dbo.fun_get_Date(RecycleDate,'daily') date1,fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText,   COUNT(*) cnt from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
on r.FRecycleFetchID=cl.FRecycleFetchID 
LEFT JOIN AC_User W   
ON r.senderid  = W.ID 
inner join FlowPackageList fp
on cl.PackageID=fp.PackageID 
inner join view_CargoType ct
on fp.CargoTypeID=ct.CargoTypeID 
where FetchType=2  {0}
group by W.name,dbo.fun_get_Date(RecycleDate,'daily'),fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText 	
		) bb 
		left   join 
		(
		select  W.name,dbo.fun_get_Date(RecycleDate,'daily') date1,fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText,   COUNT(*) cnt from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
on r.FRecycleFetchID=cl.FRecycleFetchID 
LEFT JOIN AC_User W   
ON r.senderid  = W.ID 
inner join FlowPackageList fp
on cl.PackageID=fp.PackageID 
inner join view_CargoType ct
on fp.CargoTypeID=ct.CargoTypeID 
where FetchType=1  {0}
group by W.name,dbo.fun_get_Date(RecycleDate,'daily'),fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText 
		) aa 
		on aa.Name=bb.Name and aa.date1=bb.date1  and aa.cargotypeid=bb.cargotypeid 
      ]]>
    </Content>
    <Content Key="Query_RecycleFetchRecycleSumarry" DataBaseType="Oracle">
      <![CDATA[ 
       select    bb.NAME,bb.DATE1,bb.CARGOTYPEKINDTEXT,bb.CARGOTYPETEXT,nvl(bb.cnt,0) as FETCHCNT1,nvl(aa.cnt,0) as FETCHCNT2 
		from 
		(
		select  W.name,fun_get_Date(RecycleDate,'daily') date1,fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText,   COUNT(*) cnt from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
on r.FRecycleFetchID=cl.FRecycleFetchID 
LEFT JOIN AC_User W   
ON r.opid  = W.ID 
inner join FlowPackageList fp
on cl.PackageID=fp.PackageID 
inner join view_CargoType ct
on fp.CargoTypeID=ct.CargoTypeID 
where FetchType=2  {0}
group by W.name,fun_get_Date(RecycleDate,'daily'),fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText 	
		) bb 
		left   join 
		(
		select  W.name,fun_get_Date(RecycleDate,'daily') date1,fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText, COUNT(*) cnt from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
on r.FRecycleFetchID=cl.FRecycleFetchID 
LEFT JOIN AC_User W   
ON r.senderid  = W.ID 
inner join FlowPackageList fp
on cl.PackageID=fp.PackageID 
inner join view_CargoType ct
on fp.CargoTypeID=ct.CargoTypeID 
where FetchType=1  {0}
group by W.name,fun_get_Date(RecycleDate,'daily'),fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText 
		) aa 
		on aa.Name=bb.Name and aa.date1=bb.date1  and aa.cargotypeid=bb.cargotypeid 
      ]]>
    </Content>

    <Content Key="Query_GetRecycleFetchSumarry" DataBaseType="SqlServer">
      <![CDATA[  
		select acSender.NAME,acOpid.NAME OPNAME,dbo.fun_get_Date(RecycleDate,'daily') DATE1,fp.CARGOTYPEID,ct.CARGOTYPEKINDTEXT,ct.CARGOTYPETEXT,   COUNT(1) CNT 
from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
on r.FRecycleFetchID=cl.FRecycleFetchID 
LEFT JOIN AC_User acSender   
ON r.senderid  = acSender.ID 
left join AC_User acOpid
on r.opid=acOpid.ID
inner join FlowPackageList fp
on cl.PackageID=fp.PackageID 
inner join view_CargoType ct
on fp.CargoTypeID=ct.CargoTypeID 
left join FlowRecycleList frl
on frl.packageid=fp.packageid
where 1=1 {0}
group by acSender.NAME,acOpid.NAME,dbo.fun_get_Date(RecycleDate,'daily'),fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText 
	 
      ]]>
    </Content>
    <Content Key="Query_GetRecycleFetchSumarry" DataBaseType="Oracle">
      <![CDATA[  
    select acSender.NAME,acOpid.NAME OPNAME,fun_get_Date(RecycleDate,'daily') DATE1,fp.CARGOTYPEID,ct.CARGOTYPEKINDTEXT,ct.CARGOTYPETEXT,   COUNT(1) CNT 
from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
on r.FRecycleFetchID=cl.FRecycleFetchID 
LEFT JOIN AC_User acSender   
ON r.senderid  = acSender.ID 
left join AC_User acOpid
on r.opid=acOpid.ID
inner join FlowPackageList fp
on cl.PackageID=fp.PackageID 
inner join view_CargoType ct
on fp.CargoTypeID=ct.CargoTypeID 
left join FlowRecycleList frl
on frl.packageid=fp.packageid
where 1=1 {0}
group by acSender.NAME,acOpid.NAME,fun_get_Date(RecycleDate,'daily'),fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText 
      ]]>
    </Content>


    <Content Key="Summary_GetRecycleFetchSumarry" DataBaseType="SqlServer">
      <![CDATA[  
		select  dbo.fun_get_Date(RecycleDate,'daily') DATE1,fp.CARGOTYPEID,ct.CARGOTYPEKINDTEXT,ct.CARGOTYPETEXT,   COUNT(1) CNT 
from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
on r.FRecycleFetchID=cl.FRecycleFetchID 
LEFT JOIN AC_User acSender   
ON r.senderid  = acSender.ID 
left join AC_User acOpid
on r.opid=acOpid.ID
inner join FlowPackageList fp
on cl.PackageID=fp.PackageID 
inner join view_CargoType ct
on fp.CargoTypeID=ct.CargoTypeID 
left join FlowRecycleList frl
on frl.packageid=fp.packageid
where 1=1 {0}
group by  dbo.fun_get_Date(RecycleDate,'daily'),fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText 
	 
      ]]>
    </Content>
    <Content Key="Summary_GetRecycleFetchSumarry" DataBaseType="Oracle">
      <![CDATA[  
    select  fun_get_Date(RecycleDate,'daily') DATE1,fp.CARGOTYPEID,ct.CARGOTYPEKINDTEXT,ct.CARGOTYPETEXT,   COUNT(1) CNT 
from FlowRecycleFetch r inner join  FlowRecycleFetchList cl
on r.FRecycleFetchID=cl.FRecycleFetchID 
LEFT JOIN AC_User acSender   
ON r.senderid  = acSender.ID 
left join AC_User acOpid
on r.opid=acOpid.ID
inner join FlowPackageList fp
on cl.PackageID=fp.PackageID 
inner join view_CargoType ct
on fp.CargoTypeID=ct.CargoTypeID 
left join FlowRecycleList frl
on frl.packageid=fp.packageid
where 1=1 {0}
group by  fun_get_Date(RecycleDate,'daily'),fp.CargoTypeID,ct.CargoTypeKindText,ct.CargoTypeText 
      ]]>
    </Content>
    <Content Key="PackageIn_GetAllPackages" DataBaseType="SqlServer">
      <![CDATA[ 
       SELECT SL.BARCODE,C.CARGOTYPENAME,FPL.PACKAGEID,T16.TypeName as PSTATUS FROM FLOWPACKAGEIN FPI 
        INNER JOIN FLOWPACKAGELIST FPL ON FPL.FPACKAGEID=FPI.FPACKAGEID
        INNER JOIN STORAGELIST SL ON SL.STORAGEID=FPL.STORAGEID
        INNER JOIN CARGOTYPE C ON C.CARGOTYPEID=FPL.CARGOTYPEID
		INNER JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY='StorageStatus') T16 ON T16.TYPEVALUE=sl.status
        WHERE FPI.FPACKAGEID=@PackageInID
      ]]>
    </Content>
    <Content Key="PackageIn_GetAllPackages" DataBaseType="Oracle">
      <![CDATA[
       SELECT SL.BARCODE,C.CARGOTYPENAME,FPL.PACKAGEID,T16.TypeName as PSTATUS FROM FLOWPACKAGEIN FPI 
        INNER JOIN FLOWPACKAGELIST FPL ON FPL.FPACKAGEID=FPI.FPACKAGEID
        INNER JOIN STORAGELIST SL ON SL.STORAGEID=FPL.STORAGEID
        INNER JOIN CARGOTYPE C ON C.CARGOTYPEID=FPL.CARGOTYPEID
		INNER JOIN (SELECT TYPEVALUE,TYPENAME FROM SYSTEMTYPEPARAMETER WHERE TYPEKEY='StorageStatus') T16 ON T16.TYPEVALUE=sl.status
        WHERE FPI.FPACKAGEID=:PackageInID
      ]]>
    </Content>

    <Content Key="PackageIn_GetPackageInfoByBarcode" DataBaseType="SqlServer">
      <![CDATA[ 
        SELECT FPI.FORGID FROM STORAGELIST SL 
        INNER JOIN FLOWPACKAGELIST FPL ON FPL.STORAGEID=SL.STORAGEID
        INNER JOIN FLOWPACKAGEIN FPI ON FPI.FPACKAGEID=FPL.FPACKAGEID
        WHERE SL.BARCODE=@Barcode
      ]]>
    </Content>
    <Content Key="PackageIn_GetPackageInfoByBarcode" DataBaseType="Oracle">
      <![CDATA[
        SELECT FPI.FORGID FROM STORAGELIST SL 
        INNER JOIN FLOWPACKAGELIST FPL ON FPL.STORAGEID=SL.STORAGEID
        INNER JOIN FLOWPACKAGEIN FPI ON FPI.FPACKAGEID=FPL.FPACKAGEID
        WHERE SL.BARCODE=:Barcode
      ]]>
    </Content>

    <Content Key="Provide_GetProvidePackageInPrintData" DataBaseType="SqlServer">
      <![CDATA[ 
        SELECT ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),'') AS StrProvideDate,
        FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,COUNT(1) as Quantity,
        SUM(FlowPackageList.LendFlag) as LendQuantity,
        CargoType.Amount AS UnitPrice,(CargoType.Amount * COUNT(1)) AS GroupPrice,
        Devices.DeviceName,DevicesUseLog.TodayUseTimes,PackageType.PName,
        ISNULL(CONVERT(varchar(10),StorageList.SterilizeDate,120),'') AS StrSterilizeDate,
        ISNULL(CONVERT(varchar(10),StorageList.EXPDate,120),'') AS StrEXPDate,
        AC_WorkGroup.FNames AS OPNAME,'' as Signer,FlowPackageIn.FHospitalizedNo,
	      FlowPackageIn.FInpatientArea,FlowPackageIn.FSurgeryRoom,FlowPackageIn.FSurgeryPart,
	      FlowPackageIn.FPatient,FlowPackageIn.FDoctor,FlowPackageIn.FBedNo,
	      FlowPackageIn.FMeasureMents,FlowPackageIn.ApplianceQty,ao.Name FOutOrg
      from FlowProvide with (nolock)
      inner join FlowProvideList with (nolock) on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList with (nolock) on FlowProvideList.PackageID = FlowPackageList.PackageID
      left join PackageType with (nolock) on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG with (nolock) on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType with (nolock) on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      left join (select t1.PackageID ,t2.* from FlowSterilizationList t1 inner join DevicesUseLog t2 on t2.LogID=t1.SterilizationLogID where t2.LogID=(select top 1 SterilizationLogID from FlowSterilizationList where PackageID=t1.PackageID order by t2.begindate desc )) DevicesUseLog on DevicesUseLog.PackageID=flowpackagelist.PackageID
      left join Devices with (nolock) on DevicesUseLog.DeviceID = Devices.DeviceID
      inner join StorageList with (nolock) on FlowPackageList.StorageID = StorageList.StorageID
      inner join AC_WorkGroup with (nolock) on FlowProvide.OpID = AC_WorkGroup.FID
	    inner join FlowPackageIn with (nolock) on FlowPackageIn.FPackageID=FlowPackageList.FPackageID
      inner join AC_Org ao on ao.ID=FlowPackagein.Sender
      where FlowProvide.ProvideID in ({0})
      group by ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),''),
        FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,Devices.DeviceName,
        DevicesUseLog.TodayUseTimes,PackageType.PName,ISNULL(CONVERT(varchar(10),StorageList.SterilizeDate,120),''),
        ISNULL(CONVERT(varchar(10),StorageList.EXPDate,120),''),AC_WorkGroup.FNames,CargoType.Amount,FlowPackageIn.FHospitalizedNo,FlowPackageIn.FInpatientArea,FlowPackageIn.FSurgeryRoom,FlowPackageIn.FSurgeryPart,
	FlowPackageIn.FPatient,FlowPackageIn.FDoctor,FlowPackageIn.FBedNo,
	FlowPackageIn.FMeasureMents,FlowPackageIn.ApplianceQty,ao.Name
        order by FlowPackageIn.FSurgeryRoom,FlowPackageIn.FMeasureMents
      ]]>
    </Content>
    <Content Key="Provide_GetProvidePackageInPrintData" DataBaseType="Oracle">
      <![CDATA[
        SELECT  to_char(FlowProvide.ProvideDate,'yyyy-mm-dd')  AS StrProvideDate,
      FlowProvide.BarCode,
      AC_Org.Name,
      CargoType.CargoTypeName,
      COUNT(1) as Quantity,
      SUM(FlowPackageList.LendFlag) as LendQuantity,
      CargoType.Amount AS UnitPrice,
      (CargoType.Amount * COUNT(1)) AS GroupPrice,
      Devices.DeviceName,
      DevicesUseLog.TodayUseTimes,
      PackageType.PName,
      to_char(StorageList.SterilizeDate,'yyyy-mm-dd')  AS StrSterilizeDate,
      to_char(StorageList.EXPDate,'yyyy-mm-dd')  AS StrEXPDate,
      AC_WorkGroup.FNames AS OPNAME,
      '' as Signer,FlowPackageIn.FHospitalizedNo,
	      FlowPackageIn.FInpatientArea,FlowPackageIn.FSurgeryRoom,FlowPackageIn.FSurgeryPart,
	      FlowPackageIn.FPatient,FlowPackageIn.FDoctor,FlowPackageIn.FBedNo,
	      FlowPackageIn.FMeasureMents,FlowPackageIn.ApplianceQty,ao.Name FOutOrg
      from FlowProvide
      inner join FlowProvideList
      on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList
      on FlowProvideList.PackageID = FlowPackageList.PackageID
      left join PackageType
      on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG
      on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType
      on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      left join
       (
        select m2.TodayUseTimes,m2.DeviceID , SterilizationLogID,packageid,  row_number() over(partition by packageid order by m2.begindate desc) as rownu from FlowSterilizationList m1 inner join DevicesUseLog  m2 
 on  m2.LogID=m1.SterilizationLogID  
        ) DevicesUseLog on DevicesUseLog.PackageID=flowpackagelist.PackageID and rownu=1
      left join Devices
      on DevicesUseLog.DeviceID = Devices.DeviceID
      inner join StorageList
      on FlowPackageList.StorageID = StorageList.StorageID
      inner join AC_WorkGroup  on FlowProvide.OpID = AC_WorkGroup.FID
      inner join FlowPackageIn on FlowPackageIn.FPackageID=FlowPackageList.FPackageID
      inner join AC_Org ao on ao.ID=FlowPackagein.Sender
      where FlowProvide.ProvideID in ({0})
      group by  to_char(FlowProvide.ProvideDate,'yyyy-mm-dd'),
      FlowProvide.BarCode,
      AC_Org.Name,
      CargoType.CargoTypeName,
      Devices.DeviceName,
      DevicesUseLog.TodayUseTimes,
      PackageType.PName,
      to_char(StorageList.SterilizeDate,'yyyy-mm-dd'),
      to_char(StorageList.EXPDate,'yyyy-mm-dd'), 
      AC_WorkGroup.FNames,CargoType.Amount,FlowPackageIn.FHospitalizedNo,FlowPackageIn.FInpatientArea,FlowPackageIn.FSurgeryRoom,FlowPackageIn.FSurgeryPart,
	FlowPackageIn.FPatient,FlowPackageIn.FDoctor,FlowPackageIn.FBedNo,
	FlowPackageIn.FMeasureMents,FlowPackageIn.ApplianceQty  ,ao.Name   
  order by FlowPackageIn.FSurgeryRoom,FlowPackageIn.FMeasureMents
      ]]>
    </Content>

    <Content Key="Provide_GetProvideListByID" DataBaseType="SqlServer">
      <![CDATA[ 
        SELECT FPV.PACKAGEID,C.CARGOTYPEID,C.CARGOTYPENAME,C.ISIN,FP.PROVIDEPACKAGETYPE FROM FLOWPROVIDELIST FPV
        INNER JOIN FLOWPACKAGELIST FPL ON FPL.PACKAGEID=FPV.PACKAGEID
        INNER JOIN CARGOTYPE C ON C.CARGOTYPEID=FPL.CARGOTYPEID
		INNER JOIN FLOWPROVIDE FP ON FP.ProvideID=FPV.ProvideID
        WHERE FP.PROVIDEID=@ProvideID
      ]]>
    </Content>
    <Content Key="Provide_GetProvideListByID" DataBaseType="Oracle">
      <![CDATA[
        SELECT FPV.PACKAGEID,C.CARGOTYPEID,C.CARGOTYPENAME,C.ISIN,FP.PROVIDEPACKAGETYPE FROM FLOWPROVIDELIST FPV
        INNER JOIN FLOWPACKAGELIST FPL ON FPL.PACKAGEID=FPV.PACKAGEID
        INNER JOIN CARGOTYPE C ON C.CARGOTYPEID=FPL.CARGOTYPEID
		INNER JOIN FLOWPROVIDE FP ON FP.ProvideID=FPV.ProvideID
        WHERE FP.PROVIDEID=:ProvideID
      ]]>
    </Content>
	  <Content Key="Query_ProvideListByKey" DataBaseType="SqlServer">
		  <![CDATA[ 
        SELECT * FROM FLOWPROVIDELIST         
        WHERE PROVIDEID=@provideID and packageid=@packageid
      ]]>
	  </Content>
	  <Content Key="Query_ProvideListByKey" DataBaseType="Oracle">
		  <![CDATA[
        SELECT * FROM FLOWPROVIDELIST         
        WHERE PROVIDEID=:provideID and packageid=:packageid
      ]]>
	  </Content>
	  <Content Key="Query_FlowProvidePackageInfoByBarcode" DataBaseType="SqlServer">
		  <![CDATA[ 
        SELECT FPV.PACKAGEID,FPV.PROVIDEID,S.CARGOTYPEID,FPV.STATUS,ORG.NAME ORGNAME FROM FLOWPROVIDELIST FPV
     INNER JOIN STORAGELIST S ON S.STORAGEID=FPV.PACKAGEID
     LEFT JOIN FlowProvideConfirm FPC on FPV.ProvideConfirmID=FPC.ProvideConfirmID
     LEFT JOIN AC_ORG ORG on ORG.ID=FPC.OrgID
        WHERE S.BARCODE=@barcode
      ]]>
	  </Content>
	  <Content Key="Query_FlowProvidePackageInfoByBarcode" DataBaseType="Oracle">
		  <![CDATA[
        SELECT FPV.PACKAGEID,FPV.PROVIDEID,S.CARGOTYPEID,FPV.STATUS,ORG.NAME ORGNAME FROM FLOWPROVIDELIST FPV
     INNER JOIN STORAGELIST S ON S.STORAGEID=FPV.PACKAGEID
     LEFT JOIN FlowProvideConfirm FPC on FPV.ProvideConfirmID=FPC.ProvideConfirmID
     LEFT JOIN AC_ORG ORG on ORG.ID=FPC.OrgID
        WHERE S.BARCODE=:barcode
      ]]>
	  </Content>
    <Content Key="Device_GetMonitorDeviceList" DataBaseType="SqlServer">
      <![CDATA[ 
        select d.DeviceID,d.BarCode,d.DeviceName,d.DeviceModel from DevicesStatus ds
        inner join Devices d on d.BarCode=ds.FDeviceID
        where 1=1 {0}
        order by d.DeviceType,d.BarCode
      ]]>
    </Content>
    <Content Key="Device_GetMonitorDeviceList" DataBaseType="Oracle">
      <![CDATA[
        select d.DeviceID,d.BarCode,d.DeviceName,d.DeviceModel from DevicesStatus ds
        inner join Devices d on d.BarCode=ds.FDeviceID
        where 1=1 {0}
        order by d.DeviceType,d.BarCode
      ]]>
    </Content>

    <Content Key="Monitor_QueryMonitorData" DataBaseType="SqlServer">
      <![CDATA[ 
        select md.FLogID,md.FID,d.DeviceID,d.DeviceType,d.DeviceName,md.FBeginDate,md.FEndDate,md.FBatchNo,du.UserID,au.Name FOperator 
        from MonitorCollectData md
        inner join Devices d on d.BarCode=md.FDeviceID
        left join DevicesUseLog du on du.LogID=md.FLogID
        left join AC_User au on au.ID=du.UserID
        where 1=1 {0}
        order by md.FBeginDate desc
      ]]>
    </Content>
    <Content Key="Monitor_QueryMonitorData" DataBaseType="Oracle">
      <![CDATA[
        select md.FLogID,md.FID,d.DeviceID,d.DeviceType,d.DeviceName,md.FBeginDate,md.FEndDate,md.FBatchNo,du.UserID,au.Name FOperator 
        from MonitorCollectData md
        inner join Devices d on d.BarCode=md.FDeviceID
        left join DevicesUseLog du on du.LogID=md.FLogID
        left join AC_User au on au.ID=du.UserID
        where 1=1 {0}
        order by md.FBeginDate desc
      ]]>
    </Content>

    <Content Key="Disinfect_GetDisifectInfo" DataBaseType="SqlServer">
      <![CDATA[ 
        select fd.FDisinfectID,fd.DisinfectDate,fd.IsOk,fd.WashType,fd.LogID, dul.UserID,au.Name FOperator,dul.SensorID,dul.DeviceID,d.DeviceName,dul.DeviceProcessRuleID,dp.RuleName 
        from FlowDisinfect fd
        inner join DevicesUseLog dul on dul.LogID=fd.LogID
        inner join AC_User au on au.ID=dul.UserID
        inner join Devices d on d.DeviceID=dul.DeviceID
        left join DeviceProcessRule dp on dp.RuleID=dul.DeviceProcessRuleID
        where fd.FDisinfectID=@DisinfectID
      ]]>
    </Content>
    <Content Key="Disinfect_GetDisifectInfo" DataBaseType="Oracle">
      <![CDATA[
        select fd.FDisinfectID,fd.DisinfectDate,fd.IsOk,fd.WashType,fd.LogID, dul.UserID,au.Name FOperator,dul.SensorID,dul.DeviceID,d.DeviceName,dul.DeviceProcessRuleID,dp.RuleName 
        from FlowDisinfect fd
        inner join DevicesUseLog dul on dul.LogID=fd.LogID
        inner join AC_User au on au.ID=dul.UserID
        inner join Devices d on d.DeviceID=dul.DeviceID
        left join DeviceProcessRule dp on dp.RuleID=dul.DeviceProcessRuleID
        where fd.FDisinfectID=:DisinfectID
      ]]>
    </Content>

    <Content Key="Disinfect_GetDisifectContainer" DataBaseType="SqlServer">
      <![CDATA[ 
        SELECT distinct C.CONTAINERID,C.CONTAINERNAME,C.BARCODE,c.WashType as WASHTYPE FROM FLOWDISINFECTCONTAINERLIST FDC
        INNER JOIN CONTAINER C ON C.CONTAINERID=FDC.CONTAINERID
        WHERE fdc.FDISINFECTID=@DisinfectID
      ]]>
    </Content>
    <Content Key="Disinfect_GetDisifectContainer" DataBaseType="Oracle">
      <![CDATA[
        SELECT distinct C.CONTAINERID,C.CONTAINERNAME,C.BARCODE,c.WashType as WASHTYPE FROM FLOWDISINFECTCONTAINERLIST FDC
        INNER JOIN CONTAINER C ON C.CONTAINERID=FDC.CONTAINERID
        WHERE fdc.FDISINFECTID=:DisinfectID
      ]]>
    </Content>


    <Content Key="Query_DisinfectDetail" DataBaseType="SqlServer">
      <![CDATA[ 
         SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
         select distinct d.DeviceName as DEVICENAME, ck.KindName as KINDNAME,c.CargoTypeName as CARGOTYPENAME,1 as QUANTITY,w.WarehouseName AS ORGNAME,sl.BARCODE
        from Devices d inner join DevicesUseLog dul on d.DeviceID = dul.DeviceID
				inner join FlowDisinfectContainerList fdcl on fdcl.DeviceLogID = dul.LogID
				inner join FlowRecycleContainer frc on fdcl.FDisinfectID = frc.LastFDisinfectID and fdcl.ContainerID = frc.ContainerID
				inner join FlowRecycleList frl on frl.FRecycleID = frc.FRecycleID 
        inner join FlowDisinfect fdc on fdc.FDisinfectID = fdcl.FDisinfectID
				inner join FlowPackageList pl on frl.PackageID = pl.PackageID 
				inner join StorageList sl on pl.StorageID = sl.StorageID
				left join Warehouse w on sl.WarehouseID = w.WarehouseID 
				inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
				inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID
				inner join 
				(select DeviceID,MAX(BeginDate) as BeginDate,FLOWORGID from DevicesUseLog inner join FlowDisinfect on DevicesUseLog.LOGID = FlowDisinfect.FDisinfectID
				 group by DeviceID,FLOWORGID) t on dul.DeviceID = t.DeviceID and dul.BeginDate = t.BeginDate and fdc.Floworgid = t.floworgid
        where 1=1 {0}

      ]]>
    </Content>
    <Content Key="Query_DisinfectDetail" DataBaseType="Oracle">
      <![CDATA[
         select distinct d.DeviceName as DEVICENAME, ck.KindName as KINDNAME,c.CargoTypeName as CARGOTYPENAME,1 as QUANTITY,w.WarehouseName AS ORGNAME,sl.BARCODE
        f     select d.DeviceName as DEVICENAME, ck.KindName as KINDNAME,c.CargoTypeName as CARGOTYPENAME,1 as QUANTITY,w.WarehouseName AS ORGNAME,sl.BARCODE
        from Devices d inner join DevicesUseLog dul on d.DeviceID = dul.DeviceID
				inner join FlowDisinfectContainerList fdcl on fdcl.DeviceLogID = dul.LogID
				inner join FlowRecycleContainer frc on fdcl.FDisinfectID = frc.LastFDisinfectID and fdcl.ContainerID = frc.ContainerID
				inner join FlowRecycleList frl on frl.FRecycleID = frc.FRecycleID 
        inner join FlowDisinfect fdc on fdc.FDisinfectID = fdcl.FDisinfectID
				inner join FlowPackageList pl on frl.PackageID = pl.PackageID 
				inner join StorageList sl on pl.StorageID = sl.StorageID
				left join Warehouse w on sl.WarehouseID = w.WarehouseID 
				inner join CargoType c on pl.CargoTypeID = c.CargoTypeID
				inner join CargoTypeKind ck on c.CargoTypeKind = ck.ID
				inner join 
				(select DeviceID,MAX(BeginDate) as BeginDate,FLOWORGID from DevicesUseLog inner join FlowDisinfect on DevicesUseLog.LOGID = FlowDisinfect.FDisinfectID
				 group by DeviceID,FLOWORGID) t on dul.DeviceID = t.DeviceID and dul.BeginDate = t.BeginDate and fdc.Floworgid = t.floworgid
        where 1=1 {0}

      ]]>
    </Content>

    <Content Key="FlowPackageList_UpdatePackagePackType" DataBaseType="SqlServer">
      <![CDATA[ 
        update FlowPackageList set PackageTypeID='{0}' where FPackageID='{1}'
      ]]>
    </Content>
    <Content Key="FlowPackageList_UpdatePackagePackType" DataBaseType="Oracle">
      <![CDATA[
        update FlowPackageList set PackageTypeID='{0}' where FPackageID='{1}'
      ]]>
    </Content>

    <Content Key="FlowRecycleLost_GetDataByCargotype" DataBaseType="SqlServer">
      <![CDATA[ 
        select frll.*,c.CargoTypeName CargoTypeText from FlowRecycleLostList frll
        inner join CargoType c on c.CargoTypeID=frll.CargoTypeID
        inner join FlowPackageList fpl on fpl.PackageID=frll.PackageID
        where frll.FRecycleID=@RecycleID and fpl.CargoTypeID=@CargotypeID

      ]]>
    </Content>
    <Content Key="FlowRecycleLost_GetDataByCargotype" DataBaseType="Oracle">
      <![CDATA[
        select frll.*,c.CargoTypeName CargoTypeText from FlowRecycleLostList frll
        inner join CargoType c on c.CargoTypeID=frll.CargoTypeID
        inner join FlowPackageList fpl on fpl.PackageID=frll.PackageID
        where frll.FRecycleID=:RecycleID and fpl.CargoTypeID=:CargotypeID
      ]]>
    </Content>

    <Content Key="Recycle_GetLostInstrumentList" DataBaseType="SqlServer">
      <![CDATA[ 
        select frl.PackageID,sl.Barcode,frl.CargoTypeID InstrumentID,ci.CargoTypeName InstrumentName,
	        fpl.CargoTypeID,c.CargoTypeName,frl.RecycleLostListID,frl.Quantity-ISNULL(frl.FReturnQty,0) Quantity,
	        fr.RecycleDate,c.Pinyin,w.OrgID
        from FlowRecycleLostList frl
        inner join FlowPackageList fpl on fpl.PackageID =frl.PackageID
        inner join StorageList sl on sl.StorageID=fpl.StorageID
        left join CargoType ci on ci.CargoTypeID=frl.CargoTypeID
        left join CargoType c on c.CargoTypeID=fpl.CargoTypeID
        left join FlowRecycle fr on fr.FRecycleID=frl.FRecycleID
        left join Warehouse w on w.WarehouseID=sl.WarehouseID
        where frl.Quantity-ISNULL(frl.FReturnQty,0)>0 and w.OrgID=@OrgID 
        order by c.CargoTypeName
      ]]>
    </Content>
    <Content Key="Recycle_GetLostInstrumentList" DataBaseType="Oracle">
      <![CDATA[
        select frl.PackageID,sl.Barcode,frl.CargoTypeID InstrumentID,ci.CargoTypeName InstrumentName,
	        fpl.CargoTypeID,c.CargoTypeName,frl.RecycleLostListID,frl.Quantity-ISNULL(frl.FReturnQty,0) Quantity,
	        fr.RecycleDate,c.Pinyin,w.OrgID
        from FlowRecycleLostList frl
        inner join FlowPackageList fpl on fpl.PackageID =frl.PackageID
        inner join StorageList sl on sl.StorageID=fpl.StorageID
        left join CargoType ci on ci.CargoTypeID=frl.CargoTypeID
        left join CargoType c on c.CargoTypeID=fpl.CargoTypeID
        left join FlowRecycle fr on fr.FRecycleID=frl.FRecycleID
        left join Warehouse w on w.WarehouseID=sl.WarehouseID
        where frl.Quantity-ISNULL(frl.FReturnQty,0)>0 and w.OrgID=:OrgID 
        order by c.CargoTypeName
      ]]>
    </Content>

    <Content Key="FlowRecycleLost_GetInstrumentLostReturnData" DataBaseType="SqlServer">
      <![CDATA[ 
        SELECT FRL.PACKAGEID,SL.BARCODE,FRL.CARGOTYPEID INSTRUMENTID,CI.CARGOTYPENAME INSTRUMENTNAME,
	        FPL.CARGOTYPEID,C.CARGOTYPENAME,FRL.RECYCLELOSTLISTID,FRL.QUANTITY FLOSTQTY,
	        FR.RECYCLEDATE,C.PINYIN,FIRD.FRETURNQTY,AUR.NAME FREGISTERNAME,
	        FIR.FRETURNER,AURETURN.NAME FRETURNNAME, FIR.FRETURNORG,AO.NAME FRETURNORGNAME, FIR.FRETURNDATE
        from FlowRecycleLostList frl
        inner join FlowPackageList fpl on fpl.PackageID =frl.PackageID
        inner join StorageList sl on sl.StorageID=fpl.StorageID
        left join CargoType ci on ci.CargoTypeID=frl.CargoTypeID
        left join CargoType c on c.CargoTypeID=fpl.CargoTypeID
        left join FlowRecycle fr on fr.FRecycleID=frl.FRecycleID
        left  join FlowInstruemntReturnDetail fird on frl.RecycleLostListID=fird.FLostID
        left join FlowInstruemntReturn fir on fir.fid=fird.fparentid
        left join AC_Org ao on ao.ID=fir.freturnorg
        left join AC_User aur on aur.ID=fr.OPID
        left join AC_User auReturn on auReturn.ID=fir.freturner
        where 1=1 {0}
        order by ao.Name,c.CargoTypeName,FIR.FRETURNDATE
      ]]>
    </Content>
    <Content Key="FlowRecycleLost_GetInstrumentLostReturnData" DataBaseType="Oracle">
      <![CDATA[
        SELECT FRL.PACKAGEID,SL.BARCODE,FRL.CARGOTYPEID INSTRUMENTID,CI.CARGOTYPENAME INSTRUMENTNAME,
	        FPL.CARGOTYPEID,C.CARGOTYPENAME,FRL.RECYCLELOSTLISTID,FRL.QUANTITY FLOSTQTY,
	        FR.RECYCLEDATE,C.PINYIN,FIRD.FRETURNQTY,AUR.NAME FREGISTERNAME,
	        FIR.FRETURNER,AURETURN.NAME FRETURNNAME, FIR.FRETURNORG,AO.NAME FRETURNORGNAME, FIR.FRETURNDATE
        from FlowRecycleLostList frl
        inner join FlowPackageList fpl on fpl.PackageID =frl.PackageID
        inner join StorageList sl on sl.StorageID=fpl.StorageID
        left join CargoType ci on ci.CargoTypeID=frl.CargoTypeID
        left join CargoType c on c.CargoTypeID=fpl.CargoTypeID
        left join FlowRecycle fr on fr.FRecycleID=frl.FRecycleID
        left  join FlowInstruemntReturnDetail fird on frl.RecycleLostListID=fird.FLostID
        left join FlowInstruemntReturn fir on fir.fid=fird.fparentid
        left join AC_Org ao on ao.ID=fir.freturnorg
        left join AC_User aur on aur.ID=fr.OPID
        left join AC_User auReturn on auReturn.ID=fir.freturner
        where 1=1 {0}
        order by ao.Name,c.CargoTypeName,FIR.FRETURNDATE
      ]]>
    </Content>
    <Content Key="Update_FlowProvideConfirmBatch" DataBaseType="SqlServer">
      INSERT INTO SysLog(LogID,LogType,Content,LogTime,Operator,KeyID1,KeyID2,KeyID3,FlowOrgID,LogLevel)
      select newid(),@LogType,@LogContent,@Today,@OpID,packageid, @ProvideConfirmID,provideid,'00000000-0000-0000-0000-000000000000',0
      from flowprovidelist
      where Status = 0 and PackageID = @PackageID

      Update FlowProvideList
      set ProvideConfirmID = @ProvideConfirmID,
      Status = 1
      where Status = 0 and PackageID  = @PackageID

      UPDATE FLOWPACKAGELIST
      SET LASTOPID = @OpID,
      LASTDATE = @Today
      WHERE PACKAGEID  = @PackageID

      UPDATE STORAGELIST
      SET MODIFIER = @OpID,
      MODIFYTIME = @Today
      FROM FLOWPACKAGELIST
      WHERE STORAGELIST.STORAGEID = FLOWPACKAGELIST.STORAGEID AND
      FLOWPACKAGELIST.PACKAGEID  = @PackageID
    </Content>
    <Content Key="Update_FlowProvideConfirmBatch" DataBaseType="Oracle">
      begin
      INSERT INTO SysLog(LogID,LogType,Content,LogTime,Operator,KeyID1,KeyID2,KeyID3,FlowOrgID,LogLevel)
      select fun_newguid,:LogType,:LogContent,:Today,:OpID,packageid, :ProvideConfirmID,provideid,'00000000-0000-0000-0000-000000000000',0
      from flowprovidelist
      where Status = 0 and PackageID  = :PackageID;

      Update FlowProvideList
      set ProvideConfirmID = :ProvideConfirmID,
      Status = 1
      where Status = 0 and PackageID  = :PackageID;

      UPDATE FLOWPACKAGELIST
      SET LASTOPID = :OpID,
      LASTDATE = :Today
      WHERE PACKAGEID  = :PackageID;

      UPDATE STORAGELIST
      SET MODIFIER = :OpID,
      MODIFYTIME = :Today
      WHERE STORAGELIST.STORAGEID  = :PackageID;
      end;
    </Content>

    <Content Key="Cargotype_GetInstruemntListByCargotype" DataBaseType="SqlServer">
      <![CDATA[ 
        select ps.CargoTypeID,c.Pinyin,c.CargoTypeName,ps.Quantity from PackageSetting ps
        inner join CargoType c on c.CargoTypeID=ps.CargoTypeID
        where ps.PackageTypeID=@PackageID
      ]]>
    </Content>
    <Content Key="Cargotype_GetInstruemntListByCargotype" DataBaseType="Oracle">
      <![CDATA[
        select ps.CargoTypeID,c.Pinyin,c.CargoTypeName,ps.Quantity from PackageSetting ps
        inner join CargoType c on c.CargoTypeID=ps.CargoTypeID
        where ps.PackageTypeID=:PackageID
      ]]>
    </Content>

    <Content Key="Monitor_GetAnnualMaintenanceData" DataBaseType="SqlServer">
      <![CDATA[ 
        select parent.FID FParentID,parent.FCaption FParentName,ad.FID FChildID,ad.FCaption FChildName 
        from (select * from AssistData where FParentID=@ParentID) parent
        inner join AssistData ad on ad.FParentID=parent.FID
        order by parent.FID,ad.FID
      ]]>
    </Content>
    <Content Key="Monitor_GetAnnualMaintenanceData" DataBaseType="Oracle">
      <![CDATA[
        select parent.FID FParentID,parent.FCaption FParentName,ad.FID FChildID,ad.FCaption FChildName 
        from (select * from AssistData where FParentID=:ParentID) parent
        inner join AssistData ad on ad.FParentID=parent.FID
        order by parent.FID,ad.FID
      ]]>
    </Content>

    <Content Key="Monitor_GetUpkeepData" DataBaseType="SqlServer">
      <![CDATA[ 
        select am.*,d.DeviceName ,am.FProvince+am.FCity+am.FCounty+am.FTown+am.FStreet FAddress
        from AnnualMaintenance am
        inner join Devices d on d.DeviceID=am.FDeviceID
        where 1=1 {0}
      ]]>
    </Content>
    <Content Key="Monitor_GetUpkeepData" DataBaseType="Oracle">
      <![CDATA[
        select am.*,d.DeviceName ,am.FProvince+am.FCity+am.FCounty+am.FTown+am.FStreet FAddress
        from AnnualMaintenance am
        inner join Devices d on d.DeviceID=am.FDeviceID
        where 1=1 {0}
      ]]>
    </Content>

    <Content Key="Monitor_GetUpkeepDetailByParentID" DataBaseType="SqlServer">
      <![CDATA[ 
        select amd.FID,amd.FItemID FChildID,ad.FCaption FChildName,amd.FTypeID FParentID,parent.FCaption FParentName,amd.FParentID,amd.FFunction,amd.FCheck,amd.FFixture,amd.FCleaning,amd.FChange,amd.FAdjustment
        from AnnualMaintenancedetail amd
        inner join (select * from AssistData where FParentID=@TypeID) parent on parent.FID=amd.FTypeID
        inner join AssistData ad on ad.FID=amd.FItemID
        where amd.FParentID=@BillID
        order by amd.FTypeID,amd.FItemID
      ]]>
    </Content>
    <Content Key="Monitor_GetUpkeepDetailByParentID" DataBaseType="Oracle">
      <![CDATA[
        select amd.FID,amd.FItemID FChildID,ad.FCaption FChildName,amd.FTypeID FParentID,parent.FCaption FParentName,amd.FParentID,amd.FFunction,amd.FCheck,amd.FFixture,amd.FCleaning,amd.FChange,amd.FAdjustment
        from AnnualMaintenancedetail amd
        inner join (select * from AssistData where FParentID=:TypeID) parent on parent.FID=amd.FTypeID
        inner join AssistData ad on ad.FID=amd.FItemID
        where amd.FParentID=:BillID
        order by amd.FTypeID,amd.FItemID
      ]]>
    </Content>

    <Content Key="Monitor_QueryMonitorErrorStatistics" DataBaseType="SqlServer">
      <![CDATA[ 
        select d.DeviceName,mes.FErrorNo,me.FDescription,COUNT(1) FQty 
        from MonitorErrorStatistics mes
        inner join Devices d on d.BarCode=mes.FDeviceCode
        inner join MonitorError me on me.FNumber=mes.FErrorNo
        where 1=1 {0}
        group by d.DeviceName,mes.FErrorNo,me.FDescription
      ]]>
    </Content>
    <Content Key="Monitor_QueryMonitorErrorStatistics" DataBaseType="Oracle">
      <![CDATA[
        select d.DeviceName,mes.FErrorNo,me.FDescription,COUNT(1) FQty 
        from MonitorErrorStatistics mes
        inner join Devices d on d.BarCode=mes.FDeviceCode
        inner join MonitorError me on me.FNumber=mes.FErrorNo
        where 1=1 {0}
        group by d.DeviceName,mes.FErrorNo,me.FDescription
      ]]>
    </Content>

    <Content Key="Monitor_GetMonitorErrorByRecord" DataBaseType="SqlServer">
      <![CDATA[ 
        select mde.*,me.*,ad.FCaption FPhaseName 
        from MonitorCollectDataEntry mde
        left join MonitorError me on me.FNumber=mde.FErrorNo
        inner join AssistData ad on ad.FKey=mde.FProgramPhrase
        where 1=1 {0}
      ]]>
    </Content>
    <Content Key="Monitor_GetMonitorErrorByRecord" DataBaseType="Oracle">
      <![CDATA[
        select mde.*,me.*,ad.FCaption FPhaseName 
        from MonitorCollectDataEntry mde
        left join MonitorError me on me.FNumber=mde.FErrorNo
        inner join AssistData ad on ad.FKey=mde.FProgramPhrase
        where 1=1 {0}
      ]]>
    </Content>

    <Content Key="Monitor_MonitorHasError" DataBaseType="SqlServer">
      <![CDATA[ 
        select COUNT(1) FQty from MonitorCollectDataEntry where FParentID=@RecordID and FErrorNo>0
      ]]>
    </Content>
    <Content Key="Monitor_MonitorHasError" DataBaseType="Oracle">
      <![CDATA[
        select COUNT(1) FQty from MonitorCollectDataEntry where FParentID=:RecordID and FErrorNo>0
      ]]>
    </Content>

    <Content Key="Monitor_GetRepairData" DataBaseType="SqlServer">
      <![CDATA[ 
        select dr.*,d.DeviceModel,d.DeviceName from DeviceRepair dr
        inner join Devices d on d.DeviceID=dr.FDeviceID
        where 1=1 {0}
      ]]>
    </Content>
    <Content Key="Monitor_GetRepairData" DataBaseType="Oracle">
      <![CDATA[
        select dr.*,d.DeviceModel,d.DeviceName from DeviceRepair dr
        inner join Devices d on d.DeviceID=dr.FDeviceID
        where 1=1 {0}
      ]]>
    </Content>

    <Content Key="Monitor_GetRepairDetailData" DataBaseType="SqlServer">
      <![CDATA[ 
        select * from DeviceRepairdetail dpd
        inner join DevicePart dp on dp.FID=dpd.FPartID
        where dpd.FParentID=@ParentID
      ]]>
    </Content>
    <Content Key="Monitor_GetRepairDetailData" DataBaseType="Oracle">
      <![CDATA[
        select * from DeviceRepairdetail dpd
        inner join DevicePart dp on dp.FID=dpd.FPartID
        where dpd.FParentID=:ParentID
      ]]>
    </Content>

    <Content Key="Query_DevicePartExistFNumber" DataBaseType="SqlServer">
      Select Top 1 1 From DevicePart Where FNumber=@FNumber
    </Content>
    <Content Key="Query_DevicePartExistFNumber" DataBaseType="Oracle">
      <![CDATA[
      Select  1 From DevicePart Where rownum=1 and FNumber=:FNumber
      ]]>
    </Content>

    <Content Key="Monitor_QueryDisinfectCostStatistics" DataBaseType="SqlServer">
      <![CDATA[ 
        select dv.DeviceName,dc.FPumpNumber,dp.FName FPumpName, SUM(dc.fqty) FQty 
        from DisinfectCost dc
        inner join Devices dv on dv.DeviceID=dc.fdeviceid
        inner join devicepump dp on dp.fnumber=dc.FPumpNumber
        Where 1=1  {0}
        group by dv.DeviceName,dc.fpumpnumber,dp.FName 
        order by dv.DeviceName
      ]]>
    </Content>
    <Content Key="Monitor_QueryDisinfectCostStatistics" DataBaseType="Oracle">
      <![CDATA[
        select dv.DeviceName,dc.FPumpNumber,dp.FName FPumpName, SUM(dc.fqty) FQty 
        from DisinfectCost dc
        inner join Devices dv on dv.DeviceID=dc.fdeviceid
        inner join devicepump dp on dp.fnumber=dc.FPumpNumber
        Where 1=1  {0}
        group by dv.DeviceName,dc.fpumpnumber,dp.FName 
        order by dv.DeviceName
      ]]>
    </Content>

    <Content Key="Monitor_QuerySterilizeCostStatistics" DataBaseType="SqlServer">
      <![CDATA[ 
        select dv.DeviceID,dv.DeviceName,SUM(sc.FTotlaMin) FTotlaMin,SUM(sc.FTotlaMin)/60 FHour,50 FKilowatt,SUM(sc.FTotlaMin)/60*50 FKilowattTotal
        from SterilizeCost sc
        inner join Devices dv on dv.DeviceID=sc.fdeviceid
        where 1=1 {0} 
        group by dv.DeviceID,dv.DeviceName
        order by dv.DeviceName
      ]]>
    </Content>
    <Content Key="Monitor_QuerySterilizeCostStatistics" DataBaseType="Oracle">
      <![CDATA[
        select dv.DeviceID,dv.DeviceName,SUM(sc.FTotlaMin) FTotlaMin,SUM(sc.FTotlaMin)/60 FHour,50 FKilowatt,SUM(sc.FTotlaMin)/60*50 FKilowattTotal
        from SterilizeCost sc
        inner join Devices dv on dv.DeviceID=sc.fdeviceid
        where 1=1 {0} 
        group by dv.DeviceID,dv.DeviceName
        order by dv.DeviceName
      ]]>
    </Content>

    <Content Key="PackageReturn_GetPackageReturnList" DataBaseType="SqlServer">
      <![CDATA[ 
        select pr.FID,pr.FReturner,acreturn.Name FReturnerName,pr.FReturnDate,pr.FReceiver,
	        acreceiver.Name FReceiverName,pr.FReceiveDate,case when pr.FIsConfirm=0 then '否' else '是' end FIsConfirm
        from FlowPackageReturn pr
        inner join AC_User acreturn on acreturn.ID=pr.Freturner
        left join AC_User acreceiver on acreceiver.ID=pr.freceiver
        where 1=1 {0}
      ]]>
    </Content>
    <Content Key="PackageReturn_GetPackageReturnList" DataBaseType="Oracle">
      <![CDATA[
        select pr.FID,pr.FReturner,acreturn.Name FReturnerName,pr.FReturnDate,pr.FReceiver,
	        acreceiver.Name FReceiverName,pr.FReceiveDate,case when pr.FIsConfirm=0 then '否' else '是' end FIsConfirm
        from FlowPackageReturn pr
        inner join AC_User acreturn on acreturn.ID=pr.Freturner
        left join AC_User acreceiver on acreceiver.ID=pr.freceiver
        where 1=1 {0}
      ]]>
    </Content>
    <Content Key="PackageReturn_DeletePackageReturn" DataBaseType="SqlServer">
      <![CDATA[ 
		  delete from   FlowPackageReturnDetail where fparentid='{0}'
		  delete from FlowPackageReturn where fid='{0}'
      ]]>
    </Content>
    <Content Key="PackageReturn_DeletePackageReturn" DataBaseType="Oracle">
      <![CDATA[
		  begin
			delete from   FlowPackageReturnDetail where fparentid='{0}';
			delete from FlowPackageReturn where fid='{0}';
		  end;
      ]]>
    </Content>

    <Content Key="PackageReturn_GetPackageReturnDetail" DataBaseType="SqlServer">
      <![CDATA[ 
        select prd.FID,prd.FParentID,fpl.PackageID,sl.Barcode,fpl.CargoTypeID,c.CargoTypeName
        from FlowPackageReturndetail prd
        inner join FlowPackageList fpl on fpl.PackageID=prd.FPackageID
        inner join StorageList sl on sl.StorageID=fpl.StorageID
        inner join CargoType c on c.CargoTypeID=fpl.CargoTypeID
        where 1=1   {0}
      ]]>
    </Content>
    <Content Key="PackageReturn_GetPackageReturnDetail" DataBaseType="Oracle">
      <![CDATA[
        select prd.FID,prd.FParentID,fpl.PackageID,sl.Barcode,fpl.CargoTypeID,c.CargoTypeName
        from FlowPackageReturndetail prd
        inner join FlowPackageList fpl on fpl.PackageID=prd.FPackageID
        inner join StorageList sl on sl.StorageID=fpl.StorageID
        inner join CargoType c on c.CargoTypeID=fpl.CargoTypeID
        where 1=1   {0}
      ]]>
    </Content>

    <Content Key="SAPPreOrder_GetSAPPreOrders" DataBaseType="SqlServer">
      <![CDATA[ 
      SELECT
	      so.SAPPreOrderID,
	      so.SAPPreOrderCode,
        so.FlowOrgID,
	      so.OrgID,
	      so.SAPPreOrderUserID,
	      so.SAPPreOrderDate,
	      so.CheckStatus,
	      so.CreateBy,
	      so.CreateDate,
	      so.UpdateBy,
	      so.UpdateDate,
        so.SAPResponseStatus,
        so.SAPResponseMessage,
        stp.TypeName [CheckStatusName],
        so.SAPProvideOrderCheckStatus,
        stp2.TypeName [SAPProvideOrderCheckStatusName],        
	      ao.Name [OrgName],
	      ao.SynDataID [OrgSynDataID],
	      au.Name [UserName],
	      au.SynDataID [UserSynDataID]
      FROM
	      SAPPreOrder so
      LEFT OUTER JOIN AC_Org ao ON ao.ID = so.OrgID
      LEFT OUTER JOIN AC_User au ON au.ID = so.SAPPreOrderUserID
      LEFT OUTER JOIN SystemTypeParameter stp ON stp.TypeKey = 'SAPPreOrderCheck' AND stp.TypeValue = so.CheckStatus
      LEFT OUTER JOIN SystemTypeParameter stp2 ON stp2.TypeKey = 'SAPProvideOrderCheck' AND stp2.TypeValue = so.SAPProvideOrderCheckStatus
      WHERE 1=1  {0}
      ]]>
    </Content>
    <Content Key="SAPPreOrder_GetSAPPreOrders" DataBaseType="Oracle">
      <![CDATA[
      SELECT
	      so.SAPPreOrderID,
	      so.SAPPreOrderCode,
        so.FlowOrgID,
	      so.OrgID,
	      so.SAPPreOrderUserID,
	      so.SAPPreOrderDate,
	      so.CheckStatus,
	      so.CreateBy,
	      so.CreateDate,
	      so.UpdateBy,
	      so.UpdateDate,
        so.SAPResponseStatus,
        so.SAPResponseMessage,
        stp.TypeName "CheckStatusName",
        so.SAPProvideOrderCheckStatus,
        stp2.TypeName "SAPProvideOrderCheckStatusName",
	      ao.Name "OrgName",
	      ao.SynDataID "OrgSynDataID",
	      au.Name "UserName",
	      au.SynDataID "UserSynDataID"
      FROM
	      SAPPreOrder so
      LEFT OUTER JOIN AC_Org ao ON ao.ID = so.OrgID
      LEFT OUTER JOIN AC_User au ON au.ID = so.SAPPreOrderUserID
      LEFT OUTER JOIN SystemTypeParameter stp ON stp.TypeKey = 'SAPPreOrderCheck' AND stp.TypeValue = so.CheckStatus
      LEFT OUTER JOIN SystemTypeParameter stp2 ON stp2.TypeKey = 'SAPProvideOrderCheck' AND stp2.TypeValue = so.SAPProvideOrderCheckStatus
      WHERE 1=1  {0}
      ]]>
    </Content>

    <Content Key="SAPPreOrder_GetSAPPreOrderDetail" DataBaseType="SqlServer">
      <![CDATA[ 
      SELECT
	      sol.SAPPreOrderListID,
	      sol.SAPPreOrderID,
	      sol.CargoTypeID,
	      sol.Quantity,
	      sol.CreateBy,
	      sol.CreateDate,
	      sol.UpdateBy,
	      sol.UpdateDate,
	      sol.SAPResponseStatus,
	      sol.SAPResponseMessage,
      	
	      ct.CargoTypeName,
	      ct.Unit,
	      ct.SynDataID [CargoTypeSynDataID]
      FROM
	      SAPPreOrderList sol
      LEFT OUTER JOIN CargoType ct ON ct.CargoTypeID = sol.CargoTypeID
      WHERE 1=1   {0}
      ]]>
    </Content>
    <Content Key="SAPPreOrder_GetSAPPreOrderDetail" DataBaseType="Oracle">
      <![CDATA[
      SELECT
	      sol.SAPPreOrderListID,
	      sol.SAPPreOrderID,
	      sol.CargoTypeID,
	      sol.Quantity,
	      sol.CreateBy,
	      sol.CreateDate,
	      sol.UpdateBy,
	      sol.UpdateDate,
	      sol.SAPResponseStatus,
	      sol.SAPResponseMessage,
      	
	      ct.CargoTypeName,
	      ct.Unit,
	      ct.SynDataID "CargoTypeSynDataID"
      FROM
	      SAPPreOrderList sol
      LEFT OUTER JOIN CargoType ct ON ct.CargoTypeID = sol.CargoTypeID
      WHERE 1=1   {0}
      ]]>
    </Content>
    
    <Content Key="Delete_SAPPreOrderDetailByFK" DataBaseType="SqlServer">
      DELETE FROM SAPPreOrderList
      WHERE
      SAPPreOrderID = @SAPPreOrderID
    </Content>
    <Content Key="Delete_SAPPreOrderDetailByFK" DataBaseType="Oracle">
      DELETE FROM SAPPreOrderList
      WHERE
      SAPPreOrderID = :SAPPreOrderID
    </Content>

    <Content Key="SAPProvideOrder_GetSAPProvideOrders" DataBaseType="SqlServer">
      <![CDATA[ 
      SELECT
	      so.SAPProvideOrderID,
        so.StorageInID,
	      so.SAPProvideOrderCode,
	      so.OrgName,
	      so.OrgSynDataID,
	      so.SAPProvideUserName,
	      so.SAPProvideUserSynDataID,
	      so.SAPProvideDate,
        so.CheckStatus,
        so.SAPPreOrderCode,
        so.CreateBy,
        so.CreateDate,
        so.UpdateBy,
        so.UpdateDate,
        stp.TypeName [CheckStatusName]
      FROM
	      SAPProvideOrder so
      LEFT OUTER JOIN SystemTypeParameter stp ON stp.TypeKey = 'SAPProvideOrderCheck' AND stp.TypeValue = so.CheckStatus
      WHERE 1=1  {0}
      ]]>
    </Content>
    <Content Key="SAPProvideOrder_GetSAPProvideOrders" DataBaseType="Oracle">
      <![CDATA[
      SELECT
	      so.SAPProvideOrderID,
        so.StorageInID,
	      so.SAPProvideOrderCode,
	      so.OrgName,
	      so.OrgSynDataID,
	      so.SAPProvideUserName,
	      so.SAPProvideUserSynDataID,
	      so.SAPProvideDate,
        so.CheckStatus,
        so.SAPPreOrderCode,
        so.CreateBy,
        so.CreateDate,
        so.UpdateBy,
        so.UpdateDate,
        stp.TypeName "CheckStatusName"
      FROM
	      SAPProvideOrder so
      LEFT OUTER JOIN SystemTypeParameter stp ON stp.TypeKey = 'SAPProvideOrderCheck' AND stp.TypeValue = so.CheckStatus
      WHERE 1=1  {0}
      ]]>
    </Content>

    <Content Key="SAPProvideOrder_GetSAPProvideOrderDetail" DataBaseType="SqlServer">
      <![CDATA[ 
      SELECT
	      sol.SAPProvideOrderListID,
        sol.StorageInListID,
	      sol.SAPProvideOrderID,
        sol.SAPCargoProvideOrderCode,
	      sol.CargoTypeSynDataID,
	      sol.CargoTypeName,
	      sol.ModelSpecification,
	      sol.CargoTypeUnit,
	      sol.Quantity,
	      sol.EXPDate,
        sol.ProcessStatus,
        sol.ProcessMessage,
        sol.CheckStatus,
        sol.CreateBy,
        sol.CreateDate,
        sol.UpdateBy,
        sol.UpdateDate,
        stp.TypeName [CheckStatusName]
      FROM
	      SAPProvideOrderList sol
      LEFT OUTER JOIN SystemTypeParameter stp ON stp.TypeKey = 'SAPProvideOrderCheck' AND stp.TypeValue = sol.CheckStatus
      WHERE 1=1   {0}
      ]]>
    </Content>
    <Content Key="SAPProvideOrder_GetSAPProvideOrderDetail" DataBaseType="Oracle">
      <![CDATA[
      SELECT
	      sol.SAPProvideOrderListID,
        sol.StorageInListID,
	      sol.SAPProvideOrderID,
        sol.SAPCargoProvideOrderCode,
	      sol.CargoTypeSynDataID,
	      sol.CargoTypeName,
	      sol.ModelSpecification,
	      sol.CargoTypeUnit,
	      sol.Quantity,
	      sol.EXPDate,
        sol.ProcessStatus,
        sol.ProcessMessage,
        sol.CheckStatus,
        sol.CreateBy,
        sol.CreateDate,
        sol.UpdateBy,
        sol.UpdateDate,
        stp.TypeName "CheckStatusName"
      FROM
	      SAPProvideOrderList sol
      LEFT OUTER JOIN SystemTypeParameter stp ON stp.TypeKey = 'SAPProvideOrderCheck' AND stp.TypeValue = sol.CheckStatus
      WHERE 1=1   {0}
      ]]>
    </Content>

    <Content Key="SAPProvideOrder_GetSucceedSAPProvideOrder" DataBaseType="SqlServer">
      <![CDATA[ 
      SELECT DISTINCT
	      so.SAPProvideOrderID,
        so.StorageInID,
	      so.SAPProvideOrderCode,
	      so.OrgName,
	      so.OrgSynDataID,
	      so.SAPProvideUserName,
	      so.SAPProvideUserSynDataID,
	      so.SAPProvideDate,
        so.SAPPreOrderCode,
        so.CheckStatus,
	      so.CreateBy,
	      so.CreateDate,
	      so.UpdateBy,
	      so.UpdateDate
      FROM
	      SAPProvideOrder so
      LEFT OUTER JOIN SAPProvideOrderList sol ON sol.SAPProvideOrderID = so.SAPProvideOrderID
      WHERE sol.CheckStatus = 1 AND sol.Quantity IS NOT NULL AND TO_NUMBER(sol.Quantity) >= 0 {0}
      ]]>
    </Content>
    <Content Key="SAPProvideOrder_GetSucceedSAPProvideOrder" DataBaseType="Oracle">
      <![CDATA[
      SELECT DISTINCT
	      so.SAPProvideOrderID,
        so.StorageInID,
	      so.SAPProvideOrderCode,
	      so.OrgName,
	      so.OrgSynDataID,
	      so.SAPProvideUserName,
	      so.SAPProvideUserSynDataID,
	      so.SAPProvideDate,
        so.SAPPreOrderCode,
        so.CheckStatus,
	      so.CreateBy,
	      so.CreateDate,
	      so.UpdateBy,
	      so.UpdateDate
      FROM
	      SAPProvideOrder so
      LEFT OUTER JOIN SAPProvideOrderList sol ON sol.SAPProvideOrderID = so.SAPProvideOrderID
      WHERE sol.CheckStatus = 1 AND sol.Quantity IS NOT NULL AND TO_NUMBER(sol.Quantity) >= 0 {0}
      ]]>
    </Content>

    <Content Key="SAPProvideOrder_GetLastestSAPProvideOrder" DataBaseType="SqlServer">
      <![CDATA[ 
      SELECT DISTINCT
        so.SAPProvideOrderID,
        so.StorageInID,
        so.SAPProvideOrderCode,
        so.OrgName,
        so.OrgSynDataID,
        so.SAPProvideUserName,
        so.SAPProvideUserSynDataID,
        so.SAPProvideDate,
        so.SAPPreOrderCode,
        so.CheckStatus,
        so.CreateBy,
        so.CreateDate,
        so.UpdateBy,
        so.UpdateDate
      FROM
        SAPProvideOrder so
      LEFT OUTER JOIN SAPProvideOrderList sol ON sol.SAPProvideOrderID = so.SAPProvideOrderID
      WHERE 1=1 {0}
      ]]>
    </Content>
    <Content Key="SAPProvideOrder_GetLastestSAPProvideOrder" DataBaseType="Oracle">
      <![CDATA[
      SELECT DISTINCT
        so.SAPProvideOrderID,
        so.StorageInID,
        so.SAPProvideOrderCode,
        so.OrgName,
        so.OrgSynDataID,
        so.SAPProvideUserName,
        so.SAPProvideUserSynDataID,
        so.SAPProvideDate,
        so.SAPPreOrderCode,
        so.CheckStatus,
        so.CreateBy,
        so.CreateDate,
        so.UpdateBy,
        so.UpdateDate
      FROM
        SAPProvideOrder so
      LEFT OUTER JOIN SAPProvideOrderList sol ON sol.SAPProvideOrderID = so.SAPProvideOrderID
      WHERE 1=1 {0}
      ]]>
    </Content>
	  <Content Key="Query_ProvidePrintNOPriceAndSterilizeInfo" DataBaseType="SqlServer">
      SELECT ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),'') AS StrProvideDate,
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,COUNT(1) as Quantity,
      PackageType.PName,
      case PackageType.PName when '清洗消毒包装' then '--' else
      ISNULL(CONVERT(varchar(10),StorageList.EXPDate,120),'') end AS StrEXPDate,
      AC_WorkGroup.FNames AS OPNAME,
      FlowProvide.Recipient as RECIPIENT
      from FlowProvide with (nolock)
      inner join FlowProvideList with (nolock) on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList with (nolock) on FlowProvideList.PackageID = FlowPackageList.PackageID
      left join PackageType with (nolock) on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG with (nolock) on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType with (nolock) on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      inner join StorageList with (nolock) on FlowPackageList.StorageID = StorageList.StorageID
      inner join AC_WorkGroup with (nolock) on FlowProvide.OpID = AC_WorkGroup.FID
      where FlowProvide.ProvideID in ({0})
      group by ISNULL(CONVERT(varchar(10),FlowProvide.ProvideDate,120),''),
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,PackageType.PName,
      ISNULL(CONVERT(varchar(10),StorageList.EXPDate,120),''),AC_WorkGroup.FNames,
      FlowProvide.Recipient
      order by AC_Org.Name
    </Content>
	  <Content Key="Query_ProvidePrintNOPriceAndSterilizeInfo" DataBaseType="Oracle">
      SELECT to_char(FlowProvide.ProvideDate,'yyyy-mm-dd') AS StrProvideDate,
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,COUNT(1) as Quantity,
      PackageType.PName,
      case PackageType.PName when '清洗消毒包装' then '--' else
      to_char(StorageList.EXPDate,'yyyy-mm-dd') end AS StrEXPDate,
      AC_WorkGroup.FNames AS OPNAME,
      FlowProvide.Recipient as RECIPIENT
      from FlowProvide with (nolock)
      inner join FlowProvideList with (nolock) on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList with (nolock) on FlowProvideList.PackageID = FlowPackageList.PackageID
      left join PackageType with (nolock) on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG with (nolock) on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType with (nolock) on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      inner join StorageList with (nolock) on FlowPackageList.StorageID = StorageList.StorageID
      inner join AC_WorkGroup with (nolock) on FlowProvide.OpID = AC_WorkGroup.FID
      where FlowProvide.ProvideID in ({0})
      group by to_char(FlowProvide.ProvideDate,'yyyy-mm-dd'),
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,PackageType.PName,
      to_char(StorageList.EXPDate,'yyyy-mm-dd'),AC_WorkGroup.FNames,
      FlowProvide.Recipient
      order by AC_Org.Name
    </Content>
    <Content Key="Query_ProvidePrintInfo4Print1400X465" DataBaseType="SqlServer">
      SELECT ISNULL(CONVERT(varchar(20),FlowProvide.ProvideDate,120),'') AS StrProvideDate,
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,COUNT(1) as Quantity,
      SUM(FlowPackageList.LendFlag) as LendQuantity,
      CargoType.Amount AS UnitPrice,(CargoType.Amount * COUNT(1)) AS GroupPrice,
      Devices.DeviceName,DevicesUseLog.TodayUseTimes,PackageType.PName,
      AC_WorkGroup.FNames AS OPNAME,'' as Signer,CASE WHEN FlowPackageList.LendFlag = 0 THEN '否' ELSE '是' END LendFlag
      from FlowProvide with (nolock)
      inner join FlowProvideList with (nolock) on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList with (nolock) on FlowProvideList.PackageID = FlowPackageList.PackageID
      left join PackageType with (nolock) on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG with (nolock) on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType with (nolock) on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
      left join (select t1.PackageID ,t2.* from FlowSterilizationList t1 inner join DevicesUseLog t2 on t2.LogID=t1.SterilizationLogID where t2.LogID=(select top 1 SterilizationLogID from FlowSterilizationList where PackageID=t1.PackageID order by t2.begindate desc )) DevicesUseLog on DevicesUseLog.PackageID=flowpackagelist.PackageID
      left join Devices with (nolock) on DevicesUseLog.DeviceID = Devices.DeviceID
      inner join AC_WorkGroup with (nolock) on FlowProvide.OpID = AC_WorkGroup.FID
      where FlowProvide.ProvideID in ({0})
      group by
      ISNULL(CONVERT(varchar(20),FlowProvide.ProvideDate,120),''),
      FlowProvide.BarCode,AC_Org.Name,CargoType.CargoTypeName,Devices.DeviceName,
      DevicesUseLog.TodayUseTimes,PackageType.PName,
      AC_WorkGroup.FNames,CargoType.Amount,CASE WHEN FlowPackageList.LendFlag = 0 THEN '否' ELSE '是' END
      order by FlowProvide.BarCode, DevicesUseLog.TodayUseTimes desc,Devices.DeviceName desc
    </Content>
    <Content Key="Query_ProvidePrintInfo4Print1400X465" DataBaseType="Oracle">
      <![CDATA[ 
      SELECT  to_char(FlowProvide.ProvideDate,'yyyy-mm-dd hh24:mi:ss')  AS StrProvideDate,
      FlowProvide.BarCode,
      AC_Org.Name,
      CargoType.CargoTypeName,
      COUNT(1) as Quantity,
	  SUM(FlowPackageList.LendFlag) as LendQuantity,
      CargoType.Amount AS UnitPrice,
      (CargoType.Amount * COUNT(1)) AS GroupPrice,
      Devices.DeviceName,
      DevicesUseLog.TodayUseTimes,
      PackageType.PName,
      AC_WorkGroup.FNames AS OPNAME,
      '' as Signer
      from FlowProvide
      inner join FlowProvideList
      on FlowProvide.ProvideID = FlowProvideList.ProvideID
      left join FlowPackageList
      on FlowProvideList.PackageID = FlowPackageList.PackageID
      left join PackageType
      on FlowPackageList.packagetypeid = PackageType.PTypeID
      inner join AC_ORG
      on FlowProvide.OrgID = AC_Org.ID
      inner join CargoType
      on FlowPackageList.CargoTypeID = CargoType.CargoTypeID
     left join
       (
        select m2.TodayUseTimes,m2.DeviceID , SterilizationLogID,packageid,  row_number() over(partition by packageid order by m2.begindate desc) as rownu from FlowSterilizationList m1 inner join DevicesUseLog  m2 
 on  m2.LogID=m1.SterilizationLogID  
        ) DevicesUseLog on DevicesUseLog.PackageID=flowpackagelist.PackageID and rownu=1
      left join Devices
      on DevicesUseLog.DeviceID = Devices.DeviceID
      inner join AC_WorkGroup  on FlowProvide.OpID = AC_WorkGroup.FID
      where FlowProvide.ProvideID in ({0})
      group by  to_char(FlowProvide.ProvideDate,'yyyy-mm-dd hh24:mi:ss'),
      FlowProvide.BarCode,
      AC_Org.Name,
      CargoType.CargoTypeName,
      Devices.DeviceName,
      DevicesUseLog.TodayUseTimes,
      PackageType.PName,
      AC_WorkGroup.FNames,CargoType.Amount    
	  order by FlowProvide.BarCode, DevicesUseLog.TodayUseTimes desc,Devices.DeviceName desc
      ]]>
    </Content>
    <Content Key="GetPackageNormalPreHistory" DataBaseType="SqlServer">
      select storagelist.BARCODE,cargotype.CARGOTYPENAME,flowpackagelist.ISTEMP,StorageList.MAEDATE,flowrecycle.RECYCLEDATE from flowrecyclelist
      inner join flowpackagelist on flowrecyclelist.packageid = flowpackagelist.packageid
      inner join cargotype on flowpackagelist.cargotypeid = cargotype.cargotypeid
      inner join storagelist on flowpackagelist.storageid = storagelist.storageid
      inner join flowpackagelistdisinfect on flowrecyclelist.frecycleid = flowpackagelistdisinfect.frecycleid
      inner join flowpackagelist packpl on packpl.packageid = flowpackagelistdisinfect.packageid
      inner join flowrecycle on flowrecycle.frecycleid = flowrecyclelist.frecycleid
      inner join storagelist packsl on packsl.storageid = packpl.storageid and packsl.cargotypeid = storagelist.cargotypeid
      where packsl.barcode = @Barcode

    </Content>
    <Content Key="GetPackageNormalPreHistory" DataBaseType="Oracle">
      select storagelist.BARCODE,cargotype.CARGOTYPENAME,flowpackagelist.ISTEMP,StorageList.MAEDATE,flowrecycle.RECYCLEDATE from flowrecyclelist
      inner join flowpackagelist on flowrecyclelist.packageid = flowpackagelist.packageid
      inner join cargotype on flowpackagelist.cargotypeid = cargotype.cargotypeid
      inner join storagelist on flowpackagelist.storageid = storagelist.storageid
      inner join flowpackagelistdisinfect on flowrecyclelist.frecycleid = flowpackagelistdisinfect.frecycleid
      inner join flowpackagelist packpl on packpl.packageid = flowpackagelistdisinfect.packageid
      inner join flowrecycle on flowrecycle.frecycleid = flowrecyclelist.frecycleid
      inner join storagelist packsl on packsl.storageid = packpl.storageid and packsl.cargotypeid = storagelist.cargotypeid
      where packsl.barcode = :Barcode
    </Content>
    <Content Key="GetPackageNormalPostHistory" DataBaseType="SqlServer">
      select newsl.BARCODE,cargotype.CARGOTYPENAME,newsl.MAEDATE from storagelist inner join flowpackagelist on storagelist.storageid = flowpackagelist.storageid
      inner join flowrecyclelist on flowpackagelist.packageid = flowrecyclelist.packageid
      inner join cargotype on storagelist.cargotypeid = cargotype.cargotypeid
      inner join flowpackagelistdisinfect on  flowpackagelistdisinfect.frecycleid = flowrecyclelist.frecycleid
      inner join flowpackagelist newpl on flowpackagelistdisinfect.packageid = newpl.packageid
      inner join storagelist newsl on newsl.storageid = newpl.storageid and newsl.cargotypeid = storagelist.cargotypeid
      where storagelist.barcode = @Barcode

    </Content>
    <Content Key="GetPackageNormalPostHistory" DataBaseType="Oracle">
      select newsl.BARCODE,cargotype.CARGOTYPENAME,newsl.MAEDATE from storagelist inner join flowpackagelist on storagelist.storageid = flowpackagelist.storageid
      inner join flowrecyclelist on flowpackagelist.packageid = flowrecyclelist.packageid
      inner join cargotype on storagelist.cargotypeid = cargotype.cargotypeid
      inner join flowpackagelistdisinfect on  flowpackagelistdisinfect.frecycleid = flowrecyclelist.frecycleid
      inner join flowpackagelist newpl on flowpackagelistdisinfect.packageid = newpl.packageid
      inner join storagelist newsl on newsl.storageid = newpl.storageid and newsl.cargotypeid = storagelist.cargotypeid
      where storagelist.barcode = :Barcode
    </Content>
    <Content Key="Query_ByBarCode" DataBaseType="SqlServer">
      SELECT DISTINCT c.IsOEM,sl.BarCode,fk.SendText,awg.FNames
      FROM FLOWPACKAGEIN fk
      INNER JOIN FLOWPACKAGELIST fl ON fl.FPACKAGEID=fk.FPACKAGEID
      LEFT JOIN STORAGELIST sl ON sl.STORAGEID=fl.STORAGEID
      LEFT JOIN CARGOTYPE c ON c.CARGOTYPEID=fk.CARGOTYPEID
      LEFT JOIN AC_WorkGroup awg ON fk.OPID=awg.FID
      WHERE 1=1 {0}
    </Content>
    <Content Key="Query_ByBarCode" DataBaseType="Oracle">
      SELECT DISTINCT c.IsOEM,sl.BarCode,fk.SendText,awg.FNames
      FROM FLOWPACKAGEIN fk
      INNER JOIN FLOWPACKAGELIST fl ON fl.FPACKAGEID=fk.FPACKAGEID
      LEFT JOIN STORAGELIST sl ON sl.STORAGEID=fl.STORAGEID
      LEFT JOIN CARGOTYPE c ON c.CARGOTYPEID=fk.CARGOTYPEID
      LEFT JOIN AC_WorkGroup awg ON fk.OPID=awg.FID
      WHERE 1=1 {0}
    </Content>
    <Content Key="Query_LastSterilizeRecord" DataBaseType="SqlServer">
      select top 1 * from DevicesUseLog order by begindate desc
    </Content>
    <Content Key="Query_LastSterilizeRecord" DataBaseType="Oracle">
      select * from DevicesUseLog  where rownum=1 order by begindate desc
    </Content>
    <Content Key="Query_FlowPackageInFPackageID" DataBaseType="SqlServer">
      select * from FlowPackageList where FPackageID=@FPackageID
    </Content>
    <Content Key="Query_FlowPackageInFPackageID" DataBaseType="Oracle">
      select * from FlowPackageList where FPackageID=:FPackageID
    </Content>
    <Content Key="Delete_FlowPackageInCargoListByFPackageID" DataBaseType="SqlServer">
      delete from FlowPackageInCargoList where FPackageID=@FPackageID
    </Content>
    <Content Key="Delete_FlowPackageInCargoListByFPackageID" DataBaseType="Oracle">
      delete from FlowPackageInCargoList where FPackageID=:FPackageID
    </Content>

    <Content Key="GetBDAutoCheckAnalysis" DataBaseType="SqlServer">
      <![CDATA[ 
      SELECT d.DeviceID,d.DeviceNumber,d.DeviceName,MAX(dul.BDAutoCheckJudgmentValue) AS MaxValue,MIN(dul.BDAutoCheckJudgmentValue) AS MinValue
      FROM DevicesUseLog dul
      LEFT OUTER JOIN Devices d ON d.DeviceID = dul.DeviceID
      WHERE 1=1 
	      AND dul.IsBDTest = 1 
	      /**/AND dul.IsBDAutoCheck = 1 
	      AND dul.IsCPCDOK IN (1,-1)
        {0}
      GROUP BY d.DeviceID,d.DeviceName, d.DeviceNumber
      
      SELECT d.DeviceID,d.DeviceNumber,d.DeviceName, dul.BeginDate,dul.BDAutoCheckJudgmentValue
      FROM DevicesUseLog dul
      LEFT OUTER JOIN Devices d ON d.DeviceID = dul.DeviceID
      WHERE 1=1 
	      AND dul.IsBDTest = 1 
	      /**/AND dul.IsBDAutoCheck = 1 
	      AND dul.IsCPCDOK IN (1,-1) 
        {0}
      ORDER BY d.DeviceNumber,d.DeviceName,dul.BeginDate
      ]]>
    </Content>
    <Content Key="GetBDAutoCheckAnalysis" DataBaseType="Oracle">
      <![CDATA[ 
      SELECT d.DeviceID,d.DeviceNumber,d.DeviceName,MAX(dul.BDAutoCheckJudgmentValue) AS MaxValue,MIN(dul.BDAutoCheckJudgmentValue) AS MinValue
      FROM DevicesUseLog dul
      LEFT OUTER JOIN Devices d ON d.DeviceID = dul.DeviceID
      WHERE 1=1 
	      AND dul.IsBDTest = 1 
	      AND dul.IsBDAutoCheck = 1 
	      AND dul.IsCPCDOK IN (1,-1)
        {0}
      GROUP BY d.DeviceID,d.DeviceName, d.DeviceNumber;
      
      SELECT d.DeviceID,d.DeviceNumber,d.DeviceName, dul.BeginDate,dul.BDAutoCheckJudgmentValue
      FROM DevicesUseLog dul
      LEFT OUTER JOIN Devices d ON d.DeviceID = dul.DeviceID
      WHERE 1=1 
	      AND dul.IsBDTest = 1 
	      AND dul.IsBDAutoCheck = 1 
	      AND dul.IsCPCDOK IN (1,-1) 
        {0}
      ORDER BY d.DeviceNumber,d.DeviceName,dul.BeginDate;
      ]]>
    </Content>
    <Content Key="Query_FlowRecycleListFRecycleID" Desc="查询回收ID" DataBaseType="SqlServer">
      select * from FlowRecycleList where PackageID=@PackageID
    </Content>
    <Content Key="Query_FlowRecycleListFRecycleID" Desc="查询回收ID" DataBaseType="Oracle">
      select * from FlowRecycleList where PackageID=:PackageID
    </Content>
    <Content Key="Delete_FlowRecycleListFRecycleID" Desc="删除回收的外来包" DataBaseType="SqlServer">
      delete from FlowRecycleList where FRecycleID=@FRecycleID
    </Content>
    <Content Key="Delete_FlowRecycleListFRecycleID" Desc="删除回收的外来包" DataBaseType="Oracle">
      delete from FlowRecycleList where FRecycleID=:FRecycleID
    </Content>

    <Content Key="Delete_FlowTaskByFRecycleID" Desc="删除包任务" DataBaseType="SqlServer">
      delete from FlowTask where FRecycleID=@FRecycleID
    </Content>
    <Content Key="Delete_FlowTaskByFRecycleID" Desc="删除包任务" DataBaseType="Oracle">
      delete from FlowTask where FRecycleID=:FRecycleID
    </Content>

    <Content Key="Query_GetProvideListPackageID" Desc="查询发放ID" DataBaseType="SqlServer">
      select * from FlowProvideList where PackageID=@PackageID
    </Content>
    <Content Key="Query_GetProvideListPackageID" Desc="查询发放ID" DataBaseType="Oracle">
      select * from FlowProvideList where PackageID=:PackageID
    </Content>

    <Content Key="Query_FlowSterilizationListByPackageID" Desc="查询灭菌记录" DataBaseType="SqlServer">
      select * from FlowSterilizationList where PackageID=@PackageID
    </Content>
    <Content Key="Query_FlowSterilizationListByPackageID" Desc="查询灭菌记录" DataBaseType="Oracle">
      select * from FlowSterilizationList where PackageID=:PackageID
    </Content>
    <Content Key="Delete_FlowSterilizationListByPackageID" Desc="删除灭菌记录" DataBaseType="SqlServer">
      delete from FlowSterilizationList where PackageID=@PackageID
    </Content>
    <Content Key="Delete_FlowSterilizationListByPackageID" Desc="删除灭菌记录" DataBaseType="Oracle">
      delete from FlowSterilizationList where PackageID=:PackageID
    </Content>

    <Content Key="CreateFlowRecycleListLog" Desc="生成回收日志" DataBaseType="SqlServer">
      insert into syslog(LogID,LogType,LogTime,Operator,Content,KeyID1,KeyID2,FlowOrgID,loglevel)
      select NEWID(),0,fr.RecycleDate,fr.OPID,@logcontent,frl.PackageID,null,fr.FlowOrgID,0  from flowrecyclelist frl inner join flowrecycle fr
      on frl.FRecycleID=fr.FRecycleID
      where fr.frecycleid=@frecycleid
    </Content>
    <Content Key="CreateFlowRecycleListLog" Desc="生成回收日志" DataBaseType="Oracle">
      insert into syslog(LogID,LogType,LogTime,Operator,Content,KeyID1,KeyID2,FlowOrgID,loglevel)
      select fun_newguid,0,fr.RecycleDate,fr.OPID,@logcontent,frl.PackageID,null,fr.FlowOrgID,0  from flowrecyclelist frl inner join flowrecycle fr
      on frl.FRecycleID=fr.FRecycleID
      where fr.frecycleid=:frecycleid
    </Content>
    <Content Key="Update_SubPackageQty" Desc="修改外来包分包数量" DataBaseType="SqlServer">
      update FlowPackageList set SubPackageQty=@SubPackageQty where FPackageID=@FPackageID
    </Content>
    <Content Key="Update_SubPackageQty" Desc="修改外来包分包数量" DataBaseType="Oracle">
      update FlowPackageList set SubPackageQty=:SubPackageQty where FPackageID=:FPackageID
    </Content>
    
    <Content Key="Query_PackageFetchedHasFetchedTemporary" Desc="" DataBaseType="SqlServer">
      <![CDATA[
      select COUNT(*) CNT from FlowFetchList ffl
inner join FlowFetch ff
on ffl.FetchID=ff.FetchID and ff.FetchType=1
inner join StorageList sl
on sl.StorageID=ffl.PackageID and 
 sl.barcode=@barcode
 and ff.FetchDate>(select max(FetchDate) from FlowFetchList ffl
inner join FlowFetch ff
on ffl.FetchID=ff.FetchID and ff.FetchType=0
inner join StorageList sl
on sl.StorageID=ffl.PackageID and  sl.barcode=@barcode)
      ]]>
    </Content>
    <Content Key="Query_PackageFetchedHasFetchedTemporary" Desc="" DataBaseType="Oracle">
      <![CDATA[
        select COUNT(*) CNT from FlowFetchList ffl
inner join FlowFetch ff
on ffl.FetchID=ff.FetchID and ff.FetchType=1
inner join StorageList sl
on sl.StorageID=ffl.PackageID and 
 sl.barcode=:barcode
 and ff.FetchDate>(select max(FetchDate) from FlowFetchList ffl
inner join FlowFetch ff
on ffl.FetchID=ff.FetchID and ff.FetchType=0
inner join StorageList sl
on sl.StorageID=ffl.PackageID and  sl.barcode=:barcode)
      ]]>
    </Content>
    
    
    <Content Key="Delete_FlowRecycleListByFRecycleID" Desc="删除回收明细" DataBaseType="SqlServer">
      delete from FlowRecycleList where FRecycleID=@FRecycleID
    </Content>
    <Content Key="Delete_FlowRecycleListByFRecycleID" Desc="删除回收明细" DataBaseType="Oracle">
      delete from FlowRecycleList where FRecycleID=:FRecycleID
    </Content>

    <Content Key="Query_FlowPreOrderByFRecycleID" Desc="根据回收ID查询预定" DataBaseType="SqlServer">
      select * from FlowPreOrder where FRecycleID=@FRecycleID
    </Content>
    <Content Key="Query_FlowPreOrderByFRecycleID" Desc="根据回收ID查询预定" DataBaseType="Oracle">
      select * from FlowPreOrder where FRecycleID=:FRecycleID
    </Content>

    <Content Key="Delete_FlowPreOrderDetailByPreOrderID" Desc="删除预定明细" DataBaseType="SqlServer">
      delete from FlowPreOrderDetail where PreOrderID=@PreOrderID
    </Content>
    <Content Key="Delete_FlowPreOrderDetailByPreOrderID" Desc="删除预定明细" DataBaseType="Oracle">
      delete from FlowPreOrderDetail where PreOrderID=:PreOrderID
    </Content>

    <Content Key="Delete_FlowPreOrderByPreOrderID" Desc="删除预定" DataBaseType="SqlServer">
      delete from FlowPreOrder where PreOrderID=@PreOrderID
    </Content>
    <Content Key="Delete_FlowPreOrderByPreOrderID" Desc="删除预定" DataBaseType="Oracle">
      delete from FlowPreOrder where PreOrderID=:PreOrderID
    </Content>
    <Content Key="Update_ChangeFlowPreOrderPrintStatusByPreOrderID" Desc="" DataBaseType="SqlServer">
      update FlowPreOrder set PrintStatus=@PrintStatus where  PreOrderID=@preOrderID
    </Content>
    <Content Key="Update_ChangeFlowPreOrderPrintStatusByPreOrderID" Desc="" DataBaseType="Oracle">
      update FlowPreOrder set PrintStatus=:PrintStatus where PreOrderID=:PreOrderID
    </Content>
    <Content Key="Query_PackageInCode" Desc="生成外来包序号" DataBaseType="SqlServer">
      declare @packageInCode int
      select @packageInCode=max(PackageInCode) from FlowPackageIn
      where Convert(varchar(20),PackageInDate,111)=Convert(varchar(20),GETDATE(),111)
      if @packageInCode is null
      set @packageInCode=1
      else
      set @packageInCode=@packageInCode+1
    </Content>
    <Content Key="Query_FlowTaskByRecycleID" Desc="根据回收ID查询配包任务" DataBaseType="SqlServer">
      select * from FlowTask where FRecycleID=@FRecycleID
    </Content>
    <Content Key="Query_FlowTaskByRecycleID" Desc="根据回收ID查询配包任务" DataBaseType="Oracle">
      select * from FlowTask where FRecycleID=:FRecycleID
    </Content>
    <Content Key="Update_ProvideListStatus" Desc="修改发放接收确认状态" DataBaseType="SqlServer">
      Update FlowProvideList set Status=@Status where ProvideID=@ProvideID
    </Content>
    <Content Key="Update_ProvideListStatus" Desc="修改发放接收确认状态" DataBaseType="Oracle">
      Update FlowProvideList set Status=@Status where ProvideID=:ProvideID
    </Content>

    <Content Key="Query_DisifectContainerListData" Desc="根据回收ID查询清洗数据" DataBaseType="SqlServer">
      select * from FlowDisinfectContainerList where FRecycleID=@FRecycleID
    </Content>
    <Content Key="Query_DisifectContainerListData" Desc="根据回收ID查询清洗数据" DataBaseType="Oracle">
      select * from FlowDisinfectContainerList where FRecycleID=:FRecycleID
    </Content>

    <Content Key="Query_FlowRecycleData" Desc="根据再回收外来包ID查询包是否为再次回收包" DataBaseType="SqlServer">
      select * from FlowRecycle where AgainPackageInID=@AgainPackageInID
    </Content>
    <Content Key="Query_FlowRecycleData" Desc="根据再回收外来包ID查询包是否为再次回收包" DataBaseType="Oracle">
      select * from FlowRecycle where AgainPackageInID=:AgainPackageInID
    </Content>

    <Content Key="Query_PackageInByIsNewPackageID" Desc="再次回收包" DataBaseType="SqlServer">
      select * from FlowPackageIn where IsNewPackageID=@IsNewPackageID
    </Content>
    <Content Key="Query_PackageInByIsNewPackageID" Desc="再次回收包" DataBaseType="Oracle">
      select * from FlowPackageIn where IsNewPackageID=:IsNewPackageID
    </Content>

    <Content Key="Query_ReverseDisinfect" Desc="反洗" DataBaseType="SqlServer">
      select fcl.ContainerDisinfectLogID,c.CONTAINERID ,c.CONTAINERNAME,c.BARCODE,
      c.WASHTYPE,package.CargoTypeName as CARGOTYPENAME,qx.CargoTypeName as CARGOTYPENAMEQX,fd.FQty as FQTY
      from FlowRecycleContainer rc  with (nolock)
      inner join container c  with (nolock) on  (rc.containerid = c.containerid)
      left join PackageStatic  with (nolock)  on (c.containerid = PackageStatic.containerid)
      left outer join  FlowDisinfectContainerList dc with (nolock) on
      (rc.frecycleid = dc.frecycleid and rc.containerid = dc.containerid and rc.LastFDisinfectID = dc.FDisinfectID)
      inner join FlowDisinfectContainerList fcl on rc.FRecycleID=fcl.FRecycleID
      inner join FlowDisinfectCheckDetail fd on fcl.ContainerDisinfectLogID=fd.FParentID
      inner join FlowRecycleList frl on rc.FRecycleID=frl.FRecycleID
      inner join StorageList sl on frl.PackageID=sl.StorageID
      inner join CargoType package on sl.CargoTypeID=package.CargoTypeID
      inner join CargoType qx on fd.FCargotypeID=qx.CargoTypeID
      where  isnull(dc.STATUS,10)=10
    </Content>
    <Content Key="Query_ReverseDisinfect" Desc="反洗" DataBaseType="Oracle">
      select fcl.ContainerDisinfectLogID,c.CONTAINERID ,c.CONTAINERNAME,c.BARCODE,
      c.WASHTYPE,package.CargoTypeName as CARGOTYPENAME,qx.CargoTypeName as CARGOTYPENAMEQX,fd.FQty as FQTY
      from FlowRecycleContainer rc  with (nolock)
      inner join container c  with (nolock) on  (rc.containerid = c.containerid)
      left join PackageStatic  with (nolock)  on (c.containerid = PackageStatic.containerid)
      left outer join  FlowDisinfectContainerList dc with (nolock) on
      (rc.frecycleid = dc.frecycleid and rc.containerid = dc.containerid and rc.LastFDisinfectID = dc.FDisinfectID)
      inner join FlowDisinfectContainerList fcl on rc.FRecycleID=fcl.FRecycleID
      inner join FlowDisinfectCheckDetail fd on fcl.ContainerDisinfectLogID=fd.FParentID
      inner join FlowRecycleList frl on rc.FRecycleID=frl.FRecycleID
      inner join StorageList sl on frl.PackageID=sl.StorageID
      inner join CargoType package on sl.CargoTypeID=package.CargoTypeID
      inner join CargoType qx on fd.FCargotypeID=qx.CargoTypeID
      where  nvl(dc.STATUS,10)=10
    </Content>
    <Content Key="Update_TaskEndPreorderInfo" Desc="终止任务时同时终止预订" DataBaseType="SqlServer">
      update FlowPreOrderDetail  set CheckStatus=3 where CargoTypeID=@cargotypeid and TaskID=@taskid
    </Content>
    <Content Key="Update_TaskEndPreorderInfo" Desc="终止任务时同时终止预订" DataBaseType="Oracle">
      update FlowPreOrderDetail  set CheckStatus=3 where CargoTypeID=:cargotypeid and TaskID=:taskid
    </Content>
    <Content Key="Delete_FlowPreOrderDetailByProvideIDCargotypeID" Desc="撤销预订记录" DataBaseType="SqlServer">
      update FlowPreOrderDetail set ProvidedQty=ProvidedQty-1
      where ProvideID=@ProvideID and CargotypeID=@CargotypeID
    </Content>
    <Content Key="Delete_FlowPreOrderDetailByProvideIDCargotypeID" Desc="撤销预订记录" DataBaseType="Oracle">
      update FlowPreOrderDetail set ProvidedQty=ProvidedQty-1
      where ProvideID=:ProvideID and CargotypeID=:CargotypeID
    </Content>
  </Contents>
</SqlConfig>
